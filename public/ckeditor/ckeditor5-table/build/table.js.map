{"version":3,"sources":["webpack://CKEditor5.table/../ckeditor5-engine/theme/renderer.css","webpack://CKEditor5.table/./theme/colorinput.css","webpack://CKEditor5.table/./theme/form.css","webpack://CKEditor5.table/./theme/formrow.css","webpack://CKEditor5.table/./theme/inserttable.css","webpack://CKEditor5.table/./theme/table.css","webpack://CKEditor5.table/./theme/tablecaption.css","webpack://CKEditor5.table/./theme/tablecellproperties.css","webpack://CKEditor5.table/./theme/tablecolumnresize.css","webpack://CKEditor5.table/./theme/tableediting.css","webpack://CKEditor5.table/./theme/tableform.css","webpack://CKEditor5.table/./theme/tableproperties.css","webpack://CKEditor5.table/./theme/tableselection.css","webpack://CKEditor5.table/../node_modules/css-loader/dist/runtime/api.js","webpack://CKEditor5.table/../node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://CKEditor5.table/./theme/icons/table-cell-properties.svg","webpack://CKEditor5.table/./theme/icons/table-column.svg","webpack://CKEditor5.table/./theme/icons/table-merge-cell.svg","webpack://CKEditor5.table/./theme/icons/table-properties.svg","webpack://CKEditor5.table/./theme/icons/table-row.svg","webpack://CKEditor5.table/./theme/icons/table.svg","webpack://CKEditor5.table/../ckeditor5-engine/theme/renderer.css?dd62","webpack://CKEditor5.table/./theme/colorinput.css?6671","webpack://CKEditor5.table/./theme/form.css?4090","webpack://CKEditor5.table/./theme/formrow.css?93db","webpack://CKEditor5.table/./theme/inserttable.css?778c","webpack://CKEditor5.table/./theme/table.css?dfa0","webpack://CKEditor5.table/./theme/tablecaption.css?c60a","webpack://CKEditor5.table/./theme/tablecellproperties.css?4c9a","webpack://CKEditor5.table/./theme/tablecolumnresize.css?ee1a","webpack://CKEditor5.table/./theme/tableediting.css?31d0","webpack://CKEditor5.table/./theme/tableform.css?f298","webpack://CKEditor5.table/./theme/tableproperties.css?8755","webpack://CKEditor5.table/./theme/tableselection.css?fb5c","webpack://CKEditor5.table/../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://CKEditor5.table/../ckeditor5-engine/src/dataprocessor/basichtmlwriter.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/dataprocessor/xmldataprocessor.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/dev-utils/view.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/attributeelement.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/containerelement.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/document.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/documentfragment.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/documentselection.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/domconverter.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/downcastwriter.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/editableelement.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/element.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/emptyelement.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/filler.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/matcher.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/node.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/arrowkeysobserver.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/bubblingemittermixin.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/bubblingeventinfo.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/compositionobserver.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/domeventdata.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/domeventobserver.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/fakeselectionobserver.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/focusobserver.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/inputobserver.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/keyobserver.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/mutationobserver.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/observer.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/selectionobserver.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/observer/tabobserver.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/position.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/range.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/rawelement.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/renderer.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/selection.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/stylesmap.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/text.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/textproxy.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/treewalker.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/typecheckable.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/uielement.ts","webpack://CKEditor5.table/../ckeditor5-engine/src/view/view.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/ckeditorerror.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/collection.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/comparearrays.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/count.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/diff.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/createelement.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/emittermixin.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/getancestors.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/getborderwidths.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/getdatafromelement.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/global.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/indexof.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/insertat.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/iscomment.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/isnode.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/isrange.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/istext.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/isvisible.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/iswindow.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/rect.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/remove.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/resizeobserver.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/scroll.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/setdatainelement.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/dom/tounit.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/elementreplacer.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/emittermixin.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/env.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/eventinfo.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/fastdiff.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/first.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/focustracker.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/index.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/inserttopriorityarray.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/isiterable.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/keyboard.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/keystrokehandler.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/language.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/locale.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/mix.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/objecttomap.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/observablemixin.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/priorities.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/spy.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/toarray.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/tomap.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/translation-service.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/uid.ts","webpack://CKEditor5.table/../ckeditor5-utils/src/version.ts","webpack://CKEditor5.table/./src/commands/insertcolumncommand.js","webpack://CKEditor5.table/./src/commands/insertrowcommand.js","webpack://CKEditor5.table/./src/commands/inserttablecommand.js","webpack://CKEditor5.table/./src/commands/mergecellcommand.js","webpack://CKEditor5.table/./src/commands/mergecellscommand.js","webpack://CKEditor5.table/./src/commands/removecolumncommand.js","webpack://CKEditor5.table/./src/commands/removerowcommand.js","webpack://CKEditor5.table/./src/commands/selectcolumncommand.js","webpack://CKEditor5.table/./src/commands/selectrowcommand.js","webpack://CKEditor5.table/./src/commands/setheadercolumncommand.js","webpack://CKEditor5.table/./src/commands/setheaderrowcommand.js","webpack://CKEditor5.table/./src/commands/splitcellcommand.js","webpack://CKEditor5.table/./src/converters/downcast.js","webpack://CKEditor5.table/./src/converters/table-caption-post-fixer.js","webpack://CKEditor5.table/./src/converters/table-cell-paragraph-post-fixer.js","webpack://CKEditor5.table/./src/converters/table-cell-refresh-handler.js","webpack://CKEditor5.table/./src/converters/table-headings-refresh-handler.js","webpack://CKEditor5.table/./src/converters/table-layout-post-fixer.js","webpack://CKEditor5.table/./src/converters/tableproperties.js","webpack://CKEditor5.table/./src/converters/upcasttable.js","webpack://CKEditor5.table/./src/plaintableoutput.js","webpack://CKEditor5.table/./src/table.js","webpack://CKEditor5.table/./src/tablecaption.js","webpack://CKEditor5.table/./src/tablecaption/tablecaptionediting.js","webpack://CKEditor5.table/./src/tablecaption/tablecaptionui.js","webpack://CKEditor5.table/./src/tablecaption/toggletablecaptioncommand.js","webpack://CKEditor5.table/./src/tablecaption/utils.js","webpack://CKEditor5.table/./src/tablecellproperties.js","webpack://CKEditor5.table/./src/tablecellproperties/commands/tablecellbackgroundcolorcommand.js","webpack://CKEditor5.table/./src/tablecellproperties/commands/tablecellbordercolorcommand.js","webpack://CKEditor5.table/./src/tablecellproperties/commands/tablecellborderstylecommand.js","webpack://CKEditor5.table/./src/tablecellproperties/commands/tablecellborderwidthcommand.js","webpack://CKEditor5.table/./src/tablecellproperties/commands/tablecellheightcommand.js","webpack://CKEditor5.table/./src/tablecellproperties/commands/tablecellhorizontalalignmentcommand.js","webpack://CKEditor5.table/./src/tablecellproperties/commands/tablecellpaddingcommand.js","webpack://CKEditor5.table/./src/tablecellproperties/commands/tablecellpropertycommand.js","webpack://CKEditor5.table/./src/tablecellproperties/commands/tablecellverticalalignmentcommand.js","webpack://CKEditor5.table/./src/tablecellproperties/tablecellpropertiesediting.js","webpack://CKEditor5.table/./src/tablecellproperties/tablecellpropertiesui.js","webpack://CKEditor5.table/./src/tablecellproperties/ui/tablecellpropertiesview.js","webpack://CKEditor5.table/./src/tablecellwidth/commands/tablecellwidthcommand.js","webpack://CKEditor5.table/./src/tablecellwidth/tablecellwidthediting.js","webpack://CKEditor5.table/./src/tableclipboard.js","webpack://CKEditor5.table/./src/tablecolumnresize.js","webpack://CKEditor5.table/./src/tablecolumnresize/constants.js","webpack://CKEditor5.table/./src/tablecolumnresize/converters.js","webpack://CKEditor5.table/./src/tablecolumnresize/tablecolumnresizeediting.js","webpack://CKEditor5.table/./src/tablecolumnresize/tablecolumnwidthscommand.js","webpack://CKEditor5.table/./src/tablecolumnresize/tablewidthresizecommand.js","webpack://CKEditor5.table/./src/tablecolumnresize/utils.js","webpack://CKEditor5.table/./src/tableediting.js","webpack://CKEditor5.table/./src/tablekeyboard.js","webpack://CKEditor5.table/./src/tablemouse.js","webpack://CKEditor5.table/./src/tablemouse/mouseeventsobserver.js","webpack://CKEditor5.table/./src/tableproperties.js","webpack://CKEditor5.table/./src/tableproperties/commands/tablealignmentcommand.js","webpack://CKEditor5.table/./src/tableproperties/commands/tablebackgroundcolorcommand.js","webpack://CKEditor5.table/./src/tableproperties/commands/tablebordercolorcommand.js","webpack://CKEditor5.table/./src/tableproperties/commands/tableborderstylecommand.js","webpack://CKEditor5.table/./src/tableproperties/commands/tableborderwidthcommand.js","webpack://CKEditor5.table/./src/tableproperties/commands/tableheightcommand.js","webpack://CKEditor5.table/./src/tableproperties/commands/tablepropertycommand.js","webpack://CKEditor5.table/./src/tableproperties/commands/tablewidthcommand.js","webpack://CKEditor5.table/./src/tableproperties/tablepropertiesediting.js","webpack://CKEditor5.table/./src/tableproperties/tablepropertiesui.js","webpack://CKEditor5.table/./src/tableproperties/ui/tablepropertiesview.js","webpack://CKEditor5.table/./src/tableselection.js","webpack://CKEditor5.table/./src/tabletoolbar.js","webpack://CKEditor5.table/./src/tableui.js","webpack://CKEditor5.table/./src/tableutils.js","webpack://CKEditor5.table/./src/tablewalker.js","webpack://CKEditor5.table/./src/ui/colorinputview.js","webpack://CKEditor5.table/./src/ui/formrowview.js","webpack://CKEditor5.table/./src/ui/inserttableview.js","webpack://CKEditor5.table/./src/utils/common.js","webpack://CKEditor5.table/./src/utils/structure.js","webpack://CKEditor5.table/./src/utils/table-properties.js","webpack://CKEditor5.table/./src/utils/ui/contextualballoon.js","webpack://CKEditor5.table/./src/utils/ui/table-properties.js","webpack://CKEditor5.table/./src/utils/ui/widget.js","webpack://CKEditor5.table/delegated \"./src/core.js\" from dll-reference CKEditor5.dll","webpack://CKEditor5.table/delegated \"./src/engine.js\" from dll-reference CKEditor5.dll","webpack://CKEditor5.table/delegated \"./src/ui.js\" from dll-reference CKEditor5.dll","webpack://CKEditor5.table/delegated \"./src/utils.js\" from dll-reference CKEditor5.dll","webpack://CKEditor5.table/delegated \"./src/widget.js\" from dll-reference CKEditor5.dll","webpack://CKEditor5.table/external var \"CKEditor5.dll\"","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_DataView.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_Hash.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_ListCache.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_Map.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_MapCache.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_Promise.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_Set.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_SetCache.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_Stack.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_Symbol.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_Uint8Array.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_WeakMap.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_apply.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_arrayEach.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_arrayFilter.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_arrayLikeKeys.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_arrayMap.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_arrayPush.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_arraySome.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_assignMergeValue.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_assignValue.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_assocIndexOf.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseAssign.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseAssignIn.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseAssignValue.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseClone.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseCreate.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseFor.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseGet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseGetAllKeys.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseGetTag.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseIsArguments.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseIsEqual.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseIsEqualDeep.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseIsMap.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseIsNative.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseIsSet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseIsTypedArray.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseKeys.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseKeysIn.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseMerge.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseMergeDeep.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseRest.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseSet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseSetToString.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseSlice.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseTimes.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseToString.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseTrim.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseUnary.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_baseUnset.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_cacheHas.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_castPath.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_cloneArrayBuffer.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_cloneBuffer.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_cloneDataView.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_cloneRegExp.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_cloneSymbol.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_cloneTypedArray.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_copyArray.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_copyObject.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_copySymbols.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_copySymbolsIn.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_coreJsData.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_createAssigner.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_createBaseFor.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_defineProperty.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_equalArrays.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_equalByTag.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_equalObjects.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_freeGlobal.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_getAllKeys.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_getAllKeysIn.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_getMapData.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_getNative.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_getPrototype.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_getRawTag.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_getSymbols.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_getSymbolsIn.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_getTag.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_getValue.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_hashClear.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_hashDelete.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_hashGet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_hashHas.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_hashSet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_initCloneArray.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_initCloneByTag.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_initCloneObject.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_isIndex.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_isIterateeCall.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_isKey.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_isKeyable.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_isMasked.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_isPrototype.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_listCacheClear.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_listCacheDelete.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_listCacheGet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_listCacheHas.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_listCacheSet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_mapCacheClear.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_mapCacheDelete.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_mapCacheGet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_mapCacheHas.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_mapCacheSet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_mapToArray.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_memoizeCapped.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_nativeCreate.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_nativeKeys.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_nativeKeysIn.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_nodeUtil.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_objectToString.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_overArg.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_overRest.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_parent.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_root.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_safeGet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_setCacheAdd.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_setCacheHas.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_setToArray.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_setToString.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_shortOut.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_stackClear.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_stackDelete.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_stackGet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_stackHas.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_stackSet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_stringToPath.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_toKey.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_toSource.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/_trimmedEndIndex.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/assignIn.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/clone.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/constant.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/debounce.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/eq.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/get.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/identity.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isArguments.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isArray.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isArrayLike.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isArrayLikeObject.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isBuffer.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isEqualWith.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isFunction.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isLength.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isMap.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isObject.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isObjectLike.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isPlainObject.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isSet.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isString.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isSymbol.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/isTypedArray.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/keys.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/keysIn.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/last.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/memoize.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/merge.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/now.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/set.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/stubArray.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/stubFalse.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/throttle.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/toNumber.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/toPlainObject.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/toString.js","webpack://CKEditor5.table/javascript/node_modules/lodash-es/unset.js","webpack://CKEditor5.table/webpack/bootstrap","webpack://CKEditor5.table/webpack/runtime/compat get default export","webpack://CKEditor5.table/webpack/runtime/define property getters","webpack://CKEditor5.table/webpack/runtime/global","webpack://CKEditor5.table/webpack/runtime/hasOwnProperty shorthand","webpack://CKEditor5.table/webpack/runtime/make namespace object","webpack://CKEditor5.table/webpack/runtime/nonce","webpack://CKEditor5.table/./src/index.js"],"names":[],"mappings":"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AAG,CAAC,gKAAO;;;;AAIxB,iEAAe,uKAAc,MAAM;;;;;;;;;;;;;;;;;;ACZ4D;AAC/F,YAAmL;;AAEnL,eAAe,+CAA+C;;AAE9D;AACA;;AAEA,aAAa,0GAAG,CAAC,+JAAO;;;;AAIxB,iEAAe,sKAAc,MAAM;;;;;;;;;;;ACZtB;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,KAAwC,GAAG,sBAAiB,GAAG,CAAI;;AAEnF;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,qEAAqE,qBAAqB,cAAc;;AAExG;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA,yDAAyD;AACzD,IAAI;;AAEJ;;;AAGA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA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AACA;;AAEA;AACA;;AAEA,kCAAkC,wEAAwE;AAC1G;AACA;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;;AAE7C;AACA;AACA;AACA,iCAAiC,8CAA8C;AAC/E;AACA;AACA;AACA,qCAAqC,uBAAuB;AAC5D;AACA;AACA;AACe,iCAAiC,uDAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,wCAAwC;AACxC;AACA,YAAY,QAAQ;AACpB,wCAAwC;AACxC;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,4CAA4C,8BAA8B;;AAE1E;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA,WAAW,iGAAiG;AAC5G,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;AACJ;AACa;AACM;;AAE5D;AACA;AACA;AACA,iCAAiC,8CAA8C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,+BAA+B,uDAAO;AACrD;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG,wEAAsB;AACzB,IAAI;AACJ;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,QAAQ;AACnB,WAAW,oCAAoC;AAC/C,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,yBAAyB;AAClC,SAAS,0BAA0B;;AAEnC;;AAEA,qCAAqC,kEAAmB;AACxD,sCAAsC,kEAAmB;;AAEzD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,QAAQ;AACnB,WAAW,oCAAoC;AAC/C,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,oDAAW,WAAW,2BAA2B;;AAE5E;AACA;;AAEA,4CAA4C,0BAA0B;AACtE;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,qCAAqC;AAChD,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,qCAAqC;AAChD,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;;;;;;;;AChRA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;AACN;AACkB;AACG;;AAE5D;AACA;AACA;AACA,iCAAiC,8CAA8C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACe,gCAAgC,uDAAO;AACtD;AACA;AACA;AACA;AACA,8CAA8C,mDAAU;;AAExD;AACA,mGAAmG,mDAAU;AAC7G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,mDAAU;;AAExD;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,0BAA0B;AACrC,GAAG,qEAAsB;AACzB,GAAG,qEAAsB;;AAEzB;AACA;AACA;;AAEA;;AAEA;AACA,GAAG,wEAAsB;;AAEzB;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,qCAAqC;AAChD,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,qCAAqC;AAChD,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,cAAc;;AAExB;AACA;AACA;;AAEA;AACA,SAAS,6CAA6C;;AAEtD;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC1HA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;;AAEJ;;AAEzC;AACA;AACA;AACA,iCAAiC,8CAA8C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACe,kCAAkC,uDAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW,cAAc;;AAEzB;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,oDAAW;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;;;;;AC1HA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;;AAE7C;AACA;AACA;AACA,iCAAiC,8CAA8C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACe,+BAA+B,uDAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AClGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;;AAEJ;;AAEzC;AACA;AACA;AACA,iCAAiC,8CAA8C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACe,kCAAkC,uDAAO;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,8BAA8B,oDAAW,WAAW,yBAAyB;AAC7E;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;;AAE7C;AACA;AACA;AACA,iCAAiC,8CAA8C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACe,+BAA+B,uDAAO;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,6BAA6B;AACtE;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;;AAKpB;AAC6D;;AAEtF;AACA;AACA;AACA,iCAAiC,8CAA8C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,qCAAqC,uDAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM,+CAA+C;AACrD;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA,yDAAyD,kEAAmB;AAC5E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAU,cAAc;AACxB;;AAEA;AACA;AACA;AACA;AACA,6BAA6B,iFAA+B;;AAE5D,kBAAkB,eAAe;AACjC,KAAK,iEAAe;AACpB;AACA;;AAEA,GAAG,qEAAsB;AACzB,IAAI;AACJ;AACA;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;;AAEY;AAC6B;;AAEtF;AACA;AACA;AACA,iCAAiC,8CAA8C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,kCAAkC,uDAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM,+CAA+C;AACrD;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,UAAU,cAAc;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,+EAA6B;;AAE1D,kBAAkB,OAAO;AACzB,KAAK,mEAAiB;AACtB;AACA;;AAEA,GAAG,qEAAsB;AACzB,IAAI;AACJ;;AAEA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,qCAAqC;AACjD,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;;AAE7C;AACA;AACA;AACA,iCAAiC,8CAA8C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,+BAA+B,uDAAO;AACrD;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2C;AACuB;;AAElE;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACO,iDAAiD;AACxD,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mEAAmE,gBAAgB;AACnF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACO;AACP,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACO,oCAAoC;AAC3C,uBAAuB,SAAS;AAChC;AACA;AACA;;AAEA,0BAA0B,oDAAW,WAAW,gBAAgB;AAChE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,sEAAgB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACO,mDAAmD;AAC1D,0BAA0B,6BAA6B;AACvD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mDAAmD,oCAAoC;AACvF,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,aAAa;AACb;AACO;AACP;;AAEA;;AAEA;AACA;;AAEA,qBAAqB,0CAA0C;AAC/D,aAAa,6EAA6E;AAC1F,gBAAgB,oCAAoC;AACpD;AACA,WAAW,oCAAoC;AAC/C,WAAW,kDAAkD;AAC7D,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;;AAEA,QAAQ,8DAAQ,yBAAyB,2BAA2B;AACpE;;AAEA;AACA;AACA,WAAW;AACX,aAAa;AACb;AACA;AACA;;;;;;;;;;;;;;;;AC9KA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,yDAAyD;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C;AACe;AACf;AACA;;AAEA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,iCAAiC;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C;AACe;AACf;AACA;;AAEA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,iCAAiC;AAC5C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,mCAAmC;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,mCAAmC;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACzIA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgE;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C,WAAW,8DAA8D;AACzE;AACe;AACf;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,wCAAwC;AACnD,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,QAAQ,6EAAkC;AAC1C;;;;;;;;;;;;;;;;;AC/DA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C,WAAW,8DAA8D;AACzE;AACe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B,oDAAW;;AAErC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;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ACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;ACzLA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEuD;AACX;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA,yDAAyD,+BAA+B;AACxF;AACA;;AAEA;AACA;;AAEA;AACA,mEAAmE,aAAa;AAChF;AACA;;AAEA;AACA,sDAAsD,+BAA+B;;AAErF;AACA;;AAEA;AACA,sBAAsB,0DAAK;;AAE3B;AACA;AACA;AACA,sDAAsD,+BAA+B;;AAErF;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACe;AACf;AACA;AACA;;AAEA;AACA,qDAAqD,aAAa;AAClE;AACA;;AAEA,WAAW,oCAAoC;;AAE/C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,kDAAkD,aAAa;;AAE/D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAI,mEAAoB;AACxB;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,kEAAkE,4CAA4C;AAC9G;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI,mBAAmB;AAC1B;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACO;AACP;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,IAAI,kBAAkB;AACzB;AACA;;AAEA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACvRA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AAChB;;AAE5B;AACA;AACA;AACA;AACA;AACe,+BAA+B,sDAAM;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,8CAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,mEAAmE;AAC9E,aAAa,sDAAsD;AACnE,wCAAwC,SAAS;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,gBAAgB;AACvD,YAAY,0BAA0B;AACtC,YAAY,iBAAiB;;AAE7B;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI,IAAI,mBAAmB;AAC3B,IAAI;AACJ;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACtJA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AACE;;AAEJ;AACV;AACc;AACA;AACF;AACN;;AAEV;;AAE5B;AACA;AACA;AACA,uCAAuC,kDAAkD;AACzF;AACA;AACA;AACA,MAAM,6DAA6D;AACnE,MAAM,mEAAmE;AACzE,MAAM,2EAA2E;AACjF,MAAM,iEAAiE;AACvE,MAAM,mEAAmE;AACzE,MAAM,8CAA8C;AACpD;AACA;AACA;AACe,oBAAoB,sDAAM;AACzC;AACA;AACA;AACA;AACA,WAAW,qDAAY,EAAE,gDAAO,EAAE,uDAAc,EAAE,mDAAU,EAAE,sDAAa,EAAE,uDAAc,EAAE,wDAAM;AACnG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,QAAQ,sEAAsE;AAC9E;AACA;AACA;;AAEA;AACA,6BAA6B,gCAAgC;AAC7D;AACA,iBAAiB,qCAAqC;AACtD;AACA,YAAY,gCAAgC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ,OAAO,4FAA4F;AACnG;AACA,aAAa,uBAAuB;AACpC;;;;;;;;;;;;;;;;;;;;ACvHA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AACyB;AACV;;AAExB;;AAEnC;AACA;AACA;AACA;AACA;AACe,2BAA2B,sDAAM;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,yEAAmB,EAAE,oEAAc;AAC9C;AACA;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AACsB;AACV;;AAEyB;AACb;AACJ;;AAEhE;AACA;AACA;AACA;AACA;AACe,kCAAkC,sDAAM;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,oBAAoB;AAC/D;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA,iDAAiD,kEAAyB;;AAE1E;AACA;AACA,SAAS,gEAA4B;AACrC;AACA,IAAI;;AAEJ;AACA;AACA;AACA,2BAA2B,SAAS;AACpC,UAAU,+CAAO;AACjB;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,2BAA2B,SAAS;AACpC,UAAU,+CAAO;AACjB;AACA;;AAEA;AACA;;AAEA,IAAI,uEAAiB;AACrB;AACA;AACA;AACA;AACA,MAAM;;AAEN,WAAW,sEAAgB;AAC3B;AACA,IAAI;;AAEJ,EAAE,gFAA2B;AAC7B;;AAEA;AACA,uBAAuB,4DAA4D;AACnF;AACA;AACA,SAAS,oBAAoB;AAC7B;AACA;AACA,YAAY,qCAAqC;AACjD;AACA,cAAc,0CAA0C;AACxD;AACA;AACA;;AAEA,sBAAsB,kEAAgB;AACtC;;AAEA;AACA,aAAa,4DAA4D;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA,YAAY,qCAAqC;AACjD;AACA,YAAY,qCAAqC;AACjD;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACxJA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEmD;AACL;;AAES;;AAEvD;AACA;AACA;AACA;AACA;AACe,6BAA6B,sDAAM;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,wDAAU;;AAE9B;AACA,UAAU,6DAAa;AACvB;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA,4CAA4C,2BAA2B;;AAEvE;AACA;AACA,iCAAiC,oEAA4B;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,KAAK;;AAEL;AACA,IAAI;AACJ;AACA;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;;AAEwC;;AAErF;AACA;AACA;AACA,kCAAkC,yEAAyE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B;AACvE;AACA;AACA;AACe,wCAAwC,uDAAO;AAC9D;AACA;AACA;AACA;AACA;AACA,uBAAuB,iEAAyB;;AAEhD;;AAEA;AACA;AACA,IAAI;AACJ,kBAAkB,uEAA+B;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA,uBAAuB;AACvB,UAAU,qBAAqB;;AAE/B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,SAAS;AACrB;AACA;AACA;AACA,uBAAuB,iEAAyB;AAChD;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA,uBAAuB,iEAAyB;AAChD;AACA,yBAAyB,uEAA+B;;AAExD;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvHA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iGAAiG;AAC5G;AACA,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI,0CAA0C;AAC9C;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,aAAa,aAAa,gCAAgC,0CAA0C;AACpG;AACA;AACO;AACP;;AAEA;AACA,WAAW;AACX;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,uCAAuC;AAClD,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;AC5FA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AACoC;AACU;;AAE1F;AACA;AACA;AACA,qBAAqB,iFAAiF;AACtG,iBAAiB,oDAAoD;AACrE;AACA;AACA,IAAI,oIAAoI;AACxI,QAAQ,oHAAoH;AAC5H;AACA;AACA;AACe,kCAAkC,sDAAM;AACvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uFAA0B,EAAE,kFAAqB;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,mFAAmF;AACxF;AACA;AACA,IAAI,2EAA2E;AAC/E;AACA,qDAAqD,qCAAqC;AAC1F;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;;;;;;;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkE;;AAElE;AACA;AACA;AACA,qCAAqC,8FAA8F;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACe,8CAA8C,iEAAwB;AACrF;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkE;AACJ;;AAE9D;AACA;AACA;AACA,qCAAqC,8FAA8F;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACe,0CAA0C,iEAAwB;AACjF;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,uEAAc;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkE;AACJ;;AAE9D;AACA;AACA;AACA,qCAAqC,8FAA8F;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACe,0CAA0C,iEAAwB;AACjF;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,uEAAc;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkE;AAC0B;;AAE5F;AACA;AACA;AACA,qCAAqC,8FAA8F;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACe,0CAA0C,iEAAwB;AACjF;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,uEAAc;;AAE9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,qFAA4B;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkE;AACU;;AAE5E;AACA;AACA;AACA,qCAAqC,8FAA8F;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACe,qCAAqC,iEAAwB;AAC5E;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,qFAA4B;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkE;;AAElE;AACA;AACA;AACA,qCAAqC,8FAA8F;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACe,kDAAkD,iEAAwB;AACzF;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkE;AAC0B;;AAE5F;AACA;AACA;AACA,qCAAqC,8FAA8F;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACe,sCAAsC,iEAAwB;AAC7E;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,uEAAc;;AAE9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,qFAA4B;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACe,uCAAuC,uDAAO;AAC7D;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,GAAG;AACf;AACA,YAAY,iCAAiC;AAC7C;AACA;AACA,uBAAuB;AACvB,UAAU,eAAe;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,GAAG;AACf,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,6CAA6C;AACzD,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACxIA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEkE;;AAElE;AACA;AACA;AACA,qCAAqC,8FAA8F;AACnI;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,gDAAgD,iEAAwB;AACvF;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AAC+C;;AAEI;AAClD;AAC+B;AACH;AACF;AACkB;AACI;AACI;AAChB;AACA;AACA;AACN;AAC1B;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,yCAAyC,sDAAM;AAC9D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,qDAAY,EAAE,6EAAqB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0EAA0E;;AAE1E,qCAAqC,wFAA8B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,gEAAc;AACpD;AACA;AACA;AACA;AACA,IAAI;AACJ,mDAAmD,8EAA2B;AAC9E,mDAAmD,8EAA2B;AAC9E,mDAAmD,8EAA2B;;AAE9E,EAAE,8DAAc;AAChB;AACA;AACA;AACA,IAAI;AACJ,8CAA8C,wEAAsB;;AAEpE,sCAAsC,iEAAe;AACrD,EAAE,8DAAc;AAChB;AACA;AACA;AACA;AACA,IAAI;AACJ,+CAA+C,yEAAuB;;AAEtE,sCAAsC,oEAAkB;AACxD,EAAE,8DAAc;AAChB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,OAAO,iFAA+B;AACtC;;AAEA;AACA;AACA;AACA,OAAO,qFAAmC;AAC1C;;AAEA;AACA;AACA;AACA,OAAO,mFAAiC;AACxC;AACA;AACA;;AAEA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,gDAAgD;AAC3D,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH,CAAC,+EAAkB;AACnB,CAAC,+EAAkB;AACnB,CAAC,qFAAwB,gBAAgB,8FAA8F;AACvI,CAAC,qFAAwB,gBAAgB,8FAA8F;AACvI,CAAC,qFAAwB,gBAAgB,8FAA8F;AACvI;;AAEA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,gDAAgD;AAC3D,WAAW,4BAA4B,YAAY,+CAA+C;AAClG,WAAW,QAAQ;AACnB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,gDAAgD;AAC3D,WAAW,QAAQ;AACnB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;AC3RA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AAC2F;;AAEpE;AAQ7B;AACD;AACuB;AAC4C;;AAExB;AACL;;AAE3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,4FAA4F;AAChG;AACA;AACA;AACe,oCAAoC,sDAAM;AACzD;AACA;AACA;AACA;AACA,WAAW,+DAAiB;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,qEAAa;AAC9B,qBAAqB,qEAAa;AAClC,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,qCAAqC,uFAA8B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,sCAAsC,+DAAiB;;AAEvD;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,oBAAoB,wDAAU;;AAE9B;AACA;AACA,UAAU,8EAAmB;AAC7B;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,2FAA2F;AAC5G;AACA;AACA,cAAc,qFAAqF;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,uEAAqB;AAClD,gCAAgC,0EAAwB;AACxD,iCAAiC,uEAAqB;AACtD,oCAAoC,0EAAwB;AAC5D,mBAAmB,mEAAuB;AAC1C;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,SAAS,wEAAsB;AAC/B;AACA,KAAK;AACL,IAAI,wFAA2B;AAC/B;AACA,IAAI;;AAEJ;AACA,EAAE,qEAAmB;AACrB;AACA;AACA;AACA;AACA,IAAI;;AAEJ,yBAAyB,sFAA0B;AACnD,0BAA0B,uFAA2B;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,2EAAmB;AACjC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,cAAc,+EAAuB;AACrC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,cAAc,4EAAoB;AAClC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,cAAc,4EAAoB;AAClC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,cAAc,4EAAoB;AAClC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,cAAc,2EAAmB;AACjC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,eAAe,aAAa,QAAQ,gBAAgB;AACpD;AACA,gDAAgD,uBAAuB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,uFAA0B;AACvC,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,aAAa,UAAU,gBAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,aAAa,mBAAmB,gBAAgB;AAC7E;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,aAAa,WAAW,gBAAgB;AACrE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,qBAAqB;AACjC,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,6DAA6D;AACvE,gCAAgC,qDAAQ;AACxC;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC5cA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAe0B;AAC2C;AAC1B;;AAOF;AACM;;AAEd;AACK;AACU;;AAEhD;AACA,OAAO,+DAAe;AACtB,SAAS,iEAAiB;AAC1B,QAAQ,gEAAgB;AACxB,UAAU,kEAAkB;AAC5B,MAAM,8DAAc;AACpB,SAAS,iEAAiB;AAC1B,SAAS,iEAAiB;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe,sCAAsC,kDAAI;AACzD;AACA,YAAY,4BAA4B,YAAY,+CAA+C;AACnG,YAAY,QAAQ;AACpB,YAAY,qCAAqC;AACjD;AACA,KAAK,2GAA2G;AAChH,YAAY,qCAAqC;AACjD;AACA,KAAK,0GAA0G;AAC/G,YAAY,6DAA6D;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,sCAAsC,oBAAoB;AAC1D;AACA,cAAc;AACd;AACA;;AAEA,UAAU,0EAA0E;AACpF,UAAU,sCAAsC;AAChD,UAAU,0DAA0D;AACpE,UAAU,uEAAuE;;AAEjF;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,6DAAY;;AAEtC;AACA,yBAAyB,qDAAqD;AAC9E;AACA;AACA,cAAc;AACd;AACA,wBAAwB,iEAAgB;;AAExC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,UAAU,mCAAmC;;AAE7C;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,yBAAyB,4DAAc;;AAEvC;AACA,yBAAyB,oBAAoB;AAC7C;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,yDAAW;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,yBAAyB,4DAAc;AACvC;AACA,IAAI;;AAEJ;AACA,yBAAyB,uDAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,yBAAyB,uDAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,yBAAyB,uDAAW;AACpC;AACA;AACA,QAAQ,uDAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,QAAQ,uDAAW;AACnB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,IAAI;;AAEJ;AACA,yBAAyB,uDAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,yBAAyB,uDAAW;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,+DAAa;AACf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W;AACpB;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,SAAS,4DAAY;AACrB;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,mCAAmC;AACtE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,IAAI;AACJ,YAAY;AACZ;AACA;;AAEA;AACA,mCAAmC,iCAAiC;AACpE;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACj2BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACmG;AACvB;;AAE5E;AACA;AACA;AACA,qCAAqC,+EAA+E;AACpH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACe,oCAAoC,8FAAwB;AAC3E;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,qFAA4B;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;;AAEC;AACwB;AACM;AAC1B;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,oCAAoC,sDAAM;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,qDAAY;AACvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,uFAA8B;AACnE;AACA;;AAEA,EAAE,6DAAc;AAChB;AACA;AACA;AACA,IAAI;;AAEJ,6CAA6C,uEAAqB;AAClE;AACA;;;;;;;;;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;;AAEE;AACN;AACF;AAWX;;AAE3B;AACA;AACA,sCAAsC,gCAAgC;AACtE;AACA;AACA;AACe,6BAA6B,sDAAM;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uDAAc,EAAE,mDAAU;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0GAA0G,mBAAmB;;AAE7H;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA,kDAAkD,uDAAc;;AAEhE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,uBAAuB,6EAA6E;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qFAAqF;AACjG,YAAY,0CAA0C;AACtD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,mDAAU;;AAExD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG,wEAAsB;;AAEzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,uEAAqB;;AAEtC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,mCAAmC;AAC/C,cAAc;AACd;AACA;AACA,UAAU,2CAA2C;;AAErD;AACA;;AAEA,oCAAoC,oDAAW;AAC/C;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG,uEAAqB;;AAExB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B;AAC1B;;AAEA;AACA;;AAEA;AACA,uBAAuB;AACvB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oCAAoC;AAChD,YAAY,qCAAqC;AACjD,YAAY,uCAAuC;AACnD,YAAY,mCAAmC;AAC/C,cAAc,0CAA0C;AACxD;AACA;AACA,UAAU,iBAAiB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,qFAAqF;AACjG,YAAY,iCAAiC;AAC7C,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC,0BAA0B;AACnE;AACA;;AAEA;AACA;;AAEA,wCAAwC,0BAA0B;AAClE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,6CAA6C;AACxD,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,mCAAmC;AAC9C,WAAW,oCAAoC;AAC/C,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oEAAkB;AACxC,yBAAyB,uEAAqB;AAC9C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,oBAAoB,OAAO,oDAAW;AACrD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6CAA6C;;AAEtD,sBAAsB;AACtB,yBAAyB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,+EAA6B;;AAEvD;AACA,mDAAmD,oBAAoB;;AAEvE,8BAA8B,OAAO,KAAK,mEAAiB;AAC3D;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,iFAA+B;;AAEzD;AACA,mDAAmD,kBAAkB;;AAErE,8BAA8B,eAAe,KAAK,iEAAe;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc;;AAEvB;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;AC5kBA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AACwC;AACT;;AAEnC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACe,gCAAgC,sDAAM;AACrD;AACA;AACA;AACA;AACA,WAAW,mFAAwB,EAAE,6EAAqB;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8DAA8D,iEAAiE;AAC/H;AACA,WAAW;AACX;AACO;;AAEP;AACA;AACA;AACA,WAAW;AACX;AACO;;AAEP;AACA;AACA;AACA,WAAW;AACX;AACO;;;;;;;;;;;;;;;;;;AC7BP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qHAAqH;AACzH;AACA;AACA,WAAW,2BAA2B,sBAAsB,0CAA0C;AACtG,aAAa,UAAU;AACvB;AACO;AACP;AACA;;AAEA,8DAA8D,aAAa;AAC3E;AACA;;AAEA,2DAA2D,aAAa;;AAExE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,kBAAkB,6DAAqB;AACvC;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,kDAAkD;AAC7D,WAAW,oCAAoC;AAC/C,WAAW,QAAQ;AACnB;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kDAAkD;AAC7D,WAAW,oCAAoC;AAC/C;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9HA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEqC;AACyB;AAClB;;AAE+B;AAChC;AACJ;AACE;;AAEuB;AACE;;AAK5C;;AAeL;;AAEwC;;AAEzD;AACA;AACA;AACA;AACA;AACe,uCAAuC,sDAAM;AAC5D;AACA;AACA;AACA;AACA,WAAW,qDAAY,EAAE,mDAAU;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,oCAAoC,gEAAe;;AAEnD;AACA,+BAA+B,0CAA0C;AACzE;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+CAA+C,gEAAuB;AACtE,iDAAiD,iEAAwB;;AAEzE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,+DAAuB;AAC/C;AACA,yBAAyB,6DAAqB;;AAE9C;AACA;;AAEA,iEAAiE,OAAO;;AAExE;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B,aAAa,qCAAqC;AAClD,aAAa,kFAAkF;AAC/F;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,qEAA6B;AACrE,kCAAkC,yDAAiB;;AAEnD;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA,2CAA2C,gDAAQ;AACnD;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,mCAAmC;AAChD,aAAa,qCAAqC;AAClD,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,kCAAkC,kEAAqB;;AAEvD;AACA,oCAAoC,+EAAkC;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,2EAAmB;AAC9C,iFAAiF,mBAAmB;;AAEpG,6BAA6B,uEAAsB,eAAe,sDAAQ;AAC1E,6BAA6B,uEAAsB;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,uDAAuD;AACnE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD,aAAa,kCAAkC;AAC/C,eAAe,gBAAgB;AAC/B;AACA;AACA,2BAA2B,oDAAW;;AAEtC;AACA;AACA;AACA,yBAAyB,4DAAoB;;AAE7C;AACA,2CAA2C,mDAAW;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,kDAAkD;AAC/D,aAAa,gBAAgB;AAC7B,aAAa,oCAAoC;AACjD;AACA;;AAEA,oBAAoB,6BAA6B;AACjD;AACA,gCAAgC,mDAAW,0BAA0B,gDAAQ,8BAA8B;;AAE3G;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,kDAAkD;AAC/D,aAAa,oCAAoC;AACjD,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA,qCAAqC,mDAAW,gCAAgC;AAChF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,0CAA0C,mEAA0B;;AAEpE;AACA;AACA,sBAAsB,mEAA0B;;AAEhD;AACA;AACA;AACA;;AAEA,aAAa,6CAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uCAAuC,mDAAW;;AAElD,iCAAiC,6BAA6B;;AAE9D;AACA,mCAAmC,mDAAW;;AAE9C,kCAAkC,wBAAwB;AAC1D,KAAK;AACL,yCAAyC,mDAAW;;AAEpD,kCAAkC,8BAA8B;AAChE;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mDAAW,4BAA4B;AAC9D;AACA;AACA;AACA,MAAM;AACN,6CAA6C,4DAA4D;AACzG;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,uDAAuD;AACnE,YAAY,gBAAgB;AAC5B,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,0BAA0B,6DAAqB;AAC/C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,+DAAuB;AACvD,0BAA0B,+DAAuB;AACjD,qBAAqB,6DAAqB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG,IAAI,kBAAkB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,kEAA0B;AAC/B,MAAM;AACN;AACA,GAAG,IAAI,qBAAqB;AAC5B;AACA;;;;;;;;;;;;;;;;;AC3tBA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoF;;AAEpF;AACA;AACA;AACe,uCAAuC,sFAAoB;AAC1E;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,qCAAqC;AACjD;AACA,uBAAuB;AACvB;AACA;AACA,UAAU,eAAe;;AAEzB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoF;;AAEpF;AACA;AACA;AACe,sCAAsC,sFAAoB;AACzE;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,qCAAqC;AACjD;AACA,uBAAuB;AACvB;AACA;AACA,UAAU,2BAA2B;;AAErC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;AAKxB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C,aAAa,2CAA2C;AACxD;AACO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,kCAAkC;AAC7C,aAAa,QAAQ;AACrB;AACO;AACP,QAAQ,kEAA0B;AAClC;;AAEA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,kCAAkC;AAC7C,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,kCAAkC;AAC7C,WAAW,QAAQ;AACnB,aAAa,8CAA8C;AAC3D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;AACO;AACP,gBAAgB,+EAA8B;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,oCAAoC;AAC/C,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACO;AACP,kCAAkC,8DAAsB;AACxD;;AAEA;AACA;;AAEA;AACA;AACA,IAAI,oCAAoC;AACxC;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,aAAa,WAAW;AACxB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,gBAAgB;AAC7B;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D,uDAAuD;AACpH;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,gBAAgB;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE,sEAA8B;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,kDAAkD;AAC7D,WAAW,oCAAoC;AAC/C;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,QAAQ;AACrB;AACO;AACP,gBAAgB,+EAA8B;;AAE9C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1UA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;;AAE6E;AACX;;AAE/C;AACJ;AACM;AACN;AACA;AACA;AACM;AACA;AACM;AACV;AACF;AACM;AACtB;;AAEmC;AACe;;AAEP;AACR;;AAE3C;;AAEnC;AACA;AACA;AACA;AACA;AACe,2BAA2B,sDAAM;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,wDAAU;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wDAAU;;AAEnD;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,kCAAkC,0EAAiB;;AAEnD;AACA,kCAAkC,mEAAW;;AAE7C;AACA;AACA;AACA;AACA,IAAI;AACJ,SAAS,mEAAa,gBAAgB,iBAAiB;AACvD,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ,SAAS,mEAAa;AACtB,IAAI;;AAEJ;AACA,iDAAiD,gCAAgC;AACjF,kCAAkC,0EAAiB;;AAEnD;AACA;AACA,SAAS,iEAAW;AACpB,IAAI;;AAEJ;AACA,iDAAiD,iCAAiC;AAClF,iDAAiD,iCAAiC;AAClF,kCAAkC,mFAA0B;AAC5D,kCAAkC,mFAA0B;;AAE5D;AACA;AACA,SAAS,kEAAY,IAAI,iBAAiB;AAC1C,IAAI;AACJ;AACA;AACA,SAAS,kEAAY;AACrB,IAAI;;AAEJ;AACA;AACA;AACA,SAAS,iFAA2B,IAAI,iBAAiB;AACzD;AACA,IAAI;AACJ;AACA;AACA,SAAS,iFAA2B;AACpC;AACA,IAAI;;AAEJ;AACA,uDAAuD,oCAAoC;AAC3F;AACA,YAAY,oDAAoD;AAChE;AACA,IAAI;;AAEJ,uDAAuD,oCAAoC;AAC3F;AACA,YAAY,oDAAoD;AAChE;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C,oEAAkB;AAC5D,kDAAkD,kEAAgB,YAAY,iBAAiB;AAC/F,kDAAkD,kEAAgB,YAAY,iBAAiB;AAC/F,oDAAoD,qEAAmB,YAAY,gBAAgB;AACnG,qDAAqD,qEAAmB,YAAY,iBAAiB;;AAErG,6CAA6C,kEAAgB;AAC7D,gDAAgD,qEAAmB;;AAEnE,uDAAuD,kEAAgB,YAAY,0BAA0B;AAC7G,yDAAyD,kEAAgB,YAAY,4BAA4B;;AAEjH,8CAA8C,oEAAiB;;AAE/D,kDAAkD,kEAAgB,YAAY,qBAAqB;AACnG,iDAAiD,kEAAgB,YAAY,oBAAoB;AACjG,iDAAiD,kEAAgB,YAAY,oBAAoB;AACjG,+CAA+C,kEAAgB,YAAY,kBAAkB;;AAE7F,mDAAmD,yEAAsB;AACzE,gDAAgD,sEAAmB;;AAEnE,6CAA6C,mEAAgB;AAC7D,gDAAgD,sEAAmB;;AAEnE,EAAE,gFAA0B;AAC5B,EAAE,wFAAiC;;AAEnC;AACA,GAAG,uFAA2B;AAC9B,GAAG,mFAAuB;AAC1B,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxPA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE8C;AACN;AACF;;AAEM;AAC4B;;AAExE;AACA;AACA,sCAAsC,gCAAgC;AACtE;AACA;AACA;AACe,4BAA4B,sDAAM;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uDAAc,EAAE,mDAAU;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yFAAyF,mBAAmB;AAC5G,kGAAkG,oBAAoB;AACtH,mFAAmF,0BAA0B;AAC7G;;AAEA;AACA,aAAa,0DAA0D;AACvE;AACA;AACA;AACA,YAAY,iEAAiE;AAC7E,YAAY,uDAAuD;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,aAAa,0DAA0D;AACvE;AACA;AACA;AACA,YAAY,iEAAiE;AAC7E,YAAY,uDAAuD;AACnE;AACA;AACA;AACA,8CAA8C,mDAAU;;AAExD;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA,aAAa,kEAAkE;AAC/E;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,uDAAuD;AACnE;AACA;AACA;AACA;;AAEA,oBAAoB,sFAAiC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,4BAA4B;AACxC,YAAY,SAAS;AACrB,cAAc,SAAS;AACvB;AACA;AACA,8CAA8C,mDAAU;AACxD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,yCAAyC;AACrD,YAAY,qCAAqC;AACjD,YAAY,SAAS;AACrB,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,kCAAkC,gDAAgD;;AAElF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,4BAA4B;AACxC,YAAY,SAAS;AACrB;AACA;AACA;;AAEA;AACA,4BAA4B,oDAAW,WAAW,wBAAwB;AAC1E,UAAU,mCAAmC;;AAE7C,6CAA6C,OAAO;AACpD,QAAQ,cAAc;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxWA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;;AAEE;AACqB;AAC7B;;AAEtC;AACA;AACA,sCAAsC,gCAAgC;AACtE;AACA;AACA;AACe,yBAAyB,sDAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uDAAc,EAAE,mDAAU;AACrC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,uEAAmB;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,mDAAU;AACnD;;AAEA,6CAA6C,uDAAc;;AAE3D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,IAAI,sBAAsB;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,uDAAc;;AAE3D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,IAAI,sBAAsB;AAC7B;;AAEA;AACA;AACA;AACA;AACA,YAAY,uDAAuD;AACnE,cAAc,+CAA+C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mDAAmD,oBAAoB;AACvE;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;AC3NA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oCAAoC,WAAW,gDAAgD;AACnG;AACA,sCAAsC,kDAAkD;AACxF;AACA;AACA;AACe,kCAAkC,kEAAgB;AACjE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,0EAA0E;AAC5F;AACA;AACA,IAAI,2EAA2E;AAC/E,OAAO,oCAAoC,WAAW,gDAAgD;AACtG;AACA;AACA;AACA,WAAW,uDAAuD;AAClE;;AAEA;AACA;AACA;AACA,kBAAkB,0EAA0E;AAC5F;AACA;AACA,IAAI,2EAA2E;AAC/E,OAAO,oCAAoC,WAAW,gDAAgD;AACtG;AACA;AACA;AACA,WAAW,uDAAuD;AAClE;;;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;;AAEkC;AACV;;AAEpE;AACA;AACA;AACA,qBAAqB,iFAAiF;AACtG,iBAAiB,4DAA4D;AAC7E;AACA;AACA,IAAI,mHAAmH;AACvH,QAAQ,mGAAmG;AAC3G;AACA;AACA;AACe,8BAA8B,sDAAM;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,+EAAsB,EAAE,0EAAiB;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,mFAAmF;AACxF;AACA;AACA,IAAI,2EAA2E;AAC/E;AACA,qDAAqD,qCAAqC;AAC1F;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,QAAQ;AACtB;;;;;;;;;;;;;;;;;ACpHA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0D;;AAE1D;AACA;AACA;AACA,qCAAqC,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACe,oCAAoC,6DAAoB;AACvE;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0D;;AAE1D;AACA;AACA;AACA,qCAAqC,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACe,0CAA0C,6DAAoB;AAC7E;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0D;AACI;;AAE9D;AACA;AACA;AACA,qCAAqC,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACe,sCAAsC,6DAAoB;AACzE;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,uEAAc;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0D;AACI;;AAE9D;AACA;AACA;AACA,qCAAqC,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACe,sCAAsC,6DAAoB;AACzE;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,uEAAc;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0D;AACkC;;AAE5F;AACA;AACA;AACA,qCAAqC,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACe,sCAAsC,6DAAoB;AACzE;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,uEAAc;;AAE9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,qFAA4B;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0D;AACkB;;AAE5E;AACA;AACA;AACA,qCAAqC,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACe,iCAAiC,6DAAoB;AACpE;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,qFAA4B;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACe,mCAAmC,uDAAO;AACzD;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,GAAG;AACf;AACA,YAAY,iCAAiC;AAC7C;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA,UAAU,eAAe;;AAEzB;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,GAAG;AACf,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;AC3HA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0D;AACkB;;AAE5E;AACA;AACA;AACA,qCAAqC,kFAAkF;AACvH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACe,gCAAgC,6DAAoB;AACnE;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,qFAA4B;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AAC8B;;AAE/B;AAMJ;AAC0C;AACR;AACA;AACA;AACZ;AACE;AACM;AACM;;AAE3E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,qCAAqC,sDAAM;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,qDAAY;AACvB;;AAEA;AACA;AACA;AACA;AACA;AAC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6B,uEAAqB;AAClD,gCAAgC,0EAAwB;AACxD,iCAAiC,uEAAqB;AACtD,oCAAoC,0EAAwB;;AAE5D,mBAAmB,+DAAmB;AACtC;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,EAAE,qEAAmB;AACrB;AACA;AACA;AACA;AACA,IAAI;;AAEJ,yBAAyB,sFAA0B;AACnD,0BAA0B,uFAA2B;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,2EAAmB;AACjC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,cAAc,+EAAuB;AACrC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,cAAc,2EAAmB;AACjC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,cAAc,4EAAoB;AAClC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,cAAc,4EAAoB;AAClC;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA,eAAe,aAAa,QAAQ,gBAAgB;AACpD;AACA,kDAAkD,uBAAuB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA,aAAa,wFAA2B;AACxC,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,aAAa,UAAU,gBAAgB;AACxD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,iBAAiB,cAAc,aAAa;AACjE;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,wEAAsB;AAC9B;AACA,IAAI;AACJ,GAAG,wFAA2B;AAC9B;AACA;;AAEA;AACA,6BAA6B,aAAa,uBAAuB,gBAAgB;AACjF;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,aAAa,WAAW,gBAAgB;AACrE;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,gDAAgD,oBAAoB;AACpE;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,qBAAqB;AACjC,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,UAAU,6DAA6D;AACvE,gCAAgC,qDAAQ;AACxC;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACjcA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAe0B;AAC2C;AAC1B;;AAOF;AACM;;AAEd;AACK;AACM;;AAE5C;AACA,OAAO,gEAAgB;AACvB,SAAS,kEAAkB;AAC3B,QAAQ,iEAAiB;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe,kCAAkC,kDAAI;AACrD;AACA,YAAY,4BAA4B,YAAY,+CAA+C;AACnG,YAAY,QAAQ;AACpB,YAAY,qCAAqC;AACjD;AACA,KAAK,+FAA+F;AACpG,YAAY,qCAAqC;AACjD;AACA,KAAK,8FAA8F;AACnG,YAAY,qDAAqD;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,sCAAsC,oBAAoB;AAC1D;AACA;AACA,cAAc;AACd;AACA;;AAEA,UAAU,0EAA0E;AACpF,UAAU,sCAAsC;AAChD,UAAU,0DAA0D;AACpE,UAAU,mCAAmC;;AAE7C;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,6DAAY;;AAEtC;AACA,yBAAyB,qDAAqD;AAC9E;AACA;AACA,cAAc;AACd;AACA,wBAAwB,iEAAgB;;AAExC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,UAAU,mCAAmC;;AAE7C;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,yBAAyB,4DAAc;;AAEvC;AACA,yBAAyB,oBAAoB;AAC7C;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,yDAAW;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,yBAAyB,4DAAc;AACvC;AACA,IAAI;;AAEJ;AACA,yBAAyB,uDAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,yBAAyB,uDAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,yBAAyB,uDAAW;AACpC;AACA;AACA,QAAQ,uDAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,QAAQ,uDAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,IAAI;;AAEJ;AACA,yBAAyB,uDAAW;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,+DAAa;AACf;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,2BAA2B;AAClC,OAAO,wBAAwB;AAC/B,OAAO,wBAAwB;AAC/B;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,uFAA2B;AACvD;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA,6BAA6B,uDAAS;AACtC;;AAEA;;AAEA,sBAAsB,gFAAoB;AAC1C,kCAAkC,8DAAgB,UAAU,mEAAqB;AACjF;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;;AAEA,EAAE,mEAAiB,iCAAiC,qFAAyB;;AAE7E;;AAEA,+BAA+B,8DAAgB,UAAU,oEAAsB;;AAE/E;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA,+BAA+B,8DAAgB;;AAE/C;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,uBAAuB;AAC9B;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA,iCAAiC,uDAAS;AAC1C;;AAEA;;AAEA,iCAAiC,uFAA2B;AAC5D;AACA;AACA;AACA,IAAI;;AAEJ,8BAA8B,8DAAgB;;AAE9C;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,kBAAkB;AACzB,OAAO,mBAAmB;AAC1B;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA,8BAA8B,uDAAS;AACvC;;AAEA;;AAEA,yBAAyB,8DAAgB,UAAU,oEAAsB;;AAEzE;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA,4BAA4B,kDAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,MAAM;AACN;AACA,IAAI;;AAEJ;;AAEA,0BAA0B,8DAAgB,UAAU,oEAAsB;;AAE1E;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,wBAAwB;AAC/B;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;;AAEA,6BAA6B,uDAAS;AACtC;;AAEA;;AAEA,+BAA+B,yDAAW;AAC1C;AACA;AACA;AACA,IAAI;;AAEJ,EAAE,uEAAW;AACb;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,sBAAsB;AAC7B,OAAO,wBAAwB;AAC/B;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA,6BAA6B,wDAAU;AACvC,+BAA+B,wDAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,2DAAW;AACpB;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,SAAS,4DAAY;AACrB;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,yBAAyB;AAC5D;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,IAAI;AACJ,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACnuBA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AACA;;AAEJ;AACF;;AAE+D;;AAEhE;;AAErC;AACA;AACA,sCAAsC,gCAAgC;AACtE;AACA;AACA;AACe,6BAA6B,sDAAM;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,mDAAU,EAAE,mDAAU;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oGAAoG,mBAAmB;;AAEvH;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,8CAA8C,mDAAU;AACxD;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,8CAA8C,mDAAU;AACxD;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,WAAW,uCAAuC;AAClD,WAAW,iCAAiC;;AAE5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,oEAAkB;AACxC,yBAAyB,uEAAqB;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,uEAAqB;;AAEtC;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,qCAAqC;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,qCAAqC;AACnD;AACA;AACA;AACA,0BAA0B,0DAAK;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG,IAAI,qBAAqB;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,YAAY,kCAAkC;AAC9C,YAAY,WAAW;AACvB;AACA;AACA,8CAA8C,mDAAU;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,qCAAqC;AACjD,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,YAAY,OAAO,oDAAW;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrWA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AACmB;AACoB;;AAEnF;AACA;AACA;AACA;AACA,IAAI,4FAA4F;AAChG;AACA;AACA,IAAI,gGAAgG;AACpG;AACA;AACA;AACe,2BAA2B,sDAAM;AAChD;AACA;AACA;AACA;AACA,WAAW,yEAAuB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yEAAuB;;AAE7E;;AAEA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,oEAAsB;AAC7C,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,oEAAsB;AAC7C,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,QAAQ,8CAA8C;AACtD;AACA,8BAA8B,oCAAoC;AAClE,OAAO,kDAAkD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+EAA+E;AACnF;AACA,+CAA+C,2DAA2D;AAC1G;AACA,YAAY,gBAAgB;AAC5B;;AAEA;AACA;AACA,QAAQ,8CAA8C;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+EAA+E;AACnF;AACA,+CAA+C,2DAA2D;AAC1G;AACA,YAAY,gBAAgB;AAC5B;;;;;;;;;;;;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE4C;AACmE;AAC9D;;AAEE;;AAEA;AACa;AACN;AACa;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,6CAA6C;AACpI;AACA;AACA;AACe,sBAAsB,sDAAM;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,gEAAc;;AAEtC;;AAEA;AACA;AACA,UAAU,8DAAS;AACnB;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,2DAAe;AACzC;;AAEA;;AAEA;AACA,sCAAsC,+DAA+D;AACrG;AACA,MAAM;AACN,KAAK;;AAEL;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,mBAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,qEAAe;AAC/D,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,mBAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,kEAAY;AACzD,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,MAAM,mBAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qEAAqE,yEAAkB;AACvF,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,6DAA6D;AACzE,YAAY,4BAA4B;AACxC,cAAc;AACd;AACA;AACA;AACA,uBAAuB,gEAAc;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA,iCAAiC,8DAAgB;AACjD;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA,oCAAoC,iEAAiE;AACrG;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,6DAA6D;AACzE,YAAY,4BAA4B;AACxC,cAAc;AACd;AACA;AACA;AACA,uBAAuB,gEAAc,UAAU,6DAAe;AAC9D;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA,eAAe,wCAAwC;AACvD;AACA;AACA;AACA,YAAY,8CAA8C;AAC1D,YAAY,6DAA6D;AACzE,cAAc,qCAAqC;AACnD;AACA;AACA;AACA;AACA,8BAA8B,2DAAU;;AAExC;AACA;AACA;;AAEA,EAAE,mEAAiB;;AAEnB;AACA;AACA;;AAEA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,kCAAkC;AAC7C,WAAW,qCAAqC;AAChD,WAAW,gEAAgE;AAC3E;AACA;AACA,kCAAkC,mDAAK;AACvC,SAAS,wBAAwB;;AAEjC;AACA;;AAEA;;AAEA,eAAe,cAAc;;AAE7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;;;;;;;;;;AC7WA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoD;AACR;;AAEJ;AACsC;AACN;;AAExE;AACA;AACA;AACA;AACA;AACe,yBAAyB,sDAAM;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA,YAAY,qCAAqC;AACjD,cAAc,QAAQ,YAAY,YAAY;AAC9C;AACA;AACA;AACA;;AAEA;;AAEA,0BAA0B,oDAAW,WAAW,gBAAgB;;AAEhE,gBAAgB,oBAAoB;AACpC;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,qDAAqD;AACpF;AACA;AACA;AACA,sDAAsD,sBAAsB;AAC5E;AACA;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc,qCAAqC;AACnD;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,GAAG,qEAAsB;AACzB;;AAEA;AACA,GAAG,qEAAsB;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6DAA6D,iBAAiB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,mBAAmB;AAC/B;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,8DAAa;AAC1B;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI,qEAAsB;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6BAA6B,oDAAW,WAAW,uBAAuB;;AAE1E;AACA;;AAEA,iBAAiB,2CAA2C;AAC5D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,yBAAyB;AACpD;;AAEA;;AAEA,6BAA6B,mCAAmC;AAChE;AACA;;AAEA;AACA;AACA,MAAM,mEAAoB,0CAA0C,UAAU;AAC9E;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,gEAAgE,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,oCAAoC;AACpC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,2BAA2B,oDAAW,WAAW,0CAA0C;;AAE3F;AACA,YAAY,oEAAoE;;AAEhF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,kBAAkB;AAC1C;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,iBAAiB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,8DAAa;AAC1B;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,2BAA2B;;AAEtC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,YAAY;AACnC;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC,IAAI,qEAAsB;AAC1B;;AAEA;AACA;;AAEA;AACA,SAAS,oEAAkB;AAC3B;AACA;AACA,IAAI,iEAAe;AACnB;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,oBAAoB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,aAAa;;AAE/C,wCAAwC,6BAA6B;AACrE,kBAAkB,0BAA0B,YAAY,oDAAW;AACnE;AACA;AACA,MAAM,qEAAsB;AAC5B,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,iEAAe;AACxB;AACA;AACA,IAAI,oEAAkB;AACtB;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,4BAA4B;;AAExC,IAAI,qEAAsB;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B,oDAAW;;AAEzC;AACA,YAAY,0BAA0B,qBAAqB,OAAO;;AAElE;AACA,+CAA+C,0BAA0B;AACzE;AACA;;AAEA;AACA,MAAM;;AAEN;AACA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK,qEAAsB;AAC3B;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,oDAAW;AACzC;AACA;AACA;AACA,MAAM;;AAEN;AACA,YAAY,4BAA4B;;AAExC,IAAI,qEAAsB;;AAE1B,YAAY,qBAAqB,qBAAqB,OAAO;;AAE7D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,cAAc;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,oDAAW,WAAW,oCAAoC;;AAExF;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,KAAK,qEAAsB;AAC3B;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ,WAAW;AAC/B,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA,wCAAwC;AACxC,aAAa,oDAAW;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,wCAAwC;AAC7C;AACA,YAAY,yCAAyC;AACrD,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,6CAA6C;AAClD;AACA;AACA,KAAK,6BAA6B;AAClC;AACA,YAAY,yCAAyC;AACrD,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK,6DAA6D;AAClE;AACA,cAAc,yCAAyC;AACvD,KAAK,6BAA6B;AAClC;AACA,YAAY,yCAAyC;AACrD,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,oCAAoC,QAAQ,MAAM,MAAM;AACxD;AACA,WAAW,6CAA6C;AACxD,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA,uCAAuC,QAAQ,MAAM,MAAM;AAC3D;AACA,WAAW,6CAA6C;AACxD,aAAa,QAAQ;AACrB;AACA;AACA;AACA,4BAA4B,oDAAW;;AAEvC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,6CAA6C;AACxD,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,cAAc;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,4CAA4C;AACxD,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6CAA6C;AACzD,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,6BAA6B,aAAa;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,qCAAqC;AAChD,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,4FAA4F;AAC5F,kBAAkB,UAAU;AAC5B;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,mCAAmC;AAC9C,WAAW,uCAAuC;AAClD,qEAAqE;AACrE,kBAAkB,WAAW;AAC7B,EAAE,mEAAoB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,cAAc;AACd;AACA;AACA,WAAW;AACX;;AAEA;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,qEAAsB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,gCAAgC,OAAO,oDAAW,WAAW,eAAe;AAC3F;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,UAAU;AACV;;AAEA;AACA,yBAAyB,oDAAW;AACpC;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA,eAAe,yBAAyB;AACxC;AACA,WAAW,4BAA4B;;AAEvC;AACA;AACA;;AAEA;AACA,GAAG,qEAAsB;;AAEzB;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACtuCA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,gBAAgB;AAC4B;;AAExE;AACA;AACA,IAAI,0CAA0C;AAC9C;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0CAA0C;AACnD;AACA;AACA;AACA,mDAAmD,yBAAyB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gCAAgC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ,WAAW;AAC/B,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,SAAS;AACrB;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,6DAA6D,yBAAyB;AACtF;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uCAAuC,eAAe;AACtD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,eAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,mCAAmC;AACxE,4CAA4C,yCAAyC;AACrF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,4CAA4C;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sCAAsC;AAClD,YAAY,qCAAqC;AACjD,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,6CAA6C;AAC9D;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA,sCAAsC;AACtC,oCAAoC;AACpC,oCAAoC;AACpC,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;;;;;;;;;;;;;;;;;;;;AC7jBA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE+H;AACpF;AAC0B;;AAEjC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACe,6BAA6B,kDAAI;AAChD;AACA;AACA;AACA,YAAY,4BAA4B;AACxC,YAAY,QAAQ;AACpB,YAAY,uDAAuD;AACnE;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,6DAAY;;AAEtC;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,yBAAyB,4DAAc;;AAEvC;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,yBAAyB,qDAAqD;AAC9E;AACA;AACA,cAAc;AACd;AACA,wBAAwB,iEAAgB;;AAExC;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,yDAAW;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gEAAc;AACjC,2BAA2B,kDAAI;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C,sDAAsD;AACjG;AACA;AACA,cAAc,iDAAiD,oCAAoC,iBAAiB;AACpH;AACA;AACA;AACA,wBAAwB,2DAAa;;AAErC;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wDAAU;AAC1C;AACA;;AAEA;AACA;AACA,2BAA2B,4DAAY;AACvC;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA,sDAAsD,oBAAoB;AAC1E;AACA;AACA;AACA;AACA,wBAAwB,2DAAa;AACrC;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA,UAAU,iBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChYA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEwC;;AAEP;;AAEjC;AACA;AACA,YAAY,0FAA0F;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACe,0BAA0B,kDAAI;AAC7C;AACA;AACA;AACA,YAAY,4BAA4B;AACxC,YAAY,QAAQ;AACpB,YAAY,6BAA6B;AACzC,YAAY,QAAQ;AACpB,YAAY,qBAAqB;AACjC;AACA;AACA,mCAAmC;AACnC;;AAEA;;AAEA;AACA,2CAA2C,eAAe;AAC1D;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qEAAqE,eAAe;AACpF;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA,gFAAgF,eAAe;AAC/F;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;;;;;;;;;;;;;;;;;;ACtGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgF;;AAEX;;AAE9B;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,8BAA8B,kDAAI;AACjD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,wBAAwB,iEAAgB;;AAExC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,0BAA0B,6DAAY;;AAEtC;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA,gEAAgE,OAAO,KAAK,SAAS;;AAErF;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA,MAAM;AACN;AACA,IAAI;;AAEJ;AACA;AACA,WAAW,cAAc;AACzB;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,cAAc;;AAEzB;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,4EAA0B;AAC5B;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,YAAY,4BAA4B;AACxC,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,cAAc;AACd;AACA;AACA,qBAAqB,wDAAU;;AAE/B;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA,cAAc,yCAAyC;AACvD;AACA;AACA;;AAEA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA,qBAAqB,UAAU,KAAK,YAAY;;AAEhD;AACA;;AAEA;AACA;;AAEA;AACA,gDAAgD,8BAA8B;AAC9E;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACjQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEmG;;AAEnG;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,WAAW,+BAA+B;AAC1C,WAAW,mCAAmC;AAC9C,WAAW,GAAG;AACd;AACO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,uCAAuC;AAClD,WAAW,QAAQ;AACnB,aAAa,qCAAqC;AAClD;AACO,uEAAuE;AAC9E;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,qCAAqC;AAChD,aAAa;AACb;AACO;AACP;AACA;AACA,SAAS,SAAS;;AAElB;AACA;;AAEA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C,WAAW,gDAAgD;AAC3D,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB;AACO;AACP,SAAS,iBAAiB;;AAE1B;AACA;AACA,GAAG;;AAEH,CAAC,mFAAsB,gBAAgB,uCAAuC;AAC9E,CAAC,qFAAwB,gBAAgB,wCAAwC;AACjF;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyC;AAC+B;;AAExE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,mCAAmC;AAC9C,aAAa;AACb;AACO;AACP,SAAS,2CAA2C;;AAEpD;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA,2BAA2B,oDAAW,iBAAiB,kEAAkE;;AAEzH;AACA,eAAe,mGAAmG;AAClH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAoB;AACxB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;;AAEA,yBAAyB,oDAAW,WAAW,mCAAmC;;AAElF;AACA,UAAU,kBAAkB;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,QAAQ;AACnB,WAAW,mCAAmC;AAC9C,aAAa,qCAAqC;AAClD;AACO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,oDAAW,WAAW,0CAA0C;;AAE3F;AACA;;AAEA;AACA,UAAU,oBAAoB;;AAE9B;AACA;AACA;;AAEA;AACA,aAAa,6DAAoB;AACjC;AACA;;AAEA;AACA,CAAC,+DAAsB;;AAEvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;;AAEA,yBAAyB,oDAAW;;AAEpC;AACA,UAAU,oBAAoB;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,mCAAmC;AAC9C,aAAa,qCAAqC;AAClD;AACO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,iBAAiB,6DAAoB;;AAErC;AACA,CAAC,+DAAsB;;AAEvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,mCAAmC;AAC9C;AACO;AACP;AACA;;AAEA;;AAEA;AACA;;AAEA,EAAE,+DAAsB;AACxB;;AAEA;;AAEA;AACA;;AAEA,EAAE,+DAAsB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE,+DAAsB;AACxB;;AAEA;;AAEA;AACA;AACA,EAAE,+DAAsB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,oFAAoF;AAC5H;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,oCAAoC;AAC/C,aAAa,SAAS;AACtB;AACO;AACP;AACA;;AAEA,eAAe,SAAS,OAAO,oDAAW;AAC1C;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA,mEAAmE,aAAa;AAChF,qCAAqC,kBAAkB;;AAEvD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,8EAA8E;AACnH;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,oCAAoC;AAC/C,aAAa,SAAS;AACtB;AACO;AACP;AACA;;AAEA,yBAAyB,0BAA0B;AACnD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gEAAgE,UAAU;AAC1E,kCAAkC,eAAe;;AAEjD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+EAA+E;AACrH,IAAI,qFAAqF;AACzF;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,oCAAoC;AAC/C;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACO;AACP,oCAAoC,oDAAW;AAC/C;AACA;AACA;AACA,GAAG;;AAEH,yDAAyD,aAAa;;AAEtE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACO;AACP,uCAAuC,oDAAW;AAClD;AACA;AACA;AACA,GAAG;;AAEH,4DAA4D,YAAY;;AAExE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/hBA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uDAAuD;AAC7E;AACA;AACA;AACA,sBAAsB,uDAAuD;AAC7E,sBAAsB,2BAA2B;AACjD;AACA;AACA,aAAa;AACb;AACO;AACP,0BAA0B,qDAAQ;AAClC;AACA;;AAEA,SAAS,2BAA2B;;AAEpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,iCAAiC;AACjC,oCAAoC;AACpC,mCAAmC;AACnC;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,cAAc,GAAG,aAAa;AAC1C;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ,WAAW;AAC9B,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa;AACb;AACO,8DAA8D;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;AC1GA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE2C;AACS;;AAEF;;AAElD,kCAAkC,+EAAiC;;AAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,sFAAsF;AAC1F;AACA;AACA,WAAW,kCAAkC;AAC7C,WAAW,QAAQ;AACnB;AACA;AACO;AACP;;AAEA,MAAM,+DAAsB;AAC5B;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI,sFAAsF;AAC1F;AACA;AACA,WAAW,kCAAkC;AAC7C,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,sFAAsF;AAC1F;AACA;AACA,WAAW,kCAAkC;AAC7C,aAAa;AACb;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,uCAAuC;AAClD,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,4CAA4C;AACvD,WAAW,kCAAkC;AAC7C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qDAAI;AACjB,GAAG;;AAEH,QAAQ,qEAAoB;AAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5HA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEqD;AACJ;AACsB;;AAElB;;AAErD;;AAEA;AACA;AACA,oBAAoB;AACpB,QAAQ,8EAA8E;AACtF;AACA,WAAW,8BAA8B;AACzC;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,8CAA8C;AACtD;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;;AAEA,4BAA4B,6DAAO;AACnC;;AAEA;AACA;AACA;AACA;AACA,QAAQ,+CAA+C;AACvD,QAAQ,mDAAmD;AAC3D;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;;AAEA,uDAAuD,8DAAQ,aAAa,kEAAY;AACxF;;AAEA;AACA;AACA;AACA;AACA,QAAQ,+CAA+C;AACvD;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;;AAEA,uDAAuD,8DAAQ;AAC/D;;AAEA;AACA;AACA;AACA,WAAW;AACX,4EAA4E;AAC5E,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP,6BAA6B,2DAAU;AACvC;;AAEA;AACA;AACA;AACA,cAAc,mDAAK;AACnB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW;AACX,4EAA4E;AAC5E,WAAW,gBAAgB;AAC3B,WAAW,2CAA2C;AACtD,WAAW,wBAAwB;AACnC,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACO;AACP,SAAS,wEAAwE;AACjF;AACA,qBAAqB,wDAAU;;AAE/B;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA,OAAO,oFAAoF;AAC3F,IAAI,uEAAuE;AAC3E;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,iEAAiE;AACrE,MAAM,6EAA6E;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,WAAW,qCAAqC;AAChD;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACO;AACP;AACA,6BAA6B,0DAAc;AAC3C;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,WAAW,gBAAgB;AAC3B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;;;;;;AClaA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEgD;;AAEhD;AACA;AACA;AACA,WAAW,+FAA+F;AAC1G,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,+FAA+F;AAC1G,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,oCAAoC;AAC/C,aAAa;AACb;AACA,sDAAsD,8DAAQ;AAC9D;;;;;;;;;;;AC3DA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;ACAwC;AACV;;AAE9B;AACA,eAAe,yDAAS,CAAC,gDAAI;;AAE7B,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;;;;;ACNgB;AACE;AACN;AACA;AACA;;AAEpC;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;A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ACb;;AAE7B;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA,mBAAmB,0DAAU,SAAS,oDAAI;AAC1C;;AAEA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;AChBgB;AACT;;AAEjC;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA,mBAAmB,0DAAU,SAAS,sDAAM;AAC5C;;AAEA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;AChBsB;;AAElD;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd;AACA;AACA,4BAA4B,0DAAc;AAC1C,IAAI,8DAAc;AAClB;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA,iEAAe,eAAe,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBC;AACQ;AACI;AACF;AACI;AACF;AACJ;AACI;AACI;AACN;AACI;AACZ;AACgB;AACA;AACE;AACjB;AACE;AACN;AACM;AACN;AACF;AACI;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,SAAS;AACpB;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,wDAAQ;AACf;AACA;AACA,cAAc,uDAAO;AACrB;AACA,aAAa,8DAAc;A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A;AACA;AACA;AACA;AACA;AACA,0BAA0B,iDAAK;AAC/B,wBAAwB,4DAAY;AACpC,QAAQ,2DAAW;AACnB,QAAQ,0DAAU;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,iDAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iDAAK;AAC7B,SAAS,4DAAY;AACrB;;AAEA,iEAAe,eAAe,EAAC;;;;;;;;;;;;;;;;;;AClFG;AACW;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,SAAS,4DAAY,WAAW,sDAAM;AACtC;;AAEA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;;;ACjBgB;AACH;AACD;AACC;;AAEtC;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA,OAAO,wDAAQ,WAAW,wDAAQ;AAClC;AACA;AACA,gBAAgB,0DAAU;AAC1B,sBAAsB,wDAAQ;AAC9B;;AAEA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;;AC9CM;AACW;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,SAAS,4DAAY,WAAW,sDAAM;AACtC;;AAEA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;;ACjBiB;AACL;AACQ;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,SAAS,4DAAY;AACrB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CA;;AAEA;AACA;AACA;;AAEA,iBAAiB,8DAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;ACpC9B;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;;;ACxBW;;AAExC;AACA;AACA,eAAe,yDAAS;AACxB,WAAW,QAAQ;AACnB;AACA,IAAI;AACJ,CAAC;;AAED,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;;;;ACVQ;AACE;AACF;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,oDAAQ;;AAE9D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yDAAS;AACpB,iBAAiB,wDAAQ;AACzB;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;;;;;;;ACnFO;AACQ;AACjB;AACmB;AACF;AACA;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,kDAAM,GAAG,4DAAgB;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,sDAAU,cAAc,sDAAU;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,kDAAE;;AAEf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,sDAAU;;AAE9B;AACA;AACA,4BAA4B,sDAAU;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,2DAAW;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;AC/GgB;;AAE1C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA,iBAAiB,0DAAU;AAC3B;AACA,iBAAiB,0DAAU;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;ACzF5B;AACA;;AAEA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;ACHwB;AACR;AACb;;AAE7B;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;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;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA,MAAM,wDAAY;AAClB;AACA;AACA;AACA;AACA;;AAEA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;AC7BuB;;AAE9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA,SAAS,wDAAY;AACrB;;AAEA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;ACtBuB;;AAE9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,eAAe,wDAAY;AAC3B;AACA;;AAEA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;ACtBvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;;;;;;ACzBwB;AACN;AACJ;AACA;AACQ;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAgB;;AAE7B;AACA;AACA;;AAEA;AACA,aAAa,6DAAa;;AAE1B;AACA;AACA;AACA,aAAa,+DAAe;;AAE5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,2DAAW;;AAExB;AACA;;AAEA;AACA,aAAa,2DAAW;AACxB;AACA;;AAEA,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;;;;AC5EY;AACI;A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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA;AACA,oBAAoB,QAAQ,IAAI,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yDAAS;AAClB;;AAEA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;ACnCrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,UAAU;AACvB;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA,YAAY,QAAQ,IAAI,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;;;ACzBa;AACV;AACU;;AAErC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,QAAQ,WAAW;AAC9B,WAAW,SAAS;AACpB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,SAAS;AACpB;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,+CAA+C,iBAAiB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,wDAAQ;AACjB,MAAM,wDAAQ;AACd;AACA;AACA,iCAAiC,wDAAQ;AACzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,mDAAG;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,mDAAG;AAC5D;;AAEA;AACA,eAAe,mDAAG;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;AC9LxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,kBAAkB;AAClB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,EAAE,EAAC;;;;;;;;;;;;;;;;;ACpCkB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA,kBAAkB,QAAQ,OAAO,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uDAAO;AACnD;AACA;;AAEA,iEAAe,GAAG,EAAC;;;;;;;;;;;;;;;;AChCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;;ACpB4B;AACP;;AAE7C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;AACA;AACA,kBAAkB,+DAAe,cAAc,mBAAmB,MAAM,2DAAe;AACvF,SAAS,4DAAY;AACrB;AACA;;AAEA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;ACnC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;;ACzBkB;AACJ;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wDAAQ,mBAAmB,0DAAU;AAC/D;;AAEA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;;;AChCgB;AACE;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4DAAY,WAAW,2DAAW;AAC3C;;AAEA,iEAAe,iBAAiB,EAAC;;;;;;;;;;;;;;;;;;AChCH;AACS;;AAEvC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,uDAAW;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAS;;AAE1C,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;ACrCoB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAW;AAC3C;;AAEA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;;;ACxCe;AACL;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,wDAAQ;AACf;AACA;AACA;AACA;AACA,YAAY,0DAAU;AACtB;AACA;;AAEA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;ACpC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;;;AClCgB;AACA;AACF;;AAEtC;AACA,gBAAgB,oDAAQ,IAAI,0DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yDAAS,cAAc,qDAAS;;AAExD,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;AC1BrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;AC9BxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;;;AC5Bc;AACI;AACD;;AAE7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,4DAAY,WAAW,0DAAU;AACxC;AACA;AACA,cAAc,4DAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;;;;;AC7DW;AACA;AACF;;AAEtC;AACA,gBAAgB,oDAAQ,IAAI,0DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yDAAS,cAAc,qDAAS;;AAExD,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;;;AC1BqB;AACP;AACU;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uDAAO,WAAW,4DAAY,WAAW,0DAAU;AACzD;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;;AC7BkB;AACG;;AAE7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,4DAAY,WAAW,0DAAU;AACtC;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;;;AC5B8B;AACd;AACF;;AAEtC;AACA,uBAAuB,oDAAQ,IAAI,iEAAqB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,yDAAS,qBAAqB,4DAAgB;;AAEpF,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;;;AC1BoB;AACV;AACK;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,2DAAW,WAAW,6DAAa,WAAW,wDAAQ;AAC/D;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;;;;ACpC4B;AACN;AACC;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,2DAAW,WAAW,6DAAa,iBAAiB,0DAAU;AACvE;;AAEA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;AC/BtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;;ACnBkB;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA,kBAAkB;AAClB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,oDAAQ;AACjD;AACA;;AAEA;AACA,gBAAgB,oDAAQ;;AAExB,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;;ACxEiB;AACU;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,WAAW;AACtB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,aAAa,QAAQ,IAAI,QAAQ;AACjC;AACA;AACA;AACA,aAAa,QAAQ,IAAI,QAAQ;AACjC;AACA;AACA;AACA,WAAW,QAAQ,gBAAgB,IAAI,gBAAgB;AACvD;AACA,YAAY,8DAAc;AAC1B,EAAE,yDAAS;AACX,CAAC;;AAED,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;ACtCS;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,SAAS,yDAAa;AACtB;;AAEA,iEAAe,GAAG,EAAC;;;;;;;;;;;;;;;;;ACtBiB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA,kBAAkB,QAAQ,OAAO,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uDAAO;AAC1C;;AAEA,iEAAe,GAAG,EAAC;;;;;;;;;;;;;;;;AClCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;ACtBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;ACjBY;AACA;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,QAAQ,WAAW;AAC9B,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,mBAAmB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,wDAAQ;AACd;AACA;AACA;AACA,SAAS,wDAAQ;AACjB;AACA;AACA;AACA,GAAG;AACH;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;;;ACpEc;AACD;AACA;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,wDAAQ;AACd;AACA;AACA,MAAM,wDAAQ;AACd;AACA,YAAY,wDAAQ;AACpB;AACA;AACA;AACA;AACA,UAAU,wDAAQ;AAClB;AACA;AACA;AACA;AACA;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;;AC/DkB;AACT;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,WAAW;AACX;AACA,cAAc,QAAQ;AACtB,WAAW;AACX;AACA;AACA,SAAS,0DAAU,QAAQ,sDAAM;AACjC;;AAEA,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;;;AC/BiB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAY;AAC1C;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;AC3BgB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;AACA;AACA,kBAAkB,QAAQ,OAAO,UAAU;AAC3C;AACA;AACA;AACA;AACA,WAAW,QAAQ,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ,SAAS;AAC5B;AACA;AACA,iCAAiC,yDAAS;AAC1C;;AAEA,iEAAe,KAAK,EAAC;;;;;;;UCjCrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEiE;AACtB;AACc;AACV;AACU;AACc;AACkC;AACV;AACL;AAC3B;AAC8B;AACV;AAC1B;AAC2B;AACV;AACb;AACR;AACM;AACE;AACR;AACc;AACgC","file":"table.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ck.ck-editor__editable span[data-ck-unsafe-element]{display:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ckeditor5-engine/theme/renderer.css\"],\"names\":[],\"mappings\":\"AAMA,qDACC,YACD\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n/* Elements marked by the Renderer as hidden should be invisible in the editor. */\\n.ck.ck-editor__editable span[data-ck-unsafe-element] {\\n\\tdisplay: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ck.ck-input-color{display:flex;flex-direction:row-reverse;width:100%}.ck.ck-input-color>input.ck.ck-input-text{flex-grow:1;min-width:auto}.ck.ck-input-color>div.ck.ck-dropdown{min-width:auto}.ck.ck-input-color>div.ck.ck-dropdown>.ck-input-color__button .ck-dropdown__arrow{display:none}.ck.ck-input-color .ck.ck-input-color__button{display:flex}.ck.ck-input-color .ck.ck-input-color__button .ck.ck-input-color__button__preview{overflow:hidden;position:relative}.ck.ck-input-color .ck.ck-input-color__button .ck.ck-input-color__button__preview>.ck.ck-input-color__button__preview__no-color-indicator{display:block;position:absolute}[dir=ltr] .ck.ck-input-color>.ck.ck-input-text{border-bottom-right-radius:0;border-top-right-radius:0}[dir=rtl] .ck.ck-input-color>.ck.ck-input-text{border-bottom-left-radius:0;border-top-left-radius:0}.ck.ck-input-color>.ck.ck-input-text:focus{z-index:0}.ck.ck-input-color>.ck.ck-dropdown>.ck.ck-button.ck-input-color__button{padding:0}[dir=ltr] .ck.ck-input-color>.ck.ck-dropdown>.ck.ck-button.ck-input-color__button{border-bottom-left-radius:0;border-top-left-radius:0}[dir=ltr] .ck.ck-input-color>.ck.ck-dropdown>.ck.ck-button.ck-input-color__button:not(:focus){border-left:1px solid transparent}[dir=rtl] .ck.ck-input-color>.ck.ck-dropdown>.ck.ck-button.ck-input-color__button{border-bottom-right-radius:0;border-top-right-radius:0}[dir=rtl] .ck.ck-input-color>.ck.ck-dropdown>.ck.ck-button.ck-input-color__button:not(:focus){border-right:1px solid transparent}.ck.ck-input-color>.ck.ck-dropdown>.ck.ck-button.ck-input-color__button.ck-disabled{background:var(--ck-color-input-disabled-background)}.ck.ck-input-color>.ck.ck-dropdown>.ck.ck-button.ck-input-color__button>.ck.ck-input-color__button__preview{border-radius:0}.ck-rounded-corners .ck.ck-input-color>.ck.ck-dropdown>.ck.ck-button.ck-input-color__button>.ck.ck-input-color__button__preview,.ck.ck-input-color>.ck.ck-dropdown>.ck.ck-button.ck-input-color__button>.ck.ck-input-color__button__preview.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-input-color>.ck.ck-dropdown>.ck.ck-button.ck-input-color__button>.ck.ck-input-color__button__preview{border:1px solid var(--ck-color-input-border);height:20px;width:20px}.ck.ck-input-color>.ck.ck-dropdown>.ck.ck-button.ck-input-color__button>.ck.ck-input-color__button__preview>.ck.ck-input-color__button__preview__no-color-indicator{background:red;border-radius:2px;height:150%;left:50%;top:-30%;transform:rotate(45deg);transform-origin:50%;width:8%}.ck.ck-input-color .ck.ck-input-color__remove-color{border-bottom-left-radius:0;border-bottom-right-radius:0;padding:calc(var(--ck-spacing-standard)/2) var(--ck-spacing-standard);width:100%}.ck.ck-input-color .ck.ck-input-color__remove-color:not(:focus){border-bottom:1px solid var(--ck-color-input-border)}[dir=ltr] .ck.ck-input-color .ck.ck-input-color__remove-color{border-top-right-radius:0}[dir=rtl] .ck.ck-input-color .ck.ck-input-color__remove-color{border-top-left-radius:0}.ck.ck-input-color .ck.ck-input-color__remove-color .ck.ck-icon{margin-right:var(--ck-spacing-standard)}[dir=rtl] .ck.ck-input-color .ck.ck-input-color__remove-color .ck.ck-icon{margin-left:var(--ck-spacing-standard);margin-right:0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./theme/colorinput.css\",\"webpack://./../ckeditor5-theme-lark/theme/ckeditor5-table/colorinput.css\",\"webpack://./../ckeditor5-theme-lark/theme/mixins/_rounded.css\"],\"names\":[],\"mappings\":\"AAKA,mBAEC,YAAa,CACb,0BAA2B,CAF3B,UAgCD,CA5BC,0CAEC,WAAY,CADZ,cAED,CAEA,sCACC,cAMD,CAHC,kFACC,YACD,CAGD,8CAEC,YAWD,CATC,kFAEC,eAAgB,CADhB,iBAOD,CAJC,0IAEC,aAAc,CADd,iBAED,CC1BF,+CAGE,4BAA6B,CAD7B,yBAcF,CAhBA,+CAQE,2BAA4B,CAD5B,wBASF,CAHC,2CACC,SACD,CAIA,wEACC,SA0CD,CA3CA,kFAKE,2BAA4B,CAD5B,wBAuCF,CApCE,8FACC,iCACD,CATF,kFAcE,4BAA6B,CAD7B,yBA8BF,CA3BE,8FACC,kCACD,CAGD,oFACC,oDACD,CAEA,4GC1CF,eD2DE,CAjBA,+PCtCD,qCDuDC,CAjBA,4GAKC,6CAA8C,CAD9C,WAAY,CADZ,UAcD,CAVC,oKAKC,cAA6B,CAC7B,iBAAkB,CAHlB,WAAY,CADZ,QAAS,CADT,QAAS,CAMT,uBAAwB,CACxB,oBAAqB,CAJrB,QAKD,CAKH,oDAIC,2BAA4B,CAC5B,4BAA6B,CAH7B,qEAAwE,CADxE,UA0BD,CApBC,gEACC,oDACD,CATD,8DAYE,yBAeF,CA3BA,8DAgBE,wBAWF,CARC,gEACC,uCAMD,CAPA,0EAKE,sCAAuC,CADvC,cAGF\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n.ck.ck-input-color {\\n\\twidth: 100%;\\n\\tdisplay: flex;\\n\\tflex-direction: row-reverse;\\n\\n\\t& > input.ck.ck-input-text {\\n\\t\\tmin-width: auto;\\n\\t\\tflex-grow: 1;\\n\\t}\\n\\n\\t& > div.ck.ck-dropdown {\\n\\t\\tmin-width: auto;\\n\\n\\t\\t/* This dropdown has no arrow but a color preview instead. */\\n\\t\\t& > .ck-input-color__button .ck-dropdown__arrow {\\n\\t\\t\\tdisplay: none;\\n\\t\\t}\\n\\t}\\n\\n\\t& .ck.ck-input-color__button {\\n\\t\\t/* Resolving issue with misaligned buttons on Safari (see #10589) */\\n\\t\\tdisplay: flex;\\n\\n\\t\\t& .ck.ck-input-color__button__preview {\\n\\t\\t\\tposition: relative;\\n\\t\\t\\toverflow: hidden;\\n\\n\\t\\t\\t& > .ck.ck-input-color__button__preview__no-color-indicator {\\n\\t\\t\\t\\tposition: absolute;\\n\\t\\t\\t\\tdisplay: block;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\",\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n@import \\\"@ckeditor/ckeditor5-ui/theme/mixins/_dir.css\\\";\\n@import \\\"../mixins/_rounded.css\\\";\\n\\n.ck.ck-input-color {\\n\\t& > .ck.ck-input-text {\\n\\t\\t@mixin ck-dir ltr {\\n\\t\\t\\tborder-top-right-radius: 0;\\n\\t\\t\\tborder-bottom-right-radius: 0;\\n\\t\\t}\\n\\n\\t\\t@mixin ck-dir rtl {\\n\\t\\t\\tborder-top-left-radius: 0;\\n\\t\\t\\tborder-bottom-left-radius: 0;\\n\\t\\t}\\n\\n\\t\\t/* Make sure the focused input is always on top of the dropdown button so its\\n\\t\\t   outline and border are never cropped (also when the input is read-only). */\\n\\t\\t&:focus {\\n\\t\\t\\tz-index: 0;\\n\\t\\t}\\n\\t}\\n\\n\\t& > .ck.ck-dropdown {\\n\\t\\t& > .ck.ck-button.ck-input-color__button {\\n\\t\\t\\tpadding: 0;\\n\\n\\t\\t\\t@mixin ck-dir ltr {\\n\\t\\t\\t\\tborder-top-left-radius: 0;\\n\\t\\t\\t\\tborder-bottom-left-radius: 0;\\n\\n\\t\\t\\t\\t&:not(:focus) {\\n\\t\\t\\t\\t\\tborder-left: 1px solid transparent;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t@mixin ck-dir rtl {\\n\\t\\t\\t\\tborder-top-right-radius: 0;\\n\\t\\t\\t\\tborder-bottom-right-radius: 0;\\n\\n\\t\\t\\t\\t&:not(:focus) {\\n\\t\\t\\t\\t\\tborder-right: 1px solid transparent;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t&.ck-disabled {\\n\\t\\t\\t\\tbackground: var(--ck-color-input-disabled-background);\\n\\t\\t\\t}\\n\\n\\t\\t\\t& > .ck.ck-input-color__button__preview {\\n\\t\\t\\t\\t@mixin ck-rounded-corners;\\n\\n\\t\\t\\t\\twidth: 20px;\\n\\t\\t\\t\\theight: 20px;\\n\\t\\t\\t\\tborder: 1px solid var(--ck-color-input-border);\\n\\n\\t\\t\\t\\t& > .ck.ck-input-color__button__preview__no-color-indicator {\\n\\t\\t\\t\\t\\ttop: -30%;\\n\\t\\t\\t\\t\\tleft: 50%;\\n\\t\\t\\t\\t\\theight: 150%;\\n\\t\\t\\t\\t\\twidth: 8%;\\n\\t\\t\\t\\t\\tbackground: hsl(0, 100%, 50%);\\n\\t\\t\\t\\t\\tborder-radius: 2px;\\n\\t\\t\\t\\t\\ttransform: rotate(45deg);\\n\\t\\t\\t\\t\\ttransform-origin: 50%;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t& .ck.ck-input-color__remove-color {\\n\\t\\twidth: 100%;\\n\\t\\tpadding: calc(var(--ck-spacing-standard) / 2) var(--ck-spacing-standard);\\n\\n\\t\\tborder-bottom-left-radius: 0;\\n\\t\\tborder-bottom-right-radius: 0;\\n\\n\\t\\t&:not(:focus) {\\n\\t\\t\\tborder-bottom: 1px solid var(--ck-color-input-border);\\n\\t\\t}\\n\\n\\t\\t@mixin ck-dir ltr {\\n\\t\\t\\tborder-top-right-radius: 0;\\n\\t\\t}\\n\\n\\t\\t@mixin ck-dir rtl {\\n\\t\\t\\tborder-top-left-radius: 0;\\n\\t\\t}\\n\\n\\t\\t& .ck.ck-icon {\\n\\t\\t\\tmargin-right: var(--ck-spacing-standard);\\n\\n\\t\\t\\t@mixin ck-dir rtl {\\n\\t\\t\\t\\tmargin-right: 0;\\n\\t\\t\\t\\tmargin-left: var(--ck-spacing-standard);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\",\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n/**\\n * Implements rounded corner interface for .ck-rounded-corners class.\\n *\\n * @see $ck-border-radius\\n */\\n@define-mixin ck-rounded-corners {\\n\\tborder-radius: 0;\\n\\n\\t@nest .ck-rounded-corners &,\\n\\t&.ck-rounded-corners {\\n\\t\\tborder-radius: var(--ck-border-radius);\\n\\t\\t@mixin-content;\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ck.ck-form{padding:0 0 var(--ck-spacing-large)}.ck.ck-form:focus{outline:none}.ck.ck-form .ck.ck-input-text{min-width:100%;width:0}.ck.ck-form .ck.ck-dropdown{min-width:100%}.ck.ck-form .ck.ck-dropdown .ck-dropdown__button:not(:focus){border:1px solid var(--ck-color-base-border)}.ck.ck-form .ck.ck-dropdown .ck-dropdown__button .ck-button__label{width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ckeditor5-theme-lark/theme/ckeditor5-table/form.css\"],\"names\":[],\"mappings\":\"AAKA,YACC,mCAyBD,CAvBC,kBAEC,YACD,CAEA,8BACC,cAAe,CACf,OACD,CAEA,4BACC,cAWD,CARE,6DACC,4CACD,CAEA,mEACC,UACD\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n.ck.ck-form {\\n\\tpadding: 0 0 var(--ck-spacing-large);\\n\\n\\t&:focus {\\n\\t\\t/* See: https://github.com/ckeditor/ckeditor5/issues/4773 */\\n\\t\\toutline: none;\\n\\t}\\n\\n\\t& .ck.ck-input-text {\\n\\t\\tmin-width: 100%;\\n\\t\\twidth: 0;\\n\\t}\\n\\n\\t& .ck.ck-dropdown {\\n\\t\\tmin-width: 100%;\\n\\n\\t\\t& .ck-dropdown__button {\\n\\t\\t\\t&:not(:focus) {\\n\\t\\t\\t\\tborder: 1px solid var(--ck-color-base-border);\\n\\t\\t\\t}\\n\\n\\t\\t\\t& .ck-button__label {\\n\\t\\t\\t\\twidth: 100%;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ck.ck-form__row{display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:space-between}.ck.ck-form__row>:not(.ck-label){flex-grow:1}.ck.ck-form__row.ck-table-form__action-row .ck-button-cancel,.ck.ck-form__row.ck-table-form__action-row .ck-button-save{justify-content:center}.ck.ck-form__row{padding:var(--ck-spacing-standard) var(--ck-spacing-large) 0}[dir=ltr] .ck.ck-form__row>:not(.ck-label)+*{margin-left:var(--ck-spacing-large)}[dir=rtl] .ck.ck-form__row>:not(.ck-label)+*{margin-right:var(--ck-spacing-large)}.ck.ck-form__row>.ck-label{min-width:100%;width:100%}.ck.ck-form__row.ck-table-form__action-row{margin-top:var(--ck-spacing-large)}.ck.ck-form__row.ck-table-form__action-row .ck-button .ck-button__label{color:var(--ck-color-text)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./theme/formrow.css\",\"webpack://./../ckeditor5-theme-lark/theme/ckeditor5-table/formrow.css\"],\"names\":[],\"mappings\":\"AAKA,iBACC,YAAa,CACb,kBAAmB,CACnB,gBAAiB,CACjB,6BAaD,CAVC,iCACC,WACD,CAGC,wHAEC,sBACD,CCbF,iBACC,4DA2BD,CAvBE,6CAEE,mCAMF,CARA,6CAME,oCAEF,CAGD,2BAEC,cAAe,CADf,UAED,CAEA,2CACC,kCAKD,CAHC,wEACC,0BACD\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n.ck.ck-form__row {\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n\\tflex-wrap: nowrap;\\n\\tjustify-content: space-between;\\n\\n\\t/* Ignore labels that work as fieldset legends */\\n\\t& > *:not(.ck-label) {\\n\\t\\tflex-grow: 1;\\n\\t}\\n\\n\\t&.ck-table-form__action-row {\\n\\t\\t& .ck-button-save,\\n\\t\\t& .ck-button-cancel {\\n\\t\\t\\tjustify-content: center;\\n\\t\\t}\\n\\t}\\n}\\n\",\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n@import \\\"@ckeditor/ckeditor5-ui/theme/mixins/_dir.css\\\";\\n\\n.ck.ck-form__row {\\n\\tpadding: var(--ck-spacing-standard) var(--ck-spacing-large) 0;\\n\\n\\t/* Ignore labels that work as fieldset legends */\\n\\t& > *:not(.ck-label) {\\n\\t\\t& + * {\\n\\t\\t\\t@mixin ck-dir ltr {\\n\\t\\t\\t\\tmargin-left: var(--ck-spacing-large);\\n\\t\\t\\t}\\n\\n\\t\\t\\t@mixin ck-dir rtl {\\n\\t\\t\\t\\tmargin-right: var(--ck-spacing-large);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t& > .ck-label {\\n\\t\\twidth: 100%;\\n\\t\\tmin-width: 100%;\\n\\t}\\n\\n\\t&.ck-table-form__action-row {\\n\\t\\tmargin-top: var(--ck-spacing-large);\\n\\n\\t\\t& .ck-button .ck-button__label {\\n\\t\\t\\tcolor: var(--ck-color-text);\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ck .ck-insert-table-dropdown__grid{display:flex;flex-direction:row;flex-wrap:wrap}:root{--ck-insert-table-dropdown-padding:10px;--ck-insert-table-dropdown-box-height:11px;--ck-insert-table-dropdown-box-width:12px;--ck-insert-table-dropdown-box-margin:1px}.ck .ck-insert-table-dropdown__grid{padding:var(--ck-insert-table-dropdown-padding) var(--ck-insert-table-dropdown-padding) 0;width:calc(var(--ck-insert-table-dropdown-box-width)*10 + var(--ck-insert-table-dropdown-box-margin)*20 + var(--ck-insert-table-dropdown-padding)*2)}.ck .ck-insert-table-dropdown__label{text-align:center}.ck .ck-insert-table-dropdown-grid-box{border:1px solid var(--ck-color-base-border);border-radius:1px;margin:var(--ck-insert-table-dropdown-box-margin);min-height:var(--ck-insert-table-dropdown-box-height);min-width:var(--ck-insert-table-dropdown-box-width);outline:none;transition:none}.ck .ck-insert-table-dropdown-grid-box:focus{box-shadow:none}.ck .ck-insert-table-dropdown-grid-box.ck-on{background:var(--ck-color-focus-outer-shadow);border-color:var(--ck-color-focus-border)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./theme/inserttable.css\",\"webpack://./../ckeditor5-theme-lark/theme/ckeditor5-table/inserttable.css\"],\"names\":[],\"mappings\":\"AAKA,oCACC,YAAa,CACb,kBAAmB,CACnB,cACD,CCJA,MACC,uCAAwC,CACxC,0CAA2C,CAC3C,yCAA0C,CAC1C,yCACD,CAEA,oCAGC,yFAA0F,CAD1F,oJAED,CAEA,qCACC,iBACD,CAEA,uCAIC,4CAA6C,CAC7C,iBAAkB,CAFlB,iDAAkD,CADlD,qDAAsD,CADtD,mDAAoD,CAKpD,YAAa,CACb,eAUD,CARC,6CACC,eACD,CAEA,6CAEC,6CAA8C,CAD9C,yCAED\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n.ck .ck-insert-table-dropdown__grid {\\n\\tdisplay: flex;\\n\\tflex-direction: row;\\n\\tflex-wrap: wrap;\\n}\\n\",\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n:root {\\n\\t--ck-insert-table-dropdown-padding: 10px;\\n\\t--ck-insert-table-dropdown-box-height: 11px;\\n\\t--ck-insert-table-dropdown-box-width: 12px;\\n\\t--ck-insert-table-dropdown-box-margin: 1px;\\n}\\n\\n.ck .ck-insert-table-dropdown__grid {\\n\\t/* The width of a container should match 10 items in a row so there will be a 10x10 grid. */\\n\\twidth: calc(var(--ck-insert-table-dropdown-box-width) * 10 + var(--ck-insert-table-dropdown-box-margin) * 20 + var(--ck-insert-table-dropdown-padding) * 2);\\n\\tpadding: var(--ck-insert-table-dropdown-padding) var(--ck-insert-table-dropdown-padding) 0;\\n}\\n\\n.ck .ck-insert-table-dropdown__label {\\n\\ttext-align: center;\\n}\\n\\n.ck .ck-insert-table-dropdown-grid-box {\\n\\tmin-width: var(--ck-insert-table-dropdown-box-width);\\n\\tmin-height: var(--ck-insert-table-dropdown-box-height);\\n\\tmargin: var(--ck-insert-table-dropdown-box-margin);\\n\\tborder: 1px solid var(--ck-color-base-border);\\n\\tborder-radius: 1px;\\n\\toutline: none;\\n\\ttransition: none;\\n\\n\\t&:focus {\\n\\t\\tbox-shadow: none;\\n\\t}\\n\\n\\t&.ck-on {\\n\\t\\tborder-color: var(--ck-color-focus-border);\\n\\t\\tbackground: var(--ck-color-focus-outer-shadow);\\n\\t}\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ck-content .table{display:table;margin:.9em auto}.ck-content .table table{border:1px double #b3b3b3;border-collapse:collapse;border-spacing:0;height:100%;width:100%}.ck-content .table table td,.ck-content .table table th{border:1px solid #bfbfbf;min-width:2em;padding:.4em}.ck-content .table table th{background:rgba(0,0,0,.05);font-weight:700}.ck-content[dir=rtl] .table th{text-align:right}.ck-content[dir=ltr] .table th{text-align:left}.ck-editor__editable .ck-table-bogus-paragraph{display:inline-block;width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./theme/table.css\"],\"names\":[],\"mappings\":\"AAKA,mBAKC,aAAc,CADd,gBAiCD,CA9BC,yBAYC,yBAAkC,CAVlC,wBAAyB,CACzB,gBAAiB,CAKjB,WAAY,CADZ,UAsBD,CAfC,wDAQC,wBAAiC,CANjC,aAAc,CACd,YAMD,CAEA,4BAEC,0BAA+B,CAD/B,eAED,CAMF,+BACC,gBACD,CAEA,+BACC,eACD,CAEA,+CAKC,oBAAqB,CAMrB,UACD\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n.ck-content .table {\\n\\t/* Give the table widget some air and center it horizontally */\\n\\t/* The first value should be equal to --ck-spacing-large variable if used in the editor context\\n\\tto avoid the content jumping (See https://github.com/ckeditor/ckeditor5/issues/9825). */\\n\\tmargin: 0.9em auto;\\n\\tdisplay: table;\\n\\n\\t& table {\\n\\t\\t/* The table cells should have slight borders */\\n\\t\\tborder-collapse: collapse;\\n\\t\\tborder-spacing: 0;\\n\\n\\t\\t/* Table width and height are set on the parent <figure>. Make sure the table inside stretches\\n\\t\\tto the full dimensions of the container (https://github.com/ckeditor/ckeditor5/issues/6186). */\\n\\t\\twidth: 100%;\\n\\t\\theight: 100%;\\n\\n\\t\\t/* The outer border of the table should be slightly darker than the inner lines.\\n\\t\\tAlso see https://github.com/ckeditor/ckeditor5-table/issues/50. */\\n\\t\\tborder: 1px double hsl(0, 0%, 70%);\\n\\n\\t\\t& td,\\n\\t\\t& th {\\n\\t\\t\\tmin-width: 2em;\\n\\t\\t\\tpadding: .4em;\\n\\n\\t\\t\\t/* The border is inherited from .ck-editor__nested-editable styles, so theoretically it's not necessary here.\\n\\t\\t\\tHowever, the border is a content style, so it should use .ck-content (so it works outside the editor).\\n\\t\\t\\tHence, the duplication. See https://github.com/ckeditor/ckeditor5/issues/6314 */\\n\\t\\t\\tborder: 1px solid hsl(0, 0%, 75%);\\n\\t\\t}\\n\\n\\t\\t& th {\\n\\t\\t\\tfont-weight: bold;\\n\\t\\t\\tbackground: hsla(0, 0%, 0%, 5%);\\n\\t\\t}\\n\\t}\\n}\\n\\n/* Text alignment of the table header should match the editor settings and override the native browser styling,\\nwhen content is available outside the editor. See https://github.com/ckeditor/ckeditor5/issues/6638 */\\n.ck-content[dir=\\\"rtl\\\"] .table th {\\n\\ttext-align: right;\\n}\\n\\n.ck-content[dir=\\\"ltr\\\"] .table th {\\n\\ttext-align: left;\\n}\\n\\n.ck-editor__editable .ck-table-bogus-paragraph {\\n\\t/*\\n\\t * Use display:inline-block to force Chrome/Safari to limit text mutations to this element.\\n\\t * See https://github.com/ckeditor/ckeditor5/issues/6062.\\n\\t */\\n\\tdisplay: inline-block;\\n\\n\\t/*\\n\\t * Inline HTML elements nested in the span should always be dimensioned in relation to the whole cell width.\\n\\t * See https://github.com/ckeditor/ckeditor5/issues/9117.\\n\\t */\\n\\twidth: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--ck-color-table-caption-background:#f7f7f7;--ck-color-table-caption-text:#333;--ck-color-table-caption-highlighted-background:#fd0}.ck-content .table>figcaption{background-color:var(--ck-color-table-caption-background);caption-side:top;color:var(--ck-color-table-caption-text);display:table-caption;font-size:.75em;outline-offset:-1px;padding:.6em;text-align:center;word-break:break-word}.ck.ck-editor__editable .table>figcaption.table__caption_highlighted{animation:ck-table-caption-highlight .6s ease-out}.ck.ck-editor__editable .table>figcaption.ck-placeholder:before{overflow:hidden;padding-left:inherit;padding-right:inherit;text-overflow:ellipsis;white-space:nowrap}@keyframes ck-table-caption-highlight{0%{background-color:var(--ck-color-table-caption-highlighted-background)}to{background-color:var(--ck-color-table-caption-background)}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./theme/tablecaption.css\"],\"names\":[],\"mappings\":\"AAKA,MACC,2CAAoD,CACpD,kCAA8C,CAC9C,oDACD,CAGA,8BAMC,yDAA0D,CAJ1D,gBAAiB,CAGjB,wCAAyC,CAJzC,qBAAsB,CAOtB,eAAgB,CAChB,mBAAoB,CAFpB,YAAa,CAHb,iBAAkB,CADlB,qBAOD,CAIC,qEACC,iDACD,CAEA,gEASC,eAAgB,CARhB,oBAAqB,CACrB,qBAAsB,CAQtB,sBAAuB,CAFvB,kBAGD,CAGD,sCACC,GACC,qEACD,CAEA,GACC,yDACD,CACD\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n:root {\\n\\t--ck-color-table-caption-background: hsl(0, 0%, 97%);\\n\\t--ck-color-table-caption-text: hsl(0, 0%, 20%);\\n\\t--ck-color-table-caption-highlighted-background: hsl(52deg 100% 50%);\\n}\\n\\n/* Content styles */\\n.ck-content .table > figcaption {\\n\\tdisplay: table-caption;\\n\\tcaption-side: top;\\n\\tword-break: break-word;\\n\\ttext-align: center;\\n\\tcolor: var(--ck-color-table-caption-text);\\n\\tbackground-color: var(--ck-color-table-caption-background);\\n\\tpadding: .6em;\\n\\tfont-size: .75em;\\n\\toutline-offset: -1px;\\n}\\n\\n/* Editing styles */\\n.ck.ck-editor__editable .table > figcaption {\\n\\t&.table__caption_highlighted {\\n\\t\\tanimation: ck-table-caption-highlight .6s ease-out;\\n\\t}\\n\\n\\t&.ck-placeholder::before {\\n\\t\\tpadding-left: inherit;\\n\\t\\tpadding-right: inherit;\\n\\n\\t\\t/*\\n\\t\\t * Make sure the table caption placeholder doesn't overflow the placeholder area.\\n\\t\\t * See https://github.com/ckeditor/ckeditor5/issues/9162.\\n\\t\\t */\\n\\t\\twhite-space: nowrap;\\n\\t\\toverflow: hidden;\\n\\t\\ttext-overflow: ellipsis;\\n\\t}\\n}\\n\\n@keyframes ck-table-caption-highlight {\\n\\t0% {\\n\\t\\tbackground-color: var(--ck-color-table-caption-highlighted-background);\\n\\t}\\n\\n\\t100% {\\n\\t\\tbackground-color: var(--ck-color-table-caption-background);\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ck.ck-table-cell-properties-form .ck-form__row.ck-table-cell-properties-form__alignment-row{flex-wrap:wrap}.ck.ck-table-cell-properties-form .ck-form__row.ck-table-cell-properties-form__alignment-row .ck.ck-toolbar:first-of-type{flex-grow:0.57}.ck.ck-table-cell-properties-form .ck-form__row.ck-table-cell-properties-form__alignment-row .ck.ck-toolbar:last-of-type{flex-grow:0.43}.ck.ck-table-cell-properties-form .ck-form__row.ck-table-cell-properties-form__alignment-row .ck.ck-toolbar .ck-button{flex-grow:1}.ck.ck-table-cell-properties-form{width:320px}.ck.ck-table-cell-properties-form .ck-form__row.ck-table-cell-properties-form__padding-row{align-self:flex-end;padding:0;width:25%}.ck.ck-table-cell-properties-form .ck-form__row.ck-table-cell-properties-form__alignment-row .ck.ck-toolbar{background:none;margin-top:var(--ck-spacing-standard)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./theme/tablecellproperties.css\",\"webpack://./../ckeditor5-theme-lark/theme/ckeditor5-table/tablecellproperties.css\"],\"names\":[],\"mappings\":\"AAOE,6FACC,cAiBD,CAdE,0HAEC,cACD,CAEA,yHAEC,cACD,CAEA,uHACC,WACD,CClBJ,kCACC,WAkBD,CAfE,2FACC,mBAAoB,CACpB,SAAU,CACV,SACD,CAGC,4GACC,eAAgB,CAGhB,qCACD\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n.ck.ck-table-cell-properties-form {\\n\\t& .ck-form__row {\\n\\t\\t&.ck-table-cell-properties-form__alignment-row {\\n\\t\\t\\tflex-wrap: wrap;\\n\\n\\t\\t\\t& .ck.ck-toolbar {\\n\\t\\t\\t\\t&:first-of-type {\\n\\t\\t\\t\\t\\t/* 4 buttons out of 7 (h-alignment + v-alignment) = 0.57 */\\n\\t\\t\\t\\t\\tflex-grow: 0.57;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t&:last-of-type {\\n\\t\\t\\t\\t\\t/* 3 buttons out of 7 (h-alignment + v-alignment) = 0.43 */\\n\\t\\t\\t\\t\\tflex-grow: 0.43;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t& .ck-button {\\n\\t\\t\\t\\t\\tflex-grow: 1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\",\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n.ck.ck-table-cell-properties-form {\\n\\twidth: 320px;\\n\\n\\t& .ck-form__row {\\n\\t\\t&.ck-table-cell-properties-form__padding-row {\\n\\t\\t\\talign-self: flex-end;\\n\\t\\t\\tpadding: 0;\\n\\t\\t\\twidth: 25%;\\n\\t\\t}\\n\\n\\t\\t&.ck-table-cell-properties-form__alignment-row {\\n\\t\\t\\t& .ck.ck-toolbar {\\n\\t\\t\\t\\tbackground: none;\\n\\n\\t\\t\\t\\t/* Compensate for missing input label that would push the margin (toolbar has no inputs). */\\n\\t\\t\\t\\tmargin-top: var(--ck-spacing-standard);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--ck-color-table-column-resizer-hover:var(--ck-color-base-active);--ck-table-column-resizer-width:7px;--ck-table-column-resizer-position-offset:calc(var(--ck-table-column-resizer-width)*-0.5 - 0.5px)}.ck-content .table .ck-table-resized{table-layout:fixed}.ck-content .table table{overflow:hidden}.ck-content .table td,.ck-content .table th{position:relative}.ck.ck-editor__editable .table .ck-table-column-resizer{bottom:-999999px;cursor:col-resize;position:absolute;right:var(--ck-table-column-resizer-position-offset);top:-999999px;user-select:none;width:var(--ck-table-column-resizer-width);z-index:var(--ck-z-default)}.ck.ck-editor__editable .table[draggable] .ck-table-column-resizer,.ck.ck-editor__editable.ck-column-resize_disabled .table .ck-table-column-resizer{display:none}.ck.ck-editor__editable .table .ck-table-column-resizer:hover,.ck.ck-editor__editable .table .ck-table-column-resizer__active{background-color:var(--ck-color-table-column-resizer-hover);opacity:.25}.ck.ck-editor__editable[dir=rtl] .table .ck-table-column-resizer{left:var(--ck-table-column-resizer-position-offset);right:unset}\", \"\",{\"version\":3,\"sources\":[\"webpack://./theme/tablecolumnresize.css\"],\"names\":[],\"mappings\":\"AAKA,MACC,iEAAkE,CAClE,mCAAoC,CAIpC,iGACD,CAEA,qCACC,kBACD,CAEA,yBACC,eACD,CAEA,4CAEC,iBACD,CAEA,wDAOC,gBAAiB,CAGjB,iBAAkB,CATlB,iBAAkB,CAOlB,oDAAqD,CAFrD,aAAc,CAKd,gBAAiB,CAFjB,0CAA2C,CAG3C,2BACD,CAQA,qJACC,YACD,CAEA,8HAEC,2DAA4D,CAC5D,WACD,CAEA,iEACC,mDAAoD,CACpD,WACD\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n:root {\\n\\t--ck-color-table-column-resizer-hover: var(--ck-color-base-active);\\n\\t--ck-table-column-resizer-width: 7px;\\n\\n\\t/* The offset used for absolute positioning of the resizer element, so that it is placed exactly above the cell border.\\n\\t   The value is: minus half the width of the resizer decreased additionaly by the half the width of the border (0.5px). */\\n\\t--ck-table-column-resizer-position-offset: calc(var(--ck-table-column-resizer-width) * -0.5 - 0.5px);\\n}\\n\\n.ck-content .table .ck-table-resized {\\n\\ttable-layout: fixed;\\n}\\n\\n.ck-content .table table {\\n\\toverflow: hidden;\\n}\\n\\n.ck-content .table td,\\n.ck-content .table th {\\n\\tposition: relative;\\n}\\n\\n.ck.ck-editor__editable .table .ck-table-column-resizer {\\n\\tposition: absolute;\\n\\t/* The resizer element resides in each cell so to occupy the entire height of the table, which is unknown from a CSS point of view,\\n\\t   it is extended to an extremely high height. Even for screens with a very high pixel density, the resizer will fulfill its role as\\n\\t   it should, i.e. for a screen of 476 ppi the total height of the resizer will take over 350 sheets of A4 format, which is totally\\n\\t   unrealistic height for a single table. */\\n\\ttop: -999999px;\\n\\tbottom: -999999px;\\n\\tright: var(--ck-table-column-resizer-position-offset);\\n\\twidth: var(--ck-table-column-resizer-width);\\n\\tcursor: col-resize;\\n\\tuser-select: none;\\n\\tz-index: var(--ck-z-default);\\n}\\n\\n.ck.ck-editor__editable.ck-column-resize_disabled .table .ck-table-column-resizer {\\n\\tdisplay: none;\\n}\\n\\n/* The resizer elements, which are extended to an extremely high height, break the drag & drop feature in Chrome. To make it work again,\\n   all resizers must be hidden while the table is dragged. */\\n.ck.ck-editor__editable .table[draggable] .ck-table-column-resizer {\\n\\tdisplay: none;\\n}\\n\\n.ck.ck-editor__editable .table .ck-table-column-resizer:hover,\\n.ck.ck-editor__editable .table .ck-table-column-resizer__active {\\n\\tbackground-color: var(--ck-color-table-column-resizer-hover);\\n\\topacity: 0.25;\\n}\\n\\n.ck.ck-editor__editable[dir=rtl] .table .ck-table-column-resizer {\\n\\tleft: var(--ck-table-column-resizer-position-offset);\\n\\tright: unset;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--ck-color-table-focused-cell-background:rgba(158,201,250,.3)}.ck-widget.table td.ck-editor__nested-editable.ck-editor__nested-editable_focused,.ck-widget.table td.ck-editor__nested-editable:focus,.ck-widget.table th.ck-editor__nested-editable.ck-editor__nested-editable_focused,.ck-widget.table th.ck-editor__nested-editable:focus{background:var(--ck-color-table-focused-cell-background);border-style:none;outline:1px solid var(--ck-color-focus-border);outline-offset:-1px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ckeditor5-theme-lark/theme/ckeditor5-table/tableediting.css\"],\"names\":[],\"mappings\":\"AAKA,MACC,6DACD,CAKE,8QAGC,wDAAyD,CAKzD,iBAAkB,CAClB,8CAA+C,CAC/C,mBACD\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n:root {\\n\\t--ck-color-table-focused-cell-background: hsla(212, 90%, 80%, .3);\\n}\\n\\n.ck-widget.table {\\n\\t& td,\\n\\t& th {\\n\\t\\t&.ck-editor__nested-editable.ck-editor__nested-editable_focused,\\n\\t\\t&.ck-editor__nested-editable:focus {\\n\\t\\t\\t/* A very slight background to highlight the focused cell */\\n\\t\\t\\tbackground: var(--ck-color-table-focused-cell-background);\\n\\n\\t\\t\\t/* Fixes the problem where surrounding cells cover the focused cell's border.\\n\\t\\t\\tIt does not fix the problem in all places but the UX is improved.\\n\\t\\t\\tSee https://github.com/ckeditor/ckeditor5-table/issues/29. */\\n\\t\\t\\tborder-style: none;\\n\\t\\t\\toutline: 1px solid var(--ck-color-focus-border);\\n\\t\\t\\toutline-offset: -1px; /* progressive enhancement - no IE support */\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ck.ck-table-form .ck-form__row.ck-table-form__background-row,.ck.ck-table-form .ck-form__row.ck-table-form__border-row{flex-wrap:wrap}.ck.ck-table-form .ck-form__row.ck-table-form__dimensions-row{align-items:center;flex-wrap:wrap}.ck.ck-table-form .ck-form__row.ck-table-form__dimensions-row .ck-labeled-field-view{align-items:center;display:flex;flex-direction:column-reverse}.ck.ck-table-form .ck-form__row.ck-table-form__dimensions-row .ck-labeled-field-view .ck.ck-dropdown,.ck.ck-table-form .ck-form__row.ck-table-form__dimensions-row .ck-table-form__dimension-operator{flex-grow:0}.ck.ck-table-form .ck.ck-labeled-field-view{position:relative}.ck.ck-table-form .ck.ck-labeled-field-view .ck.ck-labeled-field-view__status{bottom:calc(var(--ck-table-properties-error-arrow-size)*-1);left:50%;position:absolute;transform:translate(-50%,100%);z-index:1}.ck.ck-table-form .ck.ck-labeled-field-view .ck.ck-labeled-field-view__status:after{content:\\\"\\\";left:50%;position:absolute;top:calc(var(--ck-table-properties-error-arrow-size)*-1);transform:translateX(-50%)}:root{--ck-table-properties-error-arrow-size:6px;--ck-table-properties-min-error-width:150px}.ck.ck-table-form .ck-form__row.ck-table-form__border-row .ck-labeled-field-view>.ck-label{font-size:var(--ck-font-size-tiny);text-align:center}.ck.ck-table-form .ck-form__row.ck-table-form__border-row .ck-table-form__border-style,.ck.ck-table-form .ck-form__row.ck-table-form__border-row .ck-table-form__border-width{max-width:80px;min-width:80px;width:80px}.ck.ck-table-form .ck-form__row.ck-table-form__dimensions-row{padding:0}.ck.ck-table-form .ck-form__row.ck-table-form__dimensions-row .ck-table-form__dimensions-row__height,.ck.ck-table-form .ck-form__row.ck-table-form__dimensions-row .ck-table-form__dimensions-row__width{margin:0}.ck.ck-table-form .ck-form__row.ck-table-form__dimensions-row .ck-table-form__dimension-operator{align-self:flex-end;display:inline-block;height:var(--ck-ui-component-min-height);line-height:var(--ck-ui-component-min-height);margin:0 var(--ck-spacing-small)}.ck.ck-table-form .ck.ck-labeled-field-view{padding-top:var(--ck-spacing-standard)}.ck.ck-table-form .ck.ck-labeled-field-view .ck.ck-labeled-field-view__status{border-radius:0}.ck-rounded-corners .ck.ck-table-form .ck.ck-labeled-field-view .ck.ck-labeled-field-view__status,.ck.ck-table-form .ck.ck-labeled-field-view .ck.ck-labeled-field-view__status.ck-rounded-corners{border-radius:var(--ck-border-radius)}.ck.ck-table-form .ck.ck-labeled-field-view .ck.ck-labeled-field-view__status{background:var(--ck-color-base-error);color:var(--ck-color-base-background);min-width:var(--ck-table-properties-min-error-width);padding:var(--ck-spacing-small) var(--ck-spacing-medium);text-align:center}.ck.ck-table-form .ck.ck-labeled-field-view .ck.ck-labeled-field-view__status:after{border-color:transparent transparent var(--ck-color-base-error) transparent;border-style:solid;border-width:0 var(--ck-table-properties-error-arrow-size) var(--ck-table-properties-error-arrow-size) var(--ck-table-properties-error-arrow-size)}.ck.ck-table-form .ck.ck-labeled-field-view .ck.ck-labeled-field-view__status{animation:ck-table-form-labeled-view-status-appear .15s ease both}.ck.ck-table-form .ck.ck-labeled-field-view .ck-input.ck-error:not(:focus)+.ck.ck-labeled-field-view__status{display:none}@keyframes ck-table-form-labeled-view-status-appear{0%{opacity:0}to{opacity:1}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./theme/tableform.css\",\"webpack://./../ckeditor5-theme-lark/theme/ckeditor5-table/tableform.css\",\"webpack://./../ckeditor5-theme-lark/theme/mixins/_rounded.css\"],\"names\":[],\"mappings\":\"AAWE,wHACC,cACD,CAEA,8DAEC,kBAAmB,CADnB,cAgBD,CAbC,qFAGC,kBAAmB,CAFnB,YAAa,CACb,6BAMD,CAEA,sMACC,WACD,CAIF,4CAEC,iBAoBD,CAlBC,8EAGC,2DAAgE,CADhE,QAAS,CADT,iBAAkB,CAGlB,8BAA+B,CAG/B,SAUD,CAPC,oFACC,UAAW,CAGX,QAAS,CAFT,iBAAkB,CAClB,wDAA6D,CAE7D,0BACD,CChDH,MACC,0CAA2C,CAC3C,2CACD,CAMI,2FACC,kCAAmC,CACnC,iBACD,CAGD,8KAIC,cAAe,CADf,cAAe,CADf,UAGD,CAGD,8DACC,SAcD,CAZC,yMAEC,QACD,CAEA,iGACC,mBAAoB,CACpB,oBAAqB,CACrB,wCAAyC,CACzC,6CAA8C,CAC9C,gCACD,CAIF,4CACC,sCAyBD,CAvBC,8ECxCD,eDyDC,CAjBA,mMCpCA,qCDqDA,CAjBA,8EAGC,qCAAsC,CACtC,qCAAsC,CAEtC,oDAAqD,CADrD,wDAAyD,CAEzD,iBAUD,CAPC,oFACC,2EAA4E,CAE5E,kBAAmB,CADnB,kJAED,CAdD,8EAgBC,iEACD,CAGA,6GACC,YACD,CAIF,oDACC,GACC,SACD,CAEA,GACC,SACD,CACD\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n.ck.ck-table-form {\\n\\t& .ck-form__row {\\n\\t\\t&.ck-table-form__border-row {\\n\\t\\t\\tflex-wrap: wrap;\\n\\t\\t}\\n\\n\\t\\t&.ck-table-form__background-row {\\n\\t\\t\\tflex-wrap: wrap;\\n\\t\\t}\\n\\n\\t\\t&.ck-table-form__dimensions-row {\\n\\t\\t\\tflex-wrap: wrap;\\n\\t\\t\\talign-items: center;\\n\\n\\t\\t\\t& .ck-labeled-field-view {\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\tflex-direction: column-reverse;\\n\\t\\t\\t\\talign-items: center;\\n\\n\\t\\t\\t\\t& .ck.ck-dropdown {\\n\\t\\t\\t\\t\\tflex-grow: 0;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t& .ck-table-form__dimension-operator {\\n\\t\\t\\t\\tflex-grow: 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t& .ck.ck-labeled-field-view {\\n\\t\\t/* Allow absolute positioning of the status (error) balloons. */\\n\\t\\tposition: relative;\\n\\n\\t\\t& .ck.ck-labeled-field-view__status {\\n\\t\\t\\tposition: absolute;\\n\\t\\t\\tleft: 50%;\\n\\t\\t\\tbottom: calc( -1 * var(--ck-table-properties-error-arrow-size) );\\n\\t\\t\\ttransform: translate(-50%,100%);\\n\\n\\t\\t\\t/* Make sure the balloon status stays on top of other form elements. */\\n\\t\\t\\tz-index: 1;\\n\\n\\t\\t\\t/* The arrow pointing towards the field. */\\n\\t\\t\\t&::after {\\n\\t\\t\\t\\tcontent: \\\"\\\";\\n\\t\\t\\t\\tposition: absolute;\\n\\t\\t\\t\\ttop: calc( -1 * var(--ck-table-properties-error-arrow-size) );\\n\\t\\t\\t\\tleft: 50%;\\n\\t\\t\\t\\ttransform: translateX( -50% );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\",\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n@import \\\"../mixins/_rounded.css\\\";\\n\\n:root {\\n\\t--ck-table-properties-error-arrow-size: 6px;\\n\\t--ck-table-properties-min-error-width: 150px;\\n}\\n\\n.ck.ck-table-form {\\n\\t& .ck-form__row {\\n\\t\\t&.ck-table-form__border-row {\\n\\t\\t\\t& .ck-labeled-field-view {\\n\\t\\t\\t\\t& > .ck-label {\\n\\t\\t\\t\\t\\tfont-size: var(--ck-font-size-tiny);\\n\\t\\t\\t\\t\\ttext-align: center;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t& .ck-table-form__border-style,\\n\\t\\t\\t& .ck-table-form__border-width {\\n\\t\\t\\t\\twidth: 80px;\\n\\t\\t\\t\\tmin-width: 80px;\\n\\t\\t\\t\\tmax-width: 80px;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t&.ck-table-form__dimensions-row {\\n\\t\\t\\tpadding: 0;\\n\\n\\t\\t\\t& .ck-table-form__dimensions-row__width,\\n\\t\\t\\t& .ck-table-form__dimensions-row__height {\\n\\t\\t\\t\\tmargin: 0\\n\\t\\t\\t}\\n\\n\\t\\t\\t& .ck-table-form__dimension-operator {\\n\\t\\t\\t\\talign-self: flex-end;\\n\\t\\t\\t\\tdisplay: inline-block;\\n\\t\\t\\t\\theight: var(--ck-ui-component-min-height);\\n\\t\\t\\t\\tline-height: var(--ck-ui-component-min-height);\\n\\t\\t\\t\\tmargin: 0 var(--ck-spacing-small);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t& .ck.ck-labeled-field-view {\\n\\t\\tpadding-top: var(--ck-spacing-standard);\\n\\n\\t\\t& .ck.ck-labeled-field-view__status {\\n\\t\\t\\t@mixin ck-rounded-corners;\\n\\n\\t\\t\\tbackground: var(--ck-color-base-error);\\n\\t\\t\\tcolor: var(--ck-color-base-background);\\n\\t\\t\\tpadding: var(--ck-spacing-small) var(--ck-spacing-medium);\\n\\t\\t\\tmin-width: var(--ck-table-properties-min-error-width);\\n\\t\\t\\ttext-align: center;\\n\\n\\t\\t\\t/* The arrow pointing towards the field. */\\n\\t\\t\\t&::after {\\n\\t\\t\\t\\tborder-color: transparent transparent var(--ck-color-base-error) transparent;\\n\\t\\t\\t\\tborder-width: 0 var(--ck-table-properties-error-arrow-size) var(--ck-table-properties-error-arrow-size) var(--ck-table-properties-error-arrow-size);\\n\\t\\t\\t\\tborder-style: solid;\\n\\t\\t\\t}\\n\\n\\t\\t\\tanimation: ck-table-form-labeled-view-status-appear .15s ease both;\\n\\t\\t}\\n\\n\\t\\t/* Hide the error balloon when the field is blurred. Makes the experience much more clear. */\\n\\t\\t& .ck-input.ck-error:not(:focus) + .ck.ck-labeled-field-view__status {\\n\\t\\t\\tdisplay: none;\\n\\t\\t}\\n\\t}\\n}\\n\\n@keyframes ck-table-form-labeled-view-status-appear {\\n\\t0% {\\n\\t\\topacity: 0;\\n\\t}\\n\\n\\t100% {\\n\\t\\topacity: 1;\\n\\t}\\n}\\n\",\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n/**\\n * Implements rounded corner interface for .ck-rounded-corners class.\\n *\\n * @see $ck-border-radius\\n */\\n@define-mixin ck-rounded-corners {\\n\\tborder-radius: 0;\\n\\n\\t@nest .ck-rounded-corners &,\\n\\t&.ck-rounded-corners {\\n\\t\\tborder-radius: var(--ck-border-radius);\\n\\t\\t@mixin-content;\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ck.ck-table-properties-form .ck-form__row.ck-table-properties-form__alignment-row{align-content:baseline;flex-basis:0;flex-wrap:wrap}.ck.ck-table-properties-form .ck-form__row.ck-table-properties-form__alignment-row .ck.ck-toolbar .ck-toolbar__items{flex-wrap:nowrap}.ck.ck-table-properties-form{width:320px}.ck.ck-table-properties-form .ck-form__row.ck-table-properties-form__alignment-row{align-self:flex-end;padding:0}.ck.ck-table-properties-form .ck-form__row.ck-table-properties-form__alignment-row .ck.ck-toolbar{background:none;margin-top:var(--ck-spacing-standard)}.ck.ck-table-properties-form .ck-form__row.ck-table-properties-form__alignment-row .ck.ck-toolbar .ck-toolbar__items>*{width:40px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./theme/tableproperties.css\",\"webpack://./../ckeditor5-theme-lark/theme/ckeditor5-table/tableproperties.css\"],\"names\":[],\"mappings\":\"AAOE,mFAGC,sBAAuB,CADvB,YAAa,CADb,cAOD,CAHC,qHACC,gBACD,CCTH,6BACC,WAmBD,CAhBE,mFACC,mBAAoB,CACpB,SAYD,CAVC,kGACC,eAAgB,CAGhB,qCAKD,CAHC,uHACC,UACD\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n.ck.ck-table-properties-form {\\n\\t& .ck-form__row {\\n\\t\\t&.ck-table-properties-form__alignment-row {\\n\\t\\t\\tflex-wrap: wrap;\\n\\t\\t\\tflex-basis: 0;\\n\\t\\t\\talign-content: baseline;\\n\\n\\t\\t\\t& .ck.ck-toolbar .ck-toolbar__items {\\n\\t\\t\\t\\tflex-wrap: nowrap;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\",\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n.ck.ck-table-properties-form {\\n\\twidth: 320px;\\n\\n\\t& .ck-form__row {\\n\\t\\t&.ck-table-properties-form__alignment-row {\\n\\t\\t\\talign-self: flex-end;\\n\\t\\t\\tpadding: 0;\\n\\n\\t\\t\\t& .ck.ck-toolbar {\\n\\t\\t\\t\\tbackground: none;\\n\\n\\t\\t\\t\\t/* Compensate for missing input label that would push the margin (toolbar has no inputs). */\\n\\t\\t\\t\\tmargin-top: var(--ck-spacing-standard);\\n\\n\\t\\t\\t\\t& .ck-toolbar__items > * {\\n\\t\\t\\t\\t\\twidth: 40px;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":root{--ck-table-selected-cell-background:rgba(158,207,250,.3)}.ck.ck-editor__editable .table table td.ck-editor__editable_selected,.ck.ck-editor__editable .table table th.ck-editor__editable_selected{box-shadow:unset;caret-color:transparent;outline:unset;position:relative}.ck.ck-editor__editable .table table td.ck-editor__editable_selected:after,.ck.ck-editor__editable .table table th.ck-editor__editable_selected:after{background-color:var(--ck-table-selected-cell-background);bottom:0;content:\\\"\\\";left:0;pointer-events:none;position:absolute;right:0;top:0}.ck.ck-editor__editable .table table td.ck-editor__editable_selected ::selection,.ck.ck-editor__editable .table table td.ck-editor__editable_selected:focus,.ck.ck-editor__editable .table table th.ck-editor__editable_selected ::selection,.ck.ck-editor__editable .table table th.ck-editor__editable_selected:focus{background-color:transparent}.ck.ck-editor__editable .table table td.ck-editor__editable_selected .ck-widget,.ck.ck-editor__editable .table table th.ck-editor__editable_selected .ck-widget{outline:unset}.ck.ck-editor__editable .table table td.ck-editor__editable_selected .ck-widget>.ck-widget__selection-handle,.ck.ck-editor__editable .table table th.ck-editor__editable_selected .ck-widget>.ck-widget__selection-handle{display:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../ckeditor5-theme-lark/theme/ckeditor5-table/tableselection.css\"],\"names\":[],\"mappings\":\"AAKA,MACC,wDACD,CAGC,0IAKC,gBAAiB,CAFjB,uBAAwB,CACxB,aAAc,CAFd,iBAiCD,CA3BC,sJAGC,yDAA0D,CAK1D,QAAS,CAPT,UAAW,CAKX,MAAO,CAJP,mBAAoB,CAEpB,iBAAkB,CAGlB,OAAQ,CAFR,KAID,CAEA,wTAEC,4BACD,CAMA,gKACC,aAKD,CAHC,0NACC,YACD\",\"sourcesContent\":[\"/*\\n * Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\\n */\\n\\n:root {\\n\\t--ck-table-selected-cell-background: hsla(208, 90%, 80%, .3);\\n}\\n\\n.ck.ck-editor__editable .table table {\\n\\t& td.ck-editor__editable_selected,\\n\\t& th.ck-editor__editable_selected {\\n\\t\\tposition: relative;\\n\\t\\tcaret-color: transparent;\\n\\t\\toutline: unset;\\n\\t\\tbox-shadow: unset;\\n\\n\\t\\t/* https://github.com/ckeditor/ckeditor5/issues/6446 */\\n\\t\\t&:after {\\n\\t\\t\\tcontent: '';\\n\\t\\t\\tpointer-events: none;\\n\\t\\t\\tbackground-color: var(--ck-table-selected-cell-background);\\n\\t\\t\\tposition: absolute;\\n\\t\\t\\ttop: 0;\\n\\t\\t\\tleft: 0;\\n\\t\\t\\tright: 0;\\n\\t\\t\\tbottom: 0;\\n\\t\\t}\\n\\n\\t\\t& ::selection,\\n\\t\\t&:focus {\\n\\t\\t\\tbackground-color: transparent;\\n\\t\\t}\\n\\n\\t\\t/*\\n\\t\\t * To reduce the amount of noise, all widgets in the table selection have no outline and no selection handle.\\n\\t\\t * See https://github.com/ckeditor/ckeditor5/issues/9491.\\n\\t\\t */\\n\\t\\t& .ck-widget {\\n\\t\\t\\toutline: unset;\\n\\n\\t\\t\\t& > .ck-widget__selection-handle {\\n\\t\\t\\t\\tdisplay: none;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"m11.105 18-.17 1H2.5A1.5 1.5 0 0 1 1 17.5v-15A1.5 1.5 0 0 1 2.5 1h15A1.5 1.5 0 0 1 19 2.5v9.975l-.85-.124-.15-.302V8h-5v4h.021l-.172.351-1.916.28-.151.027c-.287.063-.54.182-.755.341L8 13v5h3.105zM2 12h5V8H2v4zm10-4H8v4h4V8zM2 2v5h5V2H2zm0 16h5v-5H2v5zM13 7h5V2h-5v5zM8 2v5h4V2H8z\\\" opacity=\\\".6\\\"/><path d=\\\"m15.5 11.5 1.323 2.68 2.957.43-2.14 2.085.505 2.946L15.5 18.25l-2.645 1.39.505-2.945-2.14-2.086 2.957-.43L15.5 11.5zM13 6a1 1 0 0 1 1 1v3.172a2.047 2.047 0 0 0-.293.443l-.858 1.736-1.916.28-.151.027A1.976 1.976 0 0 0 9.315 14H7a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h6zm-1 2H8v4h4V8z\\\"/></svg>\";","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2.5 1h15A1.5 1.5 0 0 1 19 2.5v15a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 17.5v-15A1.5 1.5 0 0 1 2.5 1zM2 2v16h16V2H2z\\\" opacity=\\\".6\\\"/><path d=\\\"M18 7v1H2V7h16zm0 5v1H2v-1h16z\\\" opacity=\\\".6\\\"/><path d=\\\"M14 1v18a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V1a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1zm-2 1H8v4h4V2zm0 6H8v4h4V8zm0 6H8v4h4v-4z\\\"/></svg>\";","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2.5 1h15A1.5 1.5 0 0 1 19 2.5v15a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 17.5v-15A1.5 1.5 0 0 1 2.5 1zM2 2v16h16V2H2z\\\" opacity=\\\".6\\\"/><path d=\\\"M7 2h1v16H7V2zm5 0h1v7h-1V2zm6 5v1H2V7h16zM8 12v1H2v-1h6z\\\" opacity=\\\".6\\\"/><path d=\\\"M7 7h12a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H7a1 1 0 0 1-1-1V8a1 1 0 0 1 1-1zm1 2v9h10V9H8z\\\"/></svg>\";","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M8 2v5h4V2h1v5h5v1h-5v4h.021l-.172.351-1.916.28-.151.027c-.287.063-.54.182-.755.341L8 13v5H7v-5H2v-1h5V8H2V7h5V2h1zm4 6H8v4h4V8z\\\" opacity=\\\".6\\\"/><path d=\\\"m15.5 11.5 1.323 2.68 2.957.43-2.14 2.085.505 2.946L15.5 18.25l-2.645 1.39.505-2.945-2.14-2.086 2.957-.43L15.5 11.5zM17 1a2 2 0 0 1 2 2v9.475l-.85-.124-.857-1.736a2.048 2.048 0 0 0-.292-.44L17 3H3v14h7.808l.402.392L10.935 19H3a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h14z\\\"/></svg>\";","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M2.5 1h15A1.5 1.5 0 0 1 19 2.5v15a1.5 1.5 0 0 1-1.5 1.5h-15A1.5 1.5 0 0 1 1 17.5v-15A1.5 1.5 0 0 1 2.5 1zM2 2v16h16V2H2z\\\" opacity=\\\".6\\\"/><path d=\\\"M7 2h1v16H7V2zm5 0h1v16h-1V2z\\\" opacity=\\\".6\\\"/><path d=\\\"M1 6h18a1 1 0 0 1 1 1v6a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1zm1 2v4h4V8H2zm6 0v4h4V8H8zm6 0v4h4V8h-4z\\\"/></svg>\";","export default \"<svg viewBox=\\\"0 0 20 20\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M3 6v3h4V6H3zm0 4v3h4v-3H3zm0 4v3h4v-3H3zm5 3h4v-3H8v3zm5 0h4v-3h-4v3zm4-4v-3h-4v3h4zm0-4V6h-4v3h4zm1.5 8a1.5 1.5 0 0 1-1.5 1.5H3A1.5 1.5 0 0 1 1.5 17V4c.222-.863 1.068-1.5 2-1.5h13c.932 0 1.778.637 2 1.5v13zM12 13v-3H8v3h4zm0-4V6H8v3h4z\\\"/></svg>\";","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./renderer.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./colorinput.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./form.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./formrow.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./inserttable.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./table.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./tablecaption.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./tablecellproperties.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./tablecolumnresize.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./tableediting.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./tableform.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./tableproperties.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./tableselection.css\";\n\nvar options = {\"injectType\":\"singletonStyleTag\",\"attributes\":{\"data-cke\":true}};\n\noptions.insert = \"head\";\noptions.singleton = true;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport type HtmlWriter from './htmlwriter';\n\n/**\n * @module engine/dataprocessor/basichtmlwriter\n */\n\n/* globals document */\n\n/**\n * Basic HTML writer. It uses the native `innerHTML` property for basic conversion\n * from a document fragment to an HTML string.\n *\n * @implements module:engine/dataprocessor/htmlwriter~HtmlWriter\n */\nexport default class BasicHtmlWriter implements HtmlWriter {\n\t/**\n\t * Returns an HTML string created from the document fragment.\n\t *\n\t * @param {DocumentFragment} fragment\n\t * @returns {String}\n\t */\n\tpublic getHtml( fragment: DocumentFragment ): string {\n\t\tconst doc = document.implementation.createHTMLDocument( '' );\n\t\tconst container = doc.createElement( 'div' );\n\t\tcontainer.appendChild( fragment );\n\n\t\treturn container.innerHTML;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/dataprocessor/xmldataprocessor\n */\n\n/* globals DOMParser */\n\nimport BasicHtmlWriter from './basichtmlwriter';\nimport DomConverter from '../view/domconverter';\n\nimport type DataProcessor from './dataprocessor';\nimport type HtmlWriter from './htmlwriter';\nimport type ViewDocument from '../view/document';\nimport type ViewDocumentFragment from '../view/documentfragment';\nimport { type MatcherPattern } from '../view/matcher';\n\n/**\n * The XML data processor class.\n * This data processor implementation uses XML as input and output data.\n * This class is needed because unlike HTML, XML allows to use any tag with any value.\n * For example, `<link>Text</link>` is a valid XML but invalid HTML.\n *\n * @implements module:engine/dataprocessor/dataprocessor~DataProcessor\n */\nexport default class XmlDataProcessor implements DataProcessor {\n\tpublic namespaces: string[];\n\tpublic domParser: DOMParser;\n\tpublic domConverter: DomConverter;\n\tpublic htmlWriter: HtmlWriter;\n\n\t/**\n\t * Creates a new instance of the XML data processor class.\n\t *\n\t * @param {module:engine/view/document~Document} document The view document instance.\n\t * @param {Object} options Configuration options.\n\t * @param {Array.<String>} [options.namespaces=[]] A list of namespaces allowed to use in the XML input.\n\t */\n\tconstructor( document: ViewDocument, options: { namespaces?: string[] } = {} ) {\n\t\t/**\n\t\t * A list of namespaces allowed to use in the XML input.\n\t\t *\n\t\t * For example, registering namespaces [ 'attribute', 'container' ] allows to use `<attirbute:tagName></attribute:tagName>`\n\t\t * and `<container:tagName></container:tagName>` input. It is mainly for debugging.\n\t\t *\n\t\t * @member {Array.<String>}\n\t\t */\n\t\tthis.namespaces = options.namespaces || [];\n\n\t\t/**\n\t\t * DOM parser instance used to parse an XML string to an XML document.\n\t\t *\n\t\t * @member {DOMParser}\n\t\t */\n\t\tthis.domParser = new DOMParser();\n\n\t\t/**\n\t\t * DOM converter used to convert DOM elements to view elements.\n\t\t *\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = new DomConverter( document, { renderingMode: 'data' } );\n\n\t\t/**\n\t\t * A basic HTML writer instance used to convert DOM elements to an XML string.\n\t\t * There is no need to use a dedicated XML writer because the basic HTML writer works well in this case.\n\t\t *\n\t\t * @member {module:engine/dataprocessor/htmlwriter~HtmlWriter}\n\t\t */\n\t\tthis.htmlWriter = new BasicHtmlWriter();\n\t}\n\n\t/**\n\t * Converts the provided {@link module:engine/view/documentfragment~DocumentFragment document fragment}\n\t * to data format &mdash; in this case an XML string.\n\t *\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment\n\t * @returns {String} An XML string.\n\t */\n\tpublic toData( viewFragment: ViewDocumentFragment ): string {\n\t\t// Convert view DocumentFragment to DOM DocumentFragment.\n\t\tconst domFragment = this.domConverter.viewToDom( viewFragment ) as DocumentFragment;\n\n\t\t// Convert DOM DocumentFragment to XML output.\n\t\t// There is no need to use dedicated for XML serializing method because BasicHtmlWriter works well in this case.\n\t\treturn this.htmlWriter.getHtml( domFragment );\n\t}\n\n\t/**\n\t * Converts the provided XML string to a view tree.\n\t *\n\t * @param {String} data An XML string.\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} A converted view element.\n\t */\n\tpublic toView( data: string ): ViewDocumentFragment {\n\t\t// Convert input XML data to DOM DocumentFragment.\n\t\tconst domFragment = this._toDom( data );\n\n\t\t// Convert DOM DocumentFragment to view DocumentFragment.\n\t\treturn this.domConverter.domToView( domFragment, { keepOriginalCase: true } ) as ViewDocumentFragment;\n\t}\n\n\t/**\n\t * Registers a {@link module:engine/view/matcher~MatcherPattern} for view elements whose content should be treated as raw data\n\t * and not processed during the conversion from XML to view elements.\n\t *\n\t * The raw data can be later accessed by a\n\t * {@link module:engine/view/element~Element#getCustomProperty custom property of a view element} called `\"$rawContent\"`.\n\t *\n\t * @param {module:engine/view/matcher~MatcherPattern} pattern Pattern matching all view elements whose content should\n\t * be treated as raw data.\n\t */\n\tpublic registerRawContentMatcher( pattern: MatcherPattern ): void {\n\t\tthis.domConverter.registerRawContentMatcher( pattern );\n\t}\n\n\t/**\n\t * If the processor is set to use marked fillers, it will insert `&nbsp;` fillers wrapped in `<span>` elements\n\t * (`<span data-cke-filler=\"true\">&nbsp;</span>`) instead of regular `&nbsp;` characters.\n\t *\n\t * This mode allows for a more precise handling of block fillers (so they do not leak into editor content) but\n\t * bloats the editor data with additional markup.\n\t *\n\t * This mode may be required by some features and will be turned on by them automatically.\n\t *\n\t * @param {'default'|'marked'} type Whether to use the default or the marked `&nbsp;` block fillers.\n\t */\n\tpublic useFillerType( type: 'default' | 'marked' ): void {\n\t\tthis.domConverter.blockFillerMode = type == 'marked' ? 'markedNbsp' : 'nbsp';\n\t}\n\n\t/**\n\t * Converts an XML string to its DOM representation. Returns a document fragment containing nodes parsed from\n\t * the provided data.\n\t *\n\t * @private\n\t * @param {String} data\n\t * @returns {DocumentFragment}\n\t */\n\tprivate _toDom( data: string ): DocumentFragment {\n\t\t// Stringify namespaces.\n\t\tconst namespaces = this.namespaces.map( nsp => `xmlns:${ nsp }=\"nsp\"` ).join( ' ' );\n\n\t\t// Wrap data into root element with optional namespace definitions.\n\t\tdata = `<xml ${ namespaces }>${ data }</xml>`;\n\n\t\tconst parsedDocument = this.domParser.parseFromString( data, 'text/xml' );\n\n\t\t// Parse validation.\n\t\tconst parserError = parsedDocument.querySelector( 'parsererror' );\n\n\t\tif ( parserError ) {\n\t\t\tthrow new Error( 'Parse error - ' + parserError.textContent );\n\t\t}\n\n\t\tconst fragment = parsedDocument.createDocumentFragment();\n\t\tconst nodes = parsedDocument.documentElement.childNodes;\n\n\t\twhile ( nodes.length > 0 ) {\n\t\t\tfragment.appendChild( nodes[ 0 ] );\n\t\t}\n\n\t\treturn fragment;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/dev-utils/view\n */\n\n/* globals document */\n\n/**\n * Collection of methods for manipulating the {@link module:engine/view/view view} for testing purposes.\n */\n\nimport View from '../view/view';\nimport ViewDocument from '../view/document';\nimport ViewDocumentFragment from '../view/documentfragment';\nimport XmlDataProcessor from '../dataprocessor/xmldataprocessor';\nimport ViewElement from '../view/element';\nimport DocumentSelection from '../view/documentselection';\nimport Range from '../view/range';\nimport Position from '../view/position';\nimport AttributeElement from '../view/attributeelement';\nimport ContainerElement from '../view/containerelement';\nimport EmptyElement from '../view/emptyelement';\nimport UIElement from '../view/uielement';\nimport RawElement from '../view/rawelement';\nimport { StylesProcessor } from '../view/stylesmap';\n\nimport type ViewNode from '../view/node';\nimport type ViewText from '../view/text';\nimport type DomConverter from '../view/domconverter';\n\nconst ELEMENT_RANGE_START_TOKEN = '[';\nconst ELEMENT_RANGE_END_TOKEN = ']';\nconst TEXT_RANGE_START_TOKEN = '{';\nconst TEXT_RANGE_END_TOKEN = '}';\nconst allowedTypes = {\n\t'container': ContainerElement,\n\t'attribute': AttributeElement,\n\t'empty': EmptyElement,\n\t'ui': UIElement,\n\t'raw': RawElement\n};\n// Returns simplified implementation of {@link module:engine/view/domconverter~DomConverter#setContentOf DomConverter.setContentOf} method.\n// Used to render UIElement and RawElement.\nconst domConverterStub: DomConverter = {\n\tsetContentOf: ( node: any, html: string ) => {\n\t\tnode.innerHTML = html;\n\t}\n} as any;\n\n/**\n * Writes the content of the {@link module:engine/view/document~Document document} to an HTML-like string.\n *\n * @param {module:engine/view/view~View} view\n * @param {Object} [options]\n * @param {Boolean} [options.withoutSelection=false] Whether to write the selection. When set to `true`, the selection will\n * not be included in the returned string.\n * @param {Boolean} [options.rootName='main'] The name of the root from which the data should be stringified. If not provided,\n * the default `main` name will be used.\n * @param {Boolean} [options.showType=false] When set to `true`, the type of elements will be printed (`<container:p>`\n * instead of `<p>`, `<attribute:b>` instead of `<b>` and `<empty:img>` instead of `<img>`).\n * @param {Boolean} [options.showPriority=false] When set to `true`, the attribute element's priority will be printed\n * (`<span view-priority=\"12\">`, `<b view-priority=\"10\">`).\n * @param {Boolean} [options.showAttributeElementId=false] When set to `true`, the attribute element's ID will be printed\n * (`<span id=\"marker:foo\">`).\n * @param {Boolean} [options.renderUIElements=false] When set to `true`, the inner content of each\n * {@link module:engine/view/uielement~UIElement} will be printed.\n * @param {Boolean} [options.renderRawElements=false] When set to `true`, the inner content of each\n * {@link module:engine/view/rawelement~RawElement} will be printed.\n * @param {Object} [options.domConverter=null] When set to an actual {@link module:engine/view/domconverter~DomConverter DomConverter}\n * instance, it lets the conversion go through exactly the same flow the editing view is going through,\n * i.e. with view data filtering. Otherwise the simple stub is used.\n * @returns {String} The stringified data.\n */\nexport function getData(\n\tview: View,\n\toptions: {\n\t\twithoutSelection?: boolean;\n\t\trootName?: string;\n\t\tshowType?: boolean;\n\t\tshowPriority?: boolean;\n\t\trenderUIElements?: boolean;\n\t\trenderRawElements?: boolean;\n\t\tdomConverter?: DomConverter;\n\t} = {}\n): string {\n\tif ( !( view instanceof View ) ) {\n\t\tthrow new TypeError( 'View needs to be an instance of module:engine/view/view~View.' );\n\t}\n\n\tconst document = view.document;\n\tconst withoutSelection = !!options.withoutSelection;\n\tconst rootName = options.rootName || 'main';\n\tconst root = document.getRoot( rootName )!;\n\tconst stringifyOptions = {\n\t\tshowType: options.showType,\n\t\tshowPriority: options.showPriority,\n\t\trenderUIElements: options.renderUIElements,\n\t\trenderRawElements: options.renderRawElements,\n\t\tignoreRoot: true,\n\t\tdomConverter: options.domConverter\n\t};\n\n\treturn withoutSelection ?\n\t\tgetData._stringify( root, null, stringifyOptions ) :\n\t\tgetData._stringify( root, document.selection, stringifyOptions );\n}\n\n// Set stringify as getData private method - needed for testing/spying.\ngetData._stringify = stringify;\n\n/**\n * Sets the content of a view {@link module:engine/view/document~Document document} provided as an HTML-like string.\n *\n * @param {module:engine/view/view~View} view\n * @param {String} data An HTML-like string to write into the document.\n * @param {Object} options\n * @param {String} [options.rootName='main'] The root name where parsed data will be stored. If not provided,\n * the default `main` name will be used.\n */\nexport function setData(\n\tview: View,\n\tdata: string,\n\toptions: { rootName?: string } = {}\n): void {\n\tif ( !( view instanceof View ) ) {\n\t\tthrow new TypeError( 'View needs to be an instance of module:engine/view/view~View.' );\n\t}\n\n\tconst document = view.document;\n\tconst rootName = options.rootName || 'main';\n\tconst root = document.getRoot( rootName )!;\n\n\tview.change( writer => {\n\t\tconst result: any = setData._parse( data, { rootElement: root } );\n\n\t\tif ( result.view && result.selection ) {\n\t\t\twriter.setSelection( result.selection );\n\t\t}\n\t} );\n}\n\n// Set parse as setData private method - needed for testing/spying.\nsetData._parse = parse;\n\n/**\n * Converts view elements to HTML-like string representation.\n *\n * A root element can be provided as {@link module:engine/view/text~Text text}:\n *\n *\t\tconst text = downcastWriter.createText( 'foobar' );\n *\t\tstringify( text ); // 'foobar'\n *\n * or as an {@link module:engine/view/element~Element element}:\n *\n *\t\tconst element = downcastWriter.createElement( 'p', null, downcastWriter.createText( 'foobar' ) );\n *\t\tstringify( element ); // '<p>foobar</p>'\n *\n * or as a {@link module:engine/view/documentfragment~DocumentFragment document fragment}:\n *\n *\t\tconst text = downcastWriter.createText( 'foobar' );\n *\t\tconst b = downcastWriter.createElement( 'b', { name: 'test' }, text );\n *\t\tconst p = downcastWriter.createElement( 'p', { style: 'color:red;' } );\n *\t\tconst fragment = downcastWriter.createDocumentFragment( [ p, b ] );\n *\n *\t\tstringify( fragment ); // '<p style=\"color:red;\"></p><b name=\"test\">foobar</b>'\n *\n * Additionally, a {@link module:engine/view/documentselection~DocumentSelection selection} instance can be provided.\n * Ranges from the selection will then be included in the output data.\n * If a range position is placed inside the element node, it will be represented with `[` and `]`:\n *\n *\t\tconst text = downcastWriter.createText( 'foobar' );\n *\t\tconst b = downcastWriter.createElement( 'b', null, text );\n *\t\tconst p = downcastWriter.createElement( 'p', null, b );\n *\t\tconst selection = downcastWriter.createSelection(\n *\t\t\tdowncastWriter.createRangeIn( p )\n *\t\t);\n *\n *\t\tstringify( p, selection ); // '<p>[<b>foobar</b>]</p>'\n *\n * If a range is placed inside the text node, it will be represented with `{` and `}`:\n *\n *\t\tconst text = downcastWriter.createText( 'foobar' );\n *\t\tconst b = downcastWriter.createElement( 'b', null, text );\n *\t\tconst p = downcastWriter.createElement( 'p', null, b );\n *\t\tconst selection = downcastWriter.createSelection(\n *\t\t\tdowncastWriter.createRange( downcastWriter.createPositionAt( text, 1 ), downcastWriter.createPositionAt( text, 5 ) )\n *\t\t);\n *\n *\t\tstringify( p, selection ); // '<p><b>f{ooba}r</b></p>'\n *\n * ** Note: **\n * It is possible to unify selection markers to `[` and `]` for both (inside and outside text)\n * by setting the `sameSelectionCharacters=true` option. It is mainly used when the view stringify option is used by\n * model utilities.\n *\n * Multiple ranges are supported:\n *\n *\t\tconst text = downcastWriter.createText( 'foobar' );\n *\t\tconst selection = downcastWriter.createSelection( [\n *\t\t\tdowncastWriter.createRange( downcastWriter.createPositionAt( text, 0 ), downcastWriter.createPositionAt( text, 1 ) ),\n *\t\t\tdowncastWriter.createRange( downcastWriter.createPositionAt( text, 3 ), downcastWriter.createPositionAt( text, 5 ) )\n *\t\t] );\n *\n *\t\tstringify( text, selection ); // '{f}oo{ba}r'\n *\n * A {@link module:engine/view/range~Range range} or {@link module:engine/view/position~Position position} instance can be provided\n * instead of the {@link module:engine/view/documentselection~DocumentSelection selection} instance. If a range instance\n * is provided, it will be converted to a selection containing this range. If a position instance is provided, it will\n * be converted to a selection containing one range collapsed at this position.\n *\n *\t\tconst text = downcastWriter.createText( 'foobar' );\n *\t\tconst range = downcastWriter.createRange( downcastWriter.createPositionAt( text, 0 ), downcastWriter.createPositionAt( text, 1 ) );\n *\t\tconst position = downcastWriter.createPositionAt( text, 3 );\n *\n *\t\tstringify( text, range ); // '{f}oobar'\n *\t\tstringify( text, position ); // 'foo{}bar'\n *\n * An additional `options` object can be provided.\n * If `options.showType` is set to `true`, element's types will be\n * presented for {@link module:engine/view/attributeelement~AttributeElement attribute elements},\n * {@link module:engine/view/containerelement~ContainerElement container elements}\n * {@link module:engine/view/emptyelement~EmptyElement empty elements}\n * and {@link module:engine/view/uielement~UIElement UI elements}:\n *\n *\t\tconst attribute = downcastWriter.createAttributeElement( 'b' );\n *\t\tconst container = downcastWriter.createContainerElement( 'p' );\n *\t\tconst empty = downcastWriter.createEmptyElement( 'img' );\n *\t\tconst ui = downcastWriter.createUIElement( 'span' );\n *\t\tgetData( attribute, null, { showType: true } ); // '<attribute:b></attribute:b>'\n *\t\tgetData( container, null, { showType: true } ); // '<container:p></container:p>'\n *\t\tgetData( empty, null, { showType: true } ); // '<empty:img></empty:img>'\n *\t\tgetData( ui, null, { showType: true } ); // '<ui:span></ui:span>'\n *\n * If `options.showPriority` is set to `true`, a priority will be displayed for all\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements}.\n *\n *\t\tconst attribute = downcastWriter.createAttributeElement( 'b' );\n *\t\tattribute._priority = 20;\n *\t\tgetData( attribute, null, { showPriority: true } ); // <b view-priority=\"20\"></b>\n *\n * If `options.showAttributeElementId` is set to `true`, the attribute element's id will be displayed for all\n * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that have it set.\n *\n *\t\tconst attribute = downcastWriter.createAttributeElement( 'span' );\n *\t\tattribute._id = 'marker:foo';\n *\t\tgetData( attribute, null, { showAttributeElementId: true } ); // <span view-id=\"marker:foo\"></span>\n *\n * @param {module:engine/view/text~Text|module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment}\n * node The node to stringify.\n * @param {module:engine/view/documentselection~DocumentSelection|module:engine/view/position~Position|module:engine/view/range~Range}\n * [selectionOrPositionOrRange = null ]\n * A selection instance whose ranges will be included in the returned string data. If a range instance is provided, it will be\n * converted to a selection containing this range. If a position instance is provided, it will be converted to a selection\n * containing one range collapsed at this position.\n * @param {Object} [options] An object with additional options.\n * @param {Boolean} [options.showType=false] When set to `true`, the type of elements will be printed (`<container:p>`\n * instead of `<p>`, `<attribute:b>` instead of `<b>` and `<empty:img>` instead of `<img>`).\n * @param {Boolean} [options.showPriority=false] When set to `true`,  the attribute element's priority will be printed\n * (`<span view-priority=\"12\">`, `<b view-priority=\"10\">`).\n * @param {Boolean} [options.showAttributeElementId=false] When set to `true`, attribute element's id will be printed\n * (`<span id=\"marker:foo\">`).\n * @param {Boolean} [options.ignoreRoot=false] When set to `true`, the root's element opening and closing will not be printed.\n * Mainly used by the `getData` function to ignore the {@link module:engine/view/document~Document document's} root element.\n * @param {Boolean} [options.sameSelectionCharacters=false] When set to `true`, the selection inside the text will be marked as\n *  `{` and `}` and the selection outside the text as `[` and `]`. When set to `false`, both will be marked as `[` and `]` only.\n * @param {Boolean} [options.renderUIElements=false] When set to `true`, the inner content of each\n * {@link module:engine/view/uielement~UIElement} will be printed.\n * @param {Boolean} [options.renderRawElements=false] When set to `true`, the inner content of each\n * {@link module:engine/view/rawelement~RawElement} will be printed.\n * @param {Object} [options.domConverter={}] When set to an actual {@link module:engine/view/domconverter~DomConverter DomConverter}\n * instance, it lets the conversion go through exactly the same flow the editing view is going through,\n * i.e. with view data filtering. Otherwise the simple stub is used.\n * @returns {String} An HTML-like string representing the view.\n */\nexport function stringify(\n\tnode: ViewNode | ViewDocumentFragment,\n\tselectionOrPositionOrRange: DocumentSelection | Position | Range | null = null,\n\toptions: {\n\t\tshowType?: boolean;\n\t\tshowPriority?: boolean;\n\t\tshowAttributeElementId?: boolean;\n\t\tignoreRoot?: boolean;\n\t\tsameSelectionCharacters?: boolean;\n\t\trenderUIElements?: boolean;\n\t\trenderRawElements?: boolean;\n\t\tdomConverter?: DomConverter;\n\t} = {}\n): string {\n\tlet selection;\n\n\tif (\n\t\tselectionOrPositionOrRange instanceof Position ||\n\t\tselectionOrPositionOrRange instanceof Range\n\t) {\n\t\tselection = new DocumentSelection( selectionOrPositionOrRange );\n\t} else {\n\t\tselection = selectionOrPositionOrRange;\n\t}\n\n\tconst viewStringify = new ViewStringify( node, selection, options );\n\n\treturn viewStringify.stringify();\n}\n\n/**\n * Parses an HTML-like string and returns a view tree.\n * A simple string will be converted to a {@link module:engine/view/text~Text text} node:\n *\n *\t\tparse( 'foobar' ); // Returns an instance of text.\n *\n * {@link module:engine/view/element~Element Elements} will be parsed with attributes as children:\n *\n *\t\tparse( '<b name=\"baz\">foobar</b>' ); // Returns an instance of element with the `baz` attribute and a text child node.\n *\n * Multiple nodes provided on root level will be converted to a\n * {@link module:engine/view/documentfragment~DocumentFragment document fragment}:\n *\n *\t\tparse( '<b>foo</b><i>bar</i>' ); // Returns a document fragment with two child elements.\n *\n * The method can parse multiple {@link module:engine/view/range~Range ranges} provided in string data and return a\n * {@link module:engine/view/documentselection~DocumentSelection selection} instance containing these ranges. Ranges placed inside\n * {@link module:engine/view/text~Text text} nodes should be marked using `{` and `}` brackets:\n *\n *\t\tconst { text, selection } = parse( 'f{ooba}r' );\n *\n * Ranges placed outside text nodes should be marked using `[` and `]` brackets:\n *\n *\t\tconst { root, selection } = parse( '<p>[<b>foobar</b>]</p>' );\n *\n * ** Note: **\n * It is possible to unify selection markers to `[` and `]` for both (inside and outside text)\n * by setting `sameSelectionCharacters=true` option. It is mainly used when the view parse option is used by model utilities.\n *\n * Sometimes there is a need for defining the order of ranges inside the created selection. This can be achieved by providing\n * the range order array as an additional parameter:\n *\n *\t\tconst { root, selection } = parse( '{fo}ob{ar}{ba}z', { order: [ 2, 3, 1 ] } );\n *\n * In the example above, the first range (`{fo}`) will be added to the selection as the second one, the second range (`{ar}`) will be\n * added as the third and the third range (`{ba}`) will be added as the first one.\n *\n * If the selection's last range should be added as a backward one\n * (so the {@link module:engine/view/documentselection~DocumentSelection#anchor selection anchor} is represented\n * by the `end` position and {@link module:engine/view/documentselection~DocumentSelection#focus selection focus} is\n * represented by the `start` position), use the `lastRangeBackward` flag:\n *\n *\t\tconst { root, selection } = parse( `{foo}bar{baz}`, { lastRangeBackward: true } );\n *\n * Some more examples and edge cases:\n *\n *\t\t// Returns an empty document fragment.\n *\t\tparse( '' );\n *\n *\t\t// Returns an empty document fragment and a collapsed selection.\n *\t\tconst { root, selection } = parse( '[]' );\n *\n *\t\t// Returns an element and a selection that is placed inside the document fragment containing that element.\n *\t\tconst { root, selection } = parse( '[<a></a>]' );\n *\n * @param {String} data An HTML-like string to be parsed.\n * @param {Object} options\n * @param {Array.<Number>} [options.order] An array with the order of parsed ranges added to the returned\n * {@link module:engine/view/documentselection~DocumentSelection Selection} instance. Each element should represent the\n * desired position of each range in the selection instance. For example: `[2, 3, 1]` means that the first range will be\n * placed as the second, the second as the third and the third as the first.\n * @param {Boolean} [options.lastRangeBackward=false] If set to `true`, the last range will be added as backward to the returned\n * {@link module:engine/view/documentselection~DocumentSelection selection} instance.\n * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment}\n * [options.rootElement=null] The default root to use when parsing elements.\n * When set to `null`, the root element will be created automatically. If set to\n * {@link module:engine/view/element~Element Element} or {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment},\n * this node will be used as the root for all parsed nodes.\n * @param {Boolean} [options.sameSelectionCharacters=false] When set to `false`, the selection inside the text should be marked using\n * `{` and `}` and the selection outside the ext using `[` and `]`. When set to `true`, both should be marked with `[` and `]` only.\n * @param {module:engine/view/stylesmap~StylesProcessor} [options.stylesProcessor] Styles processor.\n * @returns {module:engine/view/text~Text|module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|Object}\n * Returns the parsed view node or an object with two fields: `view` and `selection` when selection ranges were included in the data\n * to parse.\n */\nexport function parse(\n\tdata: string,\n\toptions: {\n\t\torder?: number[];\n\t\tlastRangeBackward?: boolean;\n\t\trootElement?: ViewElement | ViewDocumentFragment;\n\t\tsameSelectionCharacters?: boolean;\n\t} = {}\n): ViewNode | ViewDocumentFragment | { view: ViewNode | ViewDocumentFragment; selection: DocumentSelection } {\n\tconst viewDocument = new ViewDocument( new StylesProcessor() );\n\n\toptions.order = options.order || [];\n\tconst rangeParser = new RangeParser( {\n\t\tsameSelectionCharacters: options.sameSelectionCharacters\n\t} );\n\tconst processor = new XmlDataProcessor( viewDocument, {\n\t\tnamespaces: Object.keys( allowedTypes )\n\t} );\n\n\t// Convert data to view.\n\tlet view: ViewDocumentFragment | ViewNode = processor.toView( data )!;\n\n\t// At this point we have a view tree with Elements that could have names like `attribute:b:1`. In the next step\n\t// we need to parse Element's names and convert them to AttributeElements and ContainerElements.\n\tview = _convertViewElements( view );\n\n\t// If custom root is provided - move all nodes there.\n\tif ( options.rootElement ) {\n\t\tconst root = options.rootElement;\n\t\tconst nodes = ( view as any )._removeChildren( 0, ( view as any ).childCount );\n\n\t\troot._removeChildren( 0, root.childCount );\n\t\troot._appendChild( nodes );\n\n\t\tview = root;\n\t}\n\n\t// Parse ranges included in view text nodes.\n\tconst ranges = rangeParser.parse( view, options.order );\n\n\t// If only one element is returned inside DocumentFragment - return that element.\n\tif ( view.is( 'documentFragment' ) && view.childCount === 1 ) {\n\t\tview = view.getChild( 0 );\n\t}\n\n\t// When ranges are present - return object containing view, and selection.\n\tif ( ranges.length ) {\n\t\tconst selection = new DocumentSelection( ranges, { backward: !!options.lastRangeBackward } );\n\n\t\treturn {\n\t\t\tview,\n\t\t\tselection\n\t\t};\n\t}\n\n\t// If single element is returned without selection - remove it from parent and return detached element.\n\tif ( view.parent ) {\n\t\tview._remove();\n\t}\n\n\treturn view;\n}\n\n/**\n * Private helper class used for converting ranges represented as text inside view {@link module:engine/view/text~Text text nodes}.\n *\n * @private\n */\nclass RangeParser {\n\tpublic sameSelectionCharacters: boolean;\n\tprivate _positions!: { bracket: string; position: Position }[];\n\n\t/**\n\t * Creates a range parser instance.\n\t *\n\t * @param {Object} options The range parser configuration.\n\t * @param {Boolean} [options.sameSelectionCharacters=false] When set to `true`, the selection inside the text is marked as\n\t * `{` and `}` and the selection outside the text as `[` and `]`. When set to `false`, both are marked as `[` and `]`.\n\t */\n\tconstructor( options: { sameSelectionCharacters?: boolean } ) {\n\t\tthis.sameSelectionCharacters = !!options.sameSelectionCharacters;\n\t}\n\n\t/**\n\t * Parses the view and returns ranges represented inside {@link module:engine/view/text~Text text nodes}.\n\t * The method will remove all occurrences of `{`, `}`, `[` and `]` from found text nodes. If a text node is empty after\n\t * the process, it will be removed, too.\n\t *\n\t * @param {module:engine/view/node~Node} node The starting node.\n\t * @param {Array.<Number>} order The order of ranges. Each element should represent the desired position of the range after\n\t * sorting. For example: `[2, 3, 1]` means that the first range will be placed as the second, the second as the third and the third\n\t * as the first.\n\t * @returns {Array.<module:engine/view/range~Range>} An array with ranges found.\n\t */\n\tpublic parse( node: ViewNode | ViewDocumentFragment, order: number[] ): Range[] {\n\t\tthis._positions = [];\n\n\t\t// Remove all range brackets from view nodes and save their positions.\n\t\tthis._getPositions( node );\n\n\t\t// Create ranges using gathered positions.\n\t\tlet ranges = this._createRanges();\n\n\t\t// Sort ranges if needed.\n\t\tif ( order.length ) {\n\t\t\tif ( order.length != ranges.length ) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Parse error - there are ${ ranges.length } ranges found, but ranges order array contains ${ order.length } elements.`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tranges = this._sortRanges( ranges, order );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Gathers positions of brackets inside the view tree starting from the provided node. The method will remove all occurrences of\n\t * `{`, `}`, `[` and `]` from found text nodes. If a text node is empty after the process, it will be removed, too.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~Node} node Staring node.\n\t */\n\tprivate _getPositions( node: ViewNode | ViewDocumentFragment ): void {\n\t\tif ( node.is( 'documentFragment' ) || node.is( 'element' ) ) {\n\t\t\t// Copy elements into the array, when nodes will be removed from parent node this array will still have all the\n\t\t\t// items needed for iteration.\n\t\t\tconst children = [ ...node.getChildren() ];\n\n\t\t\tfor ( const child of children ) {\n\t\t\t\tthis._getPositions( child );\n\t\t\t}\n\t\t}\n\n\t\tif ( node.is( '$text' ) ) {\n\t\t\tconst regexp = new RegExp(\n\t\t\t\t`[${ TEXT_RANGE_START_TOKEN }${ TEXT_RANGE_END_TOKEN }\\\\${ ELEMENT_RANGE_END_TOKEN }\\\\${ ELEMENT_RANGE_START_TOKEN }]`,\n\t\t\t\t'g'\n\t\t\t);\n\t\t\tlet text = node.data;\n\t\t\tlet match;\n\t\t\tlet offset = 0;\n\t\t\tconst brackets = [];\n\n\t\t\t// Remove brackets from text and store info about offset inside text node.\n\t\t\twhile ( ( match = regexp.exec( text ) ) ) {\n\t\t\t\tconst index = match.index;\n\t\t\t\tconst bracket = match[ 0 ];\n\n\t\t\t\tbrackets.push( {\n\t\t\t\t\tbracket,\n\t\t\t\t\ttextOffset: index - offset\n\t\t\t\t} );\n\n\t\t\t\toffset++;\n\t\t\t}\n\n\t\t\ttext = text.replace( regexp, '' );\n\t\t\tnode._data = text;\n\t\t\tconst index = node.index!;\n\t\t\tconst parent = node.parent!;\n\n\t\t\t// Remove empty text nodes.\n\t\t\tif ( !text ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tfor ( const item of brackets ) {\n\t\t\t\t// Non-empty text node.\n\t\t\t\tif ( text ) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.sameSelectionCharacters ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t!this.sameSelectionCharacters &&\n\t\t\t\t\t\t\t( item.bracket == TEXT_RANGE_START_TOKEN || item.bracket == TEXT_RANGE_END_TOKEN )\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Store information about text range delimiter.\n\t\t\t\t\t\tthis._positions.push( {\n\t\t\t\t\t\t\tbracket: item.bracket,\n\t\t\t\t\t\t\tposition: new Position( node, item.textOffset )\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Check if element range delimiter is not placed inside text node.\n\t\t\t\t\t\tif ( !this.sameSelectionCharacters && item.textOffset !== 0 && item.textOffset !== text.length ) {\n\t\t\t\t\t\t\tthrow new Error( `Parse error - range delimiter '${ item.bracket }' is placed inside text node.` );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If bracket is placed at the end of the text node - it should be positioned after it.\n\t\t\t\t\t\tconst offset = ( item.textOffset === 0 ? index : index + 1 );\n\n\t\t\t\t\t\t// Store information about element range delimiter.\n\t\t\t\t\t\tthis._positions.push( {\n\t\t\t\t\t\t\tbracket: item.bracket,\n\t\t\t\t\t\t\tposition: new Position( parent, offset )\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ( !this.sameSelectionCharacters &&\n\t\t\t\t\t\titem.bracket == TEXT_RANGE_START_TOKEN ||\n\t\t\t\t\t\titem.bracket == TEXT_RANGE_END_TOKEN\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new Error( `Parse error - text range delimiter '${ item.bracket }' is placed inside empty text node. ` );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store information about element range delimiter.\n\t\t\t\t\tthis._positions.push( {\n\t\t\t\t\t\tbracket: item.bracket,\n\t\t\t\t\t\tposition: new Position( parent, index )\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sorts ranges in a given order. Range order should be an array and each element should represent the desired position\n\t * of the range after sorting.\n\t * For example: `[2, 3, 1]` means that the first range will be placed as the second, the second as the third and the third\n\t * as the first.\n\t *\n\t * @private\n\t * @param {Array.<module:engine/view/range~Range>} ranges Ranges to sort.\n\t * @param {Array.<Number>} rangesOrder An array with new range order.\n\t * @returns {Array} Sorted ranges array.\n\t */\n\tprivate _sortRanges( ranges: Range[], rangesOrder: number[] ): Range[] {\n\t\tconst sortedRanges = [];\n\t\tlet index = 0;\n\n\t\tfor ( const newPosition of rangesOrder ) {\n\t\t\tif ( ranges[ newPosition - 1 ] === undefined ) {\n\t\t\t\tthrow new Error( 'Parse error - provided ranges order is invalid.' );\n\t\t\t}\n\n\t\t\tsortedRanges[ newPosition - 1 ] = ranges[ index ];\n\t\t\tindex++;\n\t\t}\n\n\t\treturn sortedRanges;\n\t}\n\n\t/**\n\t * Uses all found bracket positions to create ranges from them.\n\t *\n\t * @private\n\t * @returns {Array.<module:engine/view/range~Range>}\n\t */\n\tprivate _createRanges(): Range[] {\n\t\tconst ranges = [];\n\t\tlet range = null;\n\n\t\tfor ( const item of this._positions ) {\n\t\t\t// When end of range is found without opening.\n\t\t\tif ( !range && ( item.bracket == ELEMENT_RANGE_END_TOKEN || item.bracket == TEXT_RANGE_END_TOKEN ) ) {\n\t\t\t\tthrow new Error( `Parse error - end of range was found '${ item.bracket }' but range was not started before.` );\n\t\t\t}\n\n\t\t\t// When second start of range is found when one is already opened - selection does not allow intersecting\n\t\t\t// ranges.\n\t\t\tif ( range && ( item.bracket == ELEMENT_RANGE_START_TOKEN || item.bracket == TEXT_RANGE_START_TOKEN ) ) {\n\t\t\t\tthrow new Error( `Parse error - start of range was found '${ item.bracket }' but one range is already started.` );\n\t\t\t}\n\n\t\t\tif ( item.bracket == ELEMENT_RANGE_START_TOKEN || item.bracket == TEXT_RANGE_START_TOKEN ) {\n\t\t\t\trange = new Range( item.position, item.position );\n\t\t\t} else {\n\t\t\t\trange!.end = item.position;\n\t\t\t\tranges.push( range! );\n\t\t\t\trange = null;\n\t\t\t}\n\t\t}\n\n\t\t// Check if all ranges have proper ending.\n\t\tif ( range !== null ) {\n\t\t\tthrow new Error( 'Parse error - range was started but no end delimiter was found.' );\n\t\t}\n\n\t\treturn ranges;\n\t}\n}\n\n/**\n * Private helper class used for converting the view tree to a string.\n *\n * @private\n */\nclass ViewStringify {\n\tpublic root: ViewNode | ViewDocumentFragment;\n\tpublic selection: DocumentSelection | null;\n\tpublic ranges: Range[];\n\tpublic showType: boolean;\n\tpublic showPriority: boolean;\n\tpublic showAttributeElementId: boolean;\n\tpublic ignoreRoot: boolean;\n\tpublic sameSelectionCharacters: boolean;\n\tpublic renderUIElements: boolean;\n\tpublic renderRawElements: boolean;\n\tpublic domConverter: DomConverter;\n\n\t/**\n\t * Creates a view stringify instance.\n\t *\n\t * @param root\n\t * @param {module:engine/view/documentselection~DocumentSelection} selection A selection whose ranges\n\t * should also be converted to a string.\n\t * @param {Object} options An options object.\n\t * @param {Boolean} [options.showType=false] When set to `true`, the type of elements will be printed (`<container:p>`\n\t * instead of `<p>`, `<attribute:b>` instead of `<b>` and `<empty:img>` instead of `<img>`).\n\t * @param {Boolean} [options.showPriority=false] When set to `true`, the attribute element's priority will be printed.\n\t * @param {Boolean} [options.ignoreRoot=false] When set to `true`, the root's element opening and closing tag will not\n\t * be outputted.\n\t * @param {Boolean} [options.sameSelectionCharacters=false] When set to `true`, the selection inside the text is marked as\n\t * `{` and `}` and the selection outside the text as `[` and `]`. When set to `false`, both are marked as `[` and `]`.\n\t * @param {Boolean} [options.renderUIElements=false] When set to `true`, the inner content of each\n\t * {@link module:engine/view/uielement~UIElement} will be printed.\n\t * @param {Boolean} [options.renderRawElements=false] When set to `true`, the inner content of each\n\t * @param {Object} [options.domConverter={}] When set to an actual {@link module:engine/view/domconverter~DomConverter DomConverter}\n\t * instance, it lets the conversion go through exactly the same flow the editing view is going through,\n\t * i.e. with view data filtering. Otherwise the simple stub is used.\n\t * {@link module:engine/view/rawelement~RawElement} will be printed.\n\t */\n\tconstructor(\n\t\troot: ViewNode | ViewDocumentFragment,\n\t\tselection: DocumentSelection | null,\n\t\toptions: {\n\t\t\tshowType?: boolean;\n\t\t\tshowPriority?: boolean;\n\t\t\tshowAttributeElementId?: boolean;\n\t\t\tignoreRoot?: boolean;\n\t\t\tsameSelectionCharacters?: boolean;\n\t\t\trenderUIElements?: boolean;\n\t\t\trenderRawElements?: boolean;\n\t\t\tdomConverter?: DomConverter;\n\t\t}\n\t) {\n\t\tthis.root = root;\n\t\tthis.selection = selection;\n\t\tthis.ranges = [];\n\n\t\tif ( selection ) {\n\t\t\tthis.ranges = [ ...selection.getRanges() ];\n\t\t}\n\n\t\tthis.showType = !!options.showType;\n\t\tthis.showPriority = !!options.showPriority;\n\t\tthis.showAttributeElementId = !!options.showAttributeElementId;\n\t\tthis.ignoreRoot = !!options.ignoreRoot;\n\t\tthis.sameSelectionCharacters = !!options.sameSelectionCharacters;\n\t\tthis.renderUIElements = !!options.renderUIElements;\n\t\tthis.renderRawElements = !!options.renderRawElements;\n\t\tthis.domConverter = options.domConverter || domConverterStub;\n\t}\n\n\t/**\n\t * Converts the view to a string.\n\t *\n\t * @returns {String} String representation of the view elements.\n\t */\n\tpublic stringify(): string {\n\t\tlet result = '';\n\t\tthis._walkView( this.root, chunk => {\n\t\t\tresult += chunk;\n\t\t} );\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Executes a simple walker that iterates over all elements in the view tree starting from the root element.\n\t * Calls the `callback` with parsed chunks of string data.\n\t *\n\t * @private\n\t * @param {module:engine/view/documentfragment~DocumentFragment|module:engine/view/element~Element|module:engine/view/text~Text} root\n\t * @param {Function} callback\n\t */\n\tprivate _walkView(\n\t\troot: ViewNode | ViewDocumentFragment,\n\t\tcallback: ( chunk: string ) => void\n\t): void {\n\t\tconst ignore = this.ignoreRoot && this.root === root;\n\n\t\tif ( root.is( 'element' ) || root.is( 'documentFragment' ) ) {\n\t\t\tif ( root.is( 'element' ) && !ignore ) {\n\t\t\t\tcallback( this._stringifyElementOpen( root ) );\n\t\t\t}\n\n\t\t\tif ( ( this.renderUIElements && root.is( 'uiElement' ) ) ) {\n\t\t\t\tcallback( root.render( document, this.domConverter ).innerHTML );\n\t\t\t} else if ( this.renderRawElements && root.is( 'rawElement' ) ) {\n\t\t\t\t// There's no DOM element for \"root\" to pass to render(). Creating\n\t\t\t\t// a surrogate container to render the children instead.\n\t\t\t\tconst rawContentContainer = document.createElement( 'div' );\n\t\t\t\troot.render( rawContentContainer, this.domConverter );\n\n\t\t\t\tcallback( rawContentContainer.innerHTML );\n\t\t\t} else {\n\t\t\t\tlet offset = 0;\n\t\t\t\tcallback( this._stringifyElementRanges( root, offset ) );\n\n\t\t\t\tfor ( const child of root.getChildren() ) {\n\t\t\t\t\tthis._walkView( child, callback );\n\t\t\t\t\toffset++;\n\t\t\t\t\tcallback( this._stringifyElementRanges( root, offset ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( root.is( 'element' ) && !ignore ) {\n\t\t\t\tcallback( this._stringifyElementClose( root ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( root.is( '$text' ) ) {\n\t\t\tcallback( this._stringifyTextRanges( root ) );\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a given {@link module:engine/view/element~Element element} has a {@link module:engine/view/range~Range#start range start}\n\t * or a {@link module:engine/view/range~Range#start range end} placed at a given offset and returns its string representation.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} element\n\t * @param {Number} offset\n\t */\n\tprivate _stringifyElementRanges( element: ViewElement | ViewDocumentFragment, offset: number ): string {\n\t\tlet start = '';\n\t\tlet end = '';\n\t\tlet collapsed = '';\n\n\t\tfor ( const range of this.ranges ) {\n\t\t\tif ( range.start.parent == element && range.start.offset === offset ) {\n\t\t\t\tif ( range.isCollapsed ) {\n\t\t\t\t\tcollapsed += ELEMENT_RANGE_START_TOKEN + ELEMENT_RANGE_END_TOKEN;\n\t\t\t\t} else {\n\t\t\t\t\tstart += ELEMENT_RANGE_START_TOKEN;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( range.end.parent === element && range.end.offset === offset && !range.isCollapsed ) {\n\t\t\t\tend += ELEMENT_RANGE_END_TOKEN;\n\t\t\t}\n\t\t}\n\n\t\treturn end + collapsed + start;\n\t}\n\n\t/**\n\t * Checks if a given {@link module:engine/view/element~Element Text node} has a\n\t * {@link module:engine/view/range~Range#start range start} or a\n\t * {@link module:engine/view/range~Range#start range end} placed somewhere inside. Returns a string representation of text\n\t * with range delimiters placed inside.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} node\n\t */\n\tprivate _stringifyTextRanges( node: ViewText ): string {\n\t\tconst length = node.data.length;\n\t\tconst data = node.data.split( '' );\n\t\tlet rangeStartToken, rangeEndToken;\n\n\t\tif ( this.sameSelectionCharacters ) {\n\t\t\trangeStartToken = ELEMENT_RANGE_START_TOKEN;\n\t\t\trangeEndToken = ELEMENT_RANGE_END_TOKEN;\n\t\t} else {\n\t\t\trangeStartToken = TEXT_RANGE_START_TOKEN;\n\t\t\trangeEndToken = TEXT_RANGE_END_TOKEN;\n\t\t}\n\n\t\t// Add one more element for ranges ending after last character in text.\n\t\tdata[ length ] = '';\n\n\t\t// Represent each letter as object with information about opening/closing ranges at each offset.\n\t\tconst result = data.map( letter => {\n\t\t\treturn {\n\t\t\t\tletter,\n\t\t\t\tstart: '',\n\t\t\t\tend: '',\n\t\t\t\tcollapsed: ''\n\t\t\t};\n\t\t} );\n\n\t\tfor ( const range of this.ranges ) {\n\t\t\tconst start = range.start;\n\t\t\tconst end = range.end;\n\n\t\t\tif ( start.parent == node && start.offset >= 0 && start.offset <= length ) {\n\t\t\t\tif ( range.isCollapsed ) {\n\t\t\t\t\tresult[ end.offset ].collapsed += rangeStartToken + rangeEndToken;\n\t\t\t\t} else {\n\t\t\t\t\tresult[ start.offset ].start += rangeStartToken;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( end.parent == node && end.offset >= 0 && end.offset <= length && !range.isCollapsed ) {\n\t\t\t\tresult[ end.offset ].end += rangeEndToken;\n\t\t\t}\n\t\t}\n\n\t\treturn result.map( item => item.end + item.collapsed + item.start + item.letter ).join( '' );\n\t}\n\n\t/**\n\t * Converts the passed {@link module:engine/view/element~Element element} to an opening tag.\n\t *\n\t * Depending on the current configuration, the opening tag can be simple (`<a>`), contain a type prefix (`<container:p>`,\n\t * `<attribute:a>` or `<empty:img>`), contain priority information ( `<attribute:a view-priority=\"20\">` ),\n\t * or contain element id ( `<attribute:span view-id=\"foo\">` ). Element attributes will also be included\n\t * (`<a href=\"https://ckeditor.com\" name=\"foobar\">`).\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {String}\n\t */\n\tprivate _stringifyElementOpen( element: ViewElement ): string {\n\t\tconst priority = this._stringifyElementPriority( element );\n\t\tconst id = this._stringifyElementId( element );\n\n\t\tconst type = this._stringifyElementType( element );\n\t\tconst name = [ type, element.name ].filter( i => i !== '' ).join( ':' );\n\t\tconst attributes = this._stringifyElementAttributes( element );\n\t\tconst parts = [ name, priority, id, attributes ];\n\n\t\treturn `<${ parts.filter( i => i !== '' ).join( ' ' ) }>`;\n\t}\n\n\t/**\n\t * Converts the passed {@link module:engine/view/element~Element element} to a closing tag.\n\t * Depending on the current configuration, the closing tag can be simple (`</a>`) or contain a type prefix (`</container:p>`,\n\t * `</attribute:a>` or `</empty:img>`).\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {String}\n\t */\n\tprivate _stringifyElementClose( element: ViewElement ): string {\n\t\tconst type = this._stringifyElementType( element );\n\t\tconst name = [ type, element.name ].filter( i => i !== '' ).join( ':' );\n\n\t\treturn `</${ name }>`;\n\t}\n\n\t/**\n\t * Converts the passed {@link module:engine/view/element~Element element's} type to its string representation\n\t *\n\t * Returns:\n\t * * 'attribute' for {@link module:engine/view/attributeelement~AttributeElement attribute elements},\n\t * * 'container' for {@link module:engine/view/containerelement~ContainerElement container elements},\n\t * * 'empty' for {@link module:engine/view/emptyelement~EmptyElement empty elements},\n\t * * 'ui' for {@link module:engine/view/uielement~UIElement UI elements},\n\t * * 'raw' for {@link module:engine/view/rawelement~RawElement raw elements},\n\t * * an empty string when the current configuration is preventing showing elements' types.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {String}\n\t */\n\tprivate _stringifyElementType( element: ViewElement ): string {\n\t\tif ( this.showType ) {\n\t\t\tfor ( const type in allowedTypes ) {\n\t\t\t\tif ( element instanceof allowedTypes[ type as keyof typeof allowedTypes ] ) {\n\t\t\t\t\treturn type;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Converts the passed {@link module:engine/view/element~Element element} to its priority representation.\n\t *\n\t * The priority string representation will be returned when the passed element is an instance of\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute element} and the current configuration allows to show the\n\t * priority. Otherwise returns an empty string.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {String}\n\t */\n\tprivate _stringifyElementPriority( element: ViewElement ): string {\n\t\tif ( this.showPriority && element.is( 'attributeElement' ) ) {\n\t\t\treturn `view-priority=\"${ element.priority }\"`;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Converts the passed {@link module:engine/view/element~Element element} to its id representation.\n\t *\n\t * The id string representation will be returned when the passed element is an instance of\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute element}, the element has an id\n\t * and the current configuration allows to show the id. Otherwise returns an empty string.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {String}\n\t */\n\tprivate _stringifyElementId( element: ViewElement ): string {\n\t\tif ( this.showAttributeElementId && element.is( 'attributeElement' ) && element.id ) {\n\t\t\treturn `view-id=\"${ element.id }\"`;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Converts the passed {@link module:engine/view/element~Element element} attributes to their string representation.\n\t * If an element has no attributes, an empty string is returned.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {String}\n\t */\n\tprivate _stringifyElementAttributes( element: ViewElement ): string {\n\t\tconst attributes = [];\n\t\tconst keys = [ ...element.getAttributeKeys() ].sort();\n\n\t\tfor ( const attribute of keys ) {\n\t\t\tlet attributeValue;\n\n\t\t\tif ( attribute === 'class' ) {\n\t\t\t\tattributeValue = [ ...element.getClassNames() ]\n\t\t\t\t\t.sort()\n\t\t\t\t\t.join( ' ' );\n\t\t\t} else if ( attribute === 'style' ) {\n\t\t\t\tattributeValue = [ ...element.getStyleNames() ]\n\t\t\t\t\t.sort()\n\t\t\t\t\t.map( style => `${ style }:${ element.getStyle( style ) }` )\n\t\t\t\t\t.join( ';' );\n\t\t\t} else {\n\t\t\t\tattributeValue = element.getAttribute( attribute );\n\t\t\t}\n\n\t\t\tattributes.push( `${ attribute }=\"${ attributeValue }\"` );\n\t\t}\n\n\t\treturn attributes.join( ' ' );\n\t}\n}\n\n// Converts {@link module:engine/view/element~Element elements} to\n// {@link module:engine/view/attributeelement~AttributeElement attribute elements},\n// {@link module:engine/view/containerelement~ContainerElement container elements},\n// {@link module:engine/view/emptyelement~EmptyElement empty elements} or\n// {@link module:engine/view/uielement~UIElement UI elements}.\n// It converts the whole tree starting from the `rootNode`. The conversion is based on element names.\n// See the `_convertElement` method for more details.\n//\n// @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|module:engine/view/text~Text}\n//  rootNode The root node to convert.\n// @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|\n// module:engine/view/text~Text} The root node of converted elements.\nfunction _convertViewElements( rootNode: ViewNode | ViewDocumentFragment ) {\n\tif ( rootNode.is( 'element' ) || rootNode.is( 'documentFragment' ) ) {\n\t\t// Convert element or leave document fragment.\n\n\t\tconst convertedElement = rootNode.is( 'documentFragment' ) ?\n\t\t\tnew ViewDocumentFragment( rootNode.document ) :\n\t\t\t_convertElement( rootNode.document, rootNode );\n\n\t\t// Convert all child nodes.\n\t\t// Cache the nodes in array. Otherwise, we would skip some nodes because during iteration we move nodes\n\t\t// from `rootNode` to `convertedElement`. This would interfere with iteration.\n\t\tfor ( const child of [ ...rootNode.getChildren() ] ) {\n\t\t\tif ( convertedElement.is( 'emptyElement' ) ) {\n\t\t\t\tthrow new Error( 'Parse error - cannot parse inside EmptyElement.' );\n\t\t\t} else if ( convertedElement.is( 'uiElement' ) ) {\n\t\t\t\tthrow new Error( 'Parse error - cannot parse inside UIElement.' );\n\t\t\t} else if ( convertedElement.is( 'rawElement' ) ) {\n\t\t\t\tthrow new Error( 'Parse error - cannot parse inside RawElement.' );\n\t\t\t}\n\n\t\t\tconvertedElement._appendChild( _convertViewElements( child ) );\n\t\t}\n\n\t\treturn convertedElement;\n\t}\n\n\treturn rootNode;\n}\n\n// Converts an {@link module:engine/view/element~Element element} to\n// {@link module:engine/view/attributeelement~AttributeElement attribute element},\n// {@link module:engine/view/containerelement~ContainerElement container element},\n// {@link module:engine/view/emptyelement~EmptyElement empty element} or\n// {@link module:engine/view/uielement~UIElement UI element}.\n// If the element's name is in the format of `attribute:b`, it will be converted to\n// an {@link module:engine/view/attributeelement~AttributeElement attribute element} with a priority of 11.\n// Additionally, attribute elements may have specified priority (for example `view-priority=\"11\"`) and/or\n// id (for example `view-id=\"foo\"`).\n// If the element's name is in the format of `container:p`, it will be converted to\n// a {@link module:engine/view/containerelement~ContainerElement container element}.\n// If the element's name is in the format of `empty:img`, it will be converted to\n// an {@link module:engine/view/emptyelement~EmptyElement empty element}.\n// If the element's name is in the format of `ui:span`, it will be converted to\n// a {@link module:engine/view/uielement~UIElement UI element}.\n// If the element's name does not contain any additional information, a {@link module:engine/view/element~Element view Element} will be\n// returned.\n//\n// @param {module:engine/view/element~Element} viewElement A view element to convert.\n// @returns {module:engine/view/element~Element|module:engine/view/attributeelement~AttributeElement|\n// module:engine/view/emptyelement~EmptyElement|module:engine/view/uielement~UIElement|\n// module:engine/view/containerelement~ContainerElement} A tree view\n// element converted according to its name.\nfunction _convertElement( viewDocument: ViewDocument, viewElement: ViewElement ) {\n\tconst info = _convertElementNameAndInfo( viewElement );\n\tconst ElementConstructor = allowedTypes[ info.type! ];\n\tconst newElement = ElementConstructor ? new ElementConstructor( viewDocument, info.name ) : new ViewElement( viewDocument, info.name );\n\n\tif ( newElement.is( 'attributeElement' ) ) {\n\t\tif ( info.priority !== null ) {\n\t\t\t( newElement as any )._priority = info.priority;\n\t\t}\n\n\t\tif ( info.id !== null ) {\n\t\t\t( newElement as any )._id = info.id;\n\t\t}\n\t}\n\n\t// Move attributes.\n\tfor ( const attributeKey of viewElement.getAttributeKeys() ) {\n\t\tnewElement._setAttribute( attributeKey, viewElement.getAttribute( attributeKey )! );\n\t}\n\n\treturn newElement;\n}\n\n// Converts the `view-priority` attribute and the {@link module:engine/view/element~Element#name element's name} information needed for\n// creating {@link module:engine/view/attributeelement~AttributeElement attribute element},\n// {@link module:engine/view/containerelement~ContainerElement container element},\n// {@link module:engine/view/emptyelement~EmptyElement empty element} or\n// {@link module:engine/view/uielement~UIElement UI element}.\n// The name can be provided in two formats: as a simple element's name (`div`), or as a type and name (`container:div`,\n// `attribute:span`, `empty:img`, `ui:span`);\n//\n// @param {module:engine/view/element~Element} element The element whose name should be converted.\n// @returns {Object} info An object with parsed information.\n// @returns {String} info.name The parsed name of the element.\n// @returns {String|null} info.type The parsed type of the element. It can be `attribute`, `container` or `empty`.\n// returns {Number|null} info.priority The parsed priority of the element.\nfunction _convertElementNameAndInfo( viewElement: ViewElement ) {\n\tconst parts = viewElement.name.split( ':' );\n\n\tconst priority = _convertPriority( viewElement.getAttribute( 'view-priority' )! );\n\tconst id = viewElement.hasAttribute( 'view-id' ) ? viewElement.getAttribute( 'view-id' ) : null;\n\n\tviewElement._removeAttribute( 'view-priority' );\n\tviewElement._removeAttribute( 'view-id' );\n\n\tif ( parts.length == 1 ) {\n\t\treturn {\n\t\t\tname: parts[ 0 ],\n\t\t\ttype: priority !== null ? 'attribute' : null,\n\t\t\tpriority,\n\t\t\tid\n\t\t} as const;\n\t}\n\n\t// Check if type and name: container:div.\n\tconst type = _convertType( parts[ 0 ] );\n\n\tif ( type ) {\n\t\treturn {\n\t\t\tname: parts[ 1 ],\n\t\t\ttype,\n\t\t\tpriority,\n\t\t\tid\n\t\t} as const;\n\t}\n\n\tthrow new Error( `Parse error - cannot parse element's name: ${ viewElement.name }.` );\n}\n\n// Checks if the element's type is allowed. Returns `attribute`, `container`, `empty` or `null`.\n//\n// @param {String} type\n// @returns {String|null}\nfunction _convertType( type: string ): keyof typeof allowedTypes | null {\n\treturn type in allowedTypes ? type as any : null;\n}\n\n// Checks if a given priority is allowed. Returns null if the priority cannot be converted.\n//\n// @param {String} priorityString\n// returns {Number|null}\nfunction _convertPriority( priorityString: string ) {\n\tconst priority = parseInt( priorityString, 10 );\n\n\tif ( !isNaN( priority ) ) {\n\t\treturn priority;\n\t}\n\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/attributeelement\n */\n\nimport Element from './element';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport type DocumentFragment from './documentfragment';\n\n// Default attribute priority.\nconst DEFAULT_PRIORITY = 10;\n\n/**\n * Attribute elements are used to represent formatting elements in the view (think – `<b>`, `<span style=\"font-size: 2em\">`, etc.).\n * Most often they are created when downcasting model text attributes.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * To create a new attribute element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `DowncastWriter#createAttributeElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class AttributeElement extends Element {\n\tpublic static readonly DEFAULT_PRIORITY: number = DEFAULT_PRIORITY;\n\n\tpublic override readonly getFillerOffset: () => number | null;\n\tprivate readonly _priority: number;\n\tprivate readonly _id: string | number | null;\n\tprivate readonly _clonesGroup: Set<AttributeElement> | null;\n\n\t/**\n\t * Creates an attribute element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createAttributeElement\n\t * @see module:engine/view/element~Element\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( ...args: ConstructorParameters<typeof Element> ) {\n\t\tsuper( ...args );\n\n\t\t/**\n\t\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\n\t\t/**\n\t\t * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t\t *\n\t\t * @protected\n\t\t * @member {Number}\n\t\t */\n\t\tthis._priority = DEFAULT_PRIORITY;\n\n\t\t/**\n\t\t * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n\t\t * and then two elements are considered similar if, and only if they have the same `_id`.\n\t\t *\n\t\t * @protected\n\t\t * @member {String|Number}\n\t\t */\n\t\tthis._id = null;\n\n\t\t/**\n\t\t * Keeps all the attribute elements that have the same {@link module:engine/view/attributeelement~AttributeElement#id ids}\n\t\t * and still exist in the view tree.\n\t\t *\n\t\t * This property is managed by {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set.<module:engine/view/attributeelement~AttributeElement>|null}\n\t\t */\n\t\tthis._clonesGroup = null;\n\t}\n\n\t/**\n\t * Element priority. Decides in what order elements are wrapped by {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tpublic get priority(): number {\n\t\treturn this._priority;\n\t}\n\n\t/**\n\t * Element identifier. If set, it is used by {@link module:engine/view/element~Element#isSimilar},\n\t * and then two elements are considered similar if, and only if they have the same `id`.\n\t *\n\t * @readonly\n\t * @type {String|Number}\n\t */\n\tpublic get id(): string | number | null {\n\t\treturn this._id;\n\t}\n\n\t/**\n\t * Returns all {@link module:engine/view/attributeelement~AttributeElement attribute elements} that has the\n\t * same {@link module:engine/view/attributeelement~AttributeElement#id id} and are in the view tree (were not removed).\n\t *\n\t * Note: If this element has been removed from the tree, returned set will not include it.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError attribute-element-get-elements-with-same-id-no-id}\n\t * if this element has no `id`.\n\t *\n\t * @returns {Set.<module:engine/view/attributeelement~AttributeElement>} Set containing all the attribute elements\n\t * with the same `id` that were added and not removed from the view tree.\n\t */\n\tpublic getElementsWithSameId(): Set<AttributeElement> {\n\t\tif ( this.id === null ) {\n\t\t\t/**\n\t\t\t * Cannot get elements with the same id for an attribute element without id.\n\t\t\t *\n\t\t\t * @error attribute-element-get-elements-with-same-id-no-id\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'attribute-element-get-elements-with-same-id-no-id',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\treturn new Set( this._clonesGroup );\n\t}\n\n\t/**\n\t * Checks if this element is similar to other element.\n\t *\n\t * If none of elements has set {@link module:engine/view/attributeelement~AttributeElement#id}, then both elements\n\t * should have the same name, attributes and priority to be considered as similar. Two similar elements can contain\n\t * different set of children nodes.\n\t *\n\t * If at least one element has {@link module:engine/view/attributeelement~AttributeElement#id} set, then both\n\t * elements have to have the same {@link module:engine/view/attributeelement~AttributeElement#id} value to be\n\t * considered similar.\n\t *\n\t * Similarity is important for {@link module:engine/view/downcastwriter~DowncastWriter}. For example:\n\t *\n\t * * two following similar elements can be merged together into one, longer element,\n\t * * {@link module:engine/view/downcastwriter~DowncastWriter#unwrap} checks similarity of passed element and processed element to\n\t * decide whether processed element should be unwrapped,\n\t * * etc.\n\t *\n\t * @param {module:engine/view/element~Element} otherElement\n\t * @returns {Boolean}\n\t */\n\tpublic override isSimilar( otherElement: Element ): boolean {\n\t\t// If any element has an `id` set, just compare the ids.\n\t\tif ( this.id !== null || ( otherElement as any ).id !== null ) {\n\t\t\treturn this.id === ( otherElement as any ).id;\n\t\t}\n\n\t\treturn super.isSimilar( otherElement ) && this.priority == ( otherElement as any ).priority;\n\t}\n\n\t/**\n\t * Clones provided element with priority.\n\t *\n\t * @protected\n\t * @param {Boolean} deep If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/attributeelement~AttributeElement} Clone of this element.\n\t */\n\tpublic override _clone( deep: boolean = false ): Element {\n\t\tconst cloned = super._clone( deep );\n\n\t\t// Clone priority too.\n\t\t( cloned as any )._priority = this._priority;\n\n\t\t// And id too.\n\t\t( cloned as any )._id = this._id;\n\n\t\treturn cloned;\n\t}\n}\n\n/**\n * Checks whether this object is of the given.\n *\n *\t\tattributeElement.is( 'attributeElement' ); // -> true\n *\t\tattributeElement.is( 'element' ); // -> true\n *\t\tattributeElement.is( 'node' ); // -> true\n *\t\tattributeElement.is( 'view:attributeElement' ); // -> true\n *\t\tattributeElement.is( 'view:element' ); // -> true\n *\t\tattributeElement.is( 'view:node' ); // -> true\n *\n *\t\tattributeElement.is( 'model:element' ); // -> false\n *\t\tattributeElement.is( 'documentFragment' ); // -> false\n *\n * Assuming that the object being checked is an attribute element, you can also check its\n * {@link module:engine/view/attributeelement~AttributeElement#name name}:\n *\n *\t\tattributeElement.is( 'element', 'b' ); // -> true if this is a bold element\n *\t\tattributeElement.is( 'attributeElement', 'b' ); // -> same as above\n *\t\ttext.is( 'element', 'b' ); -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * @param {String} type Type to check.\n * @param {String} [name] Element name.\n * @returns {Boolean}\n */\nAttributeElement.prototype.is = function( type: string, name?: string ): boolean {\n\tif ( !name ) {\n\t\treturn type === 'attributeElement' || type === 'view:attributeElement' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\ttype === 'node' || type === 'view:node';\n\t} else {\n\t\treturn name === this.name && (\n\t\t\ttype === 'attributeElement' || type === 'view:attributeElement' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'element' || type === 'view:element'\n\t\t);\n\t}\n};\n\n// Returns block {@link module:engine/view/filler~Filler filler} offset or `null` if block filler is not needed.\n//\n// @returns {Number|null} Block filler offset or `null` if block filler is not needed.\nfunction getFillerOffset( this: AttributeElement ): number | null {\n\t// <b>foo</b> does not need filler.\n\tif ( nonUiChildrenCount( this ) ) {\n\t\treturn null;\n\t}\n\n\tlet element = this.parent;\n\n\t// <p><b></b></p> needs filler -> <p><b><br></b></p>\n\twhile ( element && element.is( 'attributeElement' ) ) {\n\t\tif ( nonUiChildrenCount( element ) > 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\telement = element.parent;\n\t}\n\n\tif ( !element || nonUiChildrenCount( element ) > 1 ) {\n\t\treturn null;\n\t}\n\n\t// Render block filler at the end of element (after all ui elements).\n\treturn this.childCount;\n}\n\n// Returns total count of children that are not {@link module:engine/view/uielement~UIElement UIElements}.\n//\n// @param {module:engine/view/element~Element} element\n// @returns {Number}\nfunction nonUiChildrenCount( element: Element | DocumentFragment ): number {\n\treturn Array.from( element.getChildren() ).filter( element => !element.is( 'uiElement' ) ).length;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/containerelement\n */\n\nimport Element from './element';\n\n/**\n * Containers are elements which define document structure. They define boundaries for\n * {@link module:engine/view/attributeelement~AttributeElement attributes}. They are mostly used for block elements like `<p>` or `<div>`.\n *\n * Editing engine does not define a fixed HTML DTD. This is why a feature developer needs to choose between various\n * types (container element, {@link module:engine/view/attributeelement~AttributeElement attribute element},\n * {@link module:engine/view/emptyelement~EmptyElement empty element}, etc) when developing a feature.\n *\n * The container element should be your default choice when writing a converter, unless:\n *\n * * this element represents a model text attribute (then use {@link module:engine/view/attributeelement~AttributeElement}),\n * * this is an empty element like `<img>` (then use {@link module:engine/view/emptyelement~EmptyElement}),\n * * this is a root element,\n * * this is a nested editable element (then use  {@link module:engine/view/editableelement~EditableElement}).\n *\n * To create a new container element instance use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `DowncastWriter#createContainerElement()`}\n * method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class ContainerElement extends Element {\n\tpublic override readonly getFillerOffset: () => number | null;\n\n\t/**\n\t * Creates a container element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createContainerElement\n\t * @see module:engine/view/element~Element\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( ...args: ConstructorParameters<typeof Element> ) {\n\t\tsuper( ...args );\n\n\t\t/**\n\t\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n}\n\n/**\n * Checks whether this object is of the given.\n *\n *\t\tcontainerElement.is( 'containerElement' ); // -> true\n *\t\tcontainerElement.is( 'element' ); // -> true\n *\t\tcontainerElement.is( 'node' ); // -> true\n *\t\tcontainerElement.is( 'view:containerElement' ); // -> true\n *\t\tcontainerElement.is( 'view:element' ); // -> true\n *\t\tcontainerElement.is( 'view:node' ); // -> true\n *\n *\t\tcontainerElement.is( 'model:element' ); // -> false\n *\t\tcontainerElement.is( 'documentFragment' ); // -> false\n *\n * Assuming that the object being checked is a container element, you can also check its\n * {@link module:engine/view/containerelement~ContainerElement#name name}:\n *\n *\t\tcontainerElement.is( 'element', 'div' ); // -> true if this is a div container element\n *\t\tcontainerElement.is( 'contaienrElement', 'div' ); // -> same as above\n *\t\ttext.is( 'element', 'div' ); -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * @param {String} type Type to check.\n * @param {String} [name] Element name.\n * @returns {Boolean}\n */\nContainerElement.prototype.is = function( type: string, name?: string ): boolean {\n\tif ( !name ) {\n\t\treturn type === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\ttype === 'node' || type === 'view:node';\n\t} else {\n\t\treturn name === this.name && (\n\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'element' || type === 'view:element'\n\t\t);\n\t}\n};\n\n/**\n * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n *\n * @returns {Number|null} Block filler offset or `null` if block filler is not needed.\n */\nexport function getFillerOffset( this: ContainerElement ): number | null {\n\tconst children = [ ...this.getChildren() ];\n\tconst lastChild = children[ this.childCount - 1 ];\n\n\t// Block filler is required after a `<br>` if it's the last element in its container. See #1422.\n\tif ( lastChild && lastChild.is( 'element', 'br' ) ) {\n\t\treturn this.childCount;\n\t}\n\n\tfor ( const child of children ) {\n\t\t// If there's any non-UI element – don't render the bogus.\n\t\tif ( !child.is( 'uiElement' ) ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// If there are only UI elements – render the bogus at the end of the element.\n\treturn this.childCount;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* eslint-disable new-cap */\n\n/**\n * @module engine/view/document\n */\n\nimport DocumentSelection from './documentselection';\nimport Collection from '@ckeditor/ckeditor5-utils/src/collection';\nimport BubblingEmitterMixin from './observer/bubblingemittermixin';\nimport { Observable } from '@ckeditor/ckeditor5-utils/src/observablemixin';\n\nimport type { StylesProcessor } from './stylesmap';\nimport type RootEditableElement from './rooteditableelement';\nimport type DowncastWriter from './downcastwriter';\n\n// @if CK_DEBUG_ENGINE // const { logDocument } = require( '../dev-utils/utils' );\n\n/**\n * Document class creates an abstract layer over the content editable area, contains a tree of view elements and\n * {@link module:engine/view/documentselection~DocumentSelection view selection} associated with this document.\n *\n * @mixes module:engine/view/observer/bubblingemittermixin~BubblingEmitterMixin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class Document extends BubblingEmitterMixin( Observable ) {\n\tpublic readonly selection: DocumentSelection;\n\tpublic readonly roots: Collection<RootEditableElement, 'rootName'>;\n\tpublic readonly stylesProcessor: StylesProcessor;\n\n\tdeclare public isReadOnly: boolean;\n\tdeclare public isFocused: boolean;\n\tdeclare public isSelecting: boolean;\n\tdeclare public isComposing: boolean;\n\n\tprivate readonly _postFixers: Set<ViewDocumentPostFixer>;\n\n\t/**\n\t * Creates a Document instance.\n\t *\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\n\t */\n\tconstructor( stylesProcessor: StylesProcessor ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Selection done on this document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection} module:engine/view/document~Document#selection\n\t\t */\n\t\tthis.selection = new DocumentSelection();\n\n\t\t/**\n\t\t * Roots of the view tree. Collection of the {@link module:engine/view/element~Element view elements}.\n\t\t *\n\t\t * View roots are created as a result of binding between {@link module:engine/view/document~Document#roots} and\n\t\t * {@link module:engine/model/document~Document#roots} and this is handled by\n\t\t * {@link module:engine/controller/editingcontroller~EditingController}, so to create view root we need to create\n\t\t * model root using {@link module:engine/model/document~Document#createRoot}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/collection~Collection} module:engine/view/document~Document#roots\n\t\t */\n\t\tthis.roots = new Collection( { idProperty: 'rootName' } );\n\n\t\t/**\n\t\t * The styles processor instance used by this document when normalizing styles.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/stylesmap~StylesProcessor}\n\t\t */\n\t\tthis.stylesProcessor = stylesProcessor;\n\n\t\t/**\n\t\t * Defines whether document is in read-only mode.\n\t\t *\n\t\t * When document is read-ony then all roots are read-only as well and caret placed inside this root is hidden.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * True if document is focused.\n\t\t *\n\t\t * This property is updated by the {@link module:engine/view/observer/focusobserver~FocusObserver}.\n\t\t * If the {@link module:engine/view/observer/focusobserver~FocusObserver} is disabled this property will not change.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/document~Document#isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * `true` while the user is making a selection in the document (e.g. holding the mouse button and moving the cursor).\n\t\t * When they stop selecting, the property goes back to `false`.\n\t\t *\n\t\t * This property is updated by the {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/document~Document#isSelecting\n\t\t */\n\t\tthis.set( 'isSelecting', false );\n\n\t\t/**\n\t\t * True if composition is in progress inside the document.\n\t\t *\n\t\t * This property is updated by the {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n\t\t * If the {@link module:engine/view/observer/compositionobserver~CompositionObserver} is disabled this property will not change.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/document~Document#isComposing\n\t\t */\n\t\tthis.set( 'isComposing', false );\n\n\t\t/**\n\t\t * Post-fixer callbacks registered to the view document.\n\t\t *\n\t\t * @private\n\t\t * @member {Set}\n\t\t */\n\t\tthis._postFixers = new Set();\n\t}\n\n\t/**\n\t * Gets a {@link module:engine/view/document~Document#roots view root element} with the specified name. If the name is not\n\t * specific \"main\" root is returned.\n\t *\n\t * @param {String} [name='main'] Name of the root.\n\t * @returns {module:engine/view/rooteditableelement~RootEditableElement|null} The view root element with the specified name\n\t * or null when there is no root of given name.\n\t */\n\tpublic getRoot( name: string = 'main' ): RootEditableElement | null {\n\t\treturn this.roots.get( name );\n\t}\n\n\t/**\n\t * Allows registering post-fixer callbacks. A post-fixers mechanism allows to update the view tree just before it is rendered\n\t * to the DOM.\n\t *\n\t * Post-fixers are executed right after all changes from the outermost change block were applied but\n\t * before the {@link module:engine/view/view~View#event:render render event} is fired. If a post-fixer callback made\n\t * a change, it should return `true`. When this happens, all post-fixers are fired again to check if something else should\n\t * not be fixed in the new document tree state.\n\t *\n\t * View post-fixers are useful when you want to apply some fixes whenever the view structure changes. Keep in mind that\n\t * changes executed in a view post-fixer should not break model-view mapping.\n\t *\n\t * The types of changes which should be safe:\n\t *\n\t * * adding or removing attribute from elements,\n\t * * changes inside of {@link module:engine/view/uielement~UIElement UI elements},\n\t * * {@link module:engine/controller/editingcontroller~EditingController#reconvertItem marking some of the model elements to be\n\t * re-converted}.\n\t *\n\t * Try to avoid changes which touch view structure:\n\t *\n\t * * you should not add or remove nor wrap or unwrap any view elements,\n\t * * you should not change the editor data model in a view post-fixer.\n\t *\n\t * As a parameter, a post-fixer callback receives a {@link module:engine/view/downcastwriter~DowncastWriter downcast writer}.\n\t *\n\t * Typically, a post-fixer will look like this:\n\t *\n\t *\t\teditor.editing.view.document.registerPostFixer( writer => {\n\t *\t\t\tif ( checkSomeCondition() ) {\n\t *\t\t\t\twriter.doSomething();\n\t *\n\t *\t\t\t\t// Let other post-fixers know that something changed.\n\t *\t\t\t\treturn true;\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * Note that nothing happens right after you register a post-fixer (e.g. execute such a code in the console).\n\t * That is because adding a post-fixer does not execute it.\n\t * The post-fixer will be executed as soon as any change in the document needs to cause its rendering.\n\t * If you want to re-render the editor's view after registering the post-fixer then you should do it manually by calling\n\t * {@link module:engine/view/view~View#forceRender `view.forceRender()`}.\n\t *\n\t * If you need to register a callback which is executed when DOM elements are already updated,\n\t * use {@link module:engine/view/view~View#event:render render event}.\n\t *\n\t * @param {Function} postFixer\n\t */\n\tpublic registerPostFixer( postFixer: ViewDocumentPostFixer ): void {\n\t\tthis._postFixers.add( postFixer );\n\t}\n\n\t/**\n\t * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n\t */\n\tpublic destroy(): void {\n\t\tthis.roots.map( root => root.destroy() );\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Performs post-fixer loops. Executes post-fixer callbacks as long as none of them has done any changes to the model.\n\t *\n\t * @protected\n\t * @param {module:engine/view/downcastwriter~DowncastWriter} writer\n\t */\n\tpublic _callPostFixers( writer: DowncastWriter ): void {\n\t\tlet wasFixed = false;\n\n\t\tdo {\n\t\t\tfor ( const callback of this._postFixers ) {\n\t\t\t\twasFixed = callback( writer );\n\n\t\t\t\tif ( wasFixed ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} while ( wasFixed );\n\t}\n\n\t/**\n\t * Event fired whenever document content layout changes. It is fired whenever content is\n\t * {@link module:engine/view/view~View#event:render rendered}, but should be also fired by observers in case of\n\t * other actions which may change layout, for instance when image loads.\n\t *\n\t * @event layoutChanged\n\t */\n\n\t// @if CK_DEBUG_ENGINE // log( version ) {\n\t// @if CK_DEBUG_ENGINE //\tlogDocument( this, version );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\nexport type ViewDocumentPostFixer = ( writer: DowncastWriter ) => boolean;\n\n/**\n * Enum representing type of the change.\n *\n * Possible values:\n *\n * * `children` - for child list changes,\n * * `attributes` - for element attributes changes,\n * * `text` - for text nodes changes.\n *\n * @typedef {String} module:engine/view/document~ChangeType\n */\nexport type ChangeType = 'children' | 'attributes' | 'text';\n\nexport type LayoutChangedEvent = {\n\tname: 'layoutChanged';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* eslint-disable new-cap */\n\n/**\n * @module engine/view/documentfragment\n */\n\nimport TypeCheckable from './typecheckable';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport type { default as Document, ChangeType } from './document';\n\nimport type Item from './item';\nimport type Node from './node';\n\n/**\n * Document fragment.\n *\n * To create a new document fragment instance use the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createDocumentFragment `UpcastWriter#createDocumentFragment()`}\n * method.\n */\nexport default class DocumentFragment extends EmitterMixin( TypeCheckable ) {\n\tpublic readonly document: Document;\n\tprivate readonly _children: Node[];\n\n\t/**\n\t * Creates new DocumentFragment instance.\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document to which this document fragment belongs.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into the created document fragment.\n\t */\n\tconstructor( document: Document, children?: Node | Iterable<Node> ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The document to which this document fragment belongs.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Array of child nodes.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/node~Node>} module:engine/view/documentfragment~DocumentFragment#_children\n\t\t */\n\t\tthis._children = [];\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over nodes added to this document fragment.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>}\n\t */\n\tpublic [ Symbol.iterator ](): IterableIterator<Node> {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Number of child nodes in this document fragment.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tpublic get childCount(): number {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this document fragment, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tpublic get isEmpty(): boolean {\n\t\treturn this.childCount === 0;\n\t}\n\n\t/**\n\t * Artificial root of `DocumentFragment`. Returns itself. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {module:engine/model/documentfragment~DocumentFragment}\n\t */\n\tpublic get root(): this {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Artificial parent of `DocumentFragment`. Returns `null`. Added for compatibility reasons.\n\t *\n\t * @readonly\n\t * @type {null}\n\t */\n\tpublic get parent(): null {\n\t\treturn null;\n\t}\n\n\t/**\n\t * {@link module:engine/view/documentfragment~DocumentFragment#_insertChild Insert} a child node or a list of child nodes at the end\n\t * and sets the parent of these nodes to this fragment.\n\t *\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @returns {Number} Number of appended nodes.\n\t */\n\tpublic _appendChild( items: Item | Iterable<Item> ): number {\n\t\treturn this._insertChild( this.childCount, items );\n\t}\n\n\t/**\n\t * Gets child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/view/node~Node} Child node.\n\t */\n\tpublic getChild( index: number ): Node {\n\t\treturn this._children[ index ];\n\t}\n\n\t/**\n\t * Gets index of the given child node. Returns `-1` if child node is not found.\n\t *\n\t * @param {module:engine/view/node~Node} node Child node.\n\t * @returns {Number} Index of the child node.\n\t */\n\tpublic getChildIndex( node: Node ): number {\n\t\treturn this._children.indexOf( node );\n\t}\n\n\t/**\n\t * Gets child nodes iterator.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n\t */\n\tpublic getChildren(): IterableIterator<Node> {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this fragment.\n\t *\n\t * @param {Number} index Position where nodes should be inserted.\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\tpublic _insertChild( index: number, items: Item | Iterable<Item> ): number {\n\t\tthis._fireChange( 'children', this );\n\t\tlet count = 0;\n\n\t\tconst nodes = normalize( this.document, items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\n\t\t\tthis._children.splice( index, 0, node );\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @internal\n\t * @param {Number} index Number of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n\t */\n\tpublic _removeChildren( index: number, howMany: number = 1 ): Node[] {\n\t\tthis._fireChange( 'children', this );\n\n\t\tfor ( let i = index; i < index + howMany; i++ ) {\n\t\t\tthis._children[ i ].parent = null;\n\t\t}\n\n\t\treturn this._children.splice( index, howMany );\n\t}\n\n\t/**\n\t * Fires `change` event with given type of the change.\n\t *\n\t * @private\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Changed node.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tpublic _fireChange( type: ChangeType, node: Node | DocumentFragment ): void {\n\t\tthis.fire( 'change:' + type, node );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // printTree() {\n\t// @if CK_DEBUG_ENGINE //\tlet string = 'ViewDocumentFragment: [';\n\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( '$text' ) ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + '\\t'.repeat( 1 ) + child.data;\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + child.printTree( 1 );\n\t// @if CK_DEBUG_ENGINE //\t\t}\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\n]';\n\n\t// @if CK_DEBUG_ENGINE //\treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n/**\n * Checks whether this object is of the given type.\n *\n *\t\tdocFrag.is( 'documentFragment' ); // -> true\n *\t\tdocFrag.is( 'view:documentFragment' ); // -> true\n *\n *\t\tdocFrag.is( 'model:documentFragment' ); // -> false\n *\t\tdocFrag.is( 'element' ); // -> false\n *\t\tdocFrag.is( 'node' ); // -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * @param {String} type\n * @returns {Boolean}\n */\nDocumentFragment.prototype.is = function( type: string ): boolean {\n\treturn type === 'documentFragment' || type === 'view:documentFragment';\n};\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\nfunction normalize( document: Document, nodes: Item | Iterable<Item> ): Node[] {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( document, nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( document, node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( document, node.data );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* eslint-disable new-cap */\n\n/**\n * @module engine/view/documentselection\n */\n\nimport TypeCheckable from './typecheckable';\nimport Selection, { type ChangeEvent as SelectionChangeEvent } from './selection';\n\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\nimport type EditableElement from './editableelement';\nimport type Element from './element';\nimport type Item from './item';\nimport type Position from './position';\nimport type Range from './range';\n\n/**\n * Class representing the document selection in the view.\n *\n * Its instance is available in {@link module:engine/view/document~Document#selection `Document#selection`}.\n *\n * It is similar to {@link module:engine/view/selection~Selection} but\n * it has a read-only API and can be modified only by the writer available in\n * the {@link module:engine/view/view~View#change `View#change()`} block\n * (so via {@link module:engine/view/downcastwriter~DowncastWriter#setSelection `DowncastWriter#setSelection()`}).\n */\nexport default class DocumentSelection extends EmitterMixin( TypeCheckable ) {\n\tprivate readonly _selection: Selection;\n\n\t/**\n\t * Creates new DocumentSelection instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = new DocumentSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = new DocumentSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n\t *\t\tconst selection = new DocumentSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = new DocumentSelection( otherSelection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionAt( root, offset );\n\t *\t\tconst selection = new DocumentSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = new DocumentSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = new DocumentSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = new DocumentSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = new DocumentSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = new DocumentSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tconstructor( ...args: ConstructorParameters<typeof Selection> ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Selection is used internally (`DocumentSelection` is a proxy to that selection).\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/selection~Selection}\n\t\t */\n\t\tthis._selection = new Selection();\n\n\t\t// Delegate change event to be fired on DocumentSelection instance.\n\t\tthis._selection.delegate( 'change' ).to( this );\n\n\t\t// Set selection data.\n\t\tif ( args.length ) {\n\t\t\tthis._selection.setTo( ...args );\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if selection instance is marked as `fake`.\n\t *\n\t * @see #_setTo\n\t * @type {Boolean}\n\t */\n\tpublic get isFake(): boolean {\n\t\treturn this._selection.isFake;\n\t}\n\n\t/**\n\t * Returns fake selection label.\n\t *\n\t * @see #_setTo\n\t * @type {String}\n\t */\n\tpublic get fakeSelectionLabel(): string {\n\t\treturn this._selection.fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n\t * {@link #focus focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n\t * It may be a bit unintuitive when there are multiple ranges in selection.\n\t *\n\t * @see #focus\n\t * @type {module:engine/view/position~Position}\n\t */\n\tpublic get anchor(): Position | null {\n\t\treturn this._selection.anchor;\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * @see #anchor\n\t * @type {module:engine/view/position~Position}\n\t */\n\tpublic get focus(): Position | null {\n\t\treturn this._selection.focus;\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @type {Boolean}\n\t */\n\tpublic get isCollapsed(): boolean {\n\t\treturn this._selection.isCollapsed;\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @type {Number}\n\t */\n\tpublic get rangeCount(): number {\n\t\treturn this._selection.rangeCount;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus} precedes {@link #anchor}.\n\t *\n\t * @type {Boolean}\n\t */\n\tpublic get isBackward(): boolean {\n\t\treturn this._selection.isBackward;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n\t * if the selection is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tpublic get editableElement(): EditableElement | null {\n\t\treturn this._selection.editableElement;\n\t}\n\n\t/**\n\t * Used for the compatibility with the {@link module:engine/view/selection~Selection#isEqual} method.\n\t *\n\t * @protected\n\t */\n\tpublic get _ranges(): Range[] {\n\t\treturn ( this._selection as any )._ranges;\n\t}\n\n\t/**\n\t * Returns an iterable that contains copies of all ranges added to the selection.\n\t *\n\t * @returns {Iterable.<module:engine/view/range~Range>}\n\t */\n\tpublic* getRanges(): IterableIterator<Range> {\n\t\tyield* this._selection.getRanges();\n\t}\n\n\t/**\n\t * Returns copy of the first range in the selection. First range is the one which\n\t * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n\t * position of all other ranges (not to confuse with the first range added to the selection).\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tpublic getFirstRange(): Range | null {\n\t\treturn this._selection.getFirstRange();\n\t}\n\n\t/**\n\t * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n\t * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n\t * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tpublic getLastRange(): Range | null {\n\t\treturn this._selection.getLastRange();\n\t}\n\n\t/**\n\t * Returns copy of the first position in the selection. First position is the position that\n\t * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tpublic getFirstPosition(): Position | null {\n\t\treturn this._selection.getFirstPosition();\n\t}\n\n\t/**\n\t * Returns copy of the last position in the selection. Last position is the position that\n\t * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tpublic getLastPosition(): Position | null {\n\t\treturn this._selection.getLastPosition();\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/view/element~Element|null}\n\t */\n\tpublic getSelectedElement(): Element | null {\n\t\treturn this._selection.getSelectedElement();\n\t}\n\n\t/**\n\t * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n\t * same number of ranges and all ranges from one selection equal to a range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tpublic isEqual( otherSelection: Selection | DocumentSelection ): boolean {\n\t\treturn this._selection.isEqual( otherSelection );\n\t}\n\n\t/**\n\t * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n\t * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n\t * equal to any trimmed range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n\t */\n\tpublic isSimilar( otherSelection: Selection | DocumentSelection ): boolean {\n\t\treturn this._selection.isSimilar( otherSelection );\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/view/selection~Selectable selectable}.\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tdocumentSelection._setTo( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n\t *\t\tdocumentSelection._setTo( range );\n\t *\n\t *\t\t// Sets selection to the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tdocumentSelection._setTo( otherSelection );\n\t *\n\t * \t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionAt( root, offset );\n\t *\t\tdocumentSelection._setTo( position );\n\t *\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\n\t *\t\tdocumentSelection._setTo( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t *\t\tdocumentSelection._setTo( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\tdocumentSelection._setTo( paragraph, 'on' );\n\t *\n\t * \t\t// Clears selection. Removes all ranges.\n\t *\t\tdocumentSelection._setTo( null );\n\t *\n\t * `Selection#_setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\tdocumentSelection._setTo( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to des cribe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tdocumentSelection._setTo( range, { fake: true, label: 'foo' } );\n\t *\n\t * @protected\n\t * @fires change\n\t * @param {module:engine/view/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tpublic _setTo( ...args: Parameters< Selection[ 'setTo' ]> ): void {\n\t\tthis._selection.setTo( ...args );\n\t}\n\n\t/**\n\t * Moves {@link #focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n\t * parameters.\n\t *\n\t * @protected\n\t * @fires change\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tpublic _setFocus( itemOrPosition: Item | Position, offset?: number | 'before' | 'end' | 'after' ): void {\n\t\tthis._selection.setFocus( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Fired whenever selection ranges are changed through {@link ~DocumentSelection Selection API}.\n\t *\n\t * @event change\n\t */\n}\n\n/**\n * Checks whether this object is of the given type.\n *\n *\t\tdocSelection.is( 'selection' ); // -> true\n *\t\tdocSelection.is( 'documentSelection' ); // -> true\n *\t\tdocSelection.is( 'view:selection' ); // -> true\n *\t\tdocSelection.is( 'view:documentSelection' ); // -> true\n *\n *\t\tdocSelection.is( 'model:documentSelection' ); // -> false\n *\t\tdocSelection.is( 'element' ); // -> false\n *\t\tdocSelection.is( 'node' ); // -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * @param {String} type\n * @returns {Boolean}\n */\nDocumentSelection.prototype.is = function( type: string ): boolean {\n\treturn type === 'selection' ||\n\t\ttype == 'documentSelection' ||\n\t\ttype == 'view:selection' ||\n\t\ttype == 'view:documentSelection';\n};\n\nexport type ChangeEvent = SelectionChangeEvent;\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/domconverter\n */\n\n/* globals Node, NodeFilter, DOMParser, Text */\n\nimport ViewText from './text';\nimport ViewElement from './element';\nimport ViewUIElement from './uielement';\nimport ViewPosition from './position';\nimport ViewRange from './range';\nimport ViewSelection from './selection';\nimport ViewDocumentFragment from './documentfragment';\nimport ViewTreeWalker from './treewalker';\nimport { default as Matcher, type MatcherPattern } from './matcher';\nimport {\n\tBR_FILLER, INLINE_FILLER_LENGTH, NBSP_FILLER, MARKED_NBSP_FILLER,\n\tgetDataWithoutFiller, isInlineFiller, startsWithFiller\n} from './filler';\n\nimport global from '@ckeditor/ckeditor5-utils/src/dom/global';\nimport { logWarning } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport indexOf from '@ckeditor/ckeditor5-utils/src/dom/indexof';\nimport getAncestors from '@ckeditor/ckeditor5-utils/src/dom/getancestors';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport isComment from '@ckeditor/ckeditor5-utils/src/dom/iscomment';\n\nimport type ViewNode from './node';\nimport type Document from './document';\nimport type DocumentSelection from './documentselection';\nimport type EditableElement from './editableelement';\nimport type ViewTextProxy from './textproxy';\nimport type ViewRawElement from './rawelement';\n\ntype DomNode = globalThis.Node;\ntype DomElement = globalThis.HTMLElement;\ntype DomDocument = globalThis.Document;\ntype DomDocumentFragment = globalThis.DocumentFragment;\ntype DomComment = globalThis.Comment;\ntype DomRange = globalThis.Range;\ntype DomText = globalThis.Text;\ntype DomSelection = globalThis.Selection;\n\nconst BR_FILLER_REF = BR_FILLER( global.document ); // eslint-disable-line new-cap\nconst NBSP_FILLER_REF = NBSP_FILLER( global.document ); // eslint-disable-line new-cap\nconst MARKED_NBSP_FILLER_REF = MARKED_NBSP_FILLER( global.document ); // eslint-disable-line new-cap\nconst UNSAFE_ATTRIBUTE_NAME_PREFIX = 'data-ck-unsafe-attribute-';\nconst UNSAFE_ELEMENT_REPLACEMENT_ATTRIBUTE = 'data-ck-unsafe-element';\n\n/**\n * `DomConverter` is a set of tools to do transformations between DOM nodes and view nodes. It also handles\n * {@link module:engine/view/domconverter~DomConverter#bindElements bindings} between these nodes.\n *\n * An instance of the DOM converter is available under\n * {@link module:engine/view/view~View#domConverter `editor.editing.view.domConverter`}.\n *\n * The DOM converter does not check which nodes should be rendered (use {@link module:engine/view/renderer~Renderer}), does not keep the\n * state of a tree nor keeps the synchronization between the tree view and the DOM tree (use {@link module:engine/view/document~Document}).\n *\n * The DOM converter keeps DOM elements to view element bindings, so when the converter gets destroyed, the bindings are lost.\n * Two converters will keep separate binding maps, so one tree view can be bound with two DOM trees.\n */\nexport default class DomConverter {\n\tpublic readonly document: Document;\n\tpublic readonly renderingMode: 'data' | 'editing';\n\tpublic blockFillerMode: BlockFillerMode;\n\tpublic readonly preElements: string[];\n\tpublic readonly blockElements: string[];\n\tpublic readonly inlineObjectElements: string[];\n\tpublic readonly unsafeElements: string[];\n\n\tprivate readonly _domDocument: DomDocument;\n\tprivate readonly _domToViewMapping: WeakMap<DomElement | DomDocumentFragment, ViewElement | ViewDocumentFragment>;\n\tprivate readonly _viewToDomMapping: WeakMap<ViewElement | ViewDocumentFragment, DomElement | DomDocumentFragment>;\n\tprivate readonly _fakeSelectionMapping: WeakMap<DomElement, ViewSelection>;\n\tprivate readonly _rawContentElementMatcher: Matcher;\n\tprivate readonly _encounteredRawContentDomNodes: WeakSet<DomNode>;\n\n\t/**\n\t * Creates a DOM converter.\n\t *\n\t * @param {module:engine/view/document~Document} document The view document instance.\n\t * @param {Object} options An object with configuration options.\n\t * @param {module:engine/view/filler~BlockFillerMode} [options.blockFillerMode] The type of the block filler to use.\n\t * Default value depends on the options.renderingMode:\n\t *  'nbsp' when options.renderingMode == 'data',\n\t *  'br' when options.renderingMode == 'editing'.\n\t * @param {'data'|'editing'} [options.renderingMode='editing'] Whether to leave the View-to-DOM conversion result unchanged\n\t * or improve editing experience by filtering out interactive data.\n\t */\n\tconstructor( document: Document, options: {\n\t\tblockFillerMode?: BlockFillerMode;\n\t\trenderingMode?: 'data' | 'editing';\n\t} = {} ) {\n\t\t/**\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Whether to leave the View-to-DOM conversion result unchanged or improve editing experience by filtering out interactive data.\n\t\t *\n\t\t * @member {'data'|'editing'} module:engine/view/domconverter~DomConverter#renderingMode\n\t\t */\n\t\tthis.renderingMode = options.renderingMode || 'editing';\n\n\t\t/**\n\t\t * The mode of a block filler used by the DOM converter.\n\t\t *\n\t\t * @member {'br'|'nbsp'|'markedNbsp'} module:engine/view/domconverter~DomConverter#blockFillerMode\n\t\t */\n\t\tthis.blockFillerMode = options.blockFillerMode || ( this.renderingMode === 'editing' ? 'br' : 'nbsp' );\n\n\t\t/**\n\t\t * Elements which are considered pre-formatted elements.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#preElements\n\t\t */\n\t\tthis.preElements = [ 'pre' ];\n\n\t\t/**\n\t\t * Elements which are considered block elements (and hence should be filled with a\n\t\t * {@link #isBlockFiller block filler}).\n\t\t *\n\t\t * Whether an element is considered a block element also affects handling of trailing whitespaces.\n\t\t *\n\t\t * You can extend this array if you introduce support for block elements which are not yet recognized here.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#blockElements\n\t\t */\n\t\tthis.blockElements = [\n\t\t\t'address', 'article', 'aside', 'blockquote', 'caption', 'center', 'dd', 'details', 'dir', 'div',\n\t\t\t'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header',\n\t\t\t'hgroup', 'legend', 'li', 'main', 'menu', 'nav', 'ol', 'p', 'pre', 'section', 'summary', 'table', 'tbody',\n\t\t\t'td', 'tfoot', 'th', 'thead', 'tr', 'ul'\n\t\t];\n\n\t\t/**\n\t\t * A list of elements that exist inline (in text) but their inner structure cannot be edited because\n\t\t * of the way they are rendered by the browser. They are mostly HTML form elements but there are other\n\t\t * elements such as `<img>` or `<iframe>` that also have non-editable children or no children whatsoever.\n\t\t *\n\t\t * Whether an element is considered an inline object has an impact on white space rendering (trimming)\n\t\t * around (and inside of it). In short, white spaces in text nodes next to inline objects are not trimmed.\n\t\t *\n\t\t * You can extend this array if you introduce support for inline object elements which are not yet recognized here.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#inlineObjectElements\n\t\t */\n\t\tthis.inlineObjectElements = [\n\t\t\t'object', 'iframe', 'input', 'button', 'textarea', 'select', 'option', 'video', 'embed', 'audio', 'img', 'canvas'\n\t\t];\n\n\t\t/**\n\t\t * A list of elements which may affect the editing experience. To avoid this, those elements are replaced with\n\t\t * `<span data-ck-unsafe-element=\"[element name]\"></span>` while rendering in the editing mode.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<String>} module:engine/view/domconverter~DomConverter#unsafeElements\n\t\t */\n\t\tthis.unsafeElements = [ 'script', 'style' ];\n\n\t\t/**\n\t\t * The DOM Document used to create DOM nodes.\n\t\t *\n\t\t * @type {Document}\n\t\t * @private\n\t\t */\n\t\tthis._domDocument = this.renderingMode === 'editing' ? global.document : global.document.implementation.createHTMLDocument( '' );\n\n\t\t/**\n\t\t * The DOM-to-view mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_domToViewMapping\n\t\t */\n\t\tthis._domToViewMapping = new WeakMap();\n\n\t\t/**\n\t\t * The view-to-DOM mapping.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_viewToDomMapping\n\t\t */\n\t\tthis._viewToDomMapping = new WeakMap();\n\n\t\t/**\n\t\t * Holds the mapping between fake selection containers and corresponding view selections.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap} module:engine/view/domconverter~DomConverter#_fakeSelectionMapping\n\t\t */\n\t\tthis._fakeSelectionMapping = new WeakMap();\n\n\t\t/**\n\t\t * Matcher for view elements whose content should be treated as raw data\n\t\t * and not processed during the conversion from DOM nodes to view elements.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/view/matcher~Matcher}\n\t\t */\n\t\tthis._rawContentElementMatcher = new Matcher();\n\n\t\t/**\n\t\t * A set of encountered raw content DOM nodes. It is used for preventing left trimming of the following text node.\n\t\t *\n\t\t * @private\n\t\t * @type {WeakSet.<Node>}\n\t\t */\n\t\tthis._encounteredRawContentDomNodes = new WeakSet();\n\t}\n\n\t/**\n\t * Binds a given DOM element that represents fake selection to a **position** of a\n\t * {@link module:engine/view/documentselection~DocumentSelection document selection}.\n\t * Document selection copy is stored and can be retrieved by the\n\t * {@link module:engine/view/domconverter~DomConverter#fakeSelectionToView} method.\n\t *\n\t * @param {HTMLElement} domElement\n\t * @param {module:engine/view/documentselection~DocumentSelection} viewDocumentSelection\n\t */\n\tpublic bindFakeSelection( domElement: DomElement, viewDocumentSelection: DocumentSelection ): void {\n\t\tthis._fakeSelectionMapping.set( domElement, new ViewSelection( viewDocumentSelection ) );\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/selection~Selection view selection} instance corresponding to a given\n\t * DOM element that represents fake selection. Returns `undefined` if binding to the given DOM element does not exist.\n\t *\n\t * @param {HTMLElement} domElement\n\t * @returns {module:engine/view/selection~Selection|undefined}\n\t */\n\tpublic fakeSelectionToView( domElement: DomElement ): ViewSelection | undefined {\n\t\treturn this._fakeSelectionMapping.get( domElement );\n\t}\n\n\t/**\n\t * Binds DOM and view elements, so it will be possible to get corresponding elements using\n\t * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n\t * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n\t *\n\t * @param {HTMLElement} domElement The DOM element to bind.\n\t * @param {module:engine/view/element~Element} viewElement The view element to bind.\n\t */\n\tpublic bindElements( domElement: DomElement, viewElement: ViewElement ): void {\n\t\tthis._domToViewMapping.set( domElement, viewElement );\n\t\tthis._viewToDomMapping.set( viewElement, domElement );\n\t}\n\n\t/**\n\t * Unbinds a given DOM element from the view element it was bound to. Unbinding is deep, meaning that all children of\n\t * the DOM element will be unbound too.\n\t *\n\t * @param {HTMLElement} domElement The DOM element to unbind.\n\t */\n\tpublic unbindDomElement( domElement: DomElement ): void {\n\t\tconst viewElement = this._domToViewMapping.get( domElement );\n\n\t\tif ( viewElement ) {\n\t\t\tthis._domToViewMapping.delete( domElement );\n\t\t\tthis._viewToDomMapping.delete( viewElement );\n\n\t\t\tfor ( const child of Array.from( domElement.children ) ) {\n\t\t\t\tthis.unbindDomElement( child as DomElement );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Binds DOM and view document fragments, so it will be possible to get corresponding document fragments using\n\t * {@link module:engine/view/domconverter~DomConverter#mapDomToView} and\n\t * {@link module:engine/view/domconverter~DomConverter#mapViewToDom}.\n\t *\n\t * @param {DocumentFragment} domFragment The DOM document fragment to bind.\n\t * @param {module:engine/view/documentfragment~DocumentFragment} viewFragment The view document fragment to bind.\n\t */\n\tpublic bindDocumentFragments( domFragment: DomDocumentFragment, viewFragment: ViewDocumentFragment ): void {\n\t\tthis._domToViewMapping.set( domFragment, viewFragment );\n\t\tthis._viewToDomMapping.set( viewFragment, domFragment );\n\t}\n\n\t/**\n\t * Decides whether a given pair of attribute key and value should be passed further down the pipeline.\n\t *\n\t * @param {String} attributeKey\n\t * @param {String} attributeValue\n\t * @param {String} elementName Element name in lower case.\n\t * @returns {Boolean}\n\t */\n\tpublic shouldRenderAttribute( attributeKey: string, attributeValue: string, elementName: string ): boolean {\n\t\tif ( this.renderingMode === 'data' ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tattributeKey = attributeKey.toLowerCase();\n\n\t\tif ( attributeKey.startsWith( 'on' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (\n\t\t\tattributeKey === 'srcdoc' &&\n\t\t\tattributeValue.match( /\\bon\\S+\\s*=|javascript:|<\\s*\\/*script/i )\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (\n\t\t\telementName === 'img' &&\n\t\t\t( attributeKey === 'src' || attributeKey === 'srcset' )\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( elementName === 'source' && attributeKey === 'srcset' ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( attributeValue.match( /^\\s*(javascript:|data:(image\\/svg|text\\/x?html))/i ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Set `domElement`'s content using provided `html` argument. Apply necessary filtering for the editing pipeline.\n\t *\n\t * @param {Element} domElement DOM element that should have `html` set as its content.\n\t * @param {String} html Textual representation of the HTML that will be set on `domElement`.\n\t */\n\tpublic setContentOf( domElement: DomElement, html: string ): void {\n\t\t// For data pipeline we pass the HTML as-is.\n\t\tif ( this.renderingMode === 'data' ) {\n\t\t\tdomElement.innerHTML = html;\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst document = new DOMParser().parseFromString( html, 'text/html' );\n\t\tconst fragment = document.createDocumentFragment();\n\t\tconst bodyChildNodes = document.body.childNodes;\n\n\t\twhile ( bodyChildNodes.length > 0 ) {\n\t\t\tfragment.appendChild( bodyChildNodes[ 0 ] );\n\t\t}\n\n\t\tconst treeWalker = document.createTreeWalker( fragment, NodeFilter.SHOW_ELEMENT );\n\t\tconst nodes: DomElement[] = [];\n\n\t\tlet currentNode;\n\n\t\t// eslint-disable-next-line no-cond-assign\n\t\twhile ( currentNode = treeWalker.nextNode() ) {\n\t\t\tnodes.push( currentNode as DomElement );\n\t\t}\n\n\t\tfor ( const currentNode of nodes ) {\n\t\t\t// Go through nodes to remove those that are prohibited in editing pipeline.\n\t\t\tfor ( const attributeName of currentNode.getAttributeNames() ) {\n\t\t\t\tthis.setDomElementAttribute( currentNode, attributeName, currentNode.getAttribute( attributeName )! );\n\t\t\t}\n\n\t\t\tconst elementName = currentNode.tagName.toLowerCase();\n\n\t\t\t// There are certain nodes, that should be renamed to <span> in editing pipeline.\n\t\t\tif ( this._shouldRenameElement( elementName ) ) {\n\t\t\t\t_logUnsafeElement( elementName );\n\n\t\t\t\tcurrentNode.replaceWith( this._createReplacementDomElement( elementName, currentNode ) );\n\t\t\t}\n\t\t}\n\n\t\t// Empty the target element.\n\t\twhile ( domElement.firstChild ) {\n\t\t\tdomElement.firstChild.remove();\n\t\t}\n\n\t\tdomElement.append( fragment );\n\t}\n\n\t/**\n\t * Converts the view to the DOM. For all text nodes, not bound elements and document fragments new items will\n\t * be created. For bound elements and document fragments the method will return corresponding items.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} viewNode\n\t * View node or document fragment to transform.\n\t * @param {Object} [options] Conversion options.\n\t * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n\t * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n\t * @returns {Node|DocumentFragment} Converted node or DocumentFragment.\n\t */\n\tpublic viewToDom(\n\t\tviewNode: ViewNode | ViewDocumentFragment,\n\t\toptions: { bind?: boolean; withChildren?: boolean } = {}\n\t): DomNode | DomDocumentFragment {\n\t\tif ( viewNode.is( '$text' ) ) {\n\t\t\tconst textData = this._processDataFromViewText( viewNode );\n\n\t\t\treturn this._domDocument.createTextNode( textData );\n\t\t} else {\n\t\t\tif ( this.mapViewToDom( viewNode as ViewElement ) ) {\n\t\t\t\treturn this.mapViewToDom( viewNode as ViewElement )!;\n\t\t\t}\n\n\t\t\tlet domElement: DomElement | DomDocumentFragment | DomComment;\n\n\t\t\tif ( viewNode.is( 'documentFragment' ) ) {\n\t\t\t\t// Create DOM document fragment.\n\t\t\t\tdomElement = this._domDocument.createDocumentFragment();\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindDocumentFragments( domElement, viewNode );\n\t\t\t\t}\n\t\t\t} else if ( viewNode.is( 'uiElement' ) ) {\n\t\t\t\tif ( viewNode.name === '$comment' ) {\n\t\t\t\t\tdomElement = this._domDocument.createComment( viewNode.getCustomProperty( '$rawContent' ) as string );\n\t\t\t\t} else {\n\t\t\t\t\t// UIElement has its own render() method (see #799).\n\t\t\t\t\tdomElement = viewNode.render( this._domDocument, this );\n\t\t\t\t}\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domElement as DomElement, viewNode );\n\t\t\t\t}\n\n\t\t\t\treturn domElement;\n\t\t\t} else {\n\t\t\t\t// Create DOM element.\n\t\t\t\tif ( this._shouldRenameElement( ( viewNode as ViewElement ).name ) ) {\n\t\t\t\t\t_logUnsafeElement( ( viewNode as ViewElement ).name );\n\n\t\t\t\t\tdomElement = this._createReplacementDomElement( ( viewNode as ViewElement ).name );\n\t\t\t\t} else if ( ( viewNode as ViewElement ).hasAttribute( 'xmlns' ) ) {\n\t\t\t\t\tdomElement = this._domDocument.createElementNS(\n\t\t\t\t\t\t( viewNode as ViewElement ).getAttribute( 'xmlns' )!,\n\t\t\t\t\t\t( viewNode as ViewElement ).name\n\t\t\t\t\t) as HTMLElement;\n\t\t\t\t} else {\n\t\t\t\t\tdomElement = this._domDocument.createElement( ( viewNode as ViewElement ).name );\n\t\t\t\t}\n\n\t\t\t\t// RawElement take care of their children in RawElement#render() method which can be customized\n\t\t\t\t// (see https://github.com/ckeditor/ckeditor5/issues/4469).\n\t\t\t\tif ( viewNode.is( 'rawElement' ) ) {\n\t\t\t\t\tviewNode.render( domElement, this );\n\t\t\t\t}\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domElement, ( viewNode as ViewElement ) );\n\t\t\t\t}\n\n\t\t\t\t// Copy element's attributes.\n\t\t\t\tfor ( const key of ( viewNode as ViewElement ).getAttributeKeys() ) {\n\t\t\t\t\tthis.setDomElementAttribute(\n\t\t\t\t\t\tdomElement,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\t( viewNode as ViewElement ).getAttribute( key )!,\n\t\t\t\t\t\t( viewNode as ViewElement )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( options.withChildren !== false ) {\n\t\t\t\tfor ( const child of this.viewChildrenToDom( viewNode as ViewElement, options ) ) {\n\t\t\t\t\tdomElement!.appendChild( child );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn domElement!;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the attribute on a DOM element.\n\t *\n\t * **Note**: To remove the attribute, use {@link #removeDomElementAttribute}.\n\t *\n\t * @param {HTMLElement} domElement The DOM element the attribute should be set on.\n\t * @param {String} key The name of the attribute.\n\t * @param {String} value The value of the attribute.\n\t * @param {module:engine/view/element~Element} [relatedViewElement] The view element related to the `domElement` (if there is any).\n\t * It helps decide whether the attribute set is unsafe. For instance, view elements created via the\n\t * {@link module:engine/view/downcastwriter~DowncastWriter} methods can allow certain attributes that would normally be filtered out.\n\t */\n\tpublic setDomElementAttribute( domElement: DomElement, key: string, value: string, relatedViewElement?: ViewElement ): void {\n\t\tconst shouldRenderAttribute = this.shouldRenderAttribute( key, value, domElement.tagName.toLowerCase() ) ||\n\t\t\trelatedViewElement && relatedViewElement.shouldRenderUnsafeAttribute( key );\n\n\t\tif ( !shouldRenderAttribute ) {\n\t\t\tlogWarning( 'domconverter-unsafe-attribute-detected', { domElement, key, value } );\n\t\t}\n\n\t\t// The old value was safe but the new value is unsafe.\n\t\tif ( domElement.hasAttribute( key ) && !shouldRenderAttribute ) {\n\t\t\tdomElement.removeAttribute( key );\n\t\t}\n\t\t// The old value was unsafe (but prefixed) but the new value will be safe (will be unprefixed).\n\t\telse if ( domElement.hasAttribute( UNSAFE_ATTRIBUTE_NAME_PREFIX + key ) && shouldRenderAttribute ) {\n\t\t\tdomElement.removeAttribute( UNSAFE_ATTRIBUTE_NAME_PREFIX + key );\n\t\t}\n\n\t\t// If the attribute should not be rendered, rename it (instead of removing) to give developers some idea of what\n\t\t// is going on (https://github.com/ckeditor/ckeditor5/issues/10801).\n\t\tdomElement.setAttribute( shouldRenderAttribute ? key : UNSAFE_ATTRIBUTE_NAME_PREFIX + key, value );\n\t}\n\n\t/**\n\t * Removes an attribute from a DOM element.\n\t *\n\t * **Note**: To set the attribute, use {@link #setDomElementAttribute}.\n\t *\n\t * @param {HTMLElement} domElement The DOM element the attribute should be removed from.\n\t * @param {String} key The name of the attribute.\n\t */\n\tpublic removeDomElementAttribute( domElement: DomElement, key: string ): void {\n\t\t// See #_createReplacementDomElement() to learn what this is.\n\t\tif ( key == UNSAFE_ELEMENT_REPLACEMENT_ATTRIBUTE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdomElement.removeAttribute( key );\n\n\t\t// See setDomElementAttribute() to learn what this is.\n\t\tdomElement.removeAttribute( UNSAFE_ATTRIBUTE_NAME_PREFIX + key );\n\t}\n\n\t/**\n\t * Converts children of the view element to DOM using the\n\t * {@link module:engine/view/domconverter~DomConverter#viewToDom} method.\n\t * Additionally, this method adds block {@link module:engine/view/filler filler} to the list of children, if needed.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewElement Parent view element.\n\t * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#viewToDom} options parameter.\n\t * @returns {Iterable.<Node>} DOM nodes.\n\t */\n\tpublic* viewChildrenToDom(\n\t\tviewElement: ViewElement,\n\t\toptions: Parameters<DomConverter[ 'viewToDom' ]>[ 1 ] = {}\n\t): IterableIterator<Node> {\n\t\tconst fillerPositionOffset = viewElement.getFillerOffset && viewElement.getFillerOffset();\n\t\tlet offset = 0;\n\n\t\tfor ( const childView of viewElement.getChildren() ) {\n\t\t\tif ( fillerPositionOffset === offset ) {\n\t\t\t\tyield this._getBlockFiller();\n\t\t\t}\n\n\t\t\tconst transparentRendering = childView.is( 'element' ) &&\n\t\t\t\t( childView.getCustomProperty( 'dataPipeline:transparentRendering' ) as boolean | undefined );\n\n\t\t\tif ( transparentRendering && this.renderingMode == 'data' ) {\n\t\t\t\tyield* this.viewChildrenToDom( childView, options );\n\t\t\t} else {\n\t\t\t\tif ( transparentRendering ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * The `dataPipeline:transparentRendering` flag is supported only in the data pipeline.\n\t\t\t\t\t *\n\t\t\t\t\t * @error domconverter-transparent-rendering-unsupported-in-editing-pipeline\n\t\t\t\t\t */\n\t\t\t\t\tlogWarning( 'domconverter-transparent-rendering-unsupported-in-editing-pipeline', { viewElement: childView } );\n\t\t\t\t}\n\n\t\t\t\tyield this.viewToDom( childView as any, options );\n\t\t\t}\n\n\t\t\toffset++;\n\t\t}\n\n\t\tif ( fillerPositionOffset === offset ) {\n\t\t\tyield this._getBlockFiller();\n\t\t}\n\t}\n\n\t/**\n\t * Converts view {@link module:engine/view/range~Range} to DOM range.\n\t * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n\t *\n\t * @param {module:engine/view/range~Range} viewRange View range.\n\t * @returns {Range} DOM range.\n\t */\n\tpublic viewRangeToDom( viewRange: ViewRange ): DomRange {\n\t\tconst domStart = this.viewPositionToDom( viewRange.start )!;\n\t\tconst domEnd = this.viewPositionToDom( viewRange.end )!;\n\n\t\tconst domRange = this._domDocument.createRange();\n\t\tdomRange.setStart( domStart.parent, domStart.offset );\n\t\tdomRange.setEnd( domEnd.parent, domEnd.offset );\n\n\t\treturn domRange;\n\t}\n\n\t/**\n\t * Converts view {@link module:engine/view/position~Position} to DOM parent and offset.\n\t *\n\t * Inline and block {@link module:engine/view/filler fillers} are handled during the conversion.\n\t * If the converted position is directly before inline filler it is moved inside the filler.\n\t *\n\t * @param {module:engine/view/position~Position} viewPosition View position.\n\t * @returns {Object|null} position DOM position or `null` if view position could not be converted to DOM.\n\t * @returns {Node} position.parent DOM position parent.\n\t * @returns {Number} position.offset DOM position offset.\n\t */\n\tpublic viewPositionToDom( viewPosition: ViewPosition ): { parent: DomNode; offset: number } | null {\n\t\tconst viewParent = viewPosition.parent;\n\n\t\tif ( viewParent.is( '$text' ) ) {\n\t\t\tconst domParent = this.findCorrespondingDomText( viewParent );\n\n\t\t\tif ( !domParent ) {\n\t\t\t\t// Position is in a view text node that has not been rendered to DOM yet.\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet offset = viewPosition.offset;\n\n\t\t\tif ( startsWithFiller( domParent ) ) {\n\t\t\t\toffset += INLINE_FILLER_LENGTH;\n\t\t\t}\n\n\t\t\treturn { parent: domParent, offset };\n\t\t} else {\n\t\t\t// viewParent is instance of ViewElement.\n\t\t\tlet domParent, domBefore, domAfter;\n\n\t\t\tif ( viewPosition.offset === 0 ) {\n\t\t\t\tdomParent = this.mapViewToDom( viewParent as ViewElement );\n\n\t\t\t\tif ( !domParent ) {\n\t\t\t\t\t// Position is in a view element that has not been rendered to DOM yet.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tdomAfter = domParent.childNodes[ 0 ];\n\t\t\t} else {\n\t\t\t\tconst nodeBefore = viewPosition.nodeBefore!;\n\n\t\t\t\tdomBefore = nodeBefore.is( '$text' ) ?\n\t\t\t\t\tthis.findCorrespondingDomText( nodeBefore ) :\n\t\t\t\t\tthis.mapViewToDom( nodeBefore as ViewElement );\n\n\t\t\t\tif ( !domBefore ) {\n\t\t\t\t\t// Position is after a view element that has not been rendered to DOM yet.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tdomParent = domBefore.parentNode;\n\t\t\t\tdomAfter = domBefore.nextSibling;\n\t\t\t}\n\n\t\t\t// If there is an inline filler at position return position inside the filler. We should never return\n\t\t\t// the position before the inline filler.\n\t\t\tif ( isText( domAfter ) && startsWithFiller( domAfter ) ) {\n\t\t\t\treturn { parent: domAfter, offset: INLINE_FILLER_LENGTH };\n\t\t\t}\n\n\t\t\tconst offset = domBefore ? indexOf( domBefore ) + 1 : 0;\n\n\t\t\treturn { parent: domParent!, offset };\n\t\t}\n\t}\n\n\t/**\n\t * Converts DOM to view. For all text nodes, not bound elements and document fragments new items will\n\t * be created. For bound elements and document fragments function will return corresponding items. For\n\t * {@link module:engine/view/filler fillers} `null` will be returned.\n\t * For all DOM elements rendered by {@link module:engine/view/uielement~UIElement} that UIElement will be returned.\n\t *\n\t * @param {Node|DocumentFragment} domNode DOM node or document fragment to transform.\n\t * @param {Object} [options] Conversion options.\n\t * @param {Boolean} [options.bind=false] Determines whether new elements will be bound.\n\t * @param {Boolean} [options.withChildren=true] If `true`, node's and document fragment's children will be converted too.\n\t * @param {Boolean} [options.keepOriginalCase=false] If `false`, node's tag name will be converted to lower case.\n\t * @param {Boolean} [options.skipComments=false] If `false`, comment nodes will be converted to `$comment`\n\t * {@link module:engine/view/uielement~UIElement view UI elements}.\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null} Converted node or document fragment\n\t * or `null` if DOM node is a {@link module:engine/view/filler filler} or the given node is an empty text node.\n\t */\n\tpublic domToView( domNode: DomNode, options: {\n\t\tbind?: boolean;\n\t\twithChildren?: boolean;\n\t\tkeepOriginalCase?: boolean;\n\t\tskipComments?: boolean;\n\t} = {} ): ViewNode | ViewDocumentFragment | null\n\n\t{\n\t\tif ( this.isBlockFiller( domNode ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// When node is inside a UIElement or a RawElement return that parent as it's view representation.\n\t\tconst hostElement = this.getHostViewElement( domNode );\n\n\t\tif ( hostElement ) {\n\t\t\treturn hostElement;\n\t\t}\n\n\t\tif ( isComment( domNode ) && options.skipComments ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( isText( domNode ) ) {\n\t\t\tif ( isInlineFiller( domNode ) ) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tconst textData = this._processDataFromDomText( domNode );\n\n\t\t\t\treturn textData === '' ? null : new ViewText( this.document, textData );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( this.mapDomToView( domNode as ( DomElement | DomDocumentFragment ) ) ) {\n\t\t\t\treturn this.mapDomToView( domNode as ( DomElement | DomDocumentFragment ) )!;\n\t\t\t}\n\n\t\t\tlet viewElement;\n\n\t\t\tif ( this.isDocumentFragment( domNode ) ) {\n\t\t\t\t// Create view document fragment.\n\t\t\t\tviewElement = new ViewDocumentFragment( this.document );\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindDocumentFragments( domNode, viewElement );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Create view element.\n\t\t\t\tviewElement = this._createViewElement( domNode, options );\n\n\t\t\t\tif ( options.bind ) {\n\t\t\t\t\tthis.bindElements( domNode as DomElement, viewElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy element's attributes.\n\t\t\t\tconst attrs = ( domNode as DomElement ).attributes;\n\n\t\t\t\tif ( attrs ) {\n\t\t\t\t\tfor ( let l = attrs.length, i = 0; i < l; i++ ) {\n\t\t\t\t\t\tviewElement._setAttribute( attrs[ i ].name, attrs[ i ].value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Treat this element's content as a raw data if it was registered as such.\n\t\t\t\t// Comment node is also treated as an element with raw data.\n\t\t\t\tif ( this._isViewElementWithRawContent( viewElement, options ) || isComment( domNode ) ) {\n\t\t\t\t\tconst rawContent = isComment( domNode ) ? domNode.data : ( domNode as DomElement ).innerHTML;\n\n\t\t\t\t\tviewElement._setCustomProperty( '$rawContent', rawContent );\n\n\t\t\t\t\t// Store a DOM node to prevent left trimming of the following text node.\n\t\t\t\t\tthis._encounteredRawContentDomNodes.add( domNode );\n\n\t\t\t\t\treturn viewElement;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( options.withChildren !== false ) {\n\t\t\t\tfor ( const child of this.domChildrenToView( domNode as DomElement, options ) ) {\n\t\t\t\t\tviewElement._appendChild( child );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn viewElement;\n\t\t}\n\t}\n\n\t/**\n\t * Converts children of the DOM element to view nodes using\n\t * the {@link module:engine/view/domconverter~DomConverter#domToView} method.\n\t * Additionally this method omits block {@link module:engine/view/filler filler}, if it exists in the DOM parent.\n\t *\n\t * @param {HTMLElement} domElement Parent DOM element.\n\t * @param {Object} options See {@link module:engine/view/domconverter~DomConverter#domToView} options parameter.\n\t * @returns {Iterable.<module:engine/view/node~Node>} View nodes.\n\t */\n\tpublic* domChildrenToView( domElement: DomElement, options: Parameters<DomConverter[ 'domToView' ]>[ 1 ] ):\n\t\tIterableIterator<ViewNode> {\n\t\tfor ( let i = 0; i < domElement.childNodes.length; i++ ) {\n\t\t\tconst domChild = domElement.childNodes[ i ];\n\t\t\tconst viewChild = this.domToView( domChild, options ) as Exclude<ReturnType<DomConverter[ 'domToView']>, ViewDocumentFragment>;\n\n\t\t\tif ( viewChild !== null ) {\n\t\t\t\tyield viewChild;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts DOM selection to view {@link module:engine/view/selection~Selection}.\n\t * Ranges which cannot be converted will be omitted.\n\t *\n\t * @param {Selection} domSelection DOM selection.\n\t * @returns {module:engine/view/selection~Selection} View selection.\n\t */\n\tpublic domSelectionToView( domSelection: DomSelection ): ViewSelection {\n\t\t// DOM selection might be placed in fake selection container.\n\t\t// If container contains fake selection - return corresponding view selection.\n\t\tif ( domSelection.rangeCount === 1 ) {\n\t\t\tlet container: Node | null = domSelection.getRangeAt( 0 ).startContainer;\n\n\t\t\t// The DOM selection might be moved to the text node inside the fake selection container.\n\t\t\tif ( isText( container ) ) {\n\t\t\t\tcontainer = container.parentNode;\n\t\t\t}\n\n\t\t\tconst viewSelection = this.fakeSelectionToView( container as DomElement );\n\n\t\t\tif ( viewSelection ) {\n\t\t\t\treturn viewSelection;\n\t\t\t}\n\t\t}\n\n\t\tconst isBackward = this.isDomSelectionBackward( domSelection );\n\n\t\tconst viewRanges: ViewRange[] = [];\n\n\t\tfor ( let i = 0; i < domSelection.rangeCount; i++ ) {\n\t\t\t// DOM Range have correct start and end, no matter what is the DOM Selection direction. So we don't have to fix anything.\n\t\t\tconst domRange = domSelection.getRangeAt( i );\n\t\t\tconst viewRange = this.domRangeToView( domRange );\n\n\t\t\tif ( viewRange ) {\n\t\t\t\tviewRanges.push( viewRange );\n\t\t\t}\n\t\t}\n\n\t\treturn new ViewSelection( viewRanges, { backward: isBackward } );\n\t}\n\n\t/**\n\t * Converts DOM Range to view {@link module:engine/view/range~Range}.\n\t * If the start or end position can not be converted `null` is returned.\n\t *\n\t * @param {Range} domRange DOM range.\n\t * @returns {module:engine/view/range~Range|null} View range.\n\t */\n\tpublic domRangeToView( domRange: DomRange | StaticRange ): ViewRange | null {\n\t\tconst viewStart = this.domPositionToView( domRange.startContainer, domRange.startOffset );\n\t\tconst viewEnd = this.domPositionToView( domRange.endContainer, domRange.endOffset );\n\n\t\tif ( viewStart && viewEnd ) {\n\t\t\treturn new ViewRange( viewStart, viewEnd );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Converts DOM parent and offset to view {@link module:engine/view/position~Position}.\n\t *\n\t * If the position is inside a {@link module:engine/view/filler filler} which has no corresponding view node,\n\t * position of the filler will be converted and returned.\n\t *\n\t * If the position is inside DOM element rendered by {@link module:engine/view/uielement~UIElement}\n\t * that position will be converted to view position before that UIElement.\n\t *\n\t * If structures are too different and it is not possible to find corresponding position then `null` will be returned.\n\t *\n\t * @param {Node} domParent DOM position parent.\n\t * @param {Number} [domOffset=0] DOM position offset. You can skip it when converting the inline filler node.\n\t * @returns {module:engine/view/position~Position} viewPosition View position.\n\t */\n\tpublic domPositionToView( domParent: DomNode, domOffset: number = 0 ): ViewPosition | null {\n\t\tif ( this.isBlockFiller( domParent ) ) {\n\t\t\treturn this.domPositionToView( domParent.parentNode!, indexOf( domParent ) );\n\t\t}\n\n\t\t// If position is somewhere inside UIElement or a RawElement - return position before that element.\n\t\tconst viewElement = this.mapDomToView( domParent as DomElement );\n\n\t\tif ( viewElement && ( viewElement.is( 'uiElement' ) || viewElement.is( 'rawElement' ) ) ) {\n\t\t\treturn ViewPosition._createBefore( viewElement );\n\t\t}\n\n\t\tif ( isText( domParent ) ) {\n\t\t\tif ( isInlineFiller( domParent ) ) {\n\t\t\t\treturn this.domPositionToView( domParent.parentNode!, indexOf( domParent ) );\n\t\t\t}\n\n\t\t\tconst viewParent = this.findCorrespondingViewText( domParent );\n\t\t\tlet offset = domOffset;\n\n\t\t\tif ( !viewParent ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( startsWithFiller( domParent ) ) {\n\t\t\t\toffset -= INLINE_FILLER_LENGTH;\n\t\t\t\toffset = offset < 0 ? 0 : offset;\n\t\t\t}\n\n\t\t\treturn new ViewPosition( viewParent, offset );\n\t\t}\n\t\t// domParent instanceof HTMLElement.\n\t\telse {\n\t\t\tif ( domOffset === 0 ) {\n\t\t\t\tconst viewParent = this.mapDomToView( domParent as DomElement );\n\n\t\t\t\tif ( viewParent ) {\n\t\t\t\t\treturn new ViewPosition( viewParent, 0 );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst domBefore = domParent.childNodes[ domOffset - 1 ];\n\t\t\t\tconst viewBefore = isText( domBefore ) ?\n\t\t\t\t\tthis.findCorrespondingViewText( domBefore ) :\n\t\t\t\t\tthis.mapDomToView( domBefore as DomElement );\n\n\t\t\t\t// TODO #663\n\t\t\t\tif ( viewBefore && viewBefore.parent ) {\n\t\t\t\t\treturn new ViewPosition( viewBefore.parent, viewBefore.index! + 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns corresponding view {@link module:engine/view/element~Element Element} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment} for provided DOM element or\n\t * document fragment. If there is no view item {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * to the given DOM - `undefined` is returned.\n\t *\n\t * For all DOM elements rendered by a {@link module:engine/view/uielement~UIElement} or\n\t * a {@link module:engine/view/rawelement~RawElement}, the parent `UIElement` or `RawElement` will be returned.\n\t *\n\t * @param {DocumentFragment|Element} domElementOrDocumentFragment DOM element or document fragment.\n\t * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|undefined}\n\t * Corresponding view element, document fragment or `undefined` if no element was bound.\n\t */\n\tpublic mapDomToView( domElementOrDocumentFragment: DomElement | DomDocumentFragment ): ViewElement | ViewDocumentFragment | undefined {\n\t\tconst hostElement = this.getHostViewElement( domElementOrDocumentFragment );\n\n\t\treturn hostElement || this._domToViewMapping.get( domElementOrDocumentFragment );\n\t}\n\n\t/**\n\t * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n\t * corresponding text node is returned based on the sibling or parent.\n\t *\n\t * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n\t * to find the corresponding text node.\n\t *\n\t * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * element, it is used to find the corresponding text node.\n\t *\n\t * For all text nodes rendered by a {@link module:engine/view/uielement~UIElement} or\n\t * a {@link module:engine/view/rawelement~RawElement}, the parent `UIElement` or `RawElement` will be returned.\n\t *\n\t * Otherwise `null` is returned.\n\t *\n\t * Note that for the block or inline {@link module:engine/view/filler filler} this method returns `null`.\n\t *\n\t * @param {Text} domText DOM text node.\n\t * @returns {module:engine/view/text~Text|null} Corresponding view text node or `null`, if it was not possible to find a\n\t * corresponding node.\n\t */\n\tpublic findCorrespondingViewText( domText: DomText ): ViewText | ViewUIElement | ViewRawElement | null {\n\t\tif ( isInlineFiller( domText ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// If DOM text was rendered by a UIElement or a RawElement - return this parent element.\n\t\tconst hostElement = this.getHostViewElement( domText );\n\n\t\tif ( hostElement ) {\n\t\t\treturn hostElement;\n\t\t}\n\n\t\tconst previousSibling = domText.previousSibling;\n\n\t\t// Try to use previous sibling to find the corresponding text node.\n\t\tif ( previousSibling ) {\n\t\t\tif ( !( this.isElement( previousSibling ) ) ) {\n\t\t\t\t// The previous is text or comment.\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst viewElement = this.mapDomToView( previousSibling );\n\n\t\t\tif ( viewElement ) {\n\t\t\t\tconst nextSibling = ( viewElement as ViewElement ).nextSibling;\n\n\t\t\t\t// It might be filler which has no corresponding view node.\n\t\t\t\tif ( nextSibling instanceof ViewText ) {\n\t\t\t\t\treturn nextSibling;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Try to use parent to find the corresponding text node.\n\t\telse {\n\t\t\tconst viewElement = this.mapDomToView( domText.parentNode as ( DomElement | DomDocumentFragment ) );\n\n\t\t\tif ( viewElement ) {\n\t\t\t\tconst firstChild = ( viewElement as ViewElement ).getChild( 0 );\n\n\t\t\t\t// It might be filler which has no corresponding view node.\n\t\t\t\tif ( firstChild instanceof ViewText ) {\n\t\t\t\t\treturn firstChild;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns corresponding DOM item for provided {@link module:engine/view/element~Element Element} or\n\t * {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment}.\n\t * To find a corresponding text for {@link module:engine/view/text~Text view Text instance}\n\t * use {@link #findCorrespondingDomText}.\n\t *\n\t * @param {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment} viewNode\n\t * View element or document fragment.\n\t * @returns {Node|DocumentFragment|undefined} Corresponding DOM node or document fragment.\n\t */\n\tpublic mapViewToDom( documentFragmentOrElement: ViewElement | ViewDocumentFragment ): DomNode | DomDocumentFragment | undefined {\n\t\treturn this._viewToDomMapping.get( documentFragmentOrElement );\n\t}\n\n\t/**\n\t * Finds corresponding text node. Text nodes are not {@link module:engine/view/domconverter~DomConverter#bindElements bound},\n\t * corresponding text node is returned based on the sibling or parent.\n\t *\n\t * If the directly previous sibling is a {@link module:engine/view/domconverter~DomConverter#bindElements bound} element, it is used\n\t * to find the corresponding text node.\n\t *\n\t * If this is a first child in the parent and the parent is a {@link module:engine/view/domconverter~DomConverter#bindElements bound}\n\t * element, it is used to find the corresponding text node.\n\t *\n\t * Otherwise `null` is returned.\n\t *\n\t * @param {module:engine/view/text~Text} viewText View text node.\n\t * @returns {Text|null} Corresponding DOM text node or `null`, if it was not possible to find a corresponding node.\n\t */\n\tpublic findCorrespondingDomText( viewText: ViewText ): DomText | null {\n\t\tconst previousSibling = viewText.previousSibling;\n\n\t\t// Try to use previous sibling to find the corresponding text node.\n\t\tif ( previousSibling && this.mapViewToDom( previousSibling as ViewElement ) ) {\n\t\t\treturn this.mapViewToDom( previousSibling as ViewElement )!.nextSibling as DomText;\n\t\t}\n\n\t\t// If this is a first node, try to use parent to find the corresponding text node.\n\t\tif ( !previousSibling && viewText.parent && this.mapViewToDom( viewText.parent ) ) {\n\t\t\treturn this.mapViewToDom( viewText.parent )!.childNodes[ 0 ] as DomText;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Focuses DOM editable that is corresponding to provided {@link module:engine/view/editableelement~EditableElement}.\n\t *\n\t * @param {module:engine/view/editableelement~EditableElement} viewEditable\n\t */\n\tpublic focus( viewEditable: EditableElement ): void {\n\t\tconst domEditable = this.mapViewToDom( viewEditable ) as DomElement;\n\n\t\tif ( domEditable && domEditable.ownerDocument.activeElement !== domEditable ) {\n\t\t\t// Save the scrollX and scrollY positions before the focus.\n\t\t\tconst { scrollX, scrollY } = global.window;\n\t\t\tconst scrollPositions: [ number, number ][] = [];\n\n\t\t\t// Save all scrollLeft and scrollTop values starting from domEditable up to\n\t\t\t// document#documentElement.\n\t\t\tforEachDomElementAncestor( domEditable, node => {\n\t\t\t\tconst { scrollLeft, scrollTop } = ( node as DomElement );\n\n\t\t\t\tscrollPositions.push( [ scrollLeft, scrollTop ] );\n\t\t\t} );\n\n\t\t\tdomEditable.focus();\n\n\t\t\t// Restore scrollLeft and scrollTop values starting from domEditable up to\n\t\t\t// document#documentElement.\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/957\n\t\t\tforEachDomElementAncestor( domEditable, node => {\n\t\t\t\tconst [ scrollLeft, scrollTop ] = scrollPositions.shift() as [ number, number ];\n\n\t\t\t\tnode.scrollLeft = scrollLeft;\n\t\t\t\tnode.scrollTop = scrollTop;\n\t\t\t} );\n\n\t\t\t// Restore the scrollX and scrollY positions after the focus.\n\t\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/951\n\t\t\tglobal.window.scrollTo( scrollX, scrollY );\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.ELEMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tpublic isElement( node: DomNode ): node is DomElement {\n\t\treturn node && node.nodeType == Node.ELEMENT_NODE;\n\t}\n\n\t/**\n\t * Returns `true` when `node.nodeType` equals `Node.DOCUMENT_FRAGMENT_NODE`.\n\t *\n\t * @param {Node} node Node to check.\n\t * @returns {Boolean}\n\t */\n\tpublic isDocumentFragment( node: DomNode ): node is DomDocumentFragment {\n\t\treturn node && node.nodeType == Node.DOCUMENT_FRAGMENT_NODE;\n\t}\n\n\t/**\n\t * Checks if the node is an instance of the block filler for this DOM converter.\n\t *\n\t *\t\tconst converter = new DomConverter( viewDocument, { blockFillerMode: 'br' } );\n\t *\n\t *\t\tconverter.isBlockFiller( BR_FILLER( document ) ); // true\n\t *\t\tconverter.isBlockFiller( NBSP_FILLER( document ) ); // false\n\t *\n\t * **Note:**: For the `'nbsp'` mode the method also checks context of a node so it cannot be a detached node.\n\t *\n\t * **Note:** A special case in the `'nbsp'` mode exists where the `<br>` in `<p><br></p>` is treated as a block filler.\n\t *\n\t * @param {Node} domNode DOM node to check.\n\t * @returns {Boolean} True if a node is considered a block filler for given mode.\n\t */\n\tpublic isBlockFiller( domNode: DomNode ): boolean {\n\t\tif ( this.blockFillerMode == 'br' ) {\n\t\t\treturn domNode.isEqualNode( BR_FILLER_REF );\n\t\t}\n\n\t\t// Special case for <p><br></p> in which <br> should be treated as filler even when we are not in the 'br' mode. See ckeditor5#5564.\n\t\tif (\n\t\t\t( domNode as DomElement ).tagName === 'BR' &&\n\t\t\thasBlockParent( domNode, this.blockElements ) &&\n\t\t\t( domNode as DomElement ).parentNode!.childNodes.length === 1\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If not in 'br' mode, try recognizing both marked and regular nbsp block fillers.\n\t\treturn domNode.isEqualNode( MARKED_NBSP_FILLER_REF ) || isNbspBlockFiller( domNode, this.blockElements );\n\t}\n\n\t/**\n\t * Returns `true` if given selection is a backward selection, that is, if it's `focus` is before `anchor`.\n\t *\n\t * @param {Selection} DOM Selection instance to check.\n\t * @returns {Boolean}\n\t */\n\tpublic isDomSelectionBackward( selection: DomSelection ): boolean {\n\t\tif ( selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Since it takes multiple lines of code to check whether a \"DOM Position\" is before/after another \"DOM Position\",\n\t\t// we will use the fact that range will collapse if it's end is before it's start.\n\t\tconst range = this._domDocument.createRange();\n\n\t\trange.setStart( selection.anchorNode!, selection.anchorOffset );\n\t\trange.setEnd( selection.focusNode!, selection.focusOffset );\n\n\t\tconst backward = range.collapsed;\n\n\t\trange.detach();\n\n\t\treturn backward;\n\t}\n\n\t/**\n\t * Returns a parent {@link module:engine/view/uielement~UIElement} or {@link module:engine/view/rawelement~RawElement}\n\t * that hosts the provided DOM node. Returns `null` if there is no such parent.\n\t *\n\t * @param {Node} domNode\n\t * @returns {module:engine/view/uielement~UIElement|module:engine/view/rawelement~RawElement|null}\n\t */\n\tpublic getHostViewElement( domNode: DomNode ): ViewUIElement | ViewRawElement | null {\n\t\tconst ancestors = getAncestors( domNode );\n\n\t\t// Remove domNode from the list.\n\t\tancestors.pop();\n\n\t\twhile ( ancestors.length ) {\n\t\t\tconst domNode = ancestors.pop();\n\t\t\tconst viewNode = this._domToViewMapping.get( domNode as DomElement );\n\n\t\t\tif ( viewNode && ( viewNode.is( 'uiElement' ) || viewNode.is( 'rawElement' ) ) ) {\n\t\t\t\treturn viewNode;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks if the given selection's boundaries are at correct places.\n\t *\n\t * The following places are considered as incorrect for selection boundaries:\n\t *\n\t * * before or in the middle of an inline filler sequence,\n\t * * inside a DOM element which represents {@link module:engine/view/uielement~UIElement a view UI element},\n\t * * inside a DOM element which represents {@link module:engine/view/rawelement~RawElement a view raw element}.\n\t *\n\t * @param {Selection} domSelection The DOM selection object to be checked.\n\t * @returns {Boolean} `true` if the given selection is at a correct place, `false` otherwise.\n\t */\n\tpublic isDomSelectionCorrect( domSelection: DomSelection ): boolean {\n\t\treturn this._isDomSelectionPositionCorrect( domSelection.anchorNode!, domSelection.anchorOffset ) &&\n\t\t\tthis._isDomSelectionPositionCorrect( domSelection.focusNode!, domSelection.focusOffset );\n\t}\n\n\t/**\n\t * Registers a {@link module:engine/view/matcher~MatcherPattern} for view elements whose content should be treated as raw data\n\t * and not processed during the conversion from DOM nodes to view elements.\n\t *\n\t * This is affecting how {@link module:engine/view/domconverter~DomConverter#domToView} and\n\t * {@link module:engine/view/domconverter~DomConverter#domChildrenToView} process DOM nodes.\n\t *\n\t * The raw data can be later accessed by a\n\t * {@link module:engine/view/element~Element#getCustomProperty custom property of a view element} called `\"$rawContent\"`.\n\t *\n\t * @param {module:engine/view/matcher~MatcherPattern} pattern Pattern matching a view element whose content should\n\t * be treated as raw data.\n\t */\n\tpublic registerRawContentMatcher( pattern: MatcherPattern ): void {\n\t\tthis._rawContentElementMatcher.add( pattern );\n\t}\n\n\t/**\n\t * Returns the block {@link module:engine/view/filler filler} node based on the current {@link #blockFillerMode} setting.\n\t *\n\t * @private\n\t * @returns {Node} filler\n\t */\n\tprivate _getBlockFiller(): DomNode {\n\t\tswitch ( this.blockFillerMode ) {\n\t\t\tcase 'nbsp':\n\t\t\t\treturn NBSP_FILLER( this._domDocument ); // eslint-disable-line new-cap\n\t\t\tcase 'markedNbsp':\n\t\t\t\treturn MARKED_NBSP_FILLER( this._domDocument ); // eslint-disable-line new-cap\n\t\t\tcase 'br':\n\t\t\t\treturn BR_FILLER( this._domDocument ); // eslint-disable-line new-cap\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given DOM position is a correct place for selection boundary. See {@link #isDomSelectionCorrect}.\n\t *\n\t * @private\n\t * @param {Element} domParent Position parent.\n\t * @param {Number} offset Position offset.\n\t * @returns {Boolean} `true` if given position is at a correct place for selection boundary, `false` otherwise.\n\t */\n\tprivate _isDomSelectionPositionCorrect( domParent: DomNode, offset: number ): boolean {\n\t\t// If selection is before or in the middle of inline filler string, it is incorrect.\n\t\tif ( isText( domParent ) && startsWithFiller( domParent ) && offset < INLINE_FILLER_LENGTH ) {\n\t\t\t// Selection in a text node, at wrong position (before or in the middle of filler).\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.isElement( domParent ) && startsWithFiller( domParent.childNodes[ offset ] ) ) {\n\t\t\t// Selection in an element node, before filler text node.\n\t\t\treturn false;\n\t\t}\n\n\t\tconst viewParent = this.mapDomToView( domParent as DomElement );\n\n\t\t// The position is incorrect when anchored inside a UIElement or a RawElement.\n\t\t// Note: In case of UIElement and RawElement, mapDomToView() returns a parent element for any DOM child\n\t\t// so there's no need to perform any additional checks.\n\t\tif ( viewParent && ( viewParent.is( 'uiElement' ) || viewParent.is( 'rawElement' ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Takes text data from a given {@link module:engine/view/text~Text#data} and processes it so\n\t * it is correctly displayed in the DOM.\n\t *\n\t * Following changes are done:\n\t *\n\t * * a space at the beginning is changed to `&nbsp;` if this is the first text node in its container\n\t * element or if a previous text node ends with a space character,\n\t * * space at the end of the text node is changed to `&nbsp;` if there are two spaces at the end of a node or if next node\n\t * starts with a space or if it is the last text node in its container,\n\t * * remaining spaces are replaced to a chain of spaces and `&nbsp;` (e.g. `'x   x'` becomes `'x &nbsp; x'`).\n\t *\n\t * Content of {@link #preElements} is not processed.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} node View text node to process.\n\t * @returns {String} Processed text data.\n\t */\n\tprivate _processDataFromViewText( node: ViewText | ViewTextProxy ): string {\n\t\tlet data = node.data;\n\n\t\t// If any of node ancestors has a name which is in `preElements` array, then currently processed\n\t\t// view text node is (will be) in preformatted element. We should not change whitespaces then.\n\t\tif ( node.getAncestors().some( parent => this.preElements.includes( ( parent as ViewElement ).name ) ) ) {\n\t\t\treturn data;\n\t\t}\n\n\t\t// 1. Replace the first space with a nbsp if the previous node ends with a space or there is no previous node\n\t\t// (container element boundary).\n\t\tif ( data.charAt( 0 ) == ' ' ) {\n\t\t\tconst prevNode = this._getTouchingInlineViewNode( node as ViewText, false );\n\t\t\tconst prevEndsWithSpace = prevNode && prevNode.is( '$textProxy' ) && this._nodeEndsWithSpace( prevNode as ViewTextProxy );\n\n\t\t\tif ( prevEndsWithSpace || !prevNode ) {\n\t\t\t\tdata = '\\u00A0' + data.substr( 1 );\n\t\t\t}\n\t\t}\n\n\t\t// 2. Replace the last space with nbsp if there are two spaces at the end or if the next node starts with space or there is no\n\t\t// next node (container element boundary).\n\t\t//\n\t\t// Keep in mind that Firefox prefers $nbsp; before tag, not inside it:\n\t\t//\n\t\t// Foo <span>&nbsp;bar</span>  <-- bad.\n\t\t// Foo&nbsp;<span> bar</span>  <-- good.\n\t\t//\n\t\t// More here: https://github.com/ckeditor/ckeditor5-engine/issues/1747.\n\t\tif ( data.charAt( data.length - 1 ) == ' ' ) {\n\t\t\tconst nextNode = this._getTouchingInlineViewNode( node as ViewText, true );\n\t\t\tconst nextStartsWithSpace = nextNode && nextNode.is( '$textProxy' ) && nextNode.data.charAt( 0 ) == ' ';\n\n\t\t\tif ( data.charAt( data.length - 2 ) == ' ' || !nextNode || nextStartsWithSpace ) {\n\t\t\t\tdata = data.substr( 0, data.length - 1 ) + '\\u00A0';\n\t\t\t}\n\t\t}\n\n\t\t// 3. Create space+nbsp pairs.\n\t\treturn data.replace( / {2}/g, ' \\u00A0' );\n\t}\n\n\t/**\n\t * Checks whether given node ends with a space character after changing appropriate space characters to `&nbsp;`s.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} node Node to check.\n\t * @returns {Boolean} `true` if given `node` ends with space, `false` otherwise.\n\t */\n\tprivate _nodeEndsWithSpace( node: ViewTextProxy ): boolean {\n\t\tif ( node.getAncestors().some( parent => this.preElements.includes( ( parent as ViewElement ).name ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst data = this._processDataFromViewText( node );\n\n\t\treturn data.charAt( data.length - 1 ) == ' ';\n\t}\n\n\t/**\n\t * Takes text data from native `Text` node and processes it to a correct {@link module:engine/view/text~Text view text node} data.\n\t *\n\t * Following changes are done:\n\t *\n\t * * multiple whitespaces are replaced to a single space,\n\t * * space at the beginning of a text node is removed if it is the first text node in its container\n\t * element or if the previous text node ends with a space character,\n\t * * space at the end of the text node is removed if there are two spaces at the end of a node or if next node\n\t * starts with a space or if it is the last text node in its container\n\t * * nbsps are converted to spaces.\n\t *\n\t * @param {Node} node DOM text node to process.\n\t * @returns {String} Processed data.\n\t * @private\n\t */\n\tprivate _processDataFromDomText( node: DomText ): string {\n\t\tlet data = node.data;\n\n\t\tif ( _hasDomParentOfType( node, this.preElements ) ) {\n\t\t\treturn getDataWithoutFiller( node );\n\t\t}\n\n\t\t// Change all consecutive whitespace characters (from the [ \\n\\t\\r] set –\n\t\t// see https://github.com/ckeditor/ckeditor5-engine/issues/822#issuecomment-311670249) to a single space character.\n\t\t// That's how multiple whitespaces are treated when rendered, so we normalize those whitespaces.\n\t\t// We're replacing 1+ (and not 2+) to also normalize singular \\n\\t\\r characters (#822).\n\t\tdata = data.replace( /[ \\n\\t\\r]{1,}/g, ' ' );\n\n\t\tconst prevNode = this._getTouchingInlineDomNode( node, false );\n\t\tconst nextNode = this._getTouchingInlineDomNode( node, true );\n\n\t\tconst shouldLeftTrim = this._checkShouldLeftTrimDomText( node, prevNode );\n\t\tconst shouldRightTrim = this._checkShouldRightTrimDomText( node, nextNode );\n\n\t\t// If the previous dom text node does not exist or it ends by whitespace character, remove space character from the beginning\n\t\t// of this text node. Such space character is treated as a whitespace.\n\t\tif ( shouldLeftTrim ) {\n\t\t\tdata = data.replace( /^ /, '' );\n\t\t}\n\n\t\t// If the next text node does not exist remove space character from the end of this text node.\n\t\tif ( shouldRightTrim ) {\n\t\t\tdata = data.replace( / $/, '' );\n\t\t}\n\n\t\t// At the beginning and end of a block element, Firefox inserts normal space + <br> instead of non-breaking space.\n\t\t// This means that the text node starts/end with normal space instead of non-breaking space.\n\t\t// This causes a problem because the normal space would be removed in `.replace` calls above. To prevent that,\n\t\t// the inline filler is removed only after the data is initially processed (by the `.replace` above). See ckeditor5#692.\n\t\tdata = getDataWithoutFiller( new Text( data ) );\n\n\t\t// At this point we should have removed all whitespaces from DOM text data.\n\t\t//\n\t\t// Now, We will reverse the process that happens in `_processDataFromViewText`.\n\t\t//\n\t\t// We have to change &nbsp; chars, that were in DOM text data because of rendering reasons, to spaces.\n\t\t// First, change all ` \\u00A0` pairs (space + &nbsp;) to two spaces. DOM converter changes two spaces from model/view to\n\t\t// ` \\u00A0` to ensure proper rendering. Since here we convert back, we recognize those pairs and change them back to `  `.\n\t\tdata = data.replace( / \\u00A0/g, '  ' );\n\n\t\tconst isNextNodeInlineObjectElement = nextNode && this.isElement( nextNode ) && nextNode.tagName != 'BR';\n\t\tconst isNextNodeStartingWithSpace = nextNode && isText( nextNode ) && nextNode.data.charAt( 0 ) == ' ';\n\n\t\t// Then, let's change the last nbsp to a space.\n\t\tif ( /( |\\u00A0)\\u00A0$/.test( data ) || !nextNode || isNextNodeInlineObjectElement || isNextNodeStartingWithSpace ) {\n\t\t\tdata = data.replace( /\\u00A0$/, ' ' );\n\t\t}\n\n\t\t// Then, change &nbsp; character that is at the beginning of the text node to space character.\n\t\t// We do that replacement only if this is the first node or the previous node ends on whitespace character.\n\t\tif ( shouldLeftTrim || prevNode && this.isElement( prevNode ) && prevNode.tagName != 'BR' ) {\n\t\t\tdata = data.replace( /^\\u00A0/, ' ' );\n\t\t}\n\n\t\t// At this point, all whitespaces should be removed and all &nbsp; created for rendering reasons should be\n\t\t// changed to normal space. All left &nbsp; are &nbsp; inserted intentionally.\n\t\treturn data;\n\t}\n\n\t/**\n\t * Helper function which checks if a DOM text node, preceded by the given `prevNode` should\n\t * be trimmed from the left side.\n\t *\n\t * @private\n\t * @param {Node} node\n\t * @param {Node} prevNode Either DOM text or `<br>` or one of `#inlineObjectElements`.\n\t */\n\tprivate _checkShouldLeftTrimDomText( node: DomText, prevNode: DomNode | null ): boolean {\n\t\tif ( !prevNode ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( this.isElement( prevNode ) ) {\n\t\t\treturn prevNode.tagName === 'BR';\n\t\t}\n\n\t\t// Shouldn't left trim if previous node is a node that was encountered as a raw content node.\n\t\tif ( this._encounteredRawContentDomNodes.has( node.previousSibling as any ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn /[^\\S\\u00A0]/.test( ( prevNode as DomText ).data.charAt( ( prevNode as DomText ).data.length - 1 ) );\n\t}\n\n\t/**\n\t * Helper function which checks if a DOM text node, succeeded by the given `nextNode` should\n\t * be trimmed from the right side.\n\t *\n\t * @private\n\t * @param {Node} node\n\t * @param {Node} nextNode Either DOM text or `<br>` or one of `#inlineObjectElements`.\n\t */\n\tprivate _checkShouldRightTrimDomText( node: DomText, nextNode: DomNode | null ): boolean {\n\t\tif ( nextNode ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !startsWithFiller( node );\n\t}\n\n\t/**\n\t * Helper function. For given {@link module:engine/view/text~Text view text node}, it finds previous or next sibling\n\t * that is contained in the same container element. If there is no such sibling, `null` is returned.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} node Reference node.\n\t * @param {Boolean} getNext\n\t * @returns {module:engine/view/text~Text|module:engine/view/element~Element|null} Touching text node, an inline object\n\t * or `null` if there is no next or previous touching text node.\n\t */\n\tprivate _getTouchingInlineViewNode( node: ViewText, getNext: boolean ): ViewElement | ViewTextProxy | null {\n\t\tconst treeWalker = new ViewTreeWalker( {\n\t\t\tstartPosition: getNext ? ViewPosition._createAfter( node ) : ViewPosition._createBefore( node ),\n\t\t\tdirection: getNext ? 'forward' : 'backward'\n\t\t} );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\t// Found an inline object (for example an image).\n\t\t\tif ( value.item.is( 'element' ) && this.inlineObjectElements.includes( value.item.name ) ) {\n\t\t\t\treturn value.item;\n\t\t\t}\n\t\t\t// ViewContainerElement is found on a way to next ViewText node, so given `node` was first/last\n\t\t\t// text node in its container element.\n\t\t\telse if ( value.item.is( 'containerElement' ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// <br> found – it works like a block boundary, so do not scan further.\n\t\t\telse if ( value.item.is( 'element', 'br' ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t// Found a text node in the same container element.\n\t\t\telse if ( value.item.is( '$textProxy' ) ) {\n\t\t\t\treturn value.item;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Helper function. For the given text node, it finds the closest touching node which is either\n\t * a text, `<br>` or an {@link #inlineObjectElements inline object}.\n\t *\n\t * If no such node is found, `null` is returned.\n\t *\n\t * For instance, in the following DOM structure:\n\t *\n\t *\t\t<p>foo<b>bar</b><br>bom</p>\n\t *\n\t * * `foo` doesn't have its previous touching inline node (`null` is returned),\n\t * * `foo`'s next touching inline node is `bar`\n\t * * `bar`'s next touching inline node is `<br>`\n\t *\n\t * This method returns text nodes and `<br>` elements because these types of nodes affect how\n\t * spaces in the given text node need to be converted.\n\t *\n\t * @private\n\t * @param {Text} node\n\t * @param {Boolean} getNext\n\t * @returns {Text|Element|null}\n\t */\n\tprivate _getTouchingInlineDomNode( node: DomText, getNext: boolean ): DomNode | null {\n\t\tif ( !node.parentNode ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst stepInto = getNext ? 'firstChild' : 'lastChild';\n\t\tconst stepOver = getNext ? 'nextSibling' : 'previousSibling';\n\n\t\tlet skipChildren = true;\n\t\tlet returnNode: DomNode | null = node;\n\n\t\tdo {\n\t\t\tif ( !skipChildren && returnNode[ stepInto ] ) {\n\t\t\t\treturnNode = returnNode[ stepInto ];\n\t\t\t} else if ( returnNode[ stepOver ] ) {\n\t\t\t\treturnNode = returnNode[ stepOver ];\n\t\t\t\tskipChildren = false;\n\t\t\t} else {\n\t\t\t\treturnNode = returnNode.parentNode;\n\t\t\t\tskipChildren = true;\n\t\t\t}\n\n\t\t\tif ( !returnNode || this._isBlockElement( returnNode ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} while (\n\t\t\t!( isText( returnNode ) || ( returnNode as DomElement ).tagName == 'BR' || this._isInlineObjectElement( returnNode ) )\n\t\t);\n\n\t\treturn returnNode;\n\t}\n\n\t/**\n\t * Returns `true` if a DOM node belongs to {@link #blockElements}. `false` otherwise.\n\t *\n\t * @private\n\t * @param {Node} node\n\t * @returns {Boolean}\n\t */\n\tprivate _isBlockElement( node: DomNode ): boolean {\n\t\treturn this.isElement( node ) && this.blockElements.includes( node.tagName.toLowerCase() );\n\t}\n\n\t/**\n\t * Returns `true` if a DOM node belongs to {@link #inlineObjectElements}. `false` otherwise.\n\t *\n\t * @private\n\t * @param {Node} node\n\t * @returns {Boolean}\n\t */\n\tprivate _isInlineObjectElement( node: DomNode ): boolean {\n\t\treturn this.isElement( node ) && this.inlineObjectElements.includes( node.tagName.toLowerCase() );\n\t}\n\n\t/**\n\t * Creates view element basing on the node type.\n\t *\n\t * @private\n\t * @param {Node} node DOM node to check.\n\t * @param {Object} options Conversion options. See {@link module:engine/view/domconverter~DomConverter#domToView} options parameter.\n\t * @returns {Element}\n\t */\n\tprivate _createViewElement( node: DomNode, options: { keepOriginalCase?: boolean } ): ViewElement {\n\t\tif ( isComment( node ) ) {\n\t\t\treturn new ViewUIElement( this.document, '$comment' );\n\t\t}\n\n\t\tconst viewName = options.keepOriginalCase ? ( node as DomElement ).tagName : ( node as DomElement ).tagName.toLowerCase();\n\n\t\treturn new ViewElement( this.document, viewName );\n\t}\n\n\t/**\n\t * Checks if view element's content should be treated as a raw data.\n\t *\n\t * @private\n\t * @param {Element} viewElement View element to check.\n\t * @param {Object} options Conversion options. See {@link module:engine/view/domconverter~DomConverter#domToView} options parameter.\n\t * @returns {Boolean}\n\t */\n\tprivate _isViewElementWithRawContent( viewElement: ViewElement, options: { withChildren?: boolean } ): boolean {\n\t\treturn options.withChildren !== false && !!this._rawContentElementMatcher.match( viewElement );\n\t}\n\n\t/**\n\t * Checks whether a given element name should be renamed in a current rendering mode.\n\t *\n\t * @private\n\t * @param {String} elementName The name of view element.\n\t * @returns {Boolean}\n\t */\n\tprivate _shouldRenameElement( elementName: string ): boolean {\n\t\tconst name = elementName.toLowerCase();\n\n\t\treturn this.renderingMode === 'editing' && this.unsafeElements.includes( name );\n\t}\n\n\t/**\n\t * Return a <span> element with a special attribute holding the name of the original element.\n\t * Optionally, copy all the attributes of the original element if that element is provided.\n\t *\n\t * @private\n\t * @param {String} elementName The name of view element.\n\t * @param {Element} [originalDomElement] The original DOM element to copy attributes and content from.\n\t * @returns {Element}\n\t */\n\tprivate _createReplacementDomElement( elementName: string, originalDomElement?: DomElement ): DomElement {\n\t\tconst newDomElement = this._domDocument.createElement( 'span' );\n\n\t\t// Mark the span replacing a script as hidden.\n\t\tnewDomElement.setAttribute( UNSAFE_ELEMENT_REPLACEMENT_ATTRIBUTE, elementName );\n\n\t\tif ( originalDomElement ) {\n\t\t\twhile ( originalDomElement.firstChild ) {\n\t\t\t\tnewDomElement.appendChild( originalDomElement.firstChild );\n\t\t\t}\n\n\t\t\tfor ( const attributeName of originalDomElement.getAttributeNames() ) {\n\t\t\t\tnewDomElement.setAttribute( attributeName, originalDomElement.getAttribute( attributeName )! );\n\t\t\t}\n\t\t}\n\n\t\treturn newDomElement;\n\t}\n}\n\n// Helper function.\n// Used to check if given native `Element` or `Text` node has parent with tag name from `types` array.\n//\n// @param {Node} node\n// @param {Array.<String>} types\n// @returns {Boolean} `true` if such parent exists or `false` if it does not.\nfunction _hasDomParentOfType( node: DomNode, types: string[] ) {\n\tconst parents = getAncestors( node );\n\n\treturn parents.some( parent => ( parent as DomElement ).tagName && types.includes( ( parent as DomElement ).tagName.toLowerCase() ) );\n}\n\n// A helper that executes given callback for each DOM node's ancestor, starting from the given node\n// and ending in document#documentElement.\n//\n// @param {Node} node\n// @param {Function} callback A callback to be executed for each ancestor.\nfunction forEachDomElementAncestor( element: DomElement, callback: ( node: DomElement ) => void ) {\n\tlet node: DomElement | null = element;\n\n\twhile ( node ) {\n\t\tcallback( node as DomElement );\n\t\tnode = node.parentElement;\n\t}\n}\n\n// Checks if given node is a nbsp block filler.\n//\n// A &nbsp; is a block filler only if it is a single child of a block element.\n//\n// @param {Node} domNode DOM node.\n// @param {Array.<String>} blockElements\n// @returns {Boolean}\nfunction isNbspBlockFiller( domNode: DomNode, blockElements: string[] ): boolean {\n\tconst isNBSP = domNode.isEqualNode( NBSP_FILLER_REF );\n\n\treturn isNBSP && hasBlockParent( domNode, blockElements ) && ( domNode as DomElement ).parentNode!.childNodes.length === 1;\n}\n\n// Checks if domNode has block parent.\n//\n// @param {Node} domNode DOM node.\n// @param {Array.<String>} blockElements\n// @returns {Boolean}\nfunction hasBlockParent( domNode: DomNode, blockElements: string[] ): boolean {\n\tconst parent = domNode.parentNode;\n\n\treturn !!parent && !!( parent as DomElement ).tagName && blockElements.includes( ( parent as DomElement ).tagName.toLowerCase() );\n}\n\n// Log to console the information about element that was replaced.\n// Check UNSAFE_ELEMENTS for all recognized unsafe elements.\n//\n// @param {String} elementName The name of the view element\nfunction _logUnsafeElement( elementName: string ): void {\n\tif ( elementName === 'script' ) {\n\t\tlogWarning( 'domconverter-unsafe-script-element-detected' );\n\t}\n\n\tif ( elementName === 'style' ) {\n\t\tlogWarning( 'domconverter-unsafe-style-element-detected' );\n\t}\n}\n\n/**\n * Enum representing the type of the block filler.\n *\n * Possible values:\n *\n * * `br` &ndash; For the `<br data-cke-filler=\"true\">` block filler used in the editing view.\n * * `nbsp` &ndash; For the `&nbsp;` block fillers used in the data.\n * * `markedNbsp` &ndash; For the `&nbsp;` block fillers wrapped in `<span>` elements: `<span data-cke-filler=\"true\">&nbsp;</span>`\n * used in the data.\n *\n * @typedef {String} module:engine/view/filler~BlockFillerMode\n */\ntype BlockFillerMode = 'br' | 'nbsp' | 'markedNbsp';\n\n/**\n * While rendering the editor content, the {@link module:engine/view/domconverter~DomConverter} detected a `<script>` element that may\n * disrupt the editing experience. To avoid this, the `<script>` element was replaced with `<span data-ck-unsafe-element=\"script\"></span>`.\n *\n * @error domconverter-unsafe-script-element-detected\n */\n\n/**\n * While rendering the editor content, the {@link module:engine/view/domconverter~DomConverter} detected a `<style>` element that may affect\n * the editing experience. To avoid this, the `<style>` element was replaced with `<span data-ck-unsafe-element=\"style\"></span>`.\n *\n * @error domconverter-unsafe-style-element-detected\n */\n\n/**\n * The {@link module:engine/view/domconverter~DomConverter} detected an interactive attribute in the\n * {@glink framework/guides/architecture/editing-engine#editing-pipeline editing pipeline}. For the best\n * editing experience, the attribute was renamed to `data-ck-unsafe-attribute-[original attribute name]`.\n *\n * If you are the author of the plugin that generated this attribute and you want it to be preserved\n * in the editing pipeline, you can configure this when creating the element\n * using {@link module:engine/view/downcastwriter~DowncastWriter} during the\n * {@glink framework/guides/architecture/editing-engine#conversion model–view conversion}. Methods such as\n * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement},\n * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement}, or\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement}\n * accept an option that will disable filtering of specific attributes:\n *\n *\t\tconst paragraph = writer.createContainerElement( 'p',\n *\t\t\t{\n *\t\t\t\tclass: 'clickable-paragraph',\n *\t\t\t\tonclick: 'alert( \"Paragraph clicked!\" )'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\t// Make sure the \"onclick\" attribute will pass through.\n *\t\t\t\trenderUnsafeAttributes: [ 'onclick' ]\n *\t\t\t}\n *\t\t);\n *\n * @error domconverter-unsafe-attribute-detected\n * @param {HTMLElement} domElement The DOM element the attribute was set on.\n * @param {String} key The original name of the attribute\n * @param {String} value The value of the original attribute\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module module:engine/view/downcastwriter\n */\n\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\nimport ContainerElement from './containerelement';\nimport AttributeElement from './attributeelement';\nimport EmptyElement from './emptyelement';\nimport UIElement from './uielement';\nimport RawElement from './rawelement';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport DocumentFragment from './documentfragment';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport Text from './text';\nimport EditableElement from './editableelement';\nimport { isPlainObject } from 'lodash-es';\n\nimport type Document from './document';\nimport type Node from './node';\nimport type { default as Element, ElementAttributes } from './element';\nimport type DomConverter from './domconverter';\nimport type Item from './item';\nimport type { SlotFilter } from '../conversion/downcasthelpers';\n\ntype DomDocument = globalThis.Document;\ntype DomElement = globalThis.HTMLElement;\n\n/**\n * View downcast writer.\n *\n * It provides a set of methods used to manipulate view nodes.\n *\n * Do not create an instance of this writer manually. To modify a view structure, use\n * the {@link module:engine/view/view~View#change `View#change()`} block.\n *\n * The `DowncastWriter` is designed to work with semantic views which are the views that were/are being downcasted from the model.\n * To work with ordinary views (e.g. parsed from a pasted content) use the\n * {@link module:engine/view/upcastwriter~UpcastWriter upcast writer}.\n *\n * Read more about changing the view in the {@glink framework/guides/architecture/editing-engine#changing-the-view Changing the view}\n * section of the {@glink framework/guides/architecture/editing-engine Editing engine architecture} guide.\n */\nexport default class DowncastWriter {\n\tpublic readonly document: Document;\n\tprivate readonly _cloneGroups: Map<string | number, Set<AttributeElement>>;\n\tprivate _slotFactory: ( ( writer: DowncastWriter, modeOrFilter: string | SlotFilter ) => Element ) | null;\n\n\t/**\n\t * @param {module:engine/view/document~Document} document The view document instance.\n\t */\n\tconstructor( document: Document ) {\n\t\t/**\n\t\t * The view document instance in which this writer operates.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Holds references to the attribute groups that share the same {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t\t * The keys are `id`s, the values are `Set`s holding {@link module:engine/view/attributeelement~AttributeElement}s.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<String,Set>}\n\t\t */\n\t\tthis._cloneGroups = new Map();\n\n\t\t/**\n\t\t * The slot factory used by the `elementToStructure` downcast helper.\n\t\t *\n\t\t * @private\n\t\t * @type {Function|null}\n\t\t */\n\t\tthis._slotFactory = null;\n\t}\n\n\t/**\n\t * Sets {@link module:engine/view/documentselection~DocumentSelection selection's} ranges and direction to the\n\t * specified location based on the given {@link module:engine/view/selection~Selectable selectable}.\n\t *\n\t * Usage:\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets backward selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( start2, end2 ) ];\n\t *\t\twriter.setSelection( range );\n\t *\n\t *\t\t// Sets selection to the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\twriter.setSelection( otherSelection );\n\t *\n\t * \t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\twriter.setSelection( position );\n\t *\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'p' );\n\t *\t\twriter.setSelection( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n \t * that element and ends after the last child of that element.\n\t *\n\t * \t\twriter.setSelection( paragraph, 'in' );\n\t *\n\t * Creates a range on the {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\twriter.setSelection( paragraph, 'on' );\n\t *\n\t * \t\t// Removes all ranges.\n\t *\t\twriter.setSelection( null );\n\t *\n\t * `DowncastWriter#setSelection()` allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\twriter.setSelection( range, { backward: true } );\n\t *\n\t *\t\t// Sets selection as fake.\n\t *\t\t// Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * \t\t// This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * \t\t// represented in other way, for example by applying proper CSS class.\n\t *\t\twriter.setSelection( range, { fake: true } );\n\t *\n\t * \t\t// Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * \t\t// (and be  properly handled by screen readers).\n\t *\t\twriter.setSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tpublic setSelection( ...args: Parameters<Selection[ 'setTo' ]> ): void {\n\t\tthis.document.selection._setTo( ...args );\n\t}\n\n\t/**\n\t * Moves {@link module:engine/view/documentselection~DocumentSelection#focus selection's focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n\t * parameters.\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tpublic setSelectionFocus( ...args: Parameters<Selection[ 'setFocus' ]> ): void {\n\t\tthis.document.selection._setFocus( ...args );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/documentfragment~DocumentFragment} instance.\n\t *\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into the created document fragment.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} The created document fragment.\n\t */\n\tpublic createDocumentFragment( children: Node | Iterable<Node> ): DocumentFragment {\n\t\treturn new DocumentFragment( this.document, children );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/text~Text text node}.\n\t *\n\t *\t\twriter.createText( 'foo' );\n\t *\n\t * @param {String} data The text's data.\n\t * @returns {module:engine/view/text~Text} The created text node.\n\t */\n\tpublic createText( data: string ): Text {\n\t\treturn new Text( this.document, data );\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/attributeelement~AttributeElement}.\n\t *\n\t *\t\twriter.createAttributeElement( 'strong' );\n\t *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' } );\n\t *\n\t *\t\t// Make `<a>` element contain other attributes element so the `<a>` element is not broken.\n\t *\t\twriter.createAttributeElement( 'a', { href: 'foo.bar' }, { priority: 5 } );\n\t *\n\t *\t\t// Set `id` of a marker element so it is not joined or merged with \"normal\" elements.\n\t *\t\twriter.createAttributeElement( 'span', { class: 'my-marker' }, { id: 'marker:my' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Element's attributes.\n\t * @param {Object} [options] Element's options.\n\t * @param {Number} [options.priority] Element's {@link module:engine/view/attributeelement~AttributeElement#priority priority}.\n\t * @param {Number|String} [options.id] Element's {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t * @param {Array.<String>} [options.renderUnsafeAttributes] A list of attribute names that should be rendered in the editing\n\t * pipeline even though they would normally be filtered out by unsafe attribute detection mechanisms.\n\t * @returns {module:engine/view/attributeelement~AttributeElement} Created element.\n\t */\n\tpublic createAttributeElement(\n\t\tname: string,\n\t\tattributes?: ElementAttributes,\n\t\toptions: {\n\t\t\tpriority?: number;\n\t\t\tid?: number | string;\n\t\t\trenderUnsafeAttributes?: string[];\n\t\t} = {}\n\t): AttributeElement {\n\t\tconst attributeElement = new AttributeElement( this.document, name, attributes );\n\n\t\tif ( typeof options.priority === 'number' ) {\n\t\t\t( attributeElement as any )._priority = options.priority;\n\t\t}\n\n\t\tif ( options.id ) {\n\t\t\t( attributeElement as any )._id = options.id;\n\t\t}\n\n\t\tif ( options.renderUnsafeAttributes ) {\n\t\t\t( attributeElement as any )._unsafeAttributesToRender.push( ...options.renderUnsafeAttributes );\n\t\t}\n\n\t\treturn attributeElement;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/containerelement~ContainerElement}.\n\t *\n\t *\t\twriter.createContainerElement( 'p' );\n\t *\n\t *\t\t// Create element with custom attributes.\n\t *\t\twriter.createContainerElement( 'div', { id: 'foo-bar', 'data-baz': '123' } );\n\t *\n\t *\t\t// Create element with custom styles.\n\t *\t\twriter.createContainerElement( 'p', { style: 'font-weight: bold; padding-bottom: 10px' } );\n\t *\n\t *\t\t// Create element with custom classes.\n\t *\t\twriter.createContainerElement( 'p', { class: 'foo bar baz' } );\n\t *\n\t *\t\t// Create element with children.\n\t *\t\twriter.createContainerElement( 'figure', { class: 'image' }, [\n\t *\t\t\twriter.createEmptyElement( 'img' ),\n\t *\t\t\twriter.createContainerElement( 'figcaption' )\n\t *\t\t] );\n\t *\n\t *\t\t// Create element with specific options.\n\t *\t\twriter.createContainerElement( 'span', { class: 'placeholder' }, { renderUnsafeAttributes: [ 'foo' ] } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>|Object} [childrenOrOptions]\n\t * A node or a list of nodes to be inserted into the created element. If no children were specified, element's `options`\n\t * can be passed in this argument.\n\t * @param {Object} [options] Element's options.\n\t * @param {Array.<String>} [options.renderUnsafeAttributes] A list of attribute names that should be rendered in the editing\n\t * pipeline even though they would normally be filtered out by unsafe attribute detection mechanisms.\n\t * @returns {module:engine/view/containerelement~ContainerElement} Created element.\n\t */\n\tpublic createContainerElement(\n\t\tname: string,\n\t\tattributes?: ElementAttributes,\n\t\toptions?: { renderUnsafeAttributes?: string[] }\n\t): ContainerElement;\n\tpublic createContainerElement(\n\t\tname: string,\n\t\tattributes: ElementAttributes,\n\t\tchildren: Node | Iterable<Node>,\n\t\toptions?: { renderUnsafeAttributes?: string[] }\n\t): ContainerElement;\n\tpublic createContainerElement(\n\t\tname: string,\n\t\tattributes?: ElementAttributes,\n\t\tchildrenOrOptions: Node | Iterable<Node> | { renderUnsafeAttributes?: string[] } = {},\n\t\toptions: { renderUnsafeAttributes?: string[] } = {}\n\t): ContainerElement {\n\t\tlet children = null;\n\n\t\tif ( isPlainObject( childrenOrOptions ) ) {\n\t\t\toptions = childrenOrOptions as { renderUnsafeAttributes?: string[] };\n\t\t} else {\n\t\t\tchildren = childrenOrOptions;\n\t\t}\n\n\t\tconst containerElement = new ContainerElement( this.document, name, attributes, children as Node | Iterable<Node> );\n\n\t\tif ( options.renderUnsafeAttributes ) {\n\t\t\t( containerElement as any )._unsafeAttributesToRender.push( ...options.renderUnsafeAttributes );\n\t\t}\n\n\t\treturn containerElement;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/editableelement~EditableElement}.\n\t *\n\t *\t\twriter.createEditableElement( 'div' );\n\t *\t\twriter.createEditableElement( 'div', { id: 'foo-1234' } );\n\t *\n\t * Note: The editable element is to be used in the editing pipeline. Usually, together with\n\t * {@link module:widget/utils~toWidgetEditable `toWidgetEditable()`}.\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @param {Object} [options] Element's options.\n\t * @param {Array.<String>} [options.renderUnsafeAttributes] A list of attribute names that should be rendered in the editing\n\t * pipeline even though they would normally be filtered out by unsafe attribute detection mechanisms.\n\t * @returns {module:engine/view/editableelement~EditableElement} Created element.\n\t */\n\tpublic createEditableElement(\n\t\tname: string,\n\t\tattributes: ElementAttributes,\n\t\toptions: {\n\t\t\trenderUnsafeAttributes?: string[];\n\t\t} = {}\n\t): EditableElement {\n\t\tconst editableElement = new EditableElement( this.document, name, attributes );\n\n\t\tif ( options.renderUnsafeAttributes ) {\n\t\t\t( editableElement as any )._unsafeAttributesToRender.push( ...options.renderUnsafeAttributes );\n\t\t}\n\n\t\treturn editableElement;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/emptyelement~EmptyElement}.\n\t *\n\t *\t\twriter.createEmptyElement( 'img' );\n\t *\t\twriter.createEmptyElement( 'img', { id: 'foo-1234' } );\n\t *\n\t * @param {String} name Name of the element.\n\t * @param {Object} [attributes] Elements attributes.\n\t * @param {Object} [options] Element's options.\n\t * @param {Array.<String>} [options.renderUnsafeAttributes] A list of attribute names that should be rendered in the editing\n\t * pipeline even though they would normally be filtered out by unsafe attribute detection mechanisms.\n\t * @returns {module:engine/view/emptyelement~EmptyElement} Created element.\n\t */\n\tpublic createEmptyElement(\n\t\tname: string,\n\t\tattributes: ElementAttributes,\n\t\toptions: {\n\t\t\trenderUnsafeAttributes?: string[];\n\t\t} = {}\n\t): EmptyElement {\n\t\tconst emptyElement = new EmptyElement( this.document, name, attributes );\n\n\t\tif ( options.renderUnsafeAttributes ) {\n\t\t\t( emptyElement as any )._unsafeAttributesToRender.push( ...options.renderUnsafeAttributes );\n\t\t}\n\n\t\treturn emptyElement;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/uielement~UIElement}.\n\t *\n\t *\t\twriter.createUIElement( 'span' );\n\t *\t\twriter.createUIElement( 'span', { id: 'foo-1234' } );\n\t *\n\t * A custom render function can be provided as the third parameter:\n\t *\n\t *\t\twriter.createUIElement( 'span', null, function( domDocument ) {\n\t *\t\t\tconst domElement = this.toDomElement( domDocument );\n\t *\t\t\tdomElement.innerHTML = '<b>this is ui element</b>';\n\t *\n\t *\t\t\treturn domElement;\n\t *\t\t} );\n\t *\n\t * Unlike {@link #createRawElement raw elements}, UI elements are by no means editor content, for instance,\n\t * they are ignored by the editor selection system.\n\t *\n\t * You should not use UI elements as data containers. Check out {@link #createRawElement} instead.\n\t *\n\t * @param {String} name The name of the element.\n\t * @param {Object} [attributes] Element attributes.\n\t * @param {Function} [renderFunction] A custom render function.\n\t * @returns {module:engine/view/uielement~UIElement} The created element.\n\t */\n\tpublic createUIElement(\n\t\tname: string,\n\t\tattributes?: ElementAttributes,\n\t\trenderFunction?: ( domDocument: DomDocument, domConverter?: DomConverter ) => DomElement\n\t): UIElement {\n\t\tconst uiElement = new UIElement( this.document, name, attributes );\n\n\t\tif ( renderFunction ) {\n\t\t\tuiElement.render = renderFunction;\n\t\t}\n\n\t\treturn uiElement;\n\t}\n\n\t/**\n\t * Creates a new {@link module:engine/view/rawelement~RawElement}.\n\t *\n\t *\t\twriter.createRawElement( 'span', { id: 'foo-1234' }, function( domElement ) {\n\t *\t\t\tdomElement.innerHTML = '<b>This is the raw content of the raw element.</b>';\n\t *\t\t} );\n\t *\n\t * Raw elements work as data containers (\"wrappers\", \"sandboxes\") but their children are not managed or\n\t * even recognized by the editor. This encapsulation allows integrations to maintain custom DOM structures\n\t * in the editor content without, for instance, worrying about compatibility with other editor features.\n\t * Raw elements are a perfect tool for integration with external frameworks and data sources.\n\t *\n\t * Unlike {@link #createUIElement UI elements}, raw elements act like \"real\" editor content (similar to\n\t * {@link module:engine/view/containerelement~ContainerElement} or {@link module:engine/view/emptyelement~EmptyElement}),\n\t * and they are considered by the editor selection.\n\t *\n\t * You should not use raw elements to render the UI in the editor content. Check out {@link #createUIElement `#createUIElement()`}\n\t * instead.\n\t *\n\t * @param {String} name The name of the element.\n\t * @param {Object} [attributes] Element attributes.\n\t * @param {Function} [renderFunction] A custom render function.\n\t * @param {Object} [options] Element's options.\n\t * @param {Array.<String>} [options.renderUnsafeAttributes] A list of attribute names that should be rendered in the editing\n\t * pipeline even though they would normally be filtered out by unsafe attribute detection mechanisms.\n\t * @returns {module:engine/view/rawelement~RawElement} The created element.\n\t */\n\tpublic createRawElement(\n\t\tname: string,\n\t\tattributes: ElementAttributes,\n\t\trenderFunction: ( domElement: DomElement, domConverter?: DomConverter ) => void,\n\t\toptions: {\n\t\t\trenderUnsafeAttributes?: string[];\n\t\t} = {}\n\t): RawElement {\n\t\tconst rawElement = new RawElement( this.document, name, attributes );\n\n\t\tif ( renderFunction ) {\n\t\t\trawElement.render = renderFunction;\n\t\t}\n\n\t\tif ( options.renderUnsafeAttributes ) {\n\t\t\t( rawElement as any )._unsafeAttributesToRender.push( ...options.renderUnsafeAttributes );\n\t\t}\n\n\t\treturn rawElement;\n\t}\n\n\t/**\n\t * Adds or overwrites the element's attribute with a specified key and value.\n\t *\n\t *\t\twriter.setAttribute( 'href', 'http://ckeditor.com', linkElement );\n\t *\n\t * @param {String} key The attribute key.\n\t * @param {String} value The attribute value.\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tpublic setAttribute( key: string, value: string, element: Element ): void {\n\t\telement._setAttribute( key, value );\n\t}\n\n\t/**\n\t * Removes attribute from the element.\n\t *\n\t *\t\twriter.removeAttribute( 'href', linkElement );\n\t *\n\t * @param {String} key Attribute key.\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tpublic removeAttribute( key: string, element: Element ): void {\n\t\telement._removeAttribute( key );\n\t}\n\n\t/**\n\t * Adds specified class to the element.\n\t *\n\t *\t\twriter.addClass( 'foo', linkElement );\n\t *\t\twriter.addClass( [ 'foo', 'bar' ], linkElement );\n\t *\n\t * @param {Array.<String>|String} className\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tpublic addClass( className: string | string[], element: Element ): void {\n\t\telement._addClass( className );\n\t}\n\n\t/**\n\t * Removes specified class from the element.\n\t *\n\t *\t\twriter.removeClass( 'foo', linkElement );\n\t *\t\twriter.removeClass( [ 'foo', 'bar' ], linkElement );\n\t *\n\t * @param {Array.<String>|String} className\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tpublic removeClass( className: string | string[], element: Element ): void {\n\t\telement._removeClass( className );\n\t}\n\n\t/**\n\t * Adds style to the element.\n\t *\n\t *\t\twriter.setStyle( 'color', 'red', element );\n\t *\t\twriter.setStyle( {\n\t *\t\t\tcolor: 'red',\n\t *\t\t\tposition: 'fixed'\n\t *\t\t}, element );\n\t *\n\t * **Note**: The passed style can be normalized if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\n\t *\n\t * @param {String|Object} property Property name or object with key - value pairs.\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n\t * @param {module:engine/view/element~Element} element Element to set styles on.\n\t */\n\tpublic setStyle( property: string, value: string, element: Element ): void;\n\tpublic setStyle( property: Record<string, string>, element: Element ): void;\n\tpublic setStyle(\n\t\tproperty: string | Record<string, string>,\n\t\tvalue: string | Element,\n\t\telement?: Element\n\t): void\n\t{\n\t\tif ( isPlainObject( property ) && element === undefined ) {\n\t\t\t( value as Element )._setStyle( property as Record<string, string> );\n\t\t} else {\n\t\t\telement!._setStyle( property as string, value as string );\n\t\t}\n\t}\n\n\t/**\n\t * Removes specified style from the element.\n\t *\n\t *\t\twriter.removeStyle( 'color', element ); // Removes 'color' style.\n\t *\t\twriter.removeStyle( [ 'color', 'border-top' ], element ); // Removes both 'color' and 'border-top' styles.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\n\t *\n\t * @param {Array.<String>|String} property\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tpublic removeStyle( property: string | string[], element: Element ): void {\n\t\telement._removeStyle( property );\n\t}\n\n\t/**\n\t * Sets a custom property on element. Unlike attributes, custom properties are not rendered to the DOM,\n\t * so they can be used to add special data to elements.\n\t *\n\t * @param {String|Symbol} key\n\t * @param {*} value\n\t * @param {module:engine/view/element~Element} element\n\t */\n\tpublic setCustomProperty( key: string | symbol, value: unknown, element: Element ): void {\n\t\telement._setCustomProperty( key, value );\n\t}\n\n\t/**\n\t * Removes a custom property stored under the given key.\n\t *\n\t * @param {String|Symbol} key\n\t * @param {module:engine/view/element~Element} element\n\t * @returns {Boolean} Returns true if property was removed.\n\t */\n\tpublic removeCustomProperty( key: string | symbol, element: Element ): boolean {\n\t\treturn element._removeCustomProperty( key );\n\t}\n\n\t/**\n\t * Breaks attribute elements at the provided position or at the boundaries of a provided range. It breaks attribute elements\n\t * up to their first ancestor that is a container element.\n\t *\n\t * In following examples `<p>` is a container, `<b>` and `<u>` are attribute elements:\n\t *\n\t *\t\t<p>foo<b><u>bar{}</u></b></p> -> <p>foo<b><u>bar</u></b>[]</p>\n\t *\t\t<p>foo<b><u>{}bar</u></b></p> -> <p>foo{}<b><u>bar</u></b></p>\n\t *\t\t<p>foo<b><u>b{}ar</u></b></p> -> <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n\t *\t\t<p><b>fo{o</b><u>ba}r</u></p> -> <p><b>fo</b><b>o</b><u>ba</u><u>r</u></b></p>\n\t *\n\t * **Note:** {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n\t *\n\t * **Note:** The difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes()} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer()} is that `breakAttributes()` breaks all\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of a given `position`,\n\t * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n\t * `breakContainer()` assumes that a given `position` is directly in the container element and breaks that container element.\n\t *\n\t * Throws the `view-writer-invalid-range-container` {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * when the {@link module:engine/view/range~Range#start start}\n\t * and {@link module:engine/view/range~Range#end end} positions of a passed range are not placed inside same parent container.\n\t *\n\t * Throws the `view-writer-cannot-break-empty-element` {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * when trying to break attributes inside an {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n\t *\n\t * Throws the `view-writer-cannot-break-ui-element` {@link module:utils/ckeditorerror~CKEditorError CKEditorError}\n\t * when trying to break attributes inside a {@link module:engine/view/uielement~UIElement UIElement}.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#breakContainer\n\t * @param {module:engine/view/position~Position|module:engine/view/range~Range} positionOrRange The position where\n\t * to break attribute elements.\n\t * @returns {module:engine/view/position~Position|module:engine/view/range~Range} The new position or range, after breaking the\n\t * attribute elements.\n\t */\n\tpublic breakAttributes( positionOrRange: Position | Range ): Position | Range {\n\t\tif ( positionOrRange instanceof Position ) {\n\t\t\treturn this._breakAttributes( positionOrRange );\n\t\t} else {\n\t\t\treturn this._breakAttributesRange( positionOrRange );\n\t\t}\n\t}\n\n\t/**\n\t * Breaks a {@link module:engine/view/containerelement~ContainerElement container view element} into two, at the given position.\n\t * The position has to be directly inside the container element and cannot be in the root. It does not break the conrainer view element\n\t * if the position is at the beginning or at the end of its parent element.\n\t *\n\t *\t\t<p>foo^bar</p> -> <p>foo</p><p>bar</p>\n\t *\t\t<div><p>foo</p>^<p>bar</p></div> -> <div><p>foo</p></div><div><p>bar</p></div>\n\t *\t\t<p>^foobar</p> -> ^<p>foobar</p>\n\t *\t\t<p>foobar^</p> -> <p>foobar</p>^\n\t *\n\t * **Note:** The difference between {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes breakAttributes()} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakContainer breakContainer()} is that `breakAttributes()` breaks all\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} that are ancestors of a given `position`,\n\t * up to the first encountered {@link module:engine/view/containerelement~ContainerElement container element}.\n\t * `breakContainer()` assumes that the given `position` is directly in the container element and breaks that container element.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#breakAttributes\n\t * @param {module:engine/view/position~Position} position The position where to break the element.\n\t * @returns {module:engine/view/position~Position} The position between broken elements. If an element has not been broken,\n\t * the returned position is placed either before or after it.\n\t */\n\tpublic breakContainer( position: Position ): Position {\n\t\tconst element = position.parent;\n\n\t\tif ( !( element.is( 'containerElement' ) ) ) {\n\t\t\t/**\n\t\t\t * Trying to break an element which is not a container element.\n\t\t\t *\n\t\t\t * @error view-writer-break-non-container-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-break-non-container-element', this.document );\n\t\t}\n\n\t\tif ( !element.parent ) {\n\t\t\t/**\n\t\t\t * Trying to break root element.\n\t\t\t *\n\t\t\t * @error view-writer-break-root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-break-root', this.document );\n\t\t}\n\n\t\tif ( position.isAtStart ) {\n\t\t\treturn Position._createBefore( element );\n\t\t} else if ( !position.isAtEnd ) {\n\t\t\tconst newElement = element._clone( false );\n\n\t\t\tthis.insert( Position._createAfter( element ), newElement as any );\n\n\t\t\tconst sourceRange = new Range( position, Position._createAt( element, 'end' ) );\n\t\t\tconst targetPosition = new Position( newElement, 0 );\n\n\t\t\tthis.move( sourceRange, targetPosition );\n\t\t}\n\n\t\treturn Position._createAfter( element );\n\t}\n\n\t/**\n\t * Merges {@link module:engine/view/attributeelement~AttributeElement attribute elements}. It also merges text nodes if needed.\n\t * Only {@link module:engine/view/attributeelement~AttributeElement#isSimilar similar} attribute elements can be merged.\n\t *\n\t * In following examples `<p>` is a container and `<b>` is an attribute element:\n\t *\n\t *\t\t<p>foo[]bar</p> -> <p>foo{}bar</p>\n\t *\t\t<p><b>foo</b>[]<b>bar</b></p> -> <p><b>foo{}bar</b></p>\n\t *\t\t<p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p> -> <p><b foo=\"bar\">a</b>[]<b foo=\"baz\">b</b></p>\n\t *\n\t * It will also take care about empty attributes when merging:\n\t *\n\t *\t\t<p><b>[]</b></p> -> <p>[]</p>\n\t *\t\t<p><b>foo</b><i>[]</i><b>bar</b></p> -> <p><b>foo{}bar</b></p>\n\t *\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n\t * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#mergeContainers\n\t * @param {module:engine/view/position~Position} position Merge position.\n\t * @returns {module:engine/view/position~Position} Position after merge.\n\t */\n\tpublic mergeAttributes( position: Position ): Position {\n\t\tconst positionOffset = position.offset;\n\t\tconst positionParent = position.parent;\n\n\t\t// When inside text node - nothing to merge.\n\t\tif ( positionParent.is( '$text' ) ) {\n\t\t\treturn position;\n\t\t}\n\n\t\t// When inside empty attribute - remove it.\n\t\tif ( positionParent.is( 'attributeElement' ) && positionParent.childCount === 0 ) {\n\t\t\tconst parent = positionParent.parent;\n\t\t\tconst offset = positionParent.index;\n\n\t\t\tpositionParent._remove();\n\t\t\tthis._removeFromClonedElementsGroup( positionParent );\n\n\t\t\treturn this.mergeAttributes( new Position( parent!, offset! ) );\n\t\t}\n\n\t\tconst nodeBefore = ( positionParent as Element ).getChild( positionOffset - 1 );\n\t\tconst nodeAfter = ( positionParent as Element ).getChild( positionOffset );\n\n\t\t// Position should be placed between two nodes.\n\t\tif ( !nodeBefore || !nodeAfter ) {\n\t\t\treturn position;\n\t\t}\n\n\t\t// When position is between two text nodes.\n\t\tif ( nodeBefore.is( '$text' ) && nodeAfter.is( '$text' ) ) {\n\t\t\treturn mergeTextNodes( nodeBefore, nodeAfter );\n\t\t}\n\t\t// When position is between two same attribute elements.\n\t\telse if ( nodeBefore.is( 'attributeElement' ) && nodeAfter.is( 'attributeElement' ) && nodeBefore.isSimilar( nodeAfter ) ) {\n\t\t\t// Move all children nodes from node placed after selection and remove that node.\n\t\t\tconst count = nodeBefore.childCount;\n\t\t\tnodeBefore._appendChild( nodeAfter.getChildren() );\n\n\t\t\tnodeAfter._remove();\n\t\t\tthis._removeFromClonedElementsGroup( nodeAfter );\n\n\t\t\t// New position is located inside the first node, before new nodes.\n\t\t\t// Call this method recursively to merge again if needed.\n\t\t\treturn this.mergeAttributes( new Position( nodeBefore, count ) );\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Merges two {@link module:engine/view/containerelement~ContainerElement container elements} that are before and after given position.\n\t * Precisely, the element after the position is removed and it's contents are moved to element before the position.\n\t *\n\t *\t\t<p>foo</p>^<p>bar</p> -> <p>foo^bar</p>\n\t *\t\t<div>foo</div>^<p>bar</p> -> <div>foo^bar</div>\n\t *\n\t * **Note:** Difference between {@link module:engine/view/downcastwriter~DowncastWriter#mergeAttributes mergeAttributes} and\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#mergeContainers mergeContainers} is that `mergeAttributes` merges two\n\t * {@link module:engine/view/attributeelement~AttributeElement attribute elements} or {@link module:engine/view/text~Text text nodes}\n\t * while `mergeContainer` merges two {@link module:engine/view/containerelement~ContainerElement container elements}.\n\t *\n\t * @see module:engine/view/attributeelement~AttributeElement\n\t * @see module:engine/view/containerelement~ContainerElement\n\t * @see module:engine/view/downcastwriter~DowncastWriter#mergeAttributes\n\t * @param {module:engine/view/position~Position} position Merge position.\n\t * @returns {module:engine/view/position~Position} Position after merge.\n\t */\n\tpublic mergeContainers( position: Position ): Position {\n\t\tconst prev = position.nodeBefore;\n\t\tconst next = position.nodeAfter;\n\n\t\tif ( !prev || !next || !prev.is( 'containerElement' ) || !next.is( 'containerElement' ) ) {\n\t\t\t/**\n\t\t\t * Element before and after given position cannot be merged.\n\t\t\t *\n\t\t\t * @error view-writer-merge-containers-invalid-position\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-merge-containers-invalid-position', this.document );\n\t\t}\n\n\t\tconst lastChild = prev.getChild( prev.childCount - 1 );\n\t\tconst newPosition = lastChild instanceof Text ? Position._createAt( lastChild, 'end' ) : Position._createAt( prev, 'end' );\n\n\t\tthis.move( Range._createIn( next ), Position._createAt( prev, 'end' ) );\n\t\tthis.remove( Range._createOn( next ) );\n\n\t\treturn newPosition;\n\t}\n\n\t/**\n\t * Inserts a node or nodes at specified position. Takes care about breaking attributes before insertion\n\t * and merging them afterwards.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n\t * contains instances that are not {@link module:engine/view/text~Text Texts},\n\t * {@link module:engine/view/attributeelement~AttributeElement AttributeElements},\n\t * {@link module:engine/view/containerelement~ContainerElement ContainerElements},\n\t * {@link module:engine/view/emptyelement~EmptyElement EmptyElements},\n\t * {@link module:engine/view/rawelement~RawElement RawElements} or\n\t * {@link module:engine/view/uielement~UIElement UIElements}.\n\t *\n\t * @param {module:engine/view/position~Position} position Insertion position.\n\t * @param {module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement|\n\t * module:engine/view/containerelement~ContainerElement|module:engine/view/emptyelement~EmptyElement|\n\t * module:engine/view/rawelement~RawElement|module:engine/view/uielement~UIElement|\n\t * Iterable.<module:engine/view/text~Text|\n\t * module:engine/view/attributeelement~AttributeElement|module:engine/view/containerelement~ContainerElement|\n\t * module:engine/view/emptyelement~EmptyElement|module:engine/view/rawelement~RawElement|\n\t * module:engine/view/uielement~UIElement>} nodes Node or nodes to insert.\n\t * @returns {module:engine/view/range~Range} Range around inserted nodes.\n\t */\n\tpublic insert( position: Position, nodes: Node | Iterable<Node> ): Range {\n\t\tnodes = isIterable( nodes ) ? [ ...nodes ] : [ nodes ];\n\n\t\t// Check if nodes to insert are instances of AttributeElements, ContainerElements, EmptyElements, UIElements or Text.\n\t\tvalidateNodesToInsert( nodes, this.document );\n\n\t\t// Group nodes in batches of nodes that require or do not require breaking an AttributeElements.\n\t\tconst nodeGroups = ( nodes as Node[] ).reduce( ( groups: { breakAttributes: boolean; nodes: Node[] }[], node ) => {\n\t\t\tconst lastGroup = groups[ groups.length - 1 ];\n\n\t\t\t// Break attributes on nodes that do exist in the model tree so they can have attributes, other elements\n\t\t\t// can't have an attribute in model and won't get wrapped with an AttributeElement while down-casted.\n\t\t\tconst breakAttributes = !node.is( 'uiElement' );\n\n\t\t\tif ( !lastGroup || lastGroup.breakAttributes != breakAttributes ) {\n\t\t\t\tgroups.push( {\n\t\t\t\t\tbreakAttributes,\n\t\t\t\t\tnodes: [ node ]\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tlastGroup.nodes.push( node );\n\t\t\t}\n\n\t\t\treturn groups;\n\t\t}, [] );\n\n\t\t// Insert nodes in batches.\n\t\tlet start = null;\n\t\tlet end = position;\n\n\t\tfor ( const { nodes, breakAttributes } of nodeGroups ) {\n\t\t\tconst range = this._insertNodes( end, nodes, breakAttributes );\n\n\t\t\tif ( !start ) {\n\t\t\t\tstart = range.start;\n\t\t\t}\n\n\t\t\tend = range.end;\n\t\t}\n\n\t\t// When no nodes were inserted - return collapsed range.\n\t\tif ( !start ) {\n\t\t\treturn new Range( position );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Removes provided range from the container.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range|module:engine/view/item~Item} rangeOrItem Range to remove from container\n\t * or an {@link module:engine/view/item~Item item} to remove. If range is provided, after removing, it will be updated\n\t * to a collapsed range showing the new position.\n\t * @returns {module:engine/view/documentfragment~DocumentFragment} Document fragment containing removed nodes.\n\t */\n\tpublic remove( rangeOrItem: Range | Item ): DocumentFragment {\n\t\tconst range = rangeOrItem instanceof Range ? rangeOrItem : Range._createOn( rangeOrItem );\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// If range is collapsed - nothing to remove.\n\t\tif ( range.isCollapsed ) {\n\t\t\treturn new DocumentFragment( this.document );\n\t\t}\n\n\t\t// Break attributes at range start and end.\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\n\t\tconst parentContainer = breakStart.parent as Element;\n\n\t\tconst count = breakEnd.offset - breakStart.offset;\n\n\t\t// Remove nodes in range.\n\t\tconst removed = parentContainer._removeChildren( breakStart.offset, count );\n\n\t\tfor ( const node of removed ) {\n\t\t\tthis._removeFromClonedElementsGroup( node );\n\t\t}\n\n\t\t// Merge after removing.\n\t\tconst mergePosition = this.mergeAttributes( breakStart );\n\t\trange.start = mergePosition;\n\t\trange.end = mergePosition.clone();\n\n\t\t// Return removed nodes.\n\t\treturn new DocumentFragment( this.document, removed );\n\t}\n\n\t/**\n\t * Removes matching elements from given range.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range} range Range to clear.\n\t * @param {module:engine/view/element~Element} element Element to remove.\n\t */\n\tpublic clear( range: Range, element: Element ): void {\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// Create walker on given range.\n\t\t// We walk backward because when we remove element during walk it modifies range end position.\n\t\tconst walker = range.getWalker( {\n\t\t\tdirection: 'backward',\n\t\t\tignoreElementEnd: true\n\t\t} );\n\n\t\t// Let's walk.\n\t\tfor ( const current of walker ) {\n\t\t\tconst item = current.item;\n\t\t\tlet rangeToRemove;\n\n\t\t\t// When current item matches to the given element.\n\t\t\tif ( item.is( 'element' ) && element.isSimilar( item ) ) {\n\t\t\t\t// Create range on this element.\n\t\t\t\trangeToRemove = Range._createOn( item );\n\t\t\t\t// When range starts inside Text or TextProxy element.\n\t\t\t} else if ( !current.nextPosition.isAfter( range.start ) && item.is( '$textProxy' ) ) {\n\t\t\t\t// We need to check if parent of this text matches to given element.\n\t\t\t\tconst parentElement = item.getAncestors().find( ancestor => {\n\t\t\t\t\treturn ancestor.is( 'element' ) && element.isSimilar( ancestor );\n\t\t\t\t} );\n\n\t\t\t\t// If it is then create range inside this element.\n\t\t\t\tif ( parentElement ) {\n\t\t\t\t\trangeToRemove = Range._createIn( parentElement as Element );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we have found element to remove.\n\t\t\tif ( rangeToRemove ) {\n\t\t\t\t// We need to check if element range stick out of the given range and truncate if it is.\n\t\t\t\tif ( rangeToRemove.end.isAfter( range.end ) ) {\n\t\t\t\t\trangeToRemove.end = range.end;\n\t\t\t\t}\n\n\t\t\t\tif ( rangeToRemove.start.isBefore( range.start ) ) {\n\t\t\t\t\trangeToRemove.start = range.start;\n\t\t\t\t}\n\n\t\t\t\t// At the end we remove range with found element.\n\t\t\t\tthis.remove( rangeToRemove );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Moves nodes from provided range to target position.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range} sourceRange Range containing nodes to move.\n\t * @param {module:engine/view/position~Position} targetPosition Position to insert.\n\t * @returns {module:engine/view/range~Range} Range in target container. Inserted nodes are placed between\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions.\n\t */\n\tpublic move( sourceRange: Range, targetPosition: Position ): Range {\n\t\tlet nodes;\n\n\t\tif ( targetPosition.isAfter( sourceRange.end ) ) {\n\t\t\ttargetPosition = this._breakAttributes( targetPosition, true );\n\n\t\t\tconst parent = targetPosition.parent as Element;\n\t\t\tconst countBefore = parent.childCount;\n\n\t\t\tsourceRange = this._breakAttributesRange( sourceRange, true );\n\n\t\t\tnodes = this.remove( sourceRange );\n\n\t\t\ttargetPosition.offset += ( parent.childCount - countBefore );\n\t\t} else {\n\t\t\tnodes = this.remove( sourceRange );\n\t\t}\n\n\t\treturn this.insert( targetPosition, nodes );\n\t}\n\n\t/**\n\t * Wraps elements within range with provided {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t * If a collapsed range is provided, it will be wrapped only if it is equal to view selection.\n\t *\n\t * If a collapsed range was passed and is same as selection, the selection\n\t * will be moved to the inside of the wrapped attribute element.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-invalid-range-container`\n\t * when {@link module:engine/view/range~Range#start}\n\t * and {@link module:engine/view/range~Range#end} positions are not placed inside same parent container.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-nonselection-collapsed-range` when passed range\n\t * is collapsed and different than view selection.\n\t *\n\t * @param {module:engine/view/range~Range} range Range to wrap.\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute Attribute element to use as wrapper.\n\t * @returns {module:engine/view/range~Range} range Range after wrapping, spanning over wrapping attribute element.\n\t */\n\tpublic wrap( range: Range, attribute: AttributeElement ): Range {\n\t\tif ( !( attribute instanceof AttributeElement ) ) {\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-writer-wrap-invalid-attribute',\n\t\t\t\tthis.document\n\t\t\t);\n\t\t}\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\tif ( !range.isCollapsed ) {\n\t\t\t// Non-collapsed range. Wrap it with the attribute element.\n\t\t\treturn this._wrapRange( range, attribute );\n\t\t} else {\n\t\t\t// Collapsed range. Wrap position.\n\t\t\tlet position = range.start;\n\n\t\t\tif ( position.parent.is( 'element' ) && !_hasNonUiChildren( position.parent ) ) {\n\t\t\t\tposition = position.getLastMatchingPosition( value => value.item.is( 'uiElement' ) );\n\t\t\t}\n\n\t\t\tposition = this._wrapPosition( position, attribute );\n\t\t\tconst viewSelection = this.document.selection;\n\n\t\t\t// If wrapping position is equal to view selection, move view selection inside wrapping attribute element.\n\t\t\tif ( viewSelection.isCollapsed && viewSelection.getFirstPosition()!.isEqual( range.start ) ) {\n\t\t\t\tthis.setSelection( position );\n\t\t\t}\n\n\t\t\treturn new Range( position );\n\t\t}\n\t}\n\n\t/**\n\t * Unwraps nodes within provided range from attribute element.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when\n\t * {@link module:engine/view/range~Range#start start} and {@link module:engine/view/range~Range#end end} positions are not placed inside\n\t * same parent container.\n\t *\n\t * @param {module:engine/view/range~Range} range\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\n\t */\n\tpublic unwrap( range: Range, attribute: AttributeElement ): Range {\n\t\tif ( !( attribute instanceof AttributeElement ) ) {\n\t\t\t/**\n\t\t\t * The `attribute` passed to {@link module:engine/view/downcastwriter~DowncastWriter#unwrap `DowncastWriter#unwrap()`}\n\t\t\t * must be an instance of {@link module:engine/view/attributeelement~AttributeElement `AttributeElement`}.\n\t\t\t *\n\t\t\t * @error view-writer-unwrap-invalid-attribute\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-writer-unwrap-invalid-attribute',\n\t\t\t\tthis.document\n\t\t\t);\n\t\t}\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// If range is collapsed - nothing to unwrap.\n\t\tif ( range.isCollapsed ) {\n\t\t\treturn range;\n\t\t}\n\n\t\t// Break attributes at range start and end.\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\n\t\tconst parentContainer = breakStart.parent as Element;\n\n\t\t// Unwrap children located between break points.\n\t\tconst newRange = this._unwrapChildren( parentContainer, breakStart.offset, breakEnd.offset, attribute );\n\n\t\t// Merge attributes at the both ends and return a new range.\n\t\tconst start = this.mergeAttributes( newRange.start );\n\n\t\t// If start position was merged - move end position back.\n\t\tif ( !start.isEqual( newRange.start ) ) {\n\t\t\tnewRange.end.offset--;\n\t\t}\n\n\t\tconst end = this.mergeAttributes( newRange.end );\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Renames element by creating a copy of renamed element but with changed name and then moving contents of the\n\t * old element to the new one. Keep in mind that this will invalidate all {@link module:engine/view/position~Position positions} which\n\t * has renamed element as {@link module:engine/view/position~Position#parent a parent}.\n\t *\n\t * New element has to be created because `Element#tagName` property in DOM is readonly.\n\t *\n\t * Since this function creates a new element and removes the given one, the new element is returned to keep reference.\n\t *\n\t * @param {String} newName New name for element.\n\t * @param {module:engine/view/containerelement~ContainerElement} viewElement Element to be renamed.\n\t * @returns {module:engine/view/containerelement~ContainerElement} Element created due to rename.\n\t */\n\tpublic rename( newName: string, viewElement: ContainerElement ): ContainerElement {\n\t\tconst newElement = new ContainerElement( this.document, newName, viewElement.getAttributes() );\n\n\t\tthis.insert( Position._createAfter( viewElement ), newElement );\n\t\tthis.move( Range._createIn( viewElement ), Position._createAt( newElement, 0 ) );\n\t\tthis.remove( Range._createOn( viewElement ) );\n\n\t\treturn newElement;\n\t}\n\n\t/**\n\t * Cleans up memory by removing obsolete cloned elements group from the writer.\n\t *\n\t * Should be used whenever all {@link module:engine/view/attributeelement~AttributeElement attribute elements}\n\t * with the same {@link module:engine/view/attributeelement~AttributeElement#id id} are going to be removed from the view and\n\t * the group will no longer be needed.\n\t *\n\t * Cloned elements group are not removed automatically in case if the group is still needed after all its elements\n\t * were removed from the view.\n\t *\n\t * Keep in mind that group names are equal to the `id` property of the attribute element.\n\t *\n\t * @param {String} groupName Name of the group to clear.\n\t */\n\tpublic clearClonedElementsGroup( groupName: string ): void {\n\t\tthis._cloneGroups.delete( groupName );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link #createPositionBefore},\n\t * * {@link #createPositionAfter},\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tpublic createPositionAt( itemOrPosition: Item | Position, offset?: number | 'before' | 'after' | 'end' ): Position {\n\t\treturn Position._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tpublic createPositionAfter( item: Item ): Position {\n\t\treturn Position._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tpublic createPositionBefore( item: Item ): Position {\n\t\treturn Position._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** This factory method creates its own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tpublic createRange( ...args: ConstructorParameters<typeof Range> ): Range {\n\t\treturn new Range( ...args );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tpublic createRangeOn( item: Item ): Range {\n\t\treturn Range._createOn( item );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tpublic createRangeIn( element: Element | DocumentFragment ): Range {\n\t\treturn Range._createIn( element );\n\t}\n\n\t/**\n\t * Creates new {@link module:engine/view/selection~Selection} instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'p' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t * @returns {module:engine/view/selection~Selection}\n\t */\n\tpublic createSelection( ...args: ConstructorParameters<typeof Selection> ): Selection {\n\t\treturn new Selection( ...args );\n\t}\n\n\t/**\n\t * Creates placeholders for child elements of the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToStructure\n\t * `elementToStructure()`} conversion helper.\n\t *\n\t *\t\tconst viewSlot = conversionApi.writer.createSlot();\n\t *\t\tconst viewPosition = conversionApi.writer.createPositionAt( viewElement, 0 );\n\t *\n\t *\t\tconversionApi.writer.insert( viewPosition, viewSlot );\n\t *\n\t * It could be filtered down to a specific subset of children (only `<foo>` model elements in this case):\n\t *\n\t *\t\tconst viewSlot = conversionApi.writer.createSlot( node => node.is( 'element', 'foo' ) );\n\t *\t\tconst viewPosition = conversionApi.writer.createPositionAt( viewElement, 0 );\n\t *\n\t *\t\tconversionApi.writer.insert( viewPosition, viewSlot );\n\t *\n\t * While providing a filtered slot, make sure to provide slots for all child nodes. A single node can not be downcasted into\n\t * multiple slots.\n\t *\n\t * **Note**: You should not change the order of nodes. View elements should be in the same order as model nodes.\n\t *\n\t * @param {'children'|module:engine/conversion/downcasthelpers~SlotFilter} [modeOrFilter='children'] The filter for child nodes.\n\t * @returns {module:engine/view/element~Element} The slot element to be placed in to the view structure while processing\n\t * {@link module:engine/conversion/downcasthelpers~DowncastHelpers#elementToStructure `elementToStructure()`}.\n\t */\n\tpublic createSlot( modeOrFilter: 'children' | SlotFilter ): Element {\n\t\tif ( !this._slotFactory ) {\n\t\t\t/**\n\t\t\t * The `createSlot()` method is only allowed inside the `elementToStructure` downcast helper callback.\n\t\t\t *\n\t\t\t * @error view-writer-invalid-create-slot-context\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-invalid-create-slot-context', this.document );\n\t\t}\n\n\t\treturn this._slotFactory( this, modeOrFilter );\n\t}\n\n\t/**\n\t * Registers a slot factory.\n\t *\n\t * @protected\n\t * @param {Function} slotFactory The slot factory.\n\t */\n\tpublic _registerSlotFactory( slotFactory: ( writer: DowncastWriter, modeOrFilter: string | SlotFilter ) => Element ): void {\n\t\tthis._slotFactory = slotFactory;\n\t}\n\n\t/**\n\t * Clears the registered slot factory.\n\t *\n\t * @protected\n\t */\n\tpublic _clearSlotFactory(): void {\n\t\tthis._slotFactory = null;\n\t}\n\n\t/**\n\t * Inserts a node or nodes at the specified position. Takes care of breaking attributes before insertion\n\t * and merging them afterwards if requested by the breakAttributes param.\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} position Insertion position.\n\t * @param {module:engine/view/text~Text|module:engine/view/attributeelement~AttributeElement|\n\t * module:engine/view/containerelement~ContainerElement|module:engine/view/emptyelement~EmptyElement|\n\t * module:engine/view/rawelement~RawElement|module:engine/view/uielement~UIElement|\n\t * Iterable.<module:engine/view/text~Text|\n\t * module:engine/view/attributeelement~AttributeElement|module:engine/view/containerelement~ContainerElement|\n\t * module:engine/view/emptyelement~EmptyElement|module:engine/view/rawelement~RawElement|\n\t * module:engine/view/uielement~UIElement>} nodes Node or nodes to insert.\n\t * @param {Boolean} breakAttributes Whether attributes should be broken.\n\t * @returns {module:engine/view/range~Range} Range around inserted nodes.\n\t */\n\tprivate _insertNodes( position: Position, nodes: Iterable<Node>, breakAttributes: boolean ): Range {\n\t\tlet parentElement;\n\n\t\t// Break attributes on nodes that do exist in the model tree so they can have attributes, other elements\n\t\t// can't have an attribute in model and won't get wrapped with an AttributeElement while down-casted.\n\t\tif ( breakAttributes ) {\n\t\t\tparentElement = getParentContainer( position );\n\t\t} else {\n\t\t\tparentElement = position.parent.is( '$text' ) ? position.parent.parent : position.parent;\n\t\t}\n\n\t\tif ( !parentElement ) {\n\t\t\t/**\n\t\t\t * Position's parent container cannot be found.\n\t\t\t *\n\t\t\t * @error view-writer-invalid-position-container\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-writer-invalid-position-container',\n\t\t\t\tthis.document\n\t\t\t);\n\t\t}\n\n\t\tlet insertionPosition;\n\n\t\tif ( breakAttributes ) {\n\t\t\tinsertionPosition = this._breakAttributes( position, true );\n\t\t} else {\n\t\t\tinsertionPosition = position.parent.is( '$text' ) ? breakTextNode( position ) : position;\n\t\t}\n\n\t\tconst length = ( parentElement as Element | DocumentFragment )._insertChild( insertionPosition.offset, nodes );\n\n\t\tfor ( const node of nodes ) {\n\t\t\tthis._addToClonedElementsGroup( node );\n\t\t}\n\n\t\tconst endPosition = insertionPosition.getShiftedBy( length );\n\t\tconst start = this.mergeAttributes( insertionPosition );\n\n\t\t// If start position was merged - move end position.\n\t\tif ( !start.isEqual( insertionPosition ) ) {\n\t\t\tendPosition.offset--;\n\t\t}\n\n\t\tconst end = this.mergeAttributes( endPosition );\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Wraps children with provided `wrapElement`. Only children contained in `parent` element between\n\t * `startOffset` and `endOffset` will be wrapped.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} parent\n\t * @param {Number} startOffset\n\t * @param {Number} endOffset\n\t * @param {module:engine/view/element~Element} wrapElement\n\t */\n\tprivate _wrapChildren( parent: Element, startOffset: number, endOffset: number, wrapElement: AttributeElement ) {\n\t\tlet i = startOffset;\n\t\tconst wrapPositions: Position[] = [];\n\n\t\twhile ( i < endOffset ) {\n\t\t\tconst child = parent.getChild( i )!;\n\t\t\tconst isText = child.is( '$text' );\n\t\t\tconst isAttribute = child.is( 'attributeElement' );\n\n\t\t\t//\n\t\t\t// (In all examples, assume that `wrapElement` is `<span class=\"foo\">` element.)\n\t\t\t//\n\t\t\t// Check if `wrapElement` can be joined with the wrapped element. One of requirements is having same name.\n\t\t\t// If possible, join elements.\n\t\t\t//\n\t\t\t// <p><span class=\"bar\">abc</span></p>  -->  <p><span class=\"foo bar\">abc</span></p>\n\t\t\t//\n\t\t\tif ( isAttribute && this._wrapAttributeElement( wrapElement, child ) ) {\n\t\t\t\twrapPositions.push( new Position( parent, i ) );\n\t\t\t}\n\t\t\t//\n\t\t\t// Wrap the child if it is not an attribute element or if it is an attribute element that should be inside\n\t\t\t// `wrapElement` (due to priority).\n\t\t\t//\n\t\t\t// <p>abc</p>                   -->  <p><span class=\"foo\">abc</span></p>\n\t\t\t// <p><strong>abc</strong></p>  -->  <p><span class=\"foo\"><strong>abc</strong></span></p>\n\t\t\telse if ( isText || !isAttribute || shouldABeOutsideB( wrapElement, child ) ) {\n\t\t\t\t// Clone attribute.\n\t\t\t\tconst newAttribute = wrapElement._clone();\n\n\t\t\t\t// Wrap current node with new attribute.\n\t\t\t\tchild._remove();\n\t\t\t\tnewAttribute._appendChild( child );\n\n\t\t\t\tparent._insertChild( i, newAttribute );\n\t\t\t\tthis._addToClonedElementsGroup( newAttribute );\n\n\t\t\t\twrapPositions.push( new Position( parent, i ) );\n\t\t\t}\n\t\t\t//\n\t\t\t// If other nested attribute is found and it wasn't wrapped (see above), continue wrapping inside it.\n\t\t\t//\n\t\t\t// <p><a href=\"foo.html\">abc</a></p>  -->  <p><a href=\"foo.html\"><span class=\"foo\">abc</span></a></p>\n\t\t\t//\n\t\t\telse /* if ( isAttribute ) */ {\n\t\t\t\tthis._wrapChildren( child, 0, child.childCount, wrapElement );\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge at each wrap.\n\t\tlet offsetChange = 0;\n\n\t\tfor ( const position of wrapPositions ) {\n\t\t\tposition.offset -= offsetChange;\n\n\t\t\t// Do not merge with elements outside selected children.\n\t\t\tif ( position.offset == startOffset ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst newPosition = this.mergeAttributes( position );\n\n\t\t\t// If nodes were merged - other merge offsets will change.\n\t\t\tif ( !newPosition.isEqual( position ) ) {\n\t\t\t\toffsetChange++;\n\t\t\t\tendOffset--;\n\t\t\t}\n\t\t}\n\n\t\treturn Range._createFromParentsAndOffsets( parent, startOffset, parent, endOffset );\n\t}\n\n\t/**\n\t * Unwraps children from provided `unwrapElement`. Only children contained in `parent` element between\n\t * `startOffset` and `endOffset` will be unwrapped.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} parent\n\t * @param {Number} startOffset\n\t * @param {Number} endOffset\n\t * @param {module:engine/view/element~Element} unwrapElement\n\t */\n\tprivate _unwrapChildren( parent: Element, startOffset: number, endOffset: number, unwrapElement: AttributeElement ) {\n\t\tlet i = startOffset;\n\t\tconst unwrapPositions: Position[] = [];\n\n\t\t// Iterate over each element between provided offsets inside parent.\n\t\t// We don't use tree walker or range iterator because we will be removing and merging potentially multiple nodes,\n\t\t// so it could get messy. It is safer to it manually in this case.\n\t\twhile ( i < endOffset ) {\n\t\t\tconst child = parent.getChild( i )!;\n\n\t\t\t// Skip all text nodes. There should be no container element's here either.\n\t\t\tif ( !child.is( 'attributeElement' ) ) {\n\t\t\t\ti++;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// (In all examples, assume that `unwrapElement` is `<span class=\"foo\">` element.)\n\t\t\t//\n\t\t\t// If the child is similar to the given attribute element, unwrap it - it will be completely removed.\n\t\t\t//\n\t\t\t// <p><span class=\"foo\">abc</span>xyz</p>  -->  <p>abcxyz</p>\n\t\t\t//\n\t\t\tif ( child.isSimilar( unwrapElement ) ) {\n\t\t\t\tconst unwrapped = child.getChildren();\n\t\t\t\tconst count = child.childCount;\n\n\t\t\t\t// Replace wrapper element with its children\n\t\t\t\tchild._remove();\n\t\t\t\tparent._insertChild( i, unwrapped );\n\n\t\t\t\tthis._removeFromClonedElementsGroup( child );\n\n\t\t\t\t// Save start and end position of moved items.\n\t\t\t\tunwrapPositions.push(\n\t\t\t\t\tnew Position( parent, i ),\n\t\t\t\t\tnew Position( parent, i + count )\n\t\t\t\t);\n\n\t\t\t\t// Skip elements that were unwrapped. Assuming there won't be another element to unwrap in child elements.\n\t\t\t\ti += count;\n\t\t\t\tendOffset += count - 1;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// If the child is not similar but is an attribute element, try partial unwrapping - remove the same attributes/styles/classes.\n\t\t\t// Partial unwrapping will happen only if the elements have the same name.\n\t\t\t//\n\t\t\t// <p><span class=\"foo bar\">abc</span>xyz</p>  -->  <p><span class=\"bar\">abc</span>xyz</p>\n\t\t\t// <p><i class=\"foo\">abc</i>xyz</p>            -->  <p><i class=\"foo\">abc</i>xyz</p>\n\t\t\t//\n\t\t\tif ( this._unwrapAttributeElement( unwrapElement, child ) ) {\n\t\t\t\tunwrapPositions.push(\n\t\t\t\t\tnew Position( parent, i ),\n\t\t\t\t\tnew Position( parent, i + 1 )\n\t\t\t\t);\n\n\t\t\t\ti++;\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t//\n\t\t\t// If other nested attribute is found, look through it's children for elements to unwrap.\n\t\t\t//\n\t\t\t// <p><i><span class=\"foo\">abc</span></i><p>  -->  <p><i>abc</i><p>\n\t\t\t//\n\t\t\tthis._unwrapChildren( child, 0, child.childCount, unwrapElement );\n\n\t\t\ti++;\n\t\t}\n\n\t\t// Merge at each unwrap.\n\t\tlet offsetChange = 0;\n\n\t\tfor ( const position of unwrapPositions ) {\n\t\t\tposition.offset -= offsetChange;\n\n\t\t\t// Do not merge with elements outside selected children.\n\t\t\tif ( position.offset == startOffset || position.offset == endOffset ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst newPosition = this.mergeAttributes( position );\n\n\t\t\t// If nodes were merged - other merge offsets will change.\n\t\t\tif ( !newPosition.isEqual( position ) ) {\n\t\t\t\toffsetChange++;\n\t\t\t\tendOffset--;\n\t\t\t}\n\t\t}\n\n\t\treturn Range._createFromParentsAndOffsets( parent, startOffset, parent, endOffset );\n\t}\n\n\t/**\n\t * Helper function for `view.writer.wrap`. Wraps range with provided attribute element.\n\t * This method will also merge newly added attribute element with its siblings whenever possible.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\n\t * @returns {module:engine/view/range~Range} New range after wrapping, spanning over wrapping attribute element.\n\t */\n\tprivate _wrapRange( range: Range, attribute: AttributeElement ): Range {\n\t\t// Break attributes at range start and end.\n\t\tconst { start: breakStart, end: breakEnd } = this._breakAttributesRange( range, true );\n\t\tconst parentContainer = breakStart.parent as Element;\n\n\t\t// Wrap all children with attribute.\n\t\tconst newRange = this._wrapChildren( parentContainer, breakStart.offset, breakEnd.offset, attribute );\n\n\t\t// Merge attributes at the both ends and return a new range.\n\t\tconst start = this.mergeAttributes( newRange.start );\n\n\t\t// If start position was merged - move end position back.\n\t\tif ( !start.isEqual( newRange.start ) ) {\n\t\t\tnewRange.end.offset--;\n\t\t}\n\t\tconst end = this.mergeAttributes( newRange.end );\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Helper function for {@link #wrap}. Wraps position with provided attribute element.\n\t * This method will also merge newly added attribute element with its siblings whenever possible.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError} `view-writer-wrap-invalid-attribute` when passed attribute element is not\n\t * an instance of {@link module:engine/view/attributeelement~AttributeElement AttributeElement}.\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} position\n\t * @param {module:engine/view/attributeelement~AttributeElement} attribute\n\t * @returns {module:engine/view/position~Position} New position after wrapping.\n\t */\n\tprivate _wrapPosition( position: Position, attribute: AttributeElement ): Position {\n\t\t// Return same position when trying to wrap with attribute similar to position parent.\n\t\tif ( attribute.isSimilar( position.parent as any ) ) {\n\t\t\treturn movePositionToTextNode( position.clone() );\n\t\t}\n\n\t\t// When position is inside text node - break it and place new position between two text nodes.\n\t\tif ( position.parent.is( '$text' ) ) {\n\t\t\tposition = breakTextNode( position );\n\t\t}\n\n\t\t// Create fake element that will represent position, and will not be merged with other attributes.\n\t\tconst fakeElement = this.createAttributeElement( '_wrapPosition-fake-element' );\n\t\t( fakeElement as any )._priority = Number.POSITIVE_INFINITY;\n\t\tfakeElement.isSimilar = () => false;\n\n\t\t// Insert fake element in position location.\n\t\t( position.parent as Element )._insertChild( position.offset, fakeElement );\n\n\t\t// Range around inserted fake attribute element.\n\t\tconst wrapRange = new Range( position, position.getShiftedBy( 1 ) );\n\n\t\t// Wrap fake element with attribute (it will also merge if possible).\n\t\tthis.wrap( wrapRange, attribute );\n\n\t\t// Remove fake element and place new position there.\n\t\tconst newPosition = new Position( fakeElement.parent!, fakeElement.index! );\n\t\tfakeElement._remove();\n\n\t\t// If position is placed between text nodes - merge them and return position inside.\n\t\tconst nodeBefore = newPosition.nodeBefore;\n\t\tconst nodeAfter = newPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof Text && nodeAfter instanceof Text ) {\n\t\t\treturn mergeTextNodes( nodeBefore, nodeAfter );\n\t\t}\n\n\t\t// If position is next to text node - move position inside.\n\t\treturn movePositionToTextNode( newPosition );\n\t}\n\n\t/**\n\t * \tWraps one {@link module:engine/view/attributeelement~AttributeElement AttributeElement} into another by\n\t * \tmerging them if possible. When merging is possible - all attributes, styles and classes are moved from wrapper\n\t * \telement to element being wrapped.\n\t *\n\t * \t@private\n\t * \t@param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n\t * \t@param {module:engine/view/attributeelement~AttributeElement} toWrap AttributeElement to wrap using wrapper element.\n\t * \t@returns {Boolean} Returns `true` if elements are merged.\n\t */\n\tprivate _wrapAttributeElement( wrapper: AttributeElement, toWrap: AttributeElement ): boolean {\n\t\tif ( !canBeJoined( wrapper, toWrap ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Can't merge if name or priority differs.\n\t\tif ( wrapper.name !== toWrap.name || wrapper.priority !== toWrap.priority ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if attributes can be merged.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If some attributes are different we cannot wrap.\n\t\t\tif ( toWrap.hasAttribute( key ) && toWrap.getAttribute( key ) !== wrapper.getAttribute( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if styles can be merged.\n\t\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t\tif ( toWrap.hasStyle( key ) && toWrap.getStyle( key ) !== wrapper.getStyle( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Move all attributes/classes/styles from wrapper to wrapped AttributeElement.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Move only these attributes that are not present - other are similar.\n\t\t\tif ( !toWrap.hasAttribute( key ) ) {\n\t\t\t\tthis.setAttribute( key, wrapper.getAttribute( key )!, toWrap );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t\tif ( !toWrap.hasStyle( key ) ) {\n\t\t\t\tthis.setStyle( key, wrapper.getStyle( key )!, toWrap );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const key of wrapper.getClassNames() ) {\n\t\t\tif ( !toWrap.hasClass( key ) ) {\n\t\t\t\tthis.addClass( key, toWrap );\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Unwraps {@link module:engine/view/attributeelement~AttributeElement AttributeElement} from another by removing\n\t * corresponding attributes, classes and styles. All attributes, classes and styles from wrapper should be present\n\t * inside element being unwrapped.\n\t *\n\t * @private\n\t * @param {module:engine/view/attributeelement~AttributeElement} wrapper Wrapper AttributeElement.\n\t * @param {module:engine/view/attributeelement~AttributeElement} toUnwrap AttributeElement to unwrap using wrapper element.\n\t * @returns {Boolean} Returns `true` if elements are unwrapped.\n\t **/\n\tprivate _unwrapAttributeElement( wrapper: AttributeElement, toUnwrap: AttributeElement ): boolean {\n\t\tif ( !canBeJoined( wrapper, toUnwrap ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Can't unwrap if name or priority differs.\n\t\tif ( wrapper.name !== toUnwrap.name || wrapper.priority !== toUnwrap.priority ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper attributes.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If some attributes are missing or different we cannot unwrap.\n\t\t\tif ( !toUnwrap.hasAttribute( key ) || toUnwrap.getAttribute( key ) !== wrapper.getAttribute( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper classes.\n\t\tif ( !toUnwrap.hasClass( ...wrapper.getClassNames() ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if AttributeElement has all wrapper styles.\n\t\tfor ( const key of wrapper.getStyleNames() ) {\n\t\t\t// If some styles are missing or different we cannot unwrap.\n\t\t\tif ( !toUnwrap.hasStyle( key ) || toUnwrap.getStyle( key ) !== wrapper.getStyle( key ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Remove all wrapper's attributes from unwrapped element.\n\t\tfor ( const key of wrapper.getAttributeKeys() ) {\n\t\t\t// Classes and styles should be checked separately.\n\t\t\tif ( key === 'class' || key === 'style' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.removeAttribute( key, toUnwrap );\n\t\t}\n\n\t\t// Remove all wrapper's classes from unwrapped element.\n\t\tthis.removeClass( Array.from( wrapper.getClassNames() ), toUnwrap );\n\n\t\t// Remove all wrapper's styles from unwrapped element.\n\t\tthis.removeStyle( Array.from( wrapper.getStyleNames() ), toUnwrap );\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at the boundaries of given range.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range Range which `start` and `end` positions will be used to break attributes.\n\t * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n\t * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n\t * @returns {module:engine/view/range~Range} New range with located at break positions.\n\t */\n\tprivate _breakAttributesRange( range: Range, forceSplitText: boolean = false ) {\n\t\tconst rangeStart = range.start;\n\t\tconst rangeEnd = range.end;\n\n\t\tvalidateRangeContainer( range, this.document );\n\n\t\t// Break at the collapsed position. Return new collapsed range.\n\t\tif ( range.isCollapsed ) {\n\t\t\tconst position = this._breakAttributes( range.start, forceSplitText );\n\n\t\t\treturn new Range( position, position );\n\t\t}\n\n\t\tconst breakEnd = this._breakAttributes( rangeEnd, forceSplitText );\n\t\tconst count = ( breakEnd.parent as Element ).childCount;\n\t\tconst breakStart = this._breakAttributes( rangeStart, forceSplitText );\n\n\t\t// Calculate new break end offset.\n\t\tbreakEnd.offset += ( breakEnd.parent as Element ).childCount - count;\n\n\t\treturn new Range( breakStart, breakEnd );\n\t}\n\n\t/**\n\t * Helper function used by other `DowncastWriter` methods. Breaks attribute elements at given position.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-empty-element` when break position\n\t * is placed inside {@link module:engine/view/emptyelement~EmptyElement EmptyElement}.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-cannot-break-ui-element` when break position\n\t * is placed inside {@link module:engine/view/uielement~UIElement UIElement}.\n\t *\n\t * @private\n\t * @param {module:engine/view/position~Position} position Position where to break attributes.\n\t * @param {Boolean} [forceSplitText=false] If set to `true`, will break text nodes even if they are directly in container element.\n\t * This behavior will result in incorrect view state, but is needed by other view writing methods which then fixes view state.\n\t * @returns {module:engine/view/position~Position} New position after breaking the attributes.\n\t */\n\tprivate _breakAttributes( position: Position, forceSplitText: boolean = false ): Position {\n\t\tconst positionOffset = position.offset;\n\t\tconst positionParent = position.parent;\n\n\t\t// If position is placed inside EmptyElement - throw an exception as we cannot break inside.\n\t\tif ( position.parent.is( 'emptyElement' ) ) {\n\t\t\t/**\n\t\t\t * Cannot break an `EmptyElement` instance.\n\t\t\t *\n\t\t\t * This error is thrown if\n\t\t\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes `DowncastWriter#breakAttributes()`}\n\t\t\t * was executed in an incorrect position.\n\t\t\t *\n\t\t\t * @error view-writer-cannot-break-empty-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-cannot-break-empty-element', this.document );\n\t\t}\n\n\t\t// If position is placed inside UIElement - throw an exception as we cannot break inside.\n\t\tif ( position.parent.is( 'uiElement' ) ) {\n\t\t\t/**\n\t\t\t * Cannot break a `UIElement` instance.\n\t\t\t *\n\t\t\t * This error is thrown if\n\t\t\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes `DowncastWriter#breakAttributes()`}\n\t\t\t * was executed in an incorrect position.\n\t\t\t *\n\t\t\t * @error view-writer-cannot-break-ui-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-cannot-break-ui-element', this.document );\n\t\t}\n\n\t\t// If position is placed inside RawElement - throw an exception as we cannot break inside.\n\t\tif ( position.parent.is( 'rawElement' ) ) {\n\t\t\t/**\n\t\t\t * Cannot break a `RawElement` instance.\n\t\t\t *\n\t\t\t * This error is thrown if\n\t\t\t * {@link module:engine/view/downcastwriter~DowncastWriter#breakAttributes `DowncastWriter#breakAttributes()`}\n\t\t\t * was executed in an incorrect position.\n\t\t\t *\n\t\t\t * @error view-writer-cannot-break-raw-element\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-cannot-break-raw-element', this.document );\n\t\t}\n\n\t\t// There are no attributes to break and text nodes breaking is not forced.\n\t\tif ( !forceSplitText && positionParent.is( '$text' ) && isContainerOrFragment( positionParent.parent! ) ) {\n\t\t\treturn position.clone();\n\t\t}\n\n\t\t// Position's parent is container, so no attributes to break.\n\t\tif ( isContainerOrFragment( positionParent ) ) {\n\t\t\treturn position.clone();\n\t\t}\n\n\t\t// Break text and start again in new position.\n\t\tif ( positionParent.is( '$text' ) ) {\n\t\t\treturn this._breakAttributes( breakTextNode( position ), forceSplitText );\n\t\t}\n\n\t\tconst length = ( positionParent as any ).childCount;\n\n\t\t// <p>foo<b><u>bar{}</u></b></p>\n\t\t// <p>foo<b><u>bar</u>[]</b></p>\n\t\t// <p>foo<b><u>bar</u></b>[]</p>\n\t\tif ( positionOffset == length ) {\n\t\t\tconst newPosition = new Position( positionParent.parent as any, ( positionParent as any ).index + 1 );\n\n\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\n\t\t} else {\n\t\t\t// <p>foo<b><u>{}bar</u></b></p>\n\t\t\t// <p>foo<b>[]<u>bar</u></b></p>\n\t\t\t// <p>foo{}<b><u>bar</u></b></p>\n\t\t\tif ( positionOffset === 0 ) {\n\t\t\t\tconst newPosition = new Position( positionParent.parent as Element, ( positionParent as any ).index );\n\n\t\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\n\t\t\t}\n\t\t\t// <p>foo<b><u>b{}ar</u></b></p>\n\t\t\t// <p>foo<b><u>b[]ar</u></b></p>\n\t\t\t// <p>foo<b><u>b</u>[]<u>ar</u></b></p>\n\t\t\t// <p>foo<b><u>b</u></b>[]<b><u>ar</u></b></p>\n\t\t\telse {\n\t\t\t\tconst offsetAfter = ( positionParent as any ).index + 1;\n\n\t\t\t\t// Break element.\n\t\t\t\tconst clonedNode = ( positionParent as any )._clone();\n\n\t\t\t\t// Insert cloned node to position's parent node.\n\t\t\t\t( positionParent.parent as any )._insertChild( offsetAfter, clonedNode );\n\t\t\t\tthis._addToClonedElementsGroup( clonedNode );\n\n\t\t\t\t// Get nodes to move.\n\t\t\t\tconst count = ( positionParent as any ).childCount - positionOffset;\n\t\t\t\tconst nodesToMove = ( positionParent as any )._removeChildren( positionOffset, count );\n\n\t\t\t\t// Move nodes to cloned node.\n\t\t\t\tclonedNode._appendChild( nodesToMove );\n\n\t\t\t\t// Create new position to work on.\n\t\t\t\tconst newPosition = new Position( ( positionParent as any ).parent, offsetAfter );\n\n\t\t\t\treturn this._breakAttributes( newPosition, forceSplitText );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Stores the information that an {@link module:engine/view/attributeelement~AttributeElement attribute element} was\n\t * added to the tree. Saves the reference to the group in the given element and updates the group, so other elements\n\t * from the group now keep a reference to the given attribute element.\n\t *\n\t * The clones group can be obtained using {@link module:engine/view/attributeelement~AttributeElement#getElementsWithSameId}.\n\t *\n\t * Does nothing if added element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t *\n\t * @private\n\t * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to save.\n\t */\n\tprivate _addToClonedElementsGroup( element: Node ): void {\n\t\t// Add only if the element is in document tree.\n\t\tif ( !element.root.is( 'rootElement' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Traverse the element's children recursively to find other attribute elements that also might got inserted.\n\t\t// The loop is at the beginning so we can make fast returns later in the code.\n\t\tif ( element.is( 'element' ) ) {\n\t\t\tfor ( const child of element.getChildren() ) {\n\t\t\t\tthis._addToClonedElementsGroup( child );\n\t\t\t}\n\t\t}\n\n\t\tconst id = ( element as any ).id;\n\n\t\tif ( !id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet group = this._cloneGroups.get( id );\n\n\t\tif ( !group ) {\n\t\t\tgroup = new Set();\n\t\t\tthis._cloneGroups.set( id, group );\n\t\t}\n\n\t\tgroup.add( element as AttributeElement );\n\t\t( element as any )._clonesGroup = group;\n\t}\n\n\t/**\n\t * Removes all the information about the given {@link module:engine/view/attributeelement~AttributeElement attribute element}\n\t * from its clones group.\n\t *\n\t * Keep in mind, that the element will still keep a reference to the group (but the group will not keep a reference to it).\n\t * This allows to reference the whole group even if the element was already removed from the tree.\n\t *\n\t * Does nothing if the element has no {@link module:engine/view/attributeelement~AttributeElement#id id}.\n\t *\n\t * @private\n\t * @param {module:engine/view/attributeelement~AttributeElement} element Attribute element to remove.\n\t */\n\tprivate _removeFromClonedElementsGroup( element: Node ) {\n\t\t// Traverse the element's children recursively to find other attribute elements that also got removed.\n\t\t// The loop is at the beginning so we can make fast returns later in the code.\n\t\tif ( element.is( 'element' ) ) {\n\t\t\tfor ( const child of element.getChildren() ) {\n\t\t\t\tthis._removeFromClonedElementsGroup( child );\n\t\t\t}\n\t\t}\n\n\t\tconst id = ( element as any ).id;\n\n\t\tif ( !id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst group = this._cloneGroups.get( id );\n\n\t\tif ( !group ) {\n\t\t\treturn;\n\t\t}\n\n\t\tgroup.delete( element as AttributeElement );\n\t\t// Not removing group from element on purpose!\n\t\t// If other parts of code have reference to this element, they will be able to get references to other elements from the group.\n\t}\n}\n\n// Helper function for `view.writer.wrap`. Checks if given element has any children that are not ui elements.\nfunction _hasNonUiChildren( parent: Element ): boolean {\n\treturn Array.from( parent.getChildren() ).some( child => !child.is( 'uiElement' ) );\n}\n\n/**\n * The `attribute` passed to {@link module:engine/view/downcastwriter~DowncastWriter#wrap `DowncastWriter#wrap()`}\n * must be an instance of {@link module:engine/view/attributeelement~AttributeElement `AttributeElement`}.\n *\n * @error view-writer-wrap-invalid-attribute\n */\n\n// Returns first parent container of specified {@link module:engine/view/position~Position Position}.\n// Position's parent node is checked as first, then next parents are checked.\n// Note that {@link module:engine/view/documentfragment~DocumentFragment DocumentFragment} is treated like a container.\n//\n// @param {module:engine/view/position~Position} position Position used as a start point to locate parent container.\n// @returns {module:engine/view/containerelement~ContainerElement|module:engine/view/documentfragment~DocumentFragment|undefined}\n// Parent container element or `undefined` if container is not found.\nfunction getParentContainer( position: Position ): ContainerElement | DocumentFragment | undefined {\n\tlet parent = position.parent;\n\n\twhile ( !isContainerOrFragment( parent ) ) {\n\t\tif ( !parent ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tparent = parent.parent as any;\n\t}\n\n\treturn ( parent as ContainerElement | DocumentFragment );\n}\n\n// Checks if first {@link module:engine/view/attributeelement~AttributeElement AttributeElement} provided to the function\n// can be wrapped outside second element. It is done by comparing elements'\n// {@link module:engine/view/attributeelement~AttributeElement#priority priorities}, if both have same priority\n// {@link module:engine/view/element~Element#getIdentity identities} are compared.\n//\n// @param {module:engine/view/attributeelement~AttributeElement} a\n// @param {module:engine/view/attributeelement~AttributeElement} b\n// @returns {Boolean}\nfunction shouldABeOutsideB( a: AttributeElement, b: AttributeElement ): boolean {\n\tif ( a.priority < b.priority ) {\n\t\treturn true;\n\t} else if ( a.priority > b.priority ) {\n\t\treturn false;\n\t}\n\n\t// When priorities are equal and names are different - use identities.\n\treturn a.getIdentity() < b.getIdentity();\n}\n\n// Returns new position that is moved to near text node. Returns same position if there is no text node before of after\n// specified position.\n//\n//\t\t<p>foo[]</p>  ->  <p>foo{}</p>\n//\t\t<p>[]foo</p>  ->  <p>{}foo</p>\n//\n// @param {module:engine/view/position~Position} position\n// @returns {module:engine/view/position~Position} Position located inside text node or same position if there is no text nodes\n// before or after position location.\nfunction movePositionToTextNode( position: Position ): Position {\n\tconst nodeBefore = position.nodeBefore;\n\n\tif ( nodeBefore && nodeBefore.is( '$text' ) ) {\n\t\treturn new Position( nodeBefore, nodeBefore.data.length );\n\t}\n\n\tconst nodeAfter = position.nodeAfter;\n\n\tif ( nodeAfter && nodeAfter.is( '$text' ) ) {\n\t\treturn new Position( nodeAfter, 0 );\n\t}\n\n\treturn position;\n}\n\n// Breaks text node into two text nodes when possible.\n//\n//\t\t<p>foo{}bar</p> -> <p>foo[]bar</p>\n//\t\t<p>{}foobar</p> -> <p>[]foobar</p>\n//\t\t<p>foobar{}</p> -> <p>foobar[]</p>\n//\n// @param {module:engine/view/position~Position} position Position that need to be placed inside text node.\n// @returns {module:engine/view/position~Position} New position after breaking text node.\nfunction breakTextNode( position: Position ): Position {\n\tif ( position.offset == ( position.parent as Text ).data.length ) {\n\t\treturn new Position( position.parent.parent as any, ( position.parent as Text ).index! + 1 );\n\t}\n\n\tif ( position.offset === 0 ) {\n\t\treturn new Position( position.parent.parent as any, ( position.parent as Text ).index! );\n\t}\n\n\t// Get part of the text that need to be moved.\n\tconst textToMove = ( position.parent as Text ).data.slice( position.offset );\n\n\t// Leave rest of the text in position's parent.\n\t( position.parent as Text )._data = ( position.parent as Text ).data.slice( 0, position.offset );\n\n\t// Insert new text node after position's parent text node.\n\t( position.parent.parent as any )._insertChild(\n\t\t( position.parent as Text ).index! + 1,\n\t\tnew Text( position.root.document, textToMove )\n\t);\n\n\t// Return new position between two newly created text nodes.\n\treturn new Position( position.parent.parent as any, ( position.parent as Text ).index! + 1 );\n}\n\n// Merges two text nodes into first node. Removes second node and returns merge position.\n//\n// @param {module:engine/view/text~Text} t1 First text node to merge. Data from second text node will be moved at the end of\n// this text node.\n// @param {module:engine/view/text~Text} t2 Second text node to merge. This node will be removed after merging.\n// @returns {module:engine/view/position~Position} Position after merging text nodes.\nfunction mergeTextNodes( t1: Text, t2: Text ): Position {\n\t// Merge text data into first text node and remove second one.\n\tconst nodeBeforeLength = t1.data.length;\n\tt1._data += t2.data;\n\tt2._remove();\n\n\treturn new Position( t1, nodeBeforeLength );\n}\n\nconst validNodesToInsert = [ Text, AttributeElement, ContainerElement, EmptyElement, RawElement, UIElement ];\n\n// Checks if provided nodes are valid to insert.\n//\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-insert-invalid-node` when nodes to insert\n// contains instances that are not supported ones (see error description for valid ones.\n//\n// @param Iterable.<module:engine/view/text~Text|module:engine/view/element~Element> nodes\n// @param {Object} errorContext\nfunction validateNodesToInsert( nodes: Iterable<Node>, errorContext: Document ): void {\n\tfor ( const node of nodes ) {\n\t\tif ( !validNodesToInsert.some( ( validNode => node instanceof validNode ) ) ) { // eslint-disable-line no-use-before-define\n\t\t\t/**\n\t\t\t * One of the nodes to be inserted is of an invalid type.\n\t\t\t *\n\t\t\t * Nodes to be inserted with {@link module:engine/view/downcastwriter~DowncastWriter#insert `DowncastWriter#insert()`} should be\n\t\t\t * of the following types:\n\t\t\t *\n\t\t\t * * {@link module:engine/view/attributeelement~AttributeElement AttributeElement},\n\t\t\t * * {@link module:engine/view/containerelement~ContainerElement ContainerElement},\n\t\t\t * * {@link module:engine/view/emptyelement~EmptyElement EmptyElement},\n\t\t\t * * {@link module:engine/view/uielement~UIElement UIElement},\n\t\t\t * * {@link module:engine/view/rawelement~RawElement RawElement},\n\t\t\t * * {@link module:engine/view/text~Text Text}.\n\t\t\t *\n\t\t\t * @error view-writer-insert-invalid-node-type\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-writer-insert-invalid-node-type', errorContext );\n\t\t}\n\n\t\tif ( !node.is( '$text' ) ) {\n\t\t\tvalidateNodesToInsert( ( node as Element ).getChildren(), errorContext );\n\t\t}\n\t}\n}\n\n// Checks if node is ContainerElement or DocumentFragment, because in most cases they should be treated the same way.\n//\n// @param {module:engine/view/node~Node} node\n// @returns {Boolean} Returns `true` if node is instance of ContainerElement or DocumentFragment.\nfunction isContainerOrFragment( node: Node | DocumentFragment ): boolean {\n\treturn node && ( node.is( 'containerElement' ) || node.is( 'documentFragment' ) );\n}\n\n// Checks if {@link module:engine/view/range~Range#start range start} and {@link module:engine/view/range~Range#end range end} are placed\n// inside same {@link module:engine/view/containerelement~ContainerElement container element}.\n// Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-writer-invalid-range-container` when validation fails.\n//\n// @param {module:engine/view/range~Range} range\n// @param {Object} errorContext\nfunction validateRangeContainer( range: Range, errorContext: Document ) {\n\tconst startContainer = getParentContainer( range.start );\n\tconst endContainer = getParentContainer( range.end );\n\n\tif ( !startContainer || !endContainer || startContainer !== endContainer ) {\n\t\t/**\n\t\t * The container of the given range is invalid.\n\t\t *\n\t\t * This may happen if {@link module:engine/view/range~Range#start range start} and\n\t\t * {@link module:engine/view/range~Range#end range end} positions are not placed inside the same container element or\n\t\t * a parent container for these positions cannot be found.\n\t\t *\n\t\t * Methods like {@link module:engine/view/downcastwriter~DowncastWriter#wrap `DowncastWriter#remove()`},\n\t\t * {@link module:engine/view/downcastwriter~DowncastWriter#wrap `DowncastWriter#clean()`},\n\t\t * {@link module:engine/view/downcastwriter~DowncastWriter#wrap `DowncastWriter#wrap()`},\n\t\t * {@link module:engine/view/downcastwriter~DowncastWriter#wrap `DowncastWriter#unwrap()`} need to be called\n\t\t * on a range that has its start and end positions located in the same container element. Both positions can be\n\t\t * nested within other elements (e.g. an attribute element) but the closest container ancestor must be the same.\n\t\t *\n\t\t * @error view-writer-invalid-range-container\n\t\t */\n\t\tthrow new CKEditorError( 'view-writer-invalid-range-container', errorContext );\n\t}\n}\n\n// Checks if two attribute elements can be joined together. Elements can be joined together if, and only if\n// they do not have ids specified.\n//\n// @private\n// @param {module:engine/view/element~Element} a\n// @param {module:engine/view/element~Element} b\n// @returns {Boolean}\nfunction canBeJoined( a: AttributeElement, b: AttributeElement ) {\n\treturn a.id === null && b.id === null;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* eslint-disable new-cap */\n\n/**\n * @module engine/view/editableelement\n */\n\nimport ContainerElement from './containerelement';\nimport { type ChangeEvent as SelectionChangeEvent } from './selection';\nimport mix from '@ckeditor/ckeditor5-utils/src/mix';\nimport { default as ObservableMixin, type Observable } from '@ckeditor/ckeditor5-utils/src/observablemixin';\n\n/**\n * Editable element which can be a {@link module:engine/view/rooteditableelement~RootEditableElement root}\n * or nested editable area in the editor.\n *\n * Editable is automatically read-only when its {@link module:engine/view/document~Document Document} is read-only.\n *\n * The constructor of this class shouldn't be used directly. To create new `EditableElement` use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`} method.\n *\n * @extends module:engine/view/containerelement~ContainerElement\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class EditableElement extends ObservableMixin( ContainerElement ) {\n\tdeclare public isReadOnly: boolean;\n\tdeclare public isFocused: boolean;\n\n\t/**\n\t * Creates an editable element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createEditableElement\n\t * @protected\n\t */\n\tconstructor( ...args: ConstructorParameters<typeof ContainerElement> ) {\n\t\tsuper( ...args );\n\n\t\tconst document = args[ 0 ];\n\n\t\t/**\n\t\t * Whether the editable is in read-write or read-only mode.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/editableelement~EditableElement#isReadOnly\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * Whether the editable is focused.\n\t\t *\n\t\t * This property updates when {@link module:engine/view/document~Document#isFocused document.isFocused} or view\n\t\t * selection is changed.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} module:engine/view/editableelement~EditableElement#isFocused\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\tthis.bind( 'isReadOnly' ).to( document );\n\n\t\tthis.bind( 'isFocused' ).to(\n\t\t\tdocument,\n\t\t\t'isFocused',\n\t\t\tisFocused => isFocused && document.selection.editableElement == this\n\t\t);\n\n\t\t// Update focus state based on selection changes.\n\t\tthis.listenTo<SelectionChangeEvent>( document.selection, 'change', () => {\n\t\t\tthis.isFocused = document.isFocused && document.selection.editableElement == this;\n\t\t} );\n\t}\n\n\tpublic destroy(): void {\n\t\tthis.stopListening();\n\t}\n}\n\n/**\n * Checks whether this object is of the given.\n *\n *\t\teditableElement.is( 'editableElement' ); // -> true\n *\t\teditableElement.is( 'element' ); // -> true\n *\t\teditableElement.is( 'node' ); // -> true\n *\t\teditableElement.is( 'view:editableElement' ); // -> true\n *\t\teditableElement.is( 'view:element' ); // -> true\n *\t\teditableElement.is( 'view:node' ); // -> true\n *\n *\t\teditableElement.is( 'model:element' ); // -> false\n *\t\teditableElement.is( 'documentFragment' ); // -> false\n *\n * Assuming that the object being checked is an editbale element, you can also check its\n * {@link module:engine/view/editableelement~EditableElement#name name}:\n *\n *\t\teditableElement.is( 'element', 'div' ); // -> true if this is a div element\n *\t\teditableElement.is( 'editableElement', 'div' ); // -> same as above\n *\t\ttext.is( 'element', 'div' ); -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * @param {String} type Type to check.\n * @param {String} [name] Element name.\n * @returns {Boolean}\n */\nEditableElement.prototype.is = function( type: string, name?: string ): boolean {\n\tif ( !name ) {\n\t\treturn type === 'editableElement' || type === 'view:editableElement' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\ttype === 'node' || type === 'view:node';\n\t} else {\n\t\treturn name === this.name && (\n\t\t\ttype === 'editableElement' || type === 'view:editableElement' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'containerElement' || type === 'view:containerElement' ||\n\t\t\ttype === 'element' || type === 'view:element'\n\t\t);\n\t}\n};\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/element\n */\n\nimport Node from './node';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport toMap from '@ckeditor/ckeditor5-utils/src/tomap';\nimport toArray from '@ckeditor/ckeditor5-utils/src/toarray';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport { default as Matcher, type MatcherPattern } from './matcher';\nimport { default as StylesMap, type StyleValue } from './stylesmap';\n\nimport type Document from './document';\nimport type Item from './item';\nimport { isPlainObject } from 'lodash-es';\n\n// @if CK_DEBUG_ENGINE // const { convertMapToTags } = require( '../dev-utils/utils' );\n\n/**\n * View element.\n *\n * The editing engine does not define a fixed semantics of its elements (it is \"DTD-free\").\n * This is why the type of the {@link module:engine/view/element~Element} need to\n * be defined by the feature developer. When creating an element you should use one of the following methods:\n *\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createContainerElement `downcastWriter#createContainerElement()`}\n * in order to create a {@link module:engine/view/containerelement~ContainerElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createAttributeElement `downcastWriter#createAttributeElement()`}\n * in order to create a {@link module:engine/view/attributeelement~AttributeElement},\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`}\n * in order to create a {@link module:engine/view/emptyelement~EmptyElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}\n * in order to create a {@link module:engine/view/uielement~UIElement}.\n * * {@link module:engine/view/downcastwriter~DowncastWriter#createEditableElement `downcastWriter#createEditableElement()`}\n * in order to create a {@link module:engine/view/editableelement~EditableElement}.\n *\n * Note that for view elements which are not created from the model, like elements from mutations, paste or\n * {@link module:engine/controller/datacontroller~DataController#set data.set} it is not possible to define the type of the element.\n * In such cases the {@link module:engine/view/upcastwriter~UpcastWriter#createElement `UpcastWriter#createElement()`} method\n * should be used to create generic view elements.\n *\n * @extends module:engine/view/node~Node\n */\nexport default class Element extends Node {\n\tpublic name: string;\n\n\tpublic readonly getFillerOffset?: () => number | null;\n\n\tprivate _unsafeAttributesToRender: string[];\n\tprivate readonly _attrs: Map<string, string>;\n\tprivate readonly _children: Node[];\n\tprivate readonly _classes: Set<string>;\n\tprivate readonly _styles: StylesMap;\n\tprivate readonly _customProperties: Map<string | symbol, unknown>;\n\n\t/**\n\t * Creates a view element.\n\t *\n\t * Attributes can be passed in various formats:\n\t *\n\t *\t\tnew Element( viewDocument, 'div', { class: 'editor', contentEditable: 'true' } ); // object\n\t *\t\tnew Element( viewDocument, 'div', [ [ 'class', 'editor' ], [ 'contentEditable', 'true' ] ] ); // map-like iterator\n\t *\t\tnew Element( viewDocument, 'div', mapOfAttributes ); // map\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor(\n\t\tdocument: Document,\n\t\tname: string,\n\t\tattrs?: ElementAttributes,\n\t\tchildren?: Node | Iterable<Node>\n\t) {\n\t\tsuper( document );\n\n\t\t/**\n\t\t * Name of the element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Map of attributes, where attributes names are keys and attributes values are values.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map} #_attrs\n\t\t */\n\t\tthis._attrs = parseAttributes( attrs );\n\n\t\t/**\n\t\t * Array of child nodes.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/node~Node>}\n\t\t */\n\t\tthis._children = [];\n\n\t\tif ( children ) {\n\t\t\tthis._insertChild( 0, children );\n\t\t}\n\n\t\t/**\n\t\t * Set of classes associated with element instance.\n\t\t *\n\t\t * @protected\n\t\t * @member {Set}\n\t\t */\n\t\tthis._classes = new Set();\n\n\t\tif ( this._attrs.has( 'class' ) ) {\n\t\t\t// Remove class attribute and handle it by class set.\n\t\t\tconst classString = this._attrs.get( 'class' );\n\t\t\tparseClasses( this._classes, classString! );\n\t\t\tthis._attrs.delete( 'class' );\n\t\t}\n\n\t\t/**\n\t\t * Normalized styles.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/view/stylesmap~StylesMap} module:engine/view/element~Element#_styles\n\t\t */\n\t\tthis._styles = new StylesMap( this.document.stylesProcessor );\n\n\t\tif ( this._attrs.has( 'style' ) ) {\n\t\t\t// Remove style attribute and handle it by styles map.\n\t\t\tthis._styles.setTo( this._attrs.get( 'style' )! );\n\n\t\t\tthis._attrs.delete( 'style' );\n\t\t}\n\n\t\t/**\n\t\t * Map of custom properties.\n\t\t * Custom properties can be added to element instance, will be cloned but not rendered into DOM.\n\t\t *\n\t\t * @protected\n\t\t * @member {Map}\n\t\t */\n\t\tthis._customProperties = new Map();\n\n\t\t/**\n\t\t * A list of attribute names that should be rendered in the editing pipeline even though filtering mechanisms\n\t\t * implemented in the {@link module:engine/view/domconverter~DomConverter} (for instance,\n\t\t * {@link module:engine/view/domconverter~DomConverter#shouldRenderAttribute}) would filter them out.\n\t\t *\n\t\t * These attributes can be specified as an option when the element is created by\n\t\t * the {@link module:engine/view/downcastwriter~DowncastWriter}. To check whether an unsafe an attribute should\n\t\t * be permitted, use the {@link #shouldRenderUnsafeAttribute} method.\n\t\t *\n\t\t * @private\n\t\t * @readonly\n\t\t * @member {Array.<String>}\n\t\t */\n\t\tthis._unsafeAttributesToRender = [];\n\t}\n\n\t/**\n\t * Number of element's children.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tpublic get childCount(): number {\n\t\treturn this._children.length;\n\t}\n\n\t/**\n\t * Is `true` if there are no nodes inside this element, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tpublic get isEmpty(): boolean {\n\t\treturn this._children.length === 0;\n\t}\n\n\t/**\n\t * Gets child at the given index.\n\t *\n\t * @param {Number} index Index of child.\n\t * @returns {module:engine/view/node~Node} Child node.\n\t */\n\tpublic getChild( index: number ): Node | undefined {\n\t\treturn this._children[ index ];\n\t}\n\n\t/**\n\t * Gets index of the given child node. Returns `-1` if child node is not found.\n\t *\n\t * @param {module:engine/view/node~Node} node Child node.\n\t * @returns {Number} Index of the child node.\n\t */\n\tpublic getChildIndex( node: Node ): number {\n\t\treturn this._children.indexOf( node );\n\t}\n\n\t/**\n\t * Gets child nodes iterator.\n\t *\n\t * @returns {Iterable.<module:engine/view/node~Node>} Child nodes iterator.\n\t */\n\tpublic getChildren(): IterableIterator<Node> {\n\t\treturn this._children[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Returns an iterator that contains the keys for attributes. Order of inserting attributes is not preserved.\n\t *\n\t * @returns {Iterable.<String>} Keys for attributes.\n\t */\n\tpublic* getAttributeKeys(): IterableIterator<string> {\n\t\tif ( this._classes.size > 0 ) {\n\t\t\tyield 'class';\n\t\t}\n\n\t\tif ( !this._styles.isEmpty ) {\n\t\t\tyield 'style';\n\t\t}\n\n\t\tyield* this._attrs.keys();\n\t}\n\n\t/**\n\t * Returns iterator that iterates over this element's attributes.\n\t *\n\t * Attributes are returned as arrays containing two items. First one is attribute key and second is attribute value.\n\t * This format is accepted by native `Map` object and also can be passed in `Node` constructor.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tpublic* getAttributes(): IterableIterator<[ string, string ]> {\n\t\tyield* this._attrs.entries();\n\n\t\tif ( this._classes.size > 0 ) {\n\t\t\tyield [ 'class', this.getAttribute( 'class' )! ];\n\t\t}\n\n\t\tif ( !this._styles.isEmpty ) {\n\t\t\tyield [ 'style', this.getAttribute( 'style' )! ];\n\t\t}\n\t}\n\n\t/**\n\t * Gets attribute by key. If attribute is not present - returns undefined.\n\t *\n\t * @param {String} key Attribute key.\n\t * @returns {String|undefined} Attribute value.\n\t */\n\tpublic getAttribute( key: string ): string | undefined {\n\t\tif ( key == 'class' ) {\n\t\t\tif ( this._classes.size > 0 ) {\n\t\t\t\treturn [ ...this._classes ].join( ' ' );\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif ( key == 'style' ) {\n\t\t\tconst inlineStyle = this._styles.toString();\n\n\t\t\treturn inlineStyle == '' ? undefined : inlineStyle;\n\t\t}\n\n\t\treturn this._attrs.get( key );\n\t}\n\n\t/**\n\t * Returns a boolean indicating whether an attribute with the specified key exists in the element.\n\t *\n\t * @param {String} key Attribute key.\n\t * @returns {Boolean} `true` if attribute with the specified key exists in the element, false otherwise.\n\t */\n\tpublic hasAttribute( key: string ): boolean {\n\t\tif ( key == 'class' ) {\n\t\t\treturn this._classes.size > 0;\n\t\t}\n\n\t\tif ( key == 'style' ) {\n\t\t\treturn !this._styles.isEmpty;\n\t\t}\n\n\t\treturn this._attrs.has( key );\n\t}\n\n\t/**\n\t * Checks if this element is similar to other element.\n\t * Both elements should have the same name and attributes to be considered as similar. Two similar elements\n\t * can contain different set of children nodes.\n\t *\n\t * @param {module:engine/view/element~Element} otherElement\n\t * @returns {Boolean}\n\t */\n\tpublic isSimilar( otherElement: Element ): boolean {\n\t\tif ( !( otherElement instanceof Element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If exactly the same Element is provided - return true immediately.\n\t\tif ( this === otherElement ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check element name.\n\t\tif ( this.name != otherElement.name ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check number of attributes, classes and styles.\n\t\tif ( this._attrs.size !== otherElement._attrs.size || this._classes.size !== otherElement._classes.size ||\n\t\t\tthis._styles.size !== otherElement._styles.size ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if attributes are the same.\n\t\tfor ( const [ key, value ] of this._attrs ) {\n\t\t\tif ( !otherElement._attrs.has( key ) || otherElement._attrs.get( key ) !== value ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if classes are the same.\n\t\tfor ( const className of this._classes ) {\n\t\t\tif ( !otherElement._classes.has( className ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if styles are the same.\n\t\tfor ( const property of this._styles.getStyleNames() ) {\n\t\t\tif (\n\t\t\t\t!otherElement._styles.has( property ) ||\n\t\t\t\totherElement._styles.getAsString( property ) !== this._styles.getAsString( property )\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns true if class is present.\n\t * If more then one class is provided - returns true only when all classes are present.\n\t *\n\t *\t\telement.hasClass( 'foo' ); // Returns true if 'foo' class is present.\n\t *\t\telement.hasClass( 'foo', 'bar' ); // Returns true if 'foo' and 'bar' classes are both present.\n\t *\n\t * @param {...String} className\n\t */\n\tpublic hasClass( ...className: string[] ): boolean {\n\t\tfor ( const name of className ) {\n\t\t\tif ( !this._classes.has( name ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns iterator that contains all class names.\n\t *\n\t * @returns {Iterable.<String>}\n\t */\n\tpublic getClassNames(): Iterable<string> {\n\t\treturn this._classes.keys();\n\t}\n\n\t/**\n\t * Returns style value for the given property mae.\n\t * If the style does not exist `undefined` is returned.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#getAsString `StylesMap#getAsString()`} for details.\n\t *\n\t * For an element with style set to `'margin:1px'`:\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tconst element = view.change( writer => {\n\t *\t\t\tconst element = writer.createElement();\n\t *\t\t\twriter.setStyle( 'margin', '1px' );\n\t *\t\t\twriter.setStyle( 'margin-bottom', '3em' );\n\t *\n\t *\t\t\treturn element;\n\t *\t\t} );\n\t *\n\t *\t\telement.getStyle( 'margin' ); // -> 'margin: 1px 1px 3em;'\n\t *\n\t * @param {String} property\n\t * @returns {String|undefined}\n\t */\n\tpublic getStyle( property: string ): string | undefined {\n\t\treturn this._styles.getAsString( property );\n\t}\n\n\t/**\n\t * Returns a normalized style object or single style value.\n\t *\n\t * For an element with style set to: margin:1px 2px 3em;\n\t *\n\t *\t\telement.getNormalizedStyle( 'margin' ) );\n\t *\n\t * will return:\n\t *\n\t *\t\t{\n\t *\t\t\ttop: '1px',\n\t *\t\t\tright: '2px',\n\t *\t\t\tbottom: '3em',\n\t *\t\t\tleft: '2px'    // a normalized value from margin shorthand\n\t *\t\t}\n\t *\n\t * and reading for single style value:\n\t *\n\t *\t\tstyles.getNormalizedStyle( 'margin-left' );\n\t *\n\t * Will return a `2px` string.\n\t *\n\t * **Note**: This method will return normalized values only if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#getNormalized `StylesMap#getNormalized()`} for details.\n\t *\n\t *\n\t * @param {String} property Name of CSS property\n\t * @returns {Object|String|undefined}\n\t */\n\tpublic getNormalizedStyle( property: string ): StyleValue {\n\t\treturn this._styles.getNormalized( property );\n\t}\n\n\t/**\n\t * Returns iterator that contains all style names.\n\t *\n\t * @param {Boolean} [expand=false] Expand shorthand style properties and return all equivalent style representations.\n\t * @returns {Iterable.<String>}\n\t */\n\tpublic getStyleNames( expand?: boolean ): Iterable<string> {\n\t\treturn this._styles.getStyleNames( expand );\n\t}\n\n\t/**\n\t * Returns true if style keys are present.\n\t * If more then one style property is provided - returns true only when all properties are present.\n\t *\n\t *\t\telement.hasStyle( 'color' ); // Returns true if 'border-top' style is present.\n\t *\t\telement.hasStyle( 'color', 'border-top' ); // Returns true if 'color' and 'border-top' styles are both present.\n\t *\n\t * @param {...String} property\n\t */\n\tpublic hasStyle( ...property: string[] ): boolean {\n\t\tfor ( const name of property ) {\n\t\t\tif ( !this._styles.has( name ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns ancestor element that match specified pattern.\n\t * Provided patterns should be compatible with {@link module:engine/view/matcher~Matcher Matcher} as it is used internally.\n\t *\n\t * @see module:engine/view/matcher~Matcher\n\t * @param {Object|String|RegExp|Function} patterns Patterns used to match correct ancestor.\n\t * See {@link module:engine/view/matcher~Matcher}.\n\t * @returns {module:engine/view/element~Element|null} Found element or `null` if no matching ancestor was found.\n\t */\n\tpublic findAncestor( ...patterns: ( MatcherPattern | ( ( element: Element ) => boolean ) )[] ): Element | null {\n\t\tconst matcher = new Matcher( ...patterns as any );\n\t\tlet parent = this.parent;\n\n\t\twhile ( parent && !parent.is( 'documentFragment' ) ) {\n\t\t\tif ( matcher.match( parent ) ) {\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the custom property value for the given key.\n\t *\n\t * @param {String|Symbol} key\n\t * @returns {*}\n\t */\n\tpublic getCustomProperty( key: string | symbol ): unknown {\n\t\treturn this._customProperties.get( key );\n\t}\n\n\t/**\n\t * Returns an iterator which iterates over this element's custom properties.\n\t * Iterator provides `[ key, value ]` pairs for each stored property.\n\t *\n\t * @returns {Iterable.<*>}\n\t */\n\tpublic* getCustomProperties(): Iterable<[ string | symbol, unknown ]> {\n\t\tyield* this._customProperties.entries();\n\t}\n\n\t/**\n\t * Returns identity string based on element's name, styles, classes and other attributes.\n\t * Two elements that {@link #isSimilar are similar} will have same identity string.\n\t * It has the following format:\n\t *\n\t *\t\t'name class=\"class1,class2\" style=\"style1:value1;style2:value2\" attr1=\"val1\" attr2=\"val2\"'\n \t *\n\t * For example:\n\t *\n\t *\t\tconst element = writer.createContainerElement( 'foo', {\n\t *\t\t\tbanana: '10',\n\t *\t\t\tapple: '20',\n\t *\t\t\tstyle: 'color: red; border-color: white;',\n\t *\t\t\tclass: 'baz'\n\t *\t\t} );\n\t *\n\t *\t\t// returns 'foo class=\"baz\" style=\"border-color:white;color:red\" apple=\"20\" banana=\"10\"'\n\t *\t\telement.getIdentity();\n\t *\n\t * **Note**: Classes, styles and other attributes are sorted alphabetically.\n\t *\n\t * @returns {String}\n\t */\n\tpublic getIdentity(): string {\n\t\tconst classes = Array.from( this._classes ).sort().join( ',' );\n\t\tconst styles = this._styles.toString();\n\t\tconst attributes = Array.from( this._attrs ).map( i => `${ i[ 0 ] }=\"${ i[ 1 ] }\"` ).sort().join( ' ' );\n\n\t\treturn this.name +\n\t\t\t( classes == '' ? '' : ` class=\"${ classes }\"` ) +\n\t\t\t( !styles ? '' : ` style=\"${ styles }\"` ) +\n\t\t\t( attributes == '' ? '' : ` ${ attributes }` );\n\t}\n\n\t/**\n\t * Decides whether an unsafe attribute is whitelisted and should be rendered in the editing pipeline even though filtering mechanisms\n\t * like {@link module:engine/view/domconverter~DomConverter#shouldRenderAttribute} say it should not.\n\t *\n\t * Unsafe attribute names can be specified when creating an element via {@link module:engine/view/downcastwriter~DowncastWriter}.\n\t *\n\t * @param {String} attributeName The name of the attribute to be checked.\n\t * @returns {Boolean}\n\t */\n\tpublic shouldRenderUnsafeAttribute( attributeName: string ): boolean {\n\t\treturn this._unsafeAttributesToRender.includes( attributeName );\n\t}\n\n\t/**\n\t * Clones provided element.\n\t *\n\t * @protected\n\t * @param {Boolean} [deep=false] If set to `true` clones element and all its children recursively. When set to `false`,\n\t * element will be cloned without any children.\n\t * @returns {module:engine/view/element~Element} Clone of this element.\n\t */\n\tpublic _clone( deep = false ): Element {\n\t\tconst childrenClone = [];\n\n\t\tif ( deep ) {\n\t\t\tfor ( const child of this.getChildren() ) {\n\t\t\t\tchildrenClone.push( child._clone( deep ) );\n\t\t\t}\n\t\t}\n\n\t\t// ContainerElement and AttributeElement should be also cloned properly.\n\t\tconst cloned = new ( this.constructor as any )( this.document, this.name, this._attrs, childrenClone );\n\n\t\t// Classes and styles are cloned separately - this solution is faster than adding them back to attributes and\n\t\t// parse once again in constructor.\n\t\tcloned._classes = new Set( this._classes );\n\t\tcloned._styles.set( this._styles.getNormalized() );\n\n\t\t// Clone custom properties.\n\t\tcloned._customProperties = new Map( this._customProperties );\n\n\t\t// Clone filler offset method.\n\t\t// We can't define this method in a prototype because it's behavior which\n\t\t// is changed by e.g. toWidget() function from ckeditor5-widget. Perhaps this should be one of custom props.\n\t\tcloned.getFillerOffset = this.getFillerOffset;\n\n\t\t// Clone unsafe attributes list.\n\t\tcloned._unsafeAttributesToRender = this._unsafeAttributesToRender;\n\n\t\treturn cloned;\n\t}\n\n\t/**\n\t * {@link module:engine/view/element~Element#_insertChild Insert} a child node or a list of child nodes at the end of this node\n\t * and sets the parent of these nodes to this element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#insert\n\t * @protected\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Number} Number of appended nodes.\n\t */\n\tpublic _appendChild( items: Item | Iterable<Item> ): number {\n\t\treturn this._insertChild( this.childCount, items );\n\t}\n\n\t/**\n\t * Inserts a child node or a list of child nodes on the given index and sets the parent of these nodes to\n\t * this element.\n\t *\n\t * @internal\n\t * @see module:engine/view/downcastwriter~DowncastWriter#insert\n\t * @protected\n\t * @param {Number} index Position where nodes should be inserted.\n\t * @param {module:engine/view/item~Item|Iterable.<module:engine/view/item~Item>} items Items to be inserted.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Number} Number of inserted nodes.\n\t */\n\tpublic _insertChild( index: number, items: Item | Iterable<Item> ): number {\n\t\tthis._fireChange( 'children', this );\n\t\tlet count = 0;\n\n\t\tconst nodes = normalize( this.document, items );\n\n\t\tfor ( const node of nodes ) {\n\t\t\t// If node that is being added to this element is already inside another element, first remove it from the old parent.\n\t\t\tif ( node.parent !== null ) {\n\t\t\t\tnode._remove();\n\t\t\t}\n\n\t\t\tnode.parent = this;\n\t\t\tnode.document = this.document;\n\n\t\t\tthis._children.splice( index, 0, node );\n\t\t\tindex++;\n\t\t\tcount++;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\t/**\n\t * Removes number of child nodes starting at the given index and set the parent of these nodes to `null`.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#remove\n\t * @protected\n\t * @param {Number} index Number of the first node to remove.\n\t * @param {Number} [howMany=1] Number of nodes to remove.\n\t * @fires module:engine/view/node~Node#change\n\t * @returns {Array.<module:engine/view/node~Node>} The array of removed nodes.\n\t */\n\tpublic _removeChildren( index: number, howMany: number = 1 ): Node[] {\n\t\tthis._fireChange( 'children', this );\n\n\t\tfor ( let i = index; i < index + howMany; i++ ) {\n\t\t\tthis._children[ i ].parent = null;\n\t\t}\n\n\t\treturn this._children.splice( index, howMany );\n\t}\n\n\t/**\n\t * Adds or overwrite attribute with a specified key and value.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setAttribute\n\t * @protected\n\t * @param {String} key Attribute key.\n\t * @param {String} value Attribute value.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tpublic _setAttribute( key: string, value: string ): void {\n\t\tvalue = String( value );\n\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tif ( key == 'class' ) {\n\t\t\tparseClasses( this._classes, value );\n\t\t} else if ( key == 'style' ) {\n\t\t\tthis._styles.setTo( value );\n\t\t} else {\n\t\t\tthis._attrs.set( key, value );\n\t\t}\n\t}\n\n\t/**\n\t * Removes attribute from the element.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeAttribute\n\t * @protected\n\t * @param {String} key Attribute key.\n\t * @returns {Boolean} Returns true if an attribute existed and has been removed.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tpublic _removeAttribute( key: string ): boolean {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\t// Remove class attribute.\n\t\tif ( key == 'class' ) {\n\t\t\tif ( this._classes.size > 0 ) {\n\t\t\t\tthis._classes.clear();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Remove style attribute.\n\t\tif ( key == 'style' ) {\n\t\t\tif ( !this._styles.isEmpty ) {\n\t\t\t\tthis._styles.clear();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Remove other attributes.\n\t\treturn this._attrs.delete( key );\n\t}\n\n\t/**\n\t * Adds specified class.\n\t *\n\t *\t\telement._addClass( 'foo' ); // Adds 'foo' class.\n\t *\t\telement._addClass( [ 'foo', 'bar' ] ); // Adds 'foo' and 'bar' classes.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#addClass\n\t * @protected\n\t * @param {Array.<String>|String} className\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tpublic _addClass( className: string | string[] ): void {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tfor ( const name of toArray( className ) ) {\n\t\t\tthis._classes.add( name );\n\t\t}\n\t}\n\n\t/**\n\t * Removes specified class.\n\t *\n\t *\t\telement._removeClass( 'foo' );  // Removes 'foo' class.\n\t *\t\telement._removeClass( [ 'foo', 'bar' ] ); // Removes both 'foo' and 'bar' classes.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeClass\n\t * @protected\n\t * @param {Array.<String>|String} className\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tpublic _removeClass( className: string | string[] ): void {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tfor ( const name of toArray( className ) ) {\n\t\t\tthis._classes.delete( name );\n\t\t}\n\t}\n\n\t/**\n\t * Adds style to the element.\n\t *\n\t *\t\telement._setStyle( 'color', 'red' );\n\t *\t\telement._setStyle( {\n\t *\t\t\tcolor: 'red',\n\t *\t\t\tposition: 'fixed'\n\t *\t\t} );\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#set `StylesMap#set()`} for details.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setStyle\n\t * @protected\n\t * @param {String|Object} property Property name or object with key - value pairs.\n\t * @param {String} [value] Value to set. This parameter is ignored if object is provided as the first parameter.\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tpublic _setStyle( property: string, value: string ): void;\n\tpublic _setStyle( property: Record<string, string> ): void;\n\tpublic _setStyle( property: string | Record<string, string>, value?: string ): void {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tif ( isPlainObject( property ) ) {\n\t\t\tthis._styles.set( property as Record<string, string> );\n\t\t} else {\n\t\t\tthis._styles.set( property as string, value as string );\n\t\t}\n\t}\n\n\t/**\n\t * Removes specified style.\n\t *\n\t *\t\telement._removeStyle( 'color' );  // Removes 'color' style.\n\t *\t\telement._removeStyle( [ 'color', 'border-top' ] ); // Removes both 'color' and 'border-top' styles.\n\t *\n\t * **Note**: This method can work with normalized style names if\n\t * {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules a particular style processor rule is enabled}.\n\t * See {@link module:engine/view/stylesmap~StylesMap#remove `StylesMap#remove()`} for details.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeStyle\n\t * @protected\n\t * @param {Array.<String>|String} property\n\t * @fires module:engine/view/node~Node#change\n\t */\n\tpublic _removeStyle( property: string | string[] ): void {\n\t\tthis._fireChange( 'attributes', this );\n\n\t\tfor ( const name of toArray( property ) ) {\n\t\t\tthis._styles.remove( name );\n\t\t}\n\t}\n\n\t/**\n\t * Sets a custom property. Unlike attributes, custom properties are not rendered to the DOM,\n\t * so they can be used to add special data to elements.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#setCustomProperty\n\t * @protected\n\t * @param {String|Symbol} key\n\t * @param {*} value\n\t */\n\tpublic _setCustomProperty( key: string | symbol, value: unknown ): void {\n\t\tthis._customProperties.set( key, value );\n\t}\n\n\t/**\n\t * Removes the custom property stored under the given key.\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#removeCustomProperty\n\t * @protected\n\t * @param {String|Symbol} key\n\t * @returns {Boolean} Returns true if property was removed.\n\t */\n\tpublic _removeCustomProperty( key: string | symbol ): boolean {\n\t\treturn this._customProperties.delete( key );\n\t}\n\n\t/**\n\t * Returns block {@link module:engine/view/filler filler} offset or `null` if block filler is not needed.\n\t *\n\t * @abstract\n\t * @method module:engine/view/element~Element#getFillerOffset\n\t */\n\n\t// @if CK_DEBUG_ENGINE // printTree( level = 0) {\n\t// @if CK_DEBUG_ENGINE // \tlet string = '';\n\n\t// @if CK_DEBUG_ENGINE //\tstring += '\\t'.repeat( level ) + `<${ this.name }${ convertMapToTags( this.getAttributes() ) }>`;\n\n\t// @if CK_DEBUG_ENGINE //\tfor ( const child of this.getChildren() ) {\n\t// @if CK_DEBUG_ENGINE //\t\tif ( child.is( '$text' ) ) {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + '\\t'.repeat( level + 1 ) + child.data;\n\t// @if CK_DEBUG_ENGINE //\t\t} else {\n\t// @if CK_DEBUG_ENGINE //\t\t\tstring += '\\n' + child.printTree( level + 1 );\n\t// @if CK_DEBUG_ENGINE //\t\t}\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tif ( this.childCount ) {\n\t// @if CK_DEBUG_ENGINE //\t\tstring += '\\n' + '\\t'.repeat( level );\n\t// @if CK_DEBUG_ENGINE //\t}\n\n\t// @if CK_DEBUG_ENGINE //\tstring += `</${ this.name }>`;\n\n\t// @if CK_DEBUG_ENGINE //\treturn string;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logTree() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( this.printTree() );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n/**\n * Checks whether this object is of the given.\n *\n *\t\telement.is( 'element' ); // -> true\n *\t\telement.is( 'node' ); // -> true\n *\t\telement.is( 'view:element' ); // -> true\n *\t\telement.is( 'view:node' ); // -> true\n *\n *\t\telement.is( 'model:element' ); // -> false\n *\t\telement.is( 'documentSelection' ); // -> false\n *\n * Assuming that the object being checked is an element, you can also check its\n * {@link module:engine/view/element~Element#name name}:\n *\n *\t\telement.is( 'element', 'img' ); // -> true if this is an <img> element\n *\t\ttext.is( 'element', 'img' ); -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * @param {String} type Type to check.\n * @param {String} [name] Element name.\n * @returns {Boolean}\n */\nElement.prototype.is = function( type: string, name?: string ): boolean {\n\tif ( !name ) {\n\t\treturn type === 'element' || type === 'view:element' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'node' || type === 'view:node';\n\t} else {\n\t\treturn name === this.name && ( type === 'element' || type === 'view:element' );\n\t}\n};\n\nexport type ElementAttributes = Record<string, string> | Iterable<[ string, string ]> | null;\n\n// Parses attributes provided to the element constructor before they are applied to an element. If attributes are passed\n// as an object (instead of `Iterable`), the object is transformed to the map. Attributes with `null` value are removed.\n// Attributes with non-`String` value are converted to `String`.\n//\n// @param {Object|Iterable} attrs Attributes to parse.\n// @returns {Map} Parsed attributes.\nfunction parseAttributes( attrs?: ElementAttributes ) {\n\tconst attrsMap = toMap( attrs );\n\n\tfor ( const [ key, value ] of attrsMap ) {\n\t\tif ( value === null ) {\n\t\t\tattrsMap.delete( key );\n\t\t} else if ( typeof value != 'string' ) {\n\t\t\tattrsMap.set( key, String( value ) );\n\t\t}\n\t}\n\n\treturn attrsMap;\n}\n\n// Parses class attribute and puts all classes into classes set.\n// Classes set s cleared before insertion.\n//\n// @param {Set.<String>} classesSet Set to insert parsed classes.\n// @param {String} classesString String with classes to parse.\nfunction parseClasses( classesSet: Set<string>, classesString: string ) {\n\tconst classArray = classesString.split( /\\s+/ );\n\tclassesSet.clear();\n\tclassArray.forEach( name => classesSet.add( name ) );\n}\n\n// Converts strings to Text and non-iterables to arrays.\n//\n// @param {String|module:engine/view/item~Item|Iterable.<String|module:engine/view/item~Item>}\n// @returns {Iterable.<module:engine/view/node~Node>}\nfunction normalize( document: Document, nodes: string | Item | Iterable<string | Item> ): Node[] {\n\t// Separate condition because string is iterable.\n\tif ( typeof nodes == 'string' ) {\n\t\treturn [ new Text( document, nodes ) ];\n\t}\n\n\tif ( !isIterable( nodes ) ) {\n\t\tnodes = [ nodes ];\n\t}\n\n\t// Array.from to enable .map() on non-arrays.\n\treturn Array.from( nodes )\n\t\t.map( node => {\n\t\t\tif ( typeof node == 'string' ) {\n\t\t\t\treturn new Text( document, node );\n\t\t\t}\n\n\t\t\tif ( node instanceof TextProxy ) {\n\t\t\t\treturn new Text( document, node.data );\n\t\t\t}\n\n\t\t\treturn node;\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/emptyelement\n */\n\nimport Element, { type ElementAttributes } from './element';\nimport Node from './node';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport type Document from './document';\nimport type Item from './item';\n\n/**\n * Empty element class. It is used to represent elements that cannot contain any child nodes (for example `<img>` elements).\n *\n * To create a new empty element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createEmptyElement `downcastWriter#createEmptyElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class EmptyElement extends Element {\n\tpublic override readonly getFillerOffset: () => null;\n\n\t/**\n\t * Creates new instance of EmptyElement.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` when third parameter is passed,\n\t * to inform that usage of EmptyElement is incorrect (adding child nodes to EmptyElement is forbidden).\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createEmptyElement\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attrs] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor(\n\t\tdocument: Document,\n\t\tname: string,\n\t\tattributes?: ElementAttributes,\n\t\tchildren?: Node | Iterable<Node>\n\t) {\n\t\tsuper( document, name, attributes, children );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for EmptyElements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-emptyelement-cannot-add` to prevent\n\t * adding any child nodes to EmptyElement.\n\t *\n\t * @protected\n\t */\n\tpublic override _insertChild( index: number, items: Item | Iterable<Item> ): number {\n\t\tif ( items && ( items instanceof Node || Array.from( items as Iterable<Item> ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to {@link module:engine/view/emptyelement~EmptyElement}.\n\t\t\t *\n\t\t\t * @error view-emptyelement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-emptyelement-cannot-add',\n\t\t\t\t[ this, items ]\n\t\t\t);\n\t\t}\n\n\t\treturn 0;\n\t}\n}\n\n/**\n * Checks whether this object is of the given.\n *\n *\t\temptyElement.is( 'emptyElement' ); // -> true\n *\t\temptyElement.is( 'element' ); // -> true\n *\t\temptyElement.is( 'node' ); // -> true\n *\t\temptyElement.is( 'view:emptyElement' ); // -> true\n *\t\temptyElement.is( 'view:element' ); // -> true\n *\t\temptyElement.is( 'view:node' ); // -> true\n *\n *\t\temptyElement.is( 'model:element' ); // -> false\n *\t\temptyElement.is( 'documentFragment' ); // -> false\n *\n * Assuming that the object being checked is an empty element, you can also check its\n * {@link module:engine/view/emptyelement~EmptyElement#name name}:\n *\n *\t\temptyElement.is( 'element', 'img' ); // -> true if this is a img element\n *\t\temptyElement.is( 'emptyElement', 'img' ); // -> same as above\n *\t\ttext.is( 'element', 'img' ); -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * @param {String} type Type to check.\n * @param {String} [name] Element name.\n * @returns {Boolean}\n */\nEmptyElement.prototype.is = function( type: string, name?: string ): boolean {\n\tif ( !name ) {\n\t\treturn type === 'emptyElement' || type === 'view:emptyElement' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\ttype === 'node' || type === 'view:node';\n\t} else {\n\t\treturn name === this.name && (\n\t\t\ttype === 'emptyElement' || type === 'view:emptyElement' ||\n\t\t\ttype === 'element' || type === 'view:element'\n\t\t);\n\t}\n};\n\n// Returns `null` because block filler is not needed for EmptyElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport { keyCodes, type KeystrokeInfo } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport type View from './view';\nimport type DomEventData from './observer/domeventdata';\n\n/**\n * Set of utilities related to handling block and inline fillers.\n *\n * Browsers do not allow to put caret in elements which does not have height. Because of it, we need to fill all\n * empty elements which should be selectable with elements or characters called \"fillers\". Unfortunately there is no one\n * universal filler, this is why two types are uses:\n *\n * * Block filler is an element which fill block elements, like `<p>`. CKEditor uses `<br>` as a block filler during the editing,\n * as browsers do natively. So instead of an empty `<p>` there will be `<p><br></p>`. The advantage of block filler is that\n * it is transparent for the selection, so when the caret is before the `<br>` and user presses right arrow he will be\n * moved to the next paragraph, not after the `<br>`. The disadvantage is that it breaks a block, so it can not be used\n * in the middle of a line of text. The {@link module:engine/view/filler~BR_FILLER `<br>` filler} can be replaced with any other\n * character in the data output, for instance {@link module:engine/view/filler~NBSP_FILLER non-breaking space} or\n * {@link module:engine/view/filler~MARKED_NBSP_FILLER marked non-breaking space}.\n *\n * * Inline filler is a filler which does not break a line of text, so it can be used inside the text, for instance in the empty\n * `<b>` surrendered by text: `foo<b></b>bar`, if we want to put the caret there. CKEditor uses a sequence of the zero-width\n * spaces as an {@link module:engine/view/filler~INLINE_FILLER inline filler} having the predetermined\n * {@link module:engine/view/filler~INLINE_FILLER_LENGTH length}. A sequence is used, instead of a single character to\n * avoid treating random zero-width spaces as the inline filler. Disadvantage of the inline filler is that it is not\n * transparent for the selection. The arrow key moves the caret between zero-width spaces characters, so the additional\n * code is needed to handle the caret.\n *\n * Both inline and block fillers are handled by the {@link module:engine/view/renderer~Renderer renderer} and are not present in the\n * view.\n *\n * @module engine/view/filler\n */\n\n/**\n * Non-breaking space filler creator. This function creates the `&nbsp;` text node.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~MARKED_NBSP_FILLER\n * @see module:engine/view/filler~BR_FILLER\n * @function\n */\nexport const NBSP_FILLER = ( domDocument: Document ): Text => domDocument.createTextNode( '\\u00A0' );\n\n/**\n * Marked non-breaking space filler creator. This function creates the `<span data-cke-filler=\"true\">&nbsp;</span>` element.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~NBSP_FILLER\n * @see module:engine/view/filler~BR_FILLER\n * @function\n */\nexport const MARKED_NBSP_FILLER = ( domDocument: Document ): HTMLSpanElement => {\n\tconst span = domDocument.createElement( 'span' );\n\tspan.dataset.ckeFiller = 'true';\n\tspan.innerText = '\\u00A0';\n\n\treturn span;\n};\n\n/**\n * `<br>` filler creator. This function creates the `<br data-cke-filler=\"true\">` element.\n * It defines how the filler is created.\n *\n * @see module:engine/view/filler~NBSP_FILLER\n * @see module:engine/view/filler~MARKED_NBSP_FILLER\n * @function\n */\nexport const BR_FILLER = ( domDocument: Document ): HTMLBRElement => {\n\tconst fillerBr = domDocument.createElement( 'br' );\n\tfillerBr.dataset.ckeFiller = 'true';\n\n\treturn fillerBr;\n};\n\n/**\n * Length of the {@link module:engine/view/filler~INLINE_FILLER INLINE_FILLER}.\n */\nexport const INLINE_FILLER_LENGTH = 7;\n\n/**\n * Inline filler which is a sequence of the word joiners.\n *\n * @type {String}\n */\nexport const INLINE_FILLER = '\\u2060'.repeat( INLINE_FILLER_LENGTH );\n\n/**\n * Checks if the node is a text node which starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // true\n *\t\tstartsWithFiller( document.createTextNode( 'foo' ) ); // false\n *\t\tstartsWithFiller( document.createElement( 'p' ) ); // false\n *\n * @param {Node} domNode DOM node.\n * @returns {Boolean} True if the text node starts with the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nexport function startsWithFiller( domNode: Node ): boolean {\n\treturn isText( domNode ) && ( domNode.data.substr( 0, INLINE_FILLER_LENGTH ) === INLINE_FILLER );\n}\n\n/**\n * Checks if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n *\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER ) ); // true\n *\t\tisInlineFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ); // false\n *\n * @param {Text} domText DOM text node.\n * @returns {Boolean} True if the text node contains only the {@link module:engine/view/filler~INLINE_FILLER inline filler}.\n */\nexport function isInlineFiller( domText: Text ): boolean {\n\treturn domText.data.length == INLINE_FILLER_LENGTH && startsWithFiller( domText );\n}\n\n/**\n * Get string data from the text node, removing an {@link module:engine/view/filler~INLINE_FILLER inline filler} from it,\n * if text node contains it.\n *\n *\t\tgetDataWithoutFiller( document.createTextNode( INLINE_FILLER + 'foo' ) ) == 'foo' // true\n *\t\tgetDataWithoutFiller( document.createTextNode( 'foo' ) ) == 'foo' // true\n *\n * @param {Text} domText DOM text node, possible with inline filler.\n * @returns {String} Data without filler.\n */\nexport function getDataWithoutFiller( domText: Text ): string {\n\tif ( startsWithFiller( domText ) ) {\n\t\treturn domText.data.slice( INLINE_FILLER_LENGTH );\n\t} else {\n\t\treturn domText.data;\n\t}\n}\n\n/**\n * Assign key observer which move cursor from the end of the inline filler to the beginning of it when\n * the left arrow is pressed, so the filler does not break navigation.\n *\n * @param {module:engine/view/view~View} view View controller instance we should inject quirks handling on.\n */\nexport function injectQuirksHandling( view: View ): void {\n\tview.document.on( 'arrowKey', jumpOverInlineFiller, { priority: 'low' } );\n}\n\n// Move cursor from the end of the inline filler to the beginning of it when, so the filler does not break navigation.\nfunction jumpOverInlineFiller( evt: unknown, data: DomEventData & KeystrokeInfo ) {\n\tif ( data.keyCode == keyCodes.arrowleft ) {\n\t\tconst domSelection = data.domTarget.ownerDocument.defaultView!.getSelection()!;\n\n\t\tif ( domSelection.rangeCount == 1 && domSelection.getRangeAt( 0 ).collapsed ) {\n\t\t\tconst domParent = domSelection.getRangeAt( 0 ).startContainer;\n\t\t\tconst domOffset = domSelection.getRangeAt( 0 ).startOffset;\n\n\t\t\tif ( startsWithFiller( domParent ) && domOffset <= INLINE_FILLER_LENGTH ) {\n\t\t\t\tdomSelection.collapse( domParent, 0 );\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/matcher\n */\n\nimport type Element from './element';\n\nimport { isPlainObject } from 'lodash-es';\n\nimport { logWarning } from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\n/**\n * View matcher class.\n * Instance of this class can be used to find {@link module:engine/view/element~Element elements} that match given pattern.\n */\nexport default class Matcher {\n\tprivate readonly _patterns: Exclude<MatcherPattern, string | RegExp>[];\n\n\t/**\n\t * Creates new instance of Matcher.\n\t *\n\t * @param {String|RegExp|Object|Function} [pattern] Match patterns. See {@link module:engine/view/matcher~Matcher#add add method} for\n\t * more information.\n\t */\n\tconstructor( ...pattern: MatcherPattern[] ) {\n\t\t/**\n\t\t * @private\n\t\t * @type {Array<Object|Function>}\n\t\t */\n\t\tthis._patterns = [];\n\n\t\tthis.add( ...pattern );\n\t}\n\n\t/**\n\t * Adds pattern or patterns to matcher instance.\n\t *\n\t *\t\t// String.\n\t *\t\tmatcher.add( 'div' );\n\t *\n\t *\t\t// Regular expression.\n\t *\t\tmatcher.add( /^\\w/ );\n\t *\n\t *\t\t// Single class.\n\t *\t\tmatcher.add( {\n\t *\t\t\tclasses: 'foobar'\n\t *\t\t} );\n\t *\n\t * See {@link module:engine/view/matcher~MatcherPattern} for more examples.\n\t *\n\t * Multiple patterns can be added in one call:\n\t *\n\t * \t\tmatcher.add( 'div', { classes: 'foobar' } );\n\t *\n\t * @param {Object|String|RegExp|Function} pattern Object describing pattern details. If string or regular expression\n\t * is provided it will be used to match element's name. Pattern can be also provided in a form\n\t * of a function - then this function will be called with each {@link module:engine/view/element~Element element} as a parameter.\n\t * Function's return value will be stored under `match` key of the object returned from\n\t * {@link module:engine/view/matcher~Matcher#match match} or {@link module:engine/view/matcher~Matcher#matchAll matchAll} methods.\n\t * @param {String|RegExp} [pattern.name] Name or regular expression to match element's name.\n\t * @param {Object} [pattern.attributes] Object with key-value pairs representing attributes to match. Each object key\n\t * represents attribute name. Value under that key can be either:\n\t * * `true` - then attribute is just required (can be empty),\n\t * * a string - then attribute has to be equal, or\n\t * * a regular expression - then attribute has to match the expression.\n\t * @param {String|RegExp|Array} [pattern.classes] Class name or array of class names to match. Each name can be\n\t * provided in a form of string or regular expression.\n\t * @param {Object} [pattern.styles] Object with key-value pairs representing styles to match. Each object key\n\t * represents style name. Value under that key can be either a string or a regular expression and it will be used\n\t * to match style value.\n\t */\n\tpublic add( ...pattern: MatcherPattern[] ): void {\n\t\tfor ( let item of pattern ) {\n\t\t\t// String or RegExp pattern is used as element's name.\n\t\t\tif ( typeof item == 'string' || item instanceof RegExp ) {\n\t\t\t\titem = { name: item };\n\t\t\t}\n\n\t\t\tthis._patterns.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Matches elements for currently stored patterns. Returns match information about first found\n\t * {@link module:engine/view/element~Element element}, otherwise returns `null`.\n\t *\n\t * Example of returned object:\n\t *\n\t *\t\t{\n\t *\t\t\telement: <instance of found element>,\n\t *\t\t\tpattern: <pattern used to match found element>,\n\t *\t\t\tmatch: {\n\t *\t\t\t\tname: true,\n\t *\t\t\t\tattributes: [ 'title', 'href' ],\n\t *\t\t\t\tclasses: [ 'foo' ],\n\t *\t\t\t\tstyles: [ 'color', 'position' ]\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * @see module:engine/view/matcher~Matcher#add\n\t * @see module:engine/view/matcher~Matcher#matchAll\n\t * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n\t * @returns {Object|null} result\n\t * @returns {module:engine/view/element~Element} result.element Matched view element.\n\t * @returns {Object|String|RegExp|Function} result.pattern Pattern that was used to find matched element.\n\t * @returns {Object} result.match Object representing matched element parts.\n\t * @returns {Boolean} [result.match.name] True if name of the element was matched.\n\t * @returns {Array} [result.match.attributes] Array with matched attribute names.\n\t * @returns {Array} [result.match.classes] Array with matched class names.\n\t * @returns {Array} [result.match.styles] Array with matched style names.\n\t */\n\tpublic match( ...element: Element[] ): MatchResult | null {\n\t\tfor ( const singleElement of element ) {\n\t\t\tfor ( const pattern of this._patterns ) {\n\t\t\t\tconst match = isElementMatching( singleElement, pattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\telement: singleElement,\n\t\t\t\t\t\tpattern,\n\t\t\t\t\t\tmatch\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Matches elements for currently stored patterns. Returns array of match information with all found\n\t * {@link module:engine/view/element~Element elements}. If no element is found - returns `null`.\n\t *\n\t * @see module:engine/view/matcher~Matcher#add\n\t * @see module:engine/view/matcher~Matcher#match\n\t * @param {...module:engine/view/element~Element} element View element to match against stored patterns.\n\t * @returns {Array.<Object>|null} Array with match information about found elements or `null`. For more information\n\t * see {@link module:engine/view/matcher~Matcher#match match method} description.\n\t */\n\tpublic matchAll( ...element: Element[] ): MatchResult[] | null {\n\t\tconst results: MatchResult[] = [];\n\n\t\tfor ( const singleElement of element ) {\n\t\t\tfor ( const pattern of this._patterns ) {\n\t\t\t\tconst match = isElementMatching( singleElement, pattern );\n\n\t\t\t\tif ( match ) {\n\t\t\t\t\tresults.push( {\n\t\t\t\t\t\telement: singleElement,\n\t\t\t\t\t\tpattern,\n\t\t\t\t\t\tmatch\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn results.length > 0 ? results : null;\n\t}\n\n\t/**\n\t * Returns the name of the element to match if there is exactly one pattern added to the matcher instance\n\t * and it matches element name defined by `string` (not `RegExp`). Otherwise, returns `null`.\n\t *\n\t * @returns {String|null} Element name trying to match.\n\t */\n\tpublic getElementName(): string | null {\n\t\tif ( this._patterns.length !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst pattern = this._patterns[ 0 ];\n\t\tconst name = pattern.name;\n\n\t\treturn ( typeof pattern != 'function' && name && !( name instanceof RegExp ) ) ? name : null;\n\t}\n}\n\n// Returns match information if {@link module:engine/view/element~Element element} is matching provided pattern.\n// If element cannot be matched to provided pattern - returns `null`.\n//\n// @param {module:engine/view/element~Element} element\n// @param {Object|String|RegExp|Function} pattern\n// @returns {Object|null} Returns object with match information or null if element is not matching.\nfunction isElementMatching( element: Element, pattern: Exclude<MatcherPattern, string | RegExp> ): Match | null {\n\t// If pattern is provided as function - return result of that function;\n\tif ( typeof pattern == 'function' ) {\n\t\treturn pattern( element );\n\t}\n\n\tconst match: Match = {};\n\n\t// Check element's name.\n\tif ( pattern.name ) {\n\t\tmatch.name = matchName( pattern.name, element.name );\n\n\t\tif ( !match.name ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's attributes.\n\tif ( pattern.attributes ) {\n\t\tmatch.attributes = matchAttributes( pattern.attributes, element );\n\n\t\tif ( !match.attributes ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's classes.\n\tif ( pattern.classes ) {\n\t\tmatch.classes = matchClasses( pattern.classes, element );\n\n\t\tif ( !match.classes ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Check element's styles.\n\tif ( pattern.styles ) {\n\t\tmatch.styles = matchStyles( pattern.styles, element );\n\n\t\tif ( !match.styles ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn match;\n}\n\n// Checks if name can be matched by provided pattern.\n//\n// @param {String|RegExp} pattern\n// @param {String} name\n// @returns {Boolean} Returns `true` if name can be matched, `false` otherwise.\nfunction matchName( pattern: string | RegExp, name: string ): boolean {\n\t// If pattern is provided as RegExp - test against this regexp.\n\tif ( pattern instanceof RegExp ) {\n\t\treturn !!name.match( pattern );\n\t}\n\n\treturn pattern === name;\n}\n\n// Checks if an array of key/value pairs can be matched against provided patterns.\n//\n// Patterns can be provided in a following ways:\n// \t- a boolean value matches any attribute with any value (or no value):\n//\n//\t\t\tpattern: true\n//\n//\t- a RegExp expression or object matches any attribute name:\n//\n//\t\t\tpattern: /h[1-6]/\n//\n//\t- an object matches any attribute that has the same name as the object item's key, where object item's value is:\n//\t\t- equal to `true`, which matches any attribute value:\n//\n//\t\t\tpattern: {\n//\t\t\t\trequired: true\n//\t\t\t}\n//\n//\t\t- a string that is equal to attribute value:\n//\n//\t\t\tpattern: {\n//\t\t\t\trel: 'nofollow'\n//\t\t\t}\n//\n//\t\t- a regular expression that matches attribute value,\n//\n//\t\t\tpattern: {\n//\t\t\t\tsrc: /https.*/\n//\t\t\t}\n//\n//\t- an array with items, where the item is:\n//\t\t- a string that is equal to attribute value:\n//\n//\t\t\tpattern: [ 'data-property-1', 'data-property-2' ],\n//\n//\t\t- an object with `key` and `value` property, where `key` is a regular expression matching attribute name and\n//\t\t  `value` is either regular expression matching attribute value or a string equal to attribute value:\n//\n//\t\t\tpattern: [\n//\t\t\t\t{ key: /data-property-.*/, value: true },\n//\t\t\t\t// or:\n//\t\t\t\t{ key: /data-property-.*/, value: 'foobar' },\n//\t\t\t\t// or:\n//\t\t\t\t{ key: /data-property-.*/, value: /foo.*/ }\n//\t\t\t]\n//\n// @param {Object} patterns Object with information about attributes to match.\n// @param {Iterable.<String>} keys Attribute, style or class keys.\n// @param {Function} valueGetter A function providing value for a given item key.\n// @returns {Array|null} Returns array with matched attribute names or `null` if no attributes were matched.\nfunction matchPatterns(\n\tpatterns: PropertyPatterns,\n\tkeys: Iterable<string>,\n\tvalueGetter: ( value: string ) => unknown\n): string[] | undefined {\n\tconst normalizedPatterns = normalizePatterns( patterns );\n\tconst normalizedItems = Array.from( keys );\n\tconst match: string[] = [];\n\n\tnormalizedPatterns.forEach( ( [ patternKey, patternValue ] ) => {\n\t\tnormalizedItems.forEach( itemKey => {\n\t\t\tif (\n\t\t\t\tisKeyMatched( patternKey, itemKey ) &&\n\t\t\t\tisValueMatched( patternValue, itemKey, valueGetter )\n\t\t\t) {\n\t\t\t\tmatch.push( itemKey );\n\t\t\t}\n\t\t} );\n\t} );\n\n\t// Return matches only if there are at least as many of them as there are patterns.\n\t// The RegExp pattern can match more than one item.\n\tif ( !normalizedPatterns.length || match.length < normalizedPatterns.length ) {\n\t\treturn undefined;\n\t}\n\n\treturn match;\n}\n\n// Bring all the possible pattern forms to an array of arrays where first item is a key and second is a value.\n//\n// Examples:\n//\n// Boolean pattern value:\n//\n//\t\ttrue\n//\n// to\n//\n//\t\t[ [ true, true ] ]\n//\n// Textual pattern value:\n//\n//\t\t'attribute-name-or-class-or-style'\n//\n// to\n//\n//\t\t[ [ 'attribute-name-or-class-or-style', true ] ]\n//\n// Regular expression:\n//\n//\t\t/^data-.*$/\n//\n// to\n//\n//\t\t[ [ /^data-.*$/, true ] ]\n//\n// Objects (plain or with `key` and `value` specified explicitly):\n//\n//\t\t{\n//\t\t\tsrc: /^https:.*$/\n//\t\t}\n//\n// or\n//\n//\t\t[ {\n//\t\t\tkey: 'src',\n//\t\t\tvalue: /^https:.*$/\n//\t\t} ]\n//\n// to:\n//\n//\t\t[ [ 'src', /^https:.*$/ ] ]\n//\n// @param {Object|Array} patterns\n// @returns {Array|null} Returns an array of objects or null if provided patterns were not in an expected form.\nfunction normalizePatterns( patterns: PropertyPatterns ): [ true | string | RegExp, true | string | RegExp ][] {\n\tif ( Array.isArray( patterns ) ) {\n\t\treturn patterns.map( ( pattern: any ) => {\n\t\t\tif ( isPlainObject( pattern ) ) {\n\t\t\t\tif ( pattern.key === undefined || pattern.value === undefined ) {\n\t\t\t\t\t// Documented at the end of matcher.js.\n\t\t\t\t\tlogWarning( 'matcher-pattern-missing-key-or-value', pattern );\n\t\t\t\t}\n\n\t\t\t\treturn [ pattern.key, pattern.value ];\n\t\t\t}\n\n\t\t\t// Assume the pattern is either String or RegExp.\n\t\t\treturn [ pattern, true ];\n\t\t} );\n\t}\n\n\tif ( isPlainObject( patterns ) ) {\n\t\treturn Object.entries( patterns );\n\t}\n\n\t// Other cases (true, string or regexp).\n\treturn [ [ patterns as any, true ] ];\n}\n\n// @param {String|RegExp} patternKey A pattern representing a key we want to match.\n// @param {String} itemKey An actual item key (e.g. `'src'`, `'background-color'`, `'ck-widget'`) we're testing against pattern.\n// @returns {Boolean}\nfunction isKeyMatched( patternKey: true | string | RegExp, itemKey: string ): unknown {\n\treturn patternKey === true ||\n\t\tpatternKey === itemKey ||\n\t\tpatternKey instanceof RegExp && itemKey.match( patternKey );\n}\n\n// @param {String|RegExp} patternValue A pattern representing a value we want to match.\n// @param {String} itemKey An item key, e.g. `background`, `href`, 'rel', etc.\n// @param {Function} valueGetter A function used to provide a value for a given `itemKey`.\n// @returns {Boolean}\nfunction isValueMatched(\n\tpatternValue: true | string | RegExp,\n\titemKey: string,\n\tvalueGetter: ( value: string ) => unknown\n): boolean {\n\tif ( patternValue === true ) {\n\t\treturn true;\n\t}\n\n\tconst itemValue = valueGetter( itemKey );\n\n\t// For now, the reducers are not returning the full tree of properties.\n\t// Casting to string preserves the old behavior until the root cause is fixed.\n\t// More can be found in https://github.com/ckeditor/ckeditor5/issues/10399.\n\treturn patternValue === itemValue ||\n\t\tpatternValue instanceof RegExp && !!String( itemValue ).match( patternValue );\n}\n\n// Checks if attributes of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about attributes to match. Each key of the object will be\n// used as attribute name. Value of each key can be a string or regular expression to match against attribute value.\n// @param {module:engine/view/element~Element} element Element which attributes will be tested.\n// @returns {Array|null} Returns array with matched attribute names or `null` if no attributes were matched.\nfunction matchAttributes(\n\tpatterns: PropertyPatterns,\n\telement: Element\n): string[] | undefined {\n\tconst attributeKeys = new Set( element.getAttributeKeys() );\n\n\t// `style` and `class` attribute keys are deprecated. Only allow them in object pattern\n\t// for backward compatibility.\n\tif ( isPlainObject( patterns ) ) {\n\t\tif ( ( patterns as any ).style !== undefined ) {\n\t\t\t// Documented at the end of matcher.js.\n\t\t\tlogWarning( 'matcher-pattern-deprecated-attributes-style-key', patterns as any );\n\t\t}\n\t\tif ( ( patterns as any ).class !== undefined ) {\n\t\t\t// Documented at the end of matcher.js.\n\t\t\tlogWarning( 'matcher-pattern-deprecated-attributes-class-key', patterns as any );\n\t\t}\n\t} else {\n\t\tattributeKeys.delete( 'style' );\n\t\tattributeKeys.delete( 'class' );\n\t}\n\n\treturn matchPatterns( patterns, attributeKeys, key => element.getAttribute( key ) );\n}\n\n// Checks if classes of provided element can be matched against provided patterns.\n//\n// @param {Array.<String|RegExp>} patterns Array of strings or regular expressions to match against element's classes.\n// @param {module:engine/view/element~Element} element Element which classes will be tested.\n// @returns {Array|null} Returns array with matched class names or `null` if no classes were matched.\nfunction matchClasses( patterns: ClassPatterns, element: Element ): string[] | undefined {\n\t// We don't need `getter` here because patterns for classes are always normalized to `[ className, true ]`.\n\treturn matchPatterns( patterns, element.getClassNames(), /* istanbul ignore next */ () => {} );\n}\n\n// Checks if styles of provided element can be matched against provided patterns.\n//\n// @param {Object} patterns Object with information about styles to match. Each key of the object will be\n// used as style name. Value of each key can be a string or regular expression to match against style value.\n// @param {module:engine/view/element~Element} element Element which styles will be tested.\n// @returns {Array|null} Returns array with matched style names or `null` if no styles were matched.\nfunction matchStyles( patterns: PropertyPatterns, element: Element ): string[] | undefined {\n\treturn matchPatterns( patterns, element.getStyleNames( true ), key => element.getStyle( key ) );\n}\n\n/**\n * An entity that is a valid pattern recognized by a matcher. `MatcherPattern` is used by {@link ~Matcher} to recognize\n * if a view element fits in a group of view elements described by the pattern.\n *\n * `MatcherPattern` can be given as a `String`, a `RegExp`, an `Object` or a `Function`.\n *\n * If `MatcherPattern` is given as a `String` or `RegExp`, it will match any view element that has a matching name:\n *\n *\t\t// Match any element with name equal to 'div'.\n *\t\tconst pattern = 'div';\n *\n *\t\t// Match any element which name starts on 'p'.\n *\t\tconst pattern = /^p/;\n *\n * If `MatcherPattern` is given as an `Object`, all the object's properties will be matched with view element properties.\n * If the view element does not meet all of the object's pattern properties, the match will not happen.\n * Available `Object` matching properties:\n *\n * Matching view element:\n *\n *\t\t// Match view element's name using String:\n *\t\tconst pattern = { name: 'p' };\n *\n *\t\t// or by providing RegExp:\n *\t\tconst pattern = { name: /^(ul|ol)$/ };\n *\n *\t\t// The name can also be skipped to match any view element with matching attributes:\n *\t\tconst pattern = {\n *\t\t\tattributes: {\n *\t\t\t\t'title': true\n *\t\t\t}\n *\t\t};\n *\n * Matching view element attributes:\n *\n *\t\t// Match view element with any attribute value.\n *\t\tconst pattern = {\n *\t\t\tname: 'p',\n *\t\t\tattributes: true\n *\t\t};\n *\n *\t\t// Match view element which has matching attributes (String).\n *\t\tconst pattern = {\n *\t\t\tname: 'figure',\n *\t\t\tattributes: 'title' // Match title attribute (can be empty).\n *\t\t};\n *\n *\t\t// Match view element which has matching attributes (RegExp).\n *\t\tconst pattern = {\n *\t\t\tname: 'figure',\n *\t\t\tattributes: /^data-.*$/ // Match attributes starting with `data-` e.g. `data-foo` with any value (can be empty).\n *\t\t};\n *\n *\t\t// Match view element which has matching attributes (Object).\n *\t\tconst pattern = {\n *\t\t\tname: 'figure',\n *\t\t\tattributes: {\n *\t\t\t\ttitle: 'foobar',           // Match `title` attribute with 'foobar' value.\n *\t\t\t\talt: true,                 // Match `alt` attribute with any value (can be empty).\n *\t\t\t\t'data-type': /^(jpg|png)$/ // Match `data-type` attribute with `jpg` or `png` value.\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Match view element which has matching attributes (Array).\n *\t\tconst pattern = {\n *\t\t\tname: 'figure',\n *\t\t\tattributes: [\n *\t\t\t\t'title',    // Match `title` attribute (can be empty).\n *\t\t\t\t/^data-*$/ // Match attributes starting with `data-` e.g. `data-foo` with any value (can be empty).\n *\t\t\t]\n *\t\t};\n *\n *\t\t// Match view element which has matching attributes (key-value pairs).\n *\t\tconst pattern = {\n *\t\t\tname: 'input',\n *\t\t\tattributes: [\n *\t\t\t\t{\n *\t\t\t\t\tkey: 'type',                     // Match `type` as an attribute key.\n *\t\t\t\t\tvalue: /^(text|number|date)$/\t // Match `text`, `number` or `date` values.\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tkey: /^data-.*$/,                // Match attributes starting with `data-` e.g. `data-foo`.\n *\t\t\t\t\tvalue: true                      // Match any value (can be empty).\n *\t\t\t\t}\n *\t\t\t]\n *\t\t};\n *\n * Matching view element styles:\n *\n *\t\t// Match view element with any style.\n *\t\tconst pattern = {\n *\t\t\tname: 'p',\n *\t\t\tstyles: true\n *\t\t};\n *\n *\t\t// Match view element which has matching styles (String).\n *\t\tconst pattern = {\n *\t\t\tname: 'p',\n *\t\t\tstyles: 'color' // Match attributes with `color` style.\n *\t\t};\n *\n *\t\t// Match view element which has matching styles (RegExp).\n *\t\tconst pattern = {\n *\t\t\tname: 'p',\n *\t\t\tstyles: /^border.*$/ // Match view element with any border style.\n *\t\t};\n *\n *\t\t// Match view element which has matching styles (Object).\n *\t\tconst pattern = {\n *\t\t\tname: 'p',\n *\t\t\tstyles: {\n *\t\t\t\tcolor: /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/, // Match `color` in RGB format only.\n *\t\t\t\t'font-weight': 600,                              // Match `font-weight` only if it's `600`.\n *\t\t\t\t'text-decoration': true                          // Match any text decoration.\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Match view element which has matching styles (Array).\n *\t\tconst pattern = {\n *\t\t\tname: 'p',\n *\t\t\tstyles: [\n *\t\t\t\t'color',      // Match `color` with any value.\n *\t\t\t\t/^border.*$/ // Match all border properties.\n *\t\t\t]\n *\t\t};\n *\n *\t\t// Match view element which has matching styles (key-value pairs).\n *\t\tconst pattern = {\n *\t\t\tname: 'p',\n *\t\t\tstyles: [\n *\t\t\t\t{\n *\t\t\t\t\tkey: 'color',                                  \t\t// Match `color` as an property key.\n *\t\t\t\t\tvalue: /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/\t\t// Match RGB format only.\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tkey: /^border.*$/, // Match any border style.\n *\t\t\t\t\tvalue: true        // Match any value.\n *\t\t\t\t}\n *\t\t\t]\n *\t\t};\n *\n * Matching view element classes:\n *\n *\t\t// Match view element with any class.\n *\t\tconst pattern = {\n *\t\t\tname: 'p',\n *\t\t\tclasses: true\n *\t\t};\n *\n *\t\t// Match view element which has matching class (String).\n *\t\tconst pattern = {\n *\t\t\tname: 'p',\n *\t\t\tclasses: 'highlighted' // Match `highlighted` class.\n *\t\t};\n *\n *\t\t// Match view element which has matching classes (RegExp).\n *\t\tconst pattern = {\n *\t\t\tname: 'figure',\n *\t\t\tclasses: /^image-side-(left|right)$/ // Match `image-side-left` or `image-side-right` class.\n *\t\t};\n *\n *\t\t// Match view element which has matching classes (Object).\n *\t\tconst pattern = {\n *\t\t\tname: 'p',\n *\t\t\tclasses: {\n *\t\t\t\thighlighted: true, // Match `highlighted` class.\n *\t\t\t\tmarker: true       // Match `marker` class.\n *\t\t\t}\n *\t\t};\n *\n *\t\t// Match view element which has matching classes (Array).\n *\t\tconst pattern = {\n *\t\t\tname: 'figure',\n *\t\t\tclasses: [\n *\t\t\t\t'image',                    // Match `image` class.\n *\t\t\t\t/^image-side-(left|right)$/ // Match `image-side-left` or `image-side-right` class.\n *\t\t\t]\n *\t\t};\n *\n *\t\t// Match view element which has matching classes (key-value pairs).\n *\t\tconst pattern = {\n *\t\t\tname: 'figure',\n *\t\t\tclasses: [\n *\t\t\t\t{\n *\t\t\t\t\tkey: 'image', // Match `image` class.\n *\t\t\t\t\tvalue: true\n *\t\t\t\t},\n *\t\t\t\t{\n *\t\t\t\t\tkey: /^image-side-(left|right)$/, // Match `image-side-left` or `image-side-right` class.\n *\t\t\t\t\tvalue: true\n *\t\t\t\t}\n *\t\t\t]\n *\t\t};\n *\n * Pattern can combine multiple properties allowing for more complex view element matching:\n *\n *\t\tconst pattern = {\n *\t\t\tname: 'span',\n *\t\t\tattributes: [ 'title' ],\n *\t\t\tstyles: {\n *\t\t\t\t'font-weight': 'bold'\n *\t\t\t},\n *\t\t\tclasses: 'highlighted'\n *\t\t};\n *\n * If `MatcherPattern` is given as a `Function`, the function takes a view element as a first and only parameter and\n * the function should decide whether that element matches. If so, it should return what part of the view element has been matched.\n * Otherwise, the function should return `null`. The returned result will be included in `match` property of the object\n * returned by {@link ~Matcher#match} call.\n *\n *\t\t// Match an empty <div> element.\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'div' && element.childCount > 0 ) {\n *\t\t\t\t// Return which part of the element was matched.\n *\t\t\t\treturn { name: true };\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n *\t\t// Match a <p> element with big font (\"heading-like\" element).\n *\t\tconst pattern = element => {\n *\t\t\tif ( element.name == 'p' ) {\n *\t\t\t\tconst fontSize = element.getStyle( 'font-size' );\n *\t\t\t\tconst size = fontSize.match( /(\\d+)/px );\n *\n *\t\t\t\tif ( size && Number( size[ 1 ] ) > 26 ) {\n *\t\t\t\t\treturn { name: true, attributes: [ 'font-size' ] };\n *\t\t\t\t}\n *\t\t\t}\n *\n *\t\t\treturn null;\n *\t\t};\n *\n * `MatcherPattern` is defined in a way that it is a superset of {@link module:engine/view/elementdefinition~ElementDefinition},\n * that is, every `ElementDefinition` also can be used as a `MatcherPattern`.\n *\n * @typedef {String|RegExp|Object|Function} module:engine/view/matcher~MatcherPattern\n *\n * @property {String|RegExp} [name] View element name to match.\n * @property {Boolean|String|RegExp|Object|Array.<String|RegExp|Object>} [classes] View element's classes to match.\n * @property {Boolean|String|RegExp|Object|Array.<String|RegExp|Object>} [styles] View element's styles to match.\n * @property {Boolean|String|RegExp|Object|Array.<String|RegExp|Object>} [attributes] View element's attributes to match.\n */\n\nexport type MatcherPattern =\n\tstring |\n\tRegExp |\n\t( ( element: Element ) => Match | null ) |\n\t{\n\t\tname?: string | RegExp;\n\t\tclasses?: ClassPatterns;\n\t\tstyles?: PropertyPatterns;\n\t\tattributes?: PropertyPatterns;\n\t};\n\nexport interface Match {\n\tname?: boolean;\n\tattributes?: string[];\n\tclasses?: string[];\n\tstyles?: string[];\n}\n\nexport interface MatchResult {\n\telement: Element;\n\tpattern: Exclude<MatcherPattern, string | RegExp>;\n\tmatch: Match;\n}\n\nexport type PropertyPatterns =\n\ttrue |\n\tstring |\n\tRegExp |\n\tRecord<string, true | string | RegExp> |\n\t( string | RegExp | { key: string | RegExp; value: string | RegExp } )[];\n\nexport type ClassPatterns =\n\ttrue |\n\tstring |\n\tRegExp |\n\tRecord<string, true> |\n\t( string | RegExp )[];\n\n/**\n * The key-value matcher pattern is missing key or value. Both must be present.\n * Refer the documentation: {@link module:engine/view/matcher~MatcherPattern}.\n *\n * @param {Object} pattern Pattern with missing properties.\n * @error matcher-pattern-missing-key-or-value\n */\n\n/**\n * The key-value matcher pattern for `attributes` option is using deprecated `style` key.\n *\n * Use `styles` matcher pattern option instead:\n *\n * \t\t// Instead of:\n * \t\tconst pattern = {\n * \t\t\tattributes: {\n * \t\t\t\tkey1: 'value1',\n * \t\t\t\tkey2: 'value2',\n * \t\t\t\tstyle: /^border.*$/\n * \t\t\t}\n * \t\t}\n *\n * \t\t// Use:\n * \t\tconst pattern = {\n * \t\t\tattributes: {\n * \t\t\t\tkey1: 'value1',\n * \t\t\t\tkey2: 'value2'\n * \t\t\t},\n * \t\t\tstyles: /^border.*$/\n * \t\t}\n *\n * Refer to the {@glink updating/migration-to-29##migration-to-ckeditor-5-v2910 Migration to v29.1.0} guide\n * and {@link module:engine/view/matcher~MatcherPattern} documentation.\n *\n * @param {Object} pattern Pattern with missing properties.\n * @error matcher-pattern-deprecated-attributes-style-key\n */\n\n/**\n * The key-value matcher pattern for `attributes` option is using deprecated `class` key.\n *\n * Use `classes` matcher pattern option instead:\n *\n * \t\t// Instead of:\n * \t\tconst pattern = {\n * \t\t\tattributes: {\n * \t\t\t\tkey1: 'value1',\n * \t\t\t\tkey2: 'value2',\n * \t\t\t\tclass: 'foobar'\n * \t\t\t}\n * \t\t}\n *\n * \t\t// Use:\n * \t\tconst pattern = {\n * \t\t\tattributes: {\n * \t\t\t\tkey1: 'value1',\n * \t\t\t\tkey2: 'value2'\n * \t\t\t},\n * \t\t\tclasses: 'foobar'\n * \t\t}\n *\n * Refer to the {@glink updating/migration-to-29##migration-to-ckeditor-5-v2910 Migration to v29.1.0} guide\n * and the {@link module:engine/view/matcher~MatcherPattern} documentation.\n *\n * @param {Object} pattern Pattern with missing properties.\n * @error matcher-pattern-deprecated-attributes-class-key\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* eslint-disable new-cap */\n\n/**\n * @module engine/view/node\n */\n\nimport TypeCheckable from './typecheckable';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport { clone } from 'lodash-es';\n\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\nimport type { default as Document, ChangeType } from './document';\nimport type DocumentFragment from './documentfragment';\nimport type Element from './element';\n\n/**\n * Abstract view node class.\n *\n * This is an abstract class. Its constructor should not be used directly.\n * Use the {@link module:engine/view/downcastwriter~DowncastWriter} or {@link module:engine/view/upcastwriter~UpcastWriter}\n * to create new instances of view nodes.\n *\n * @abstract\n */\nexport default abstract class Node extends EmitterMixin( TypeCheckable ) {\n\tpublic document: Document;\n\tpublic parent: Element | DocumentFragment | null;\n\n\t/**\n\t * Creates a tree view node.\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this node belongs.\n\t */\n\tconstructor( document: Document ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The document instance to which this node belongs.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = document;\n\n\t\t/**\n\t\t * Parent element. Null by default. Set by {@link module:engine/view/element~Element#_insertChild}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t\t */\n\t\tthis.parent = null;\n\t}\n\n\t/**\n\t * Index of the node in the parent element or null if the node has no parent.\n\t *\n\t * Accessing this property throws an error if this node's parent element does not contain it.\n\t * This means that view tree got broken.\n\t *\n\t * @readonly\n\t * @type {Number|null}\n\t */\n\tpublic get index(): number | null {\n\t\tlet pos;\n\n\t\tif ( !this.parent ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// No parent or child doesn't exist in parent's children.\n\t\tif ( ( pos = this.parent.getChildIndex( this ) ) == -1 ) {\n\t\t\t/**\n\t\t\t * The node's parent does not contain this node. It means that the document tree is corrupted.\n\t\t\t *\n\t\t\t * @error view-node-not-found-in-parent\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-node-not-found-in-parent', this );\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Node's next sibling, or `null` if it is the last child.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tpublic get nextSibling(): Node | null {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent!.getChild( index + 1 ) ) || null;\n\t}\n\n\t/**\n\t * Node's previous sibling, or `null` if it is the first child.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tpublic get previousSibling(): Node | null {\n\t\tconst index = this.index;\n\n\t\treturn ( index !== null && this.parent!.getChild( index - 1 ) ) || null;\n\t}\n\n\t/**\n\t * Top-most ancestor of the node. If the node has no parent it is the root itself.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tpublic get root(): Element | DocumentFragment {\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias, consistent-this\n\t\tlet root: Node | DocumentFragment = this;\n\n\t\twhile ( root.parent ) {\n\t\t\troot = root.parent;\n\t\t}\n\n\t\treturn root as any;\n\t}\n\n\t/**\n\t * Returns true if the node is in a tree rooted in the document (is a descendant of one of its roots).\n\t *\n\t * @returns {Boolean}\n\t */\n\tpublic isAttached(): boolean {\n\t\treturn this.root.is( 'rootElement' );\n\t}\n\n\t/**\n\t * Gets a path to the node. The path is an array containing indices of consecutive ancestors of this node,\n\t * beginning from {@link module:engine/view/node~Node#root root}, down to this node's index.\n\t *\n\t *\t\tconst abc = downcastWriter.createText( 'abc' );\n\t *\t\tconst foo = downcastWriter.createText( 'foo' );\n\t *\t\tconst h1 = downcastWriter.createElement( 'h1', null, downcastWriter.createText( 'header' ) );\n\t *\t\tconst p = downcastWriter.createElement( 'p', null, [ abc, foo ] );\n\t *\t\tconst div = downcastWriter.createElement( 'div', null, [ h1, p ] );\n\t *\t\tfoo.getPath(); // Returns [ 1, 3 ]. `foo` is in `p` which is in `div`. `p` starts at offset 1, while `foo` at 3.\n\t *\t\th1.getPath(); // Returns [ 0 ].\n\t *\t\tdiv.getPath(); // Returns [].\n\t *\n\t * @returns {Array.<Number>} The path.\n\t */\n\tpublic getPath(): number[] {\n\t\tconst path = [];\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias, consistent-this\n\t\tlet node: Node | DocumentFragment = this;\n\n\t\twhile ( node.parent ) {\n\t\t\tpath.unshift( node.index! );\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn path;\n\t}\n\n\t/**\n\t * Returns ancestors array of this node.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` this node will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from node's parent to root element,\n\t * otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tpublic getAncestors( options: { includeSelf?: boolean; parentFirst?: boolean } = {} ): ( Node | DocumentFragment )[] {\n\t\tconst ancestors: ( Node | DocumentFragment )[] = [];\n\t\tlet parent = options.includeSelf ? this : this.parent;\n\n\t\twhile ( parent ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/element~Element} or {@link module:engine/view/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both nodes.\n\t *\n\t * @param {module:engine/view/node~Node} node The second node.\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` both nodes will be considered \"ancestors\" too.\n\t * Which means that if e.g. node A is inside B, then their common ancestor will be B.\n\t * @returns {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tpublic getCommonAncestor( node: Node, options: { includeSelf?: boolean } = {} ): Element | DocumentFragment | null {\n\t\tconst ancestorsA = this.getAncestors( options );\n\t\tconst ancestorsB = node.getAncestors( options );\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ] as ( Element | DocumentFragment );\n\t}\n\n\t/**\n\t * Returns whether this node is before given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/view/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tpublic isBefore( node: Node ): boolean {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst thisPath = this.getPath();\n\t\tconst nodePath = node.getPath();\n\n\t\tconst result = compareArrays( thisPath, nodePath );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'prefix':\n\t\t\t\treturn true;\n\n\t\t\tcase 'extension':\n\t\t\t\treturn false;\n\n\t\t\tdefault:\n\t\t\t\treturn thisPath[ result as number ] < nodePath[ result as number ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether this node is after given node. `false` is returned if nodes are in different trees (for example,\n\t * in different {@link module:engine/view/documentfragment~DocumentFragment}s).\n\t *\n\t * @param {module:engine/view/node~Node} node Node to compare with.\n\t * @returns {Boolean}\n\t */\n\tpublic isAfter( node: Node ): boolean {\n\t\t// Given node is not before this node if they are same.\n\t\tif ( this == node ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Return `false` if it is impossible to compare nodes.\n\t\tif ( this.root !== node.root ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// In other cases, just check if the `node` is before, and return the opposite.\n\t\treturn !this.isBefore( node );\n\t}\n\n\t/**\n\t * Removes node from parent.\n\t *\n\t * @internal\n\t * @protected\n\t */\n\tpublic _remove(): void {\n\t\tthis.parent!._removeChildren( this.index! );\n\t}\n\n\t/**\n\t * @internal\n\t * @protected\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~Node} node Changed node.\n\t * @fires change\n\t */\n\tpublic _fireChange( type: ChangeType, node: Node ): void {\n\t\tthis.fire<ChangeEvent>( `change:${ type }`, node );\n\n\t\tif ( this.parent ) {\n\t\t\tthis.parent._fireChange( type, node );\n\t\t}\n\t}\n\n\t/**\n\t * Custom toJSON method to solve child-parent circular dependencies.\n\t *\n\t * @returns {Object} Clone of this object with the parent property removed.\n\t */\n\tpublic toJSON(): unknown {\n\t\tconst json: any = clone( this );\n\n\t\t// Due to circular references we need to remove parent reference.\n\t\tdelete json.parent;\n\n\t\treturn json;\n\t}\n\n\t/**\n\t * Clones this node.\n\t *\n\t * @protected\n\t * @method #_clone\n\t * @returns {module:engine/view/node~Node} Clone of this node.\n\t */\n\tpublic abstract _clone( deep?: boolean ): Node;\n\n\t/**\n\t * Checks if provided node is similar to this node.\n\t *\n\t * @method #isSimilar\n\t * @returns {Boolean} True if nodes are similar.\n\t */\n\tpublic abstract isSimilar( other: Node ): boolean;\n}\n\n/**\n * Checks whether this object is of the given type.\n *\n * This method is useful when processing view objects that are of unknown type. For example, a function\n * may return a {@link module:engine/view/documentfragment~DocumentFragment} or a {@link module:engine/view/node~Node}\n * that can be either a text node or an element. This method can be used to check what kind of object is returned.\n *\n *\t\tsomeObject.is( 'element' ); // -> true if this is an element\n *\t\tsomeObject.is( 'node' ); // -> true if this is a node (a text node or an element)\n *\t\tsomeObject.is( 'documentFragment' ); // -> true if this is a document fragment\n *\n * Since this method is also available on a range of model objects, you can prefix the type of the object with\n * `model:` or `view:` to check, for example, if this is the model's or view's element:\n *\n *\t\tviewElement.is( 'view:element' ); // -> true\n *\t\tviewElement.is( 'model:element' ); // -> false\n *\n * By using this method it is also possible to check a name of an element:\n *\n *\t\timgElement.is( 'element', 'img' ); // -> true\n *\t\timgElement.is( 'view:element', 'img' ); // -> same as above, but more precise\n *\n * The list of view objects which implement the `is()` method:\n *\n * * {@link module:engine/view/attributeelement~AttributeElement#is `AttributeElement#is()`}\n * * {@link module:engine/view/containerelement~ContainerElement#is `ContainerElement#is()`}\n * * {@link module:engine/view/documentfragment~DocumentFragment#is `DocumentFragment#is()`}\n * * {@link module:engine/view/documentselection~DocumentSelection#is `DocumentSelection#is()`}\n * * {@link module:engine/view/editableelement~EditableElement#is `EditableElement#is()`}\n * * {@link module:engine/view/element~Element#is `Element#is()`}\n * * {@link module:engine/view/emptyelement~EmptyElement#is `EmptyElement#is()`}\n * * {@link module:engine/view/node~Node#is `Node#is()`}\n * * {@link module:engine/view/position~Position#is `Position#is()`}\n * * {@link module:engine/view/range~Range#is `Range#is()`}\n * * {@link module:engine/view/rooteditableelement~RootEditableElement#is `RootEditableElement#is()`}\n * * {@link module:engine/view/selection~Selection#is `Selection#is()`}\n * * {@link module:engine/view/text~Text#is `Text#is()`}\n * * {@link module:engine/view/textproxy~TextProxy#is `TextProxy#is()`}\n * * {@link module:engine/view/uielement~UIElement#is `UIElement#is()`}\n *\n * @method #is\n * @param {String} type Type to check.\n * @returns {Boolean}\n */\nNode.prototype.is = function( type: string ): boolean {\n\treturn type === 'node' || type === 'view:node';\n};\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} children changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:children\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when list of {@link module:engine/view/element~Element elements} attributes changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:attributes\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * Fired when {@link module:engine/view/text~Text text nodes} data changes.\n *\n * Change event is bubbled – it is fired on all ancestors.\n *\n * @event change:text\n * @param {module:engine/view/node~Node} changedNode\n */\n\n/**\n * @event change\n */\n\nexport type ChangeEvent = {\n\tname: 'change' | `change:${ ChangeType }`;\n\targs: [ changedNode: Node ];\n};\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/arrowkeysobserver\n */\n\nimport Observer from './observer';\nimport BubblingEventInfo from './bubblingeventinfo';\nimport type View from '../view';\nimport type { KeyObserverEvent } from './keyobserver';\n\nimport { isArrowKeyCode } from '@ckeditor/ckeditor5-utils';\n\n/**\n * Arrow keys observer introduces the {@link module:engine/view/document~Document#event:arrowKey `Document#arrowKey`} event.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class ArrowKeysObserver extends Observer {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( view: View ) {\n\t\tsuper( view );\n\n\t\tthis.document.on<KeyObserverEvent>( 'keydown', ( event, data ) => {\n\t\t\tif ( this.isEnabled && isArrowKeyCode( data.keyCode ) ) {\n\t\t\t\tconst eventInfo = new BubblingEventInfo( this.document, 'arrowKey', this.document.selection.getFirstRange()! );\n\n\t\t\t\tthis.document.fire<ArrowObserverEvent>( eventInfo, data );\n\n\t\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\t\tevent.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override observe(): void {}\n}\n\nexport type ArrowObserverEvent = {\n\tname: 'arrowKey';\n\targs: KeyObserverEvent[ 'args' ];\n\teventInfo: BubblingEventInfo<'arrowKey'>;\n};\n\n/**\n * Event fired when the user presses an arrow keys.\n *\n * Introduced by {@link module:engine/view/observer/arrowkeysobserver~ArrowKeysObserver}.\n *\n * Note that because {@link module:engine/view/observer/arrowkeysobserver~ArrowKeysObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @event module:engine/view/document~Document#event:arrowKey\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/bubblingemittermixin\n */\n\nimport EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport {\n\tEmitter,\n\ttype GetEventInfo,\n\ttype GetNameOrEventInfo,\n\ttype BaseEvent,\n\ttype CallbackOptions,\n\ttype GetCallback\n} from '@ckeditor/ckeditor5-utils/src/emittermixin';\nimport toArray from '@ckeditor/ckeditor5-utils/src/toarray';\n\nimport BubblingEventInfo from './bubblingeventinfo';\nimport type Document from '../document';\nimport type Node from '../node';\nimport type Range from '../range';\nimport type Element from '../element';\nimport type DocumentSelection from '../documentselection';\n\nconst contextsSymbol = Symbol( 'bubbling contexts' );\n\n/**\n * Bubbling emitter mixin for the view document as described in the\n * {@link ~BubblingEmitter} interface.\n *\n * @mixin BubblingEmitterMixin\n * @implements module:engine/view/observer/bubblingemittermixin~BubblingEmitter\n */\nexport default function BubblingEmitterMixin<Base extends abstract new( ...args: any[] ) => Emitter>(\n\tbase: Base\n): {\n\tnew( ...args: ConstructorParameters<Base> ): InstanceType<Base> & BubblingEmitter;\n\tprototype: InstanceType<Base> & BubblingEmitter;\n} {\n\tabstract class Mixin extends base implements BubblingEmitter {\n\t\tpublic abstract get selection(): DocumentSelection;\n\n\t\tpublic override fire<TEvent extends BaseEvent>(\n\t\t\teventOrInfo: GetNameOrEventInfo<TEvent>,\n\t\t\t...eventArgs: TEvent[ 'args' ]\n\t\t): GetEventInfo<TEvent>[ 'return' ] {\n\t\t\ttry {\n\t\t\t\tconst eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo( this, eventOrInfo );\n\t\t\t\tconst eventContexts = getBubblingContexts( this );\n\n\t\t\t\tif ( !eventContexts.size ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tupdateEventInfo( eventInfo, 'capturing', this );\n\n\t\t\t\t// The capture phase of the event.\n\t\t\t\tif ( fireListenerFor( eventContexts, '$capture', eventInfo, ...eventArgs ) ) {\n\t\t\t\t\treturn eventInfo.return;\n\t\t\t\t}\n\n\t\t\t\tconst startRange = ( eventInfo as BubblingEventInfo ).startRange || this.selection.getFirstRange();\n\t\t\t\tconst selectedElement = startRange ? startRange.getContainedElement() : null;\n\t\t\t\tconst isCustomContext = selectedElement ? Boolean( getCustomContext( eventContexts, selectedElement ) ) : false;\n\n\t\t\t\tlet node: Node | null = selectedElement || getDeeperRangeParent( startRange );\n\n\t\t\t\tupdateEventInfo( eventInfo, 'atTarget', node );\n\n\t\t\t\t// For the not yet bubbling event trigger for $text node if selection can be there and it's not a custom context selected.\n\t\t\t\tif ( !isCustomContext ) {\n\t\t\t\t\tif ( fireListenerFor( eventContexts, '$text', eventInfo, ...eventArgs ) ) {\n\t\t\t\t\t\treturn eventInfo.return;\n\t\t\t\t\t}\n\n\t\t\t\t\tupdateEventInfo( eventInfo, 'bubbling', node );\n\t\t\t\t}\n\n\t\t\t\twhile ( node ) {\n\t\t\t\t\t// Root node handling.\n\t\t\t\t\tif ( node.is( 'rootElement' ) ) {\n\t\t\t\t\t\tif ( fireListenerFor( eventContexts, '$root', eventInfo, ...eventArgs ) ) {\n\t\t\t\t\t\t\treturn eventInfo.return;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Element node handling.\n\t\t\t\t\telse if ( node.is( 'element' ) ) {\n\t\t\t\t\t\tif ( fireListenerFor( eventContexts, node.name, eventInfo, ...eventArgs ) ) {\n\t\t\t\t\t\t\treturn eventInfo.return;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check custom contexts (i.e., a widget).\n\t\t\t\t\tif ( fireListenerFor( eventContexts, node, eventInfo, ...eventArgs ) ) {\n\t\t\t\t\t\treturn eventInfo.return;\n\t\t\t\t\t}\n\n\t\t\t\t\tnode = node.parent as Node;\n\n\t\t\t\t\tupdateEventInfo( eventInfo, 'bubbling', node );\n\t\t\t\t}\n\n\t\t\t\tupdateEventInfo( eventInfo, 'bubbling', this );\n\n\t\t\t\t// Document context.\n\t\t\t\tfireListenerFor( eventContexts, '$document', eventInfo, ...eventArgs );\n\n\t\t\t\treturn eventInfo.return;\n\t\t\t} catch ( err: any ) {\n\t\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t\t}\n\t\t}\n\n\t\tpublic _addEventListener(\n\t\t\tthis: Document,\n\t\t\tevent: string,\n\t\t\tcallback: ( ev: EventInfo, ...args: any[] ) => void,\n\t\t\toptions: BubblingCallbackOptions\n\t\t) {\n\t\t\tconst contexts = toArray( options.context || '$document' );\n\t\t\tconst eventContexts = getBubblingContexts( this );\n\n\t\t\tfor ( const context of contexts ) {\n\t\t\t\tlet emitter = eventContexts.get( context );\n\n\t\t\t\tif ( !emitter ) {\n\t\t\t\t\temitter = new Emitter();\n\t\t\t\t\teventContexts.set( context, emitter! );\n\t\t\t\t}\n\n\t\t\t\tthis.listenTo( emitter!, event, callback, options );\n\t\t\t}\n\t\t}\n\n\t\tpublic _removeEventListener( this: Document, event: string, callback: Function ): void {\n\t\t\tconst eventContexts = getBubblingContexts( this );\n\n\t\t\tfor ( const emitter of eventContexts.values() ) {\n\t\t\t\tthis.stopListening( emitter, event, callback );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn Mixin as any;\n}\n\n// Backward compatibility with `mix`.\n{\n\tconst mixin = ( BubblingEmitterMixin as any )( Object );\n\n\t[ 'fire', '_addEventListener', '_removeEventListener' ].forEach( key => {\n\t\t( BubblingEmitterMixin as any )[ key ] = mixin.prototype[ key ];\n\t} );\n}\n\n// Update the event info bubbling fields.\n//\n// @param {module:utils/eventinfo~EventInfo} eventInfo The event info object to update.\n// @param {'none'|'capturing'|'atTarget'|'bubbling'} eventPhase The current event phase.\n// @param {module:engine/view/document~Document|module:engine/view/node~Node} currentTarget The current bubbling target.\nfunction updateEventInfo(\n\teventInfo: EventInfo,\n\teventPhase: BubblingEventInfo[ '_eventPhase' ],\n\tcurrentTarget: unknown\n) {\n\tif ( eventInfo instanceof BubblingEventInfo ) {\n\t\t( eventInfo as any )._eventPhase = eventPhase;\n\t\t( eventInfo as any )._currentTarget = currentTarget;\n\t}\n}\n\n// Fires the listener for the specified context. Returns `true` if event was stopped.\n//\n// @private\n// @param {Map.<String|Function, module:utils/emittermixin~Emitter>} eventContexts\n// @param {String|module:engine/view/node~Node} context\n// @param {module:utils/eventinfo~EventInfo} eventInfo The `EventInfo` object.\n// @param {...*} [eventArgs] Additional arguments to be passed to the callbacks.\n// @returns {Boolean} True if event stop was called.\nfunction fireListenerFor(\n\teventContexts: BubblingEventContexts,\n\tcontext: string | Node,\n\teventInfo: EventInfo,\n\t...eventArgs: unknown[]\n) {\n\tconst emitter = typeof context == 'string' ? eventContexts.get( context ) : getCustomContext( eventContexts, context );\n\n\tif ( !emitter ) {\n\t\treturn false;\n\t}\n\n\temitter.fire( eventInfo, ...eventArgs );\n\n\treturn eventInfo.stop.called;\n}\n\n// Returns an emitter for a specified view node.\n//\n// @private\n// @param {Map.<String|Function, module:utils/emittermixin~Emitter>} eventContexts\n// @param {module:engine/view/node~Node} node\n// @returns {module:utils/emittermixin~Emitter|null}\nfunction getCustomContext( eventContexts: BubblingEventContexts, node: Node ): Emitter | null {\n\tfor ( const [ context, emitter ] of eventContexts ) {\n\t\tif ( typeof context == 'function' && context( node ) ) {\n\t\t\treturn emitter;\n\t\t}\n\t}\n\n\treturn null;\n}\n\n// Returns bubbling contexts map for the source (emitter).\nfunction getBubblingContexts( source: { [ x: string ]: any; [ contextsSymbol ]?: BubblingEventContexts } ) {\n\tif ( !source[ contextsSymbol ] ) {\n\t\tsource[ contextsSymbol ] = new Map();\n\t}\n\n\treturn source[ contextsSymbol ];\n}\n\n// Returns the deeper parent element for the range.\nfunction getDeeperRangeParent( range: Range ): Node | null {\n\tif ( !range ) {\n\t\treturn null;\n\t}\n\n\tconst startParent = range.start.parent as Element;\n\tconst endParent = range.end.parent as Element;\n\n\tconst startPath = startParent.getPath();\n\tconst endPath = endParent.getPath();\n\n\treturn startPath.length > endPath.length ? startParent : endParent;\n}\n\n/**\n * Bubbling emitter for the view document.\n *\n * Bubbling emitter is triggering events in the context of specified {@link module:engine/view/element~Element view element} name,\n * predefined `'$text'`, `'$root'`, `'$document'` and `'$capture'` contexts, and context matchers provided as a function.\n *\n * Before bubbling starts, listeners for `'$capture'` context are triggered. Then the bubbling starts from the deeper selection\n * position (by firing event on the `'$text'` context) and propagates the view document tree up to the `'$root'` and finally\n * the listeners at `'$document'` context are fired (this is the default context).\n *\n * Examples:\n *\n *\t\t// Listeners registered in the context of the view element names:\n *\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n *\t\t\t// ...\n *\t\t}, { context: 'blockquote' } );\n *\n *\t\tthis.listenTo( viewDocument, 'enter', ( evt, data ) => {\n *\t\t\t// ...\n *\t\t}, { context: 'li' } );\n *\n *\t\t// Listeners registered in the context of the '$text' and '$root' nodes.\n *\t\tthis.listenTo( view.document, 'arrowKey', ( evt, data ) => {\n *\t\t\t// ...\n *\t\t}, { context: '$text', priority: 'high' } );\n *\n *\t\tthis.listenTo( view.document, 'arrowKey', ( evt, data ) => {\n *\t\t\t// ...\n *\t\t}, { context: '$root' } );\n *\n *\t\t// Listeners registered in the context of custom callback function.\n *\t\tthis.listenTo( view.document, 'arrowKey', ( evt, data ) => {\n *\t\t\t// ...\n *\t\t}, { context: isWidget } );\n *\n *\t\tthis.listenTo( view.document, 'arrowKey', ( evt, data ) => {\n *\t\t\t// ...\n *\t\t}, { context: isWidget, priority: 'high' } );\n *\n * Example flow for selection in text:\n *\n *\t\t<blockquote><p>Foo[]bar</p></blockquote>\n *\n * Fired events on contexts:\n * 1. `'$capture'`\n * 2. `'$text'`\n * 3. `'p'`\n * 4. `'blockquote'`\n * 5. `'$root'`\n * 6. `'$document'`\n *\n * Example flow for selection on element (i.e., Widget):\n *\n *\t\t<blockquote><p>Foo[<widget/>]bar</p></blockquote>\n *\n * Fired events on contexts:\n * 1. `'$capture'`\n * 2. *widget* (custom matcher)\n * 3. `'p'`\n * 4. `'blockquote'`\n * 5. `'$root'`\n * 6. `'$document'`\n *\n * There could be multiple listeners registered for the same context and at different priority levels:\n *\n *\t\t<p>Foo[]bar</p>\n *\n * 1. `'$capture'` at priorities:\n *    1. `'highest'`\n *    2. `'high'`\n *    3. `'normal'`\n *    4. `'low'`\n *    5. `'lowest'`\n * 2. `'$text'` at priorities:\n *    1. `'highest'`\n *    2. `'high'`\n *    3. `'normal'`\n *    4. `'low'`\n *    5. `'lowest'`\n * 3. `'p'` at priorities:\n *    1. `'highest'`\n *    2. `'high'`\n *    3. `'normal'`\n *    4. `'low'`\n *    5. `'lowest'`\n * 4. `'$root'` at priorities:\n *    1. `'highest'`\n *    2. `'high'`\n *    3. `'normal'`\n *    4. `'low'`\n *    5. `'lowest'`\n * 5. `'$document'` at priorities:\n *    1. `'highest'`\n *    2. `'high'`\n *    3. `'normal'`\n *    4. `'low'`\n *    5. `'lowest'`\n *\n * @interface BubblingEmitter\n * @extends module:utils/emittermixin~Emitter\n */\n\ntype BubblingEventContexts = Map<string | BubblingEventContextFunction, Emitter>;\n\nexport type BubblingEventContextFunction = ( node: Node ) => boolean;\n\nexport type BubblingCallbackOptions = CallbackOptions & {\n\tcontext?: string | string[] | BubblingEventContextFunction;\n};\n\nexport interface BubblingEmitter extends Emitter {\n\ton<TEvent extends BaseEvent>(\n\t\tevent: TEvent[ 'name' ],\n\t\tcallback: GetCallback<TEvent>,\n\t\toptions?: BubblingCallbackOptions\n\t): void;\n\n\tonce<TEvent extends BaseEvent>(\n\t\tevent: TEvent[ 'name' ],\n\t\tcallback: GetCallback<TEvent>,\n\t\toptions?: BubblingCallbackOptions\n\t): void;\n\n\tlistenTo<TEvent extends BaseEvent>(\n\t\temitter: Emitter,\n\t\tevent: TEvent[ 'name' ],\n\t\tcallback: GetCallback<TEvent>,\n\t\toptions?: BubblingCallbackOptions\n\t): void;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/bubblingeventinfo\n */\n\nimport EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\nimport type Document from '../document';\nimport type Node from '../node';\nimport type Range from '../range';\n\n/**\n * The event object passed to bubbling event callbacks. It is used to provide information about the event as well as a tool to\n * manipulate it.\n *\n * @extends module:utils/eventinfo~EventInfo\n */\nexport default class BubblingEventInfo<TName extends string = string, TReturn = unknown> extends EventInfo<TName, TReturn> {\n\tpublic readonly startRange: Range;\n\n\t/** @internal */\n\tprivate _eventPhase: 'none' | 'capturing' | 'atTarget' | 'bubbling';\n\n\t/** @internal */\n\tprivate _currentTarget: Document | Node | null;\n\n\t/**\n\t * @param {Object} source The emitter.\n\t * @param {String} name The event name.\n\t * @param {module:engine/view/range~Range} startRange The view range that the bubbling should start from.\n\t */\n\tconstructor( source: object, name: TName, startRange: Range ) {\n\t\tsuper( source, name );\n\n\t\t/**\n\t\t * The view range that the bubbling should start from.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/range~Range}\n\t\t */\n\t\tthis.startRange = startRange;\n\n\t\t/**\n\t\t * The current event phase.\n\t\t *\n\t\t * @protected\n\t\t * @member {'none'|'capturing'|'atTarget'|'bubbling'}\n\t\t */\n\t\tthis._eventPhase = 'none';\n\n\t\t/**\n\t\t * The current bubbling target.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/view/document~Document|module:engine/view/node~Node|null}\n\t\t */\n\t\tthis._currentTarget = null;\n\t}\n\n\t/**\n\t * The current event phase.\n\t *\n\t * @readonly\n\t * @member {'none'|'capturing'|'atTarget'|'bubbling'}\n\t */\n\tpublic get eventPhase(): 'none' | 'capturing' | 'atTarget' | 'bubbling' {\n\t\treturn this._eventPhase;\n\t}\n\n\t/**\n\t * The current bubbling target.\n\t *\n\t * @readonly\n\t * @member {module:engine/view/document~Document|module:engine/view/node~Node|null}\n\t */\n\tpublic get currentTarget(): Document | Node | null {\n\t\treturn this._currentTarget;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/compositionobserver\n */\n\nimport DomEventObserver from './domeventobserver';\nimport type View from '../view';\nimport type DomEventData from './domeventdata';\n\n/**\n * {@link module:engine/view/document~Document#event:compositionstart Compositionstart},\n * {@link module:engine/view/document~Document#event:compositionupdate compositionupdate} and\n * {@link module:engine/view/document~Document#event:compositionend compositionend} events observer.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class CompositionObserver extends DomEventObserver<'compositionstart' | 'compositionupdate' | 'compositionend'> {\n\tconstructor( view: View ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'compositionstart', 'compositionupdate', 'compositionend' ];\n\t\tconst document = this.document;\n\n\t\tdocument.on<CompositionObserverEvent>( 'compositionstart', () => {\n\t\t\tdocument.isComposing = true;\n\t\t} );\n\n\t\tdocument.on<CompositionObserverEvent>( 'compositionend', () => {\n\t\t\tdocument.isComposing = false;\n\t\t} );\n\t}\n\n\tpublic onDomEvent( domEvent: CompositionEvent ): void {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\nexport type CompositionObserverEvent = {\n\tname: 'compositionstart' | 'compositionupdate' | 'compositionend';\n\targs: [ data: DomEventData<CompositionEvent> ];\n};\n\n/**\n * Fired when composition starts inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionstart\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition is updated inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionupdate\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when composition ends inside one of the editables.\n *\n * Introduced by {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n *\n * Note that because {@link module:engine/view/observer/compositionobserver~CompositionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/compositionobserver~CompositionObserver\n * @event module:engine/view/document~Document#event:compositionend\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/domeventdata\n */\n\nimport { extend } from 'lodash-es';\n\nimport type Document from '../document';\nimport type Element from '../element';\nimport type View from '../view';\n\n/**\n * Information about a DOM event in context of the {@link module:engine/view/document~Document}.\n * It wraps the native event, which usually should not be used as the wrapper contains\n * additional data (like key code for keyboard events).\n */\nexport default class DomEventData<TEvent extends Event = Event> {\n\tpublic readonly view: View;\n\tpublic readonly document: Document;\n\tpublic readonly domEvent: TEvent;\n\tpublic readonly domTarget: HTMLElement;\n\n\t/**\n\t * @param {module:engine/view/view~View} view The instance of the view controller.\n\t * @param {Event} domEvent The DOM event.\n\t * @param {Object} [additionalData] Additional properties that the instance should contain.\n\t */\n\tconstructor( view: View, domEvent: TEvent, additionalData?: object ) {\n\t\t/**\n\t\t * Instance of the view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View} module:engine/view/observer/observer~Observer.DomEvent#view\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * The instance of the document.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document} module:engine/view/observer/observer~Observer.DomEvent#document\n\t\t */\n\t\tthis.document = view.document;\n\n\t\t/**\n\t\t * The DOM event.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Event} module:engine/view/observer/observer~Observer.DomEvent#domEvent\n\t\t */\n\t\tthis.domEvent = domEvent;\n\n\t\t/**\n\t\t * The DOM target.\n\t\t *\n\t\t * @readonly\n\t\t * @member {HTMLElement} module:engine/view/observer/observer~Observer.DomEvent#target\n\t\t */\n\t\tthis.domTarget = domEvent.target as any;\n\n\t\textend( this, additionalData );\n\t}\n\n\t/**\n\t * The tree view element representing the target.\n\t *\n\t * @readonly\n\t * @type module:engine/view/element~Element\n\t */\n\tpublic get target(): Element {\n\t\treturn this.view.domConverter.mapDomToView( this.domTarget ) as Element;\n\t}\n\n\t/**\n\t * Prevents the native's event default action.\n\t */\n\tpublic preventDefault(): void {\n\t\tthis.domEvent.preventDefault();\n\t}\n\n\t/**\n\t * Stops native event propagation.\n\t */\n\tpublic stopPropagation(): void {\n\t\tthis.domEvent.stopPropagation();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/domeventobserver\n */\n\nimport Observer from './observer';\nimport DomEventData from './domeventdata';\nimport type View from '../view';\n\nimport type EventInfo from '@ckeditor/ckeditor5-utils/src/eventinfo';\n\n/**\n * Base class for DOM event observers. This class handles\n * {@link module:engine/view/observer/observer~Observer#observe adding} listeners to DOM elements,\n * {@link module:engine/view/observer/observer~Observer#disable disabling} and\n * {@link module:engine/view/observer/observer~Observer#enable re-enabling} events.\n * Child class needs to define\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#domEventType DOM event type} and\n * {@link module:engine/view/observer/domeventobserver~DomEventObserver#onDomEvent callback}.\n *\n * For instance:\n *\n *\t\tclass ClickObserver extends DomEventObserver {\n *\t\t\t// It can also be defined as a normal property in the constructor.\n *\t\t\tget domEventType() {\n *\t\t\t\treturn 'click';\n *\t\t\t}\n *\n *\t\t\tonDomEvent( domEvent ) {\n *\t\t\t\tthis.fire( 'click', domEvent );\n *\t\t\t}\n *\t\t}\n *\n * @extends module:engine/view/observer/observer~Observer\n */\n\nexport default abstract class DomEventObserver<\n\tEventType extends keyof HTMLElementEventMap,\n\tAdditionalData extends object = object\n> extends Observer {\n\tpublic domEventType!: EventType | ( EventType )[];\n\n\tpublic useCapture: boolean;\n\n\t/**\n\t * Type of the DOM event the observer should listen to. Array of types can be defined\n\t * if the observer should listen to multiple DOM events.\n\t *\n\t * @readonly\n\t * @member {String|Array.<String>} #domEventType\n\t */\n\n\t/**\n\t * Callback which should be called when the DOM event occurred. Note that the callback will not be called if\n\t * observer {@link #isEnabled is not enabled}.\n\t *\n\t * @see #domEventType\n\t * @abstract\n\t * @method #onDomEvent\n\t */\n\n\tpublic abstract onDomEvent( event: HTMLElementEventMap[ EventType ] ): void;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( view: View ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * If set to `true` DOM events will be listened on the capturing phase.\n\t\t * Default value is `false`.\n\t\t *\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.useCapture = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override observe( domElement: HTMLElement ): void {\n\t\tconst types = typeof this.domEventType == 'string' ? [ this.domEventType ] : this.domEventType;\n\n\t\ttypes.forEach( type => {\n\t\t\tthis.listenTo( domElement, type, ( eventInfo, domEvent ) => {\n\t\t\t\tif ( this.isEnabled && !this.checkShouldIgnoreEventFromTarget( domEvent.target as any ) ) {\n\t\t\t\t\tthis.onDomEvent( domEvent );\n\t\t\t\t}\n\t\t\t}, { useCapture: this.useCapture } );\n\t\t} );\n\t}\n\n\t/**\n\t * Calls `Document#fire()` if observer {@link #isEnabled is enabled}.\n\t *\n\t * @see module:utils/emittermixin~EmitterMixin#fire\n\t * @param {String} eventType The event type (name).\n\t * @param {Event} domEvent The DOM event.\n\t * @param {Object} [additionalData] The additional data which should extend the\n\t * {@link module:engine/view/observer/domeventdata~DomEventData event data} object.\n\t */\n\tpublic override fire( eventType: string | EventInfo, domEvent: Event, additionalData?: AdditionalData ): void {\n\t\tif ( this.isEnabled ) {\n\t\t\tthis.document.fire( eventType, new DomEventData( this.view, domEvent, additionalData ) );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/fakeselectionobserver\n */\n\nimport Observer from './observer';\nimport { type ArrowObserverEvent } from './arrowkeysobserver';\nimport ViewSelection from '../selection';\nimport type View from '../view';\nimport type {\n\tSelectionObserverEvent,\n\tSelectionObserverEventData\n} from './selectionobserver';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\nimport { debounce, type DebouncedFunc } from 'lodash-es';\n\n/**\n * Fake selection observer class. If view selection is fake it is placed in dummy DOM container. This observer listens\n * on {@link module:engine/view/document~Document#event:keydown keydown} events and handles moving fake view selection to the correct place\n * if arrow keys are pressed.\n * Fires {@link module:engine/view/document~Document#event:selectionChange selectionChange event} simulating natural behaviour of\n * {@link module:engine/view/observer/selectionobserver~SelectionObserver SelectionObserver}.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class FakeSelectionObserver extends Observer {\n\tprivate readonly _fireSelectionChangeDoneDebounced: DebouncedFunc<( data: SelectionObserverEventData ) => void>;\n\n\t/**\n\t * Creates new FakeSelectionObserver instance.\n\t *\n\t * @param {module:engine/view/view~View} view\n\t */\n\tconstructor( view: View ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n\t\t *\n\t\t * @private\n\t\t * @param {Object} data Selection change data.\n\t\t * @method #_fireSelectionChangeDoneDebounced\n\t\t */\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => {\n\t\t\tthis.document.fire<SelectionObserverEvent>( 'selectionChangeDone', data );\n\t\t}, 200 );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override observe(): void {\n\t\tconst document = this.document;\n\n\t\tdocument.on<ArrowObserverEvent>( 'arrowKey', ( eventInfo, data ) => {\n\t\t\tconst selection = document.selection;\n\n\t\t\tif ( selection.isFake && this.isEnabled ) {\n\t\t\t\t// Prevents default key down handling - no selection change will occur.\n\t\t\t\tdata.preventDefault();\n\t\t\t}\n\t\t}, { context: '$capture' } );\n\n\t\tdocument.on<ArrowObserverEvent>( 'arrowKey', ( eventInfo, data ) => {\n\t\t\tconst selection = document.selection;\n\n\t\t\tif ( selection.isFake && this.isEnabled ) {\n\t\t\t\tthis._handleSelectionMove( data.keyCode );\n\t\t\t}\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t}\n\n\t/**\n\t * Handles collapsing view selection according to given key code. If left or up key is provided - new selection will be\n\t * collapsed to left. If right or down key is pressed - new selection will be collapsed to right.\n\t *\n\t * This method fires {@link module:engine/view/document~Document#event:selectionChange} and\n\t * {@link module:engine/view/document~Document#event:selectionChangeDone} events imitating behaviour of\n\t * {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n\t *\n\t * @private\n\t * @param {Number} keyCode\n\t * @fires module:engine/view/document~Document#event:selectionChange\n\t * @fires module:engine/view/document~Document#event:selectionChangeDone\n\t */\n\tprivate _handleSelectionMove( keyCode: number ): void {\n\t\tconst selection = this.document.selection;\n\t\tconst newSelection = new ViewSelection( selection.getRanges(), { backward: selection.isBackward, fake: false } );\n\n\t\t// Left or up arrow pressed - move selection to start.\n\t\tif ( keyCode == keyCodes.arrowleft || keyCode == keyCodes.arrowup ) {\n\t\t\tnewSelection.setTo( newSelection.getFirstPosition() );\n\t\t}\n\n\t\t// Right or down arrow pressed - move selection to end.\n\t\tif ( keyCode == keyCodes.arrowright || keyCode == keyCodes.arrowdown ) {\n\t\t\tnewSelection.setTo( newSelection.getLastPosition() );\n\t\t}\n\n\t\tconst data = {\n\t\t\toldSelection: selection,\n\t\t\tnewSelection,\n\t\t\tdomSelection: null\n\t\t};\n\n\t\t// Fire dummy selection change event.\n\t\tthis.document.fire<SelectionObserverEvent>( 'selectionChange', data );\n\n\t\t// Call` #_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\tthis._fireSelectionChangeDoneDebounced( data );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/focusobserver\n */\n\n/* globals setTimeout, clearTimeout */\n\nimport DomEventObserver from './domeventobserver';\nimport type DomEventData from './domeventdata';\nimport type View from '../view';\n\n/**\n * {@link module:engine/view/document~Document#event:focus Focus}\n * and {@link module:engine/view/document~Document#event:blur blur} events observer.\n * Focus observer handle also {@link module:engine/view/rooteditableelement~RootEditableElement#isFocused isFocused} property of the\n * {@link module:engine/view/rooteditableelement~RootEditableElement root elements}.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class FocusObserver extends DomEventObserver<'focus' | 'blur'> {\n\tprivate _renderTimeoutId!: ReturnType<typeof setTimeout>;\n\n\tconstructor( view: View ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'focus', 'blur' ];\n\t\tthis.useCapture = true;\n\t\tconst document = this.document;\n\n\t\tdocument.on<FocusObserverEvent>( 'focus', () => {\n\t\t\tdocument.isFocused = true;\n\n\t\t\t// Unfortunately native `selectionchange` event is fired asynchronously.\n\t\t\t// We need to wait until `SelectionObserver` handle the event and then render. Otherwise rendering will\n\t\t\t// overwrite new DOM selection with selection from the view.\n\t\t\t// See https://github.com/ckeditor/ckeditor5-engine/issues/795 for more details.\n\t\t\t// Long timeout is needed to solve #676 and https://github.com/ckeditor/ckeditor5-engine/issues/1157 issues.\n\t\t\t//\n\t\t\t// Using `view.change()` instead of `view.forceRender()` to prevent double rendering\n\t\t\t// in a situation where `selectionchange` already caused selection change.\n\t\t\tthis._renderTimeoutId = setTimeout( () => view.change( () => {} ), 50 );\n\t\t} );\n\n\t\tdocument.on<FocusObserverEvent>( 'blur', ( evt, data ) => {\n\t\t\tconst selectedEditable = document.selection.editableElement;\n\n\t\t\tif ( selectedEditable === null || selectedEditable === data.target ) {\n\t\t\t\tdocument.isFocused = false;\n\n\t\t\t\t// Re-render the document to update view elements\n\t\t\t\t// (changing document.isFocused already marked view as changed since last rendering).\n\t\t\t\tview.change( () => {} );\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Identifier of the timeout currently used by focus listener to delay rendering execution.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} #_renderTimeoutId\n\t\t */\n\t}\n\n\tpublic onDomEvent( domEvent: FocusEvent ): void {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tif ( this._renderTimeoutId ) {\n\t\t\tclearTimeout( this._renderTimeoutId );\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n}\n\nexport type FocusObserverEvent = {\n\tname: 'focus' | 'blur';\n\targs: [ data: DomEventData<FocusEvent> ];\n};\n\n/**\n * Fired when one of the editables gets focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:focus\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when one of the editables loses focus.\n *\n * Introduced by {@link module:engine/view/observer/focusobserver~FocusObserver}.\n *\n * Note that because {@link module:engine/view/observer/focusobserver~FocusObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/focusobserver~FocusObserver\n * @event module:engine/view/document~Document#event:blur\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/inputobserver\n */\n\nimport DomEventObserver from './domeventobserver';\nimport type DomEventData from './domeventdata';\nimport type View from '../view';\n\n/**\n * Observer for events connected with data input.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class InputObserver extends DomEventObserver<'beforeinput'> {\n\tconstructor( view: View ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'beforeinput' ];\n\t}\n\n\tpublic onDomEvent( domEvent: InputEvent ): void {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\nexport type InputObserverEvent = {\n\tname: 'beforeinput';\n\targs: [ data: DomEventData<InputEvent> ];\n};\n\n/**\n * Fired before browser inputs (or deletes) some data.\n *\n * This event is available only on browsers which support DOM `beforeinput` event.\n *\n * Introduced by {@link module:engine/view/observer/inputobserver~InputObserver}.\n *\n * Note that because {@link module:engine/view/observer/inputobserver~InputObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/inputobserver~InputObserver\n * @event module:engine/view/document~Document#event:beforeinput\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/keyobserver\n */\n\nimport DomEventObserver from './domeventobserver';\nimport type View from '../view';\nimport type DomEventData from './domeventdata';\nimport { getCode, type KeystrokeInfo } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Observer for events connected with pressing keyboard keys.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class KeyObserver extends DomEventObserver<'keydown' | 'keyup', KeystrokeInfo & { keystroke: number }> {\n\tconstructor( view: View ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'keydown', 'keyup' ];\n\t}\n\n\tpublic onDomEvent( domEvt: KeyboardEvent ): void {\n\t\tconst data = {\n\t\t\tkeyCode: domEvt.keyCode,\n\n\t\t\taltKey: domEvt.altKey,\n\t\t\tctrlKey: domEvt.ctrlKey,\n\t\t\tshiftKey: domEvt.shiftKey,\n\t\t\tmetaKey: domEvt.metaKey,\n\n\t\t\tget keystroke() {\n\t\t\t\treturn getCode( this );\n\t\t\t}\n\t\t};\n\n\t\tthis.fire( domEvt.type, domEvt, data );\n\t}\n}\n\nexport type KeyObserverEvent = {\n\tname: 'keydown' | 'keyup';\n\targs: [ data: DomEventData<KeyboardEvent> & KeystrokeInfo & { keystroke: number } ];\n};\n\n/**\n * Fired when a key has been pressed.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keydown\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * Fired when a key has been released.\n *\n * Introduced by {@link module:engine/view/observer/keyobserver~KeyObserver}.\n *\n * Note that because {@link module:engine/view/observer/keyobserver~KeyObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/keyobserver~KeyObserver\n * @event module:engine/view/document~Document#event:keyup\n * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEventData\n */\n\n/**\n * The value of both events - {@link module:engine/view/document~Document#event:keydown} and\n * {@link module:engine/view/document~Document#event:keyup}.\n *\n * @class module:engine/view/observer/keyobserver~KeyEventData\n * @extends module:engine/view/observer/domeventdata~DomEventData\n * @implements module:utils/keyboard~KeystrokeInfo\n */\n\n/**\n * Code of the whole keystroke. See {@link module:utils/keyboard~getCode}.\n *\n * @readonly\n * @member {Number} module:engine/view/observer/keyobserver~KeyEventData#keystroke\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/mutationobserver\n */\n\n/* globals window */\n\nimport Observer from './observer';\nimport ViewSelection from '../selection';\nimport { startsWithFiller, getDataWithoutFiller } from '../filler';\n\nimport { isEqualWith } from 'lodash-es';\n\nimport type DomConverter from '../domconverter';\nimport type Renderer from '../renderer';\nimport type View from '../view';\nimport type ViewElement from '../element';\nimport type ViewNode from '../node';\nimport type ViewText from '../text';\n\n/**\n * Mutation observer class observes changes in the DOM, fires {@link module:engine/view/document~Document#event:mutations} event, mark view\n * elements as changed and call {@link module:engine/view/renderer~Renderer#render}.\n * Because all mutated nodes are marked as \"to be rendered\" and the\n * {@link module:engine/view/renderer~Renderer#render} is called, all changes will be reverted, unless the mutation will be handled by the\n * {@link module:engine/view/document~Document#event:mutations} event listener. It means user will see only handled changes, and the editor\n * will block all changes which are not handled.\n *\n * Mutation Observer also take care of reducing number of mutations which are fired. It removes duplicates and\n * mutations on elements which do not have corresponding view elements. Also\n * {@link module:engine/view/observer/mutationobserver~MutatedText text mutation} is fired only if parent element do not change child list.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class MutationObserver extends Observer {\n\tpublic domConverter: DomConverter;\n\tpublic renderer: Renderer;\n\n\tprivate readonly _config: MutationObserverInit;\n\tprivate readonly _domElements: HTMLElement[];\n\tprivate _mutationObserver: InstanceType<typeof global.MutationObserver>;\n\n\tconstructor( view: View ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Native mutation observer config.\n\t\t *\n\t\t * @private\n\t\t * @member {Object}\n\t\t */\n\t\tthis._config = {\n\t\t\tchildList: true,\n\t\t\tcharacterData: true,\n\t\t\tcharacterDataOldValue: true,\n\t\t\tsubtree: true\n\t\t};\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#domConverter}.\n\t\t *\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = view.domConverter;\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#_renderer}.\n\t\t *\n\t\t * @member {module:engine/view/renderer~Renderer}\n\t\t */\n\t\tthis.renderer = ( view as any )._renderer;\n\n\t\t/**\n\t\t * Observed DOM elements.\n\t\t *\n\t\t * @private\n\t\t * @member {Array.<HTMLElement>}\n\t\t */\n\t\tthis._domElements = [];\n\n\t\t/**\n\t\t * Native mutation observer.\n\t\t *\n\t\t * @private\n\t\t * @member {MutationObserver}\n\t\t */\n\t\tthis._mutationObserver = new window.MutationObserver( this._onMutations.bind( this ) );\n\t}\n\n\t/**\n\t * Synchronously fires {@link module:engine/view/document~Document#event:mutations} event with all mutations in record queue.\n\t * At the same time empties the queue so mutations will not be fired twice.\n\t */\n\tpublic flush(): void {\n\t\tthis._onMutations( this._mutationObserver.takeRecords() );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic observe( domElement: HTMLElement ): void {\n\t\tthis._domElements.push( domElement );\n\n\t\tif ( this.isEnabled ) {\n\t\t\tthis._mutationObserver.observe( domElement, this._config );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override enable(): void {\n\t\tsuper.enable();\n\n\t\tfor ( const domElement of this._domElements ) {\n\t\t\tthis._mutationObserver.observe( domElement, this._config );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override disable(): void {\n\t\tsuper.disable();\n\n\t\tthis._mutationObserver.disconnect();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis._mutationObserver.disconnect();\n\t}\n\n\t/**\n\t * Handles mutations. Deduplicates, mark view elements to sync, fire event and call render.\n\t *\n\t * @private\n\t * @param {Array.<Object>} domMutations Array of native mutations.\n\t */\n\tprivate _onMutations( domMutations: MutationRecord[] ) {\n\t\t// As a result of this.flush() we can have an empty collection.\n\t\tif ( domMutations.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domConverter = this.domConverter;\n\n\t\t// Use map and set for deduplication.\n\t\tconst mutatedTexts = new Map<ViewText, MutatedText>();\n\t\tconst mutatedElements = new Set<ViewElement>();\n\n\t\t// Handle `childList` mutations first, so we will be able to check if the `characterData` mutation is in the\n\t\t// element with changed structure anyway.\n\t\tfor ( const mutation of domMutations ) {\n\t\t\tif ( mutation.type === 'childList' ) {\n\t\t\t\tconst element = domConverter.mapDomToView( mutation.target as HTMLElement ) as ViewElement;\n\n\t\t\t\t// Do not collect mutations from UIElements and RawElements.\n\t\t\t\tif ( element && ( element.is( 'uiElement' ) || element.is( 'rawElement' ) ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ( element && !this._isBogusBrMutation( mutation ) ) {\n\t\t\t\t\tmutatedElements.add( element );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Handle `characterData` mutations later, when we have the full list of nodes which changed structure.\n\t\tfor ( const mutation of domMutations ) {\n\t\t\tconst element = domConverter.mapDomToView( mutation.target as HTMLElement );\n\n\t\t\t// Do not collect mutations from UIElements and RawElements.\n\t\t\tif ( element && ( element.is( 'uiElement' ) || element.is( 'rawElement' ) ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( mutation.type === 'characterData' ) {\n\t\t\t\tconst text = domConverter.findCorrespondingViewText( mutation.target as Text ) as ViewText;\n\n\t\t\t\tif ( text && !mutatedElements.has( text.parent as ViewElement ) ) {\n\t\t\t\t\t// Use text as a key, for deduplication. If there will be another mutation on the same text element\n\t\t\t\t\t// we will have only one in the map.\n\t\t\t\t\tmutatedTexts.set( text, {\n\t\t\t\t\t\ttype: 'text',\n\t\t\t\t\t\toldText: text.data,\n\t\t\t\t\t\tnewText: getDataWithoutFiller( mutation.target as Text ),\n\t\t\t\t\t\tnode: text\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\t// When we added first letter to the text node which had only inline filler, for the DOM it is mutation\n\t\t\t\t// on text, but for the view, where filler text node did not existed, new text node was created, so we\n\t\t\t\t// need to fire 'children' mutation instead of 'text'.\n\t\t\t\telse if ( !text && startsWithFiller( mutation.target ) ) {\n\t\t\t\t\tmutatedElements.add( domConverter.mapDomToView( mutation.target.parentNode as HTMLElement ) as ViewElement );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Now we build the list of mutations to fire and mark elements. We did not do it earlier to avoid marking the\n\t\t// same node multiple times in case of duplication.\n\n\t\t// List of mutations we will fire.\n\t\tconst viewMutations: ( MutatedText | MutatedChildren )[] = [];\n\n\t\tfor ( const mutatedText of mutatedTexts.values() ) {\n\t\t\tthis.renderer.markToSync( 'text', mutatedText.node );\n\t\t\tviewMutations.push( mutatedText );\n\t\t}\n\n\t\tfor ( const viewElement of mutatedElements ) {\n\t\t\tconst domElement = domConverter.mapViewToDom( viewElement ) as HTMLElement;\n\t\t\tconst viewChildren = Array.from( viewElement.getChildren() );\n\t\t\tconst newViewChildren = Array.from( domConverter.domChildrenToView( domElement, { withChildren: false } ) );\n\n\t\t\t// It may happen that as a result of many changes (sth was inserted and then removed),\n\t\t\t// both elements haven't really changed. #1031\n\t\t\tif ( !isEqualWith( viewChildren, newViewChildren, sameNodes ) ) {\n\t\t\t\tthis.renderer.markToSync( 'children', viewElement );\n\n\t\t\t\tviewMutations.push( {\n\t\t\t\t\ttype: 'children',\n\t\t\t\t\toldChildren: viewChildren,\n\t\t\t\t\tnewChildren: newViewChildren,\n\t\t\t\t\tnode: viewElement\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\t// Retrieve `domSelection` using `ownerDocument` of one of mutated nodes.\n\t\t// There should not be simultaneous mutation in multiple documents, so it's fine.\n\t\tconst domSelection = domMutations[ 0 ].target.ownerDocument!.getSelection();\n\n\t\tlet viewSelection = null;\n\n\t\tif ( domSelection && domSelection.anchorNode ) {\n\t\t\t// If `domSelection` is inside a dom node that is already bound to a view node from view tree, get\n\t\t\t// corresponding selection in the view and pass it together with `viewMutations`. The `viewSelection` may\n\t\t\t// be used by features handling mutations.\n\t\t\t// Only one range is supported.\n\n\t\t\tconst viewSelectionAnchor = domConverter.domPositionToView( domSelection.anchorNode, domSelection.anchorOffset );\n\t\t\tconst viewSelectionFocus = domConverter.domPositionToView( domSelection.focusNode!, domSelection.focusOffset );\n\n\t\t\t// Anchor and focus has to be properly mapped to view.\n\t\t\tif ( viewSelectionAnchor && viewSelectionFocus ) {\n\t\t\t\tviewSelection = new ViewSelection( viewSelectionAnchor );\n\t\t\t\tviewSelection.setFocus( viewSelectionFocus );\n\t\t\t}\n\t\t}\n\n\t\t// In case only non-relevant mutations were recorded it skips the event and force render (#5600).\n\t\tif ( viewMutations.length ) {\n\t\t\tthis.document.fire<MutationObserverEvent>( 'mutations', viewMutations, viewSelection );\n\n\t\t\t// If nothing changes on `mutations` event, at this point we have \"dirty DOM\" (changed) and de-synched\n\t\t\t// view (which has not been changed). In order to \"reset DOM\" we render the view again.\n\t\t\tthis.view.forceRender();\n\t\t}\n\n\t\tfunction sameNodes( child1: ViewNode, child2: ViewNode ) {\n\t\t\t// First level of comparison (array of children vs array of children) – use the Lodash's default behavior.\n\t\t\tif ( Array.isArray( child1 ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Elements.\n\t\t\tif ( child1 === child2 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// Texts.\n\t\t\telse if ( child1.is( '$text' ) && child2.is( '$text' ) ) {\n\t\t\t\treturn child1.data === child2.data;\n\t\t\t}\n\n\t\t\t// Not matching types.\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Checks if mutation was generated by the browser inserting bogus br on the end of the block element.\n\t * Such mutations are generated while pressing space or performing native spellchecker correction\n\t * on the end of the block element in Firefox browser.\n\t *\n\t * @private\n\t * @param {Object} mutation Native mutation object.\n\t * @returns {Boolean}\n\t */\n\tprivate _isBogusBrMutation( mutation: MutationRecord ) {\n\t\tlet addedNode = null;\n\n\t\t// Check if mutation added only one node on the end of its parent.\n\t\tif ( mutation.nextSibling === null && mutation.removedNodes.length === 0 && mutation.addedNodes.length == 1 ) {\n\t\t\taddedNode = this.domConverter.domToView( mutation.addedNodes[ 0 ], {\n\t\t\t\twithChildren: false\n\t\t\t} );\n\t\t}\n\n\t\treturn addedNode && addedNode.is( 'element', 'br' );\n\t}\n}\n\nexport type MutationObserverEvent = {\n\tname: 'mutations';\n\targs: [ viewMutations: ( MutatedChildren | MutatedText )[], viewSelection: ViewSelection | null ];\n};\n\n/**\n * Fired when mutation occurred. If tree view is not changed on this event, DOM will be reverted to the state before\n * mutation, so all changes which should be applied, should be handled on this event.\n *\n * Introduced by {@link module:engine/view/observer/mutationobserver~MutationObserver}.\n *\n * Note that because {@link module:engine/view/observer/mutationobserver~MutationObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @event module:engine/view/document~Document#event:mutations\n * @param {Array.<module:engine/view/observer/mutationobserver~MutatedText|module:engine/view/observer/mutationobserver~MutatedChildren>}\n * viewMutations Array of mutations.\n * For mutated texts it will be {@link module:engine/view/observer/mutationobserver~MutatedText} and for mutated elements it will be\n * {@link module:engine/view/observer/mutationobserver~MutatedChildren}. You can recognize the type based on the `type` property.\n * @param {module:engine/view/selection~Selection|null} viewSelection View selection that is a result of converting DOM selection to view.\n * Keep in\n * mind that the DOM selection is already \"updated\", meaning that it already acknowledges changes done in mutation.\n */\n\n/**\n * Mutation item for text.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedText\n *\n * @property {String} type For text mutations it is always 'text'.\n * @property {module:engine/view/text~Text} node Mutated text node.\n * @property {String} oldText Old text.\n * @property {String} newText New text.\n */\nexport interface MutatedText {\n\ttype: 'text';\n\tnode: ViewText;\n\toldText: string;\n\tnewText: string;\n}\n\n/**\n * Mutation item for child nodes.\n *\n * @see module:engine/view/document~Document#event:mutations\n * @see module:engine/view/observer/mutationobserver~MutatedText\n *\n * @typedef {Object} module:engine/view/observer/mutationobserver~MutatedChildren\n *\n * @property {String} type For child nodes mutations it is always 'children'.\n * @property {module:engine/view/element~Element} node Parent of the mutated children.\n * @property {Array.<module:engine/view/node~Node>} oldChildren Old child nodes.\n * @property {Array.<module:engine/view/node~Node>} newChildren New child nodes.\n */\nexport interface MutatedChildren {\n\ttype: 'children';\n\tnode: ViewElement;\n\toldChildren: ViewNode[];\n\tnewChildren: ViewNode[];\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/observer\n */\n\nimport { Emitter as DomEmitter } from '@ckeditor/ckeditor5-utils/src/dom/emittermixin';\n\nimport type Document from '../document';\nimport type View from '../view';\n\n/**\n * Abstract base observer class. Observers are classes which listen to DOM events, do the preliminary\n * processing and fire events on the {@link module:engine/view/document~Document} objects.\n * Observers can also add features to the view, for instance by updating its status or marking elements\n * which need a refresh on DOM events.\n *\n * @abstract\n */\nexport default abstract class Observer extends DomEmitter {\n\tpublic readonly view: View;\n\tpublic readonly document: Document;\n\tpublic readonly isEnabled: false;\n\n\t/**\n\t * Creates an instance of the observer.\n\t *\n\t * @param {module:engine/view/view~View} view\n\t */\n\tconstructor( view: View ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * An instance of the view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/view~View}\n\t\t */\n\t\tthis.view = view;\n\n\t\t/**\n\t\t * A reference to the {@link module:engine/view/document~Document} object.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = view.document;\n\n\t\t/**\n\t\t * The state of the observer. If it is disabled, no events will be fired.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.isEnabled = false;\n\t}\n\n\t/**\n\t * Enables the observer. This method is called when the observer is registered to the\n\t * {@link module:engine/view/view~View} and after {@link module:engine/view/view~View#forceRender rendering}\n\t * (all observers are {@link #disable disabled} before rendering).\n\t *\n\t * A typical use case for disabling observers is that mutation observers need to be disabled for the rendering.\n\t * However, a child class may not need to be disabled, so it can implement an empty method.\n\t *\n\t * @see module:engine/view/observer/observer~Observer#disable\n\t */\n\tpublic enable(): void {\n\t\t( this as any ).isEnabled = true;\n\t}\n\n\t/**\n\t * Disables the observer. This method is called before\n\t * {@link module:engine/view/view~View#forceRender rendering} to prevent firing events during rendering.\n\t *\n\t * @see module:engine/view/observer/observer~Observer#enable\n\t */\n\tpublic disable(): void {\n\t\t( this as any ).isEnabled = false;\n\t}\n\n\t/**\n\t * Disables and destroys the observer, among others removes event listeners created by the observer.\n\t */\n\tpublic destroy(): void {\n\t\tthis.disable();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Checks whether a given DOM event should be ignored (should not be turned into a synthetic view document event).\n\t *\n\t * Currently, an event will be ignored only if its target or any of its ancestors has the `data-cke-ignore-events` attribute.\n\t * This attribute can be used inside the structures generated by\n\t * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `DowncastWriter#createUIElement()`} to ignore events\n\t * fired within a UI that should be excluded from CKEditor 5's realms.\n\t *\n\t * @param {Node} domTarget The DOM event target to check (usually an element, sometimes a text node and\n\t * potentially sometimes a document, too).\n\t * @returns {Boolean} Whether this event should be ignored by the observer.\n\t */\n\tpublic checkShouldIgnoreEventFromTarget( domTarget: Node ): boolean {\n\t\tif ( domTarget && domTarget.nodeType === 3 ) {\n\t\t\tdomTarget = domTarget.parentNode as any;\n\t\t}\n\n\t\tif ( !domTarget || domTarget.nodeType !== 1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ( domTarget as any ).matches( '[data-cke-ignore-events], [data-cke-ignore-events] *' );\n\t}\n\n\t/**\n\t * Starts observing the given root element.\n\t *\n\t * @method #observe\n\t * @param {HTMLElement} domElement\n\t * @param {String} name The name of the root element.\n\t */\n\n\tpublic abstract observe( domElement: HTMLElement, name: string ): void;\n}\n\n/**\n * TODO\n * The for all all classes that inherit from Observer but excludes the abstract Observer itself.\n */\nexport type ObserverConstructor = new ( view: View ) => Observer;\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/selectionobserver\n */\n\n/* global setInterval, clearInterval */\n\nimport Observer from './observer';\nimport MutationObserver from './mutationobserver';\nimport { debounce, type DebouncedFunc } from 'lodash-es';\n\nimport type View from '../view';\nimport type DocumentSelection from '../documentselection';\nimport type DomConverter from '../domconverter';\nimport type Selection from '../selection';\n\ntype DomSelection = globalThis.Selection;\n\n/**\n * Selection observer class observes selection changes in the document. If a selection changes on the document this\n * observer checks if there are any mutations and if the DOM selection is different from the\n * {@link module:engine/view/document~Document#selection view selection}. The selection observer fires\n * {@link module:engine/view/document~Document#event:selectionChange} event only if a selection change was the only change in the document\n * and the DOM selection is different then the view selection.\n *\n * This observer also manages the {@link module:engine/view/document~Document#isSelecting} property of the view document.\n *\n * Note that this observer is attached by the {@link module:engine/view/view~View} and is available by default.\n *\n * @see module:engine/view/observer/mutationobserver~MutationObserver\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class SelectionObserver extends Observer {\n\tpublic readonly mutationObserver: MutationObserver;\n\tpublic readonly selection: DocumentSelection;\n\tpublic readonly domConverter: DomConverter;\n\n\tprivate readonly _documents: WeakSet<Document>;\n\tprivate readonly _fireSelectionChangeDoneDebounced: DebouncedFunc<( data: SelectionObserverEventData ) => void>;\n\tprivate readonly _clearInfiniteLoopInterval: ReturnType<typeof setInterval>;\n\tprivate readonly _documentIsSelectingInactivityTimeoutDebounced: DebouncedFunc<() => void>;\n\tprivate _loopbackCounter: number;\n\n\tconstructor( view: View ) {\n\t\tsuper( view );\n\n\t\t/**\n\t\t * Instance of the mutation observer. Selection observer calls\n\t\t * {@link module:engine/view/observer/mutationobserver~MutationObserver#flush} to ensure that the mutations will be handled\n\t\t * before the {@link module:engine/view/document~Document#event:selectionChange} event is fired.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/observer/mutationobserver~MutationObserver}\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#mutationObserver\n\t\t */\n\t\tthis.mutationObserver = view.getObserver( MutationObserver )!;\n\n\t\t/**\n\t\t * Reference to the view {@link module:engine/view/documentselection~DocumentSelection} object used to compare\n\t\t * new selection with it.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection}\n\t\t * module:engine/view/observer/selectionobserver~SelectionObserver#selection\n\t\t */\n\t\tthis.selection = this.document.selection;\n\n\t\t/* eslint-disable max-len */\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/view~View#domConverter}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/domconverter~DomConverter} module:engine/view/observer/selectionobserver~SelectionObserver#domConverter\n\t\t */\n\t\t/* eslint-enable max-len */\n\t\tthis.domConverter = view.domConverter;\n\n\t\t/**\n\t\t * A set of documents which have added `selectionchange` listener to avoid adding a listener twice to the same\n\t\t * document.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakSet.<Document>} module:engine/view/observer/selectionobserver~SelectionObserver#_documents\n\t\t */\n\t\tthis._documents = new WeakSet();\n\n\t\t/**\n\t\t * Fires debounced event `selectionChangeDone`. It uses `lodash#debounce` method to delay function call.\n\t\t *\n\t\t * @private\n\t\t * @param {Object} data Selection change data.\n\t\t * @method #_fireSelectionChangeDoneDebounced\n\t\t */\n\t\tthis._fireSelectionChangeDoneDebounced = debounce( data => {\n\t\t\tthis.document.fire<SelectionObserverEvent>( 'selectionChangeDone', data );\n\t\t}, 200 );\n\n\t\t/**\n\t\t * When called, starts clearing the {@link #_loopbackCounter} counter in time intervals. When the number of selection\n\t\t * changes exceeds a certain limit within the interval of time, the observer will not fire `selectionChange` but warn about\n\t\t * possible infinite selection loop.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} #_clearInfiniteLoopInterval\n\t\t */\n\t\tthis._clearInfiniteLoopInterval = setInterval( () => this._clearInfiniteLoop(), 1000 );\n\n\t\t/**\n\t\t * Unlocks the `isSelecting` state of the view document in case the selection observer did not record this fact\n\t\t * correctly (for whatever reason). It is a safeguard (paranoid check), that returns document to the normal state\n\t\t * after a certain period of time (debounced, postponed by each selectionchange event).\n\t\t *\n\t\t * @private\n\t\t * @method #_documentIsSelectingInactivityTimeoutDebounced\n\t\t */\n\t\tthis._documentIsSelectingInactivityTimeoutDebounced = debounce( () => ( this.document.isSelecting = false ), 5000 );\n\n\t\t/**\n\t\t * Private property to check if the code does not enter infinite loop.\n\t\t *\n\t\t * @private\n\t\t * @member {Number} module:engine/view/observer/selectionobserver~SelectionObserver#_loopbackCounter\n\t\t */\n\t\tthis._loopbackCounter = 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override observe( domElement: HTMLElement ): void {\n\t\tconst domDocument = domElement.ownerDocument;\n\n\t\tconst startDocumentIsSelecting = () => {\n\t\t\tthis.document.isSelecting = true;\n\n\t\t\t// Let's activate the safety timeout each time the document enters the \"is selecting\" state.\n\t\t\tthis._documentIsSelectingInactivityTimeoutDebounced();\n\t\t};\n\n\t\tconst endDocumentIsSelecting = () => {\n\t\t\tif ( !this.document.isSelecting ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Make sure that model selection is up-to-date at the end of selecting process.\n\t\t\t// Sometimes `selectionchange` events could arrive after the `mouseup` event and that selection could be already outdated.\n\t\t\tthis._handleSelectionChange( null, domDocument );\n\n\t\t\tthis.document.isSelecting = false;\n\n\t\t\t// The safety timeout can be canceled when the document leaves the \"is selecting\" state.\n\t\t\tthis._documentIsSelectingInactivityTimeoutDebounced.cancel();\n\t\t};\n\n\t\t// The document has the \"is selecting\" state while the user keeps making (extending) the selection\n\t\t// (e.g. by holding the mouse button and moving the cursor). The state resets when they either released\n\t\t// the mouse button or interrupted the process by pressing or releasing any key.\n\t\tthis.listenTo( domElement, 'selectstart', startDocumentIsSelecting, { priority: 'highest' } );\n\n\t\tthis.listenTo( domElement, 'keydown', endDocumentIsSelecting, { priority: 'highest', useCapture: true } );\n\t\tthis.listenTo( domElement, 'keyup', endDocumentIsSelecting, { priority: 'highest', useCapture: true } );\n\n\t\t// Add document-wide listeners only once. This method could be called for multiple editing roots.\n\t\tif ( this._documents.has( domDocument ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// This listener is using capture mode to make sure that selection is upcasted before any other\n\t\t// handler would like to check it and update (for example table multi cell selection).\n\t\tthis.listenTo( domDocument, 'mouseup', endDocumentIsSelecting, { priority: 'highest', useCapture: true } );\n\n\t\tthis.listenTo( domDocument, 'selectionchange', ( evt, domEvent ) => {\n\t\t\tthis._handleSelectionChange( domEvent, domDocument );\n\n\t\t\t// Defer the safety timeout when the selection changes (e.g. the user keeps extending the selection\n\t\t\t// using their mouse).\n\t\t\tthis._documentIsSelectingInactivityTimeoutDebounced();\n\t\t} );\n\n\t\tthis._documents.add( domDocument );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tclearInterval( this._clearInfiniteLoopInterval );\n\t\tthis._fireSelectionChangeDoneDebounced.cancel();\n\t\tthis._documentIsSelectingInactivityTimeoutDebounced.cancel();\n\t}\n\n\t/**\n\t * Selection change listener. {@link module:engine/view/observer/mutationobserver~MutationObserver#flush Flush} mutations, check if\n\t * a selection changes and fires {@link module:engine/view/document~Document#event:selectionChange} event on every change\n\t * and {@link module:engine/view/document~Document#event:selectionChangeDone} when a selection stop changing.\n\t *\n\t * @private\n\t * @param {Event} domEvent DOM event.\n\t * @param {Document} domDocument DOM document.\n\t */\n\tprivate _handleSelectionChange( domEvent: unknown, domDocument: Document ) {\n\t\tif ( !this.isEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domSelection = domDocument.defaultView!.getSelection();\n\n\t\tif ( this.checkShouldIgnoreEventFromTarget( domSelection!.anchorNode! ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure the mutation event will be before selection event on all browsers.\n\t\tthis.mutationObserver.flush();\n\n\t\t// If there were mutations then the view will be re-rendered by the mutation observer and the selection\n\t\t// will be updated, so the selections will equal and the event will not be fired, as expected.\n\t\tconst newViewSelection = this.domConverter.domSelectionToView( domSelection! );\n\n\t\t// Do not convert selection change if the new view selection has no ranges in it.\n\t\t//\n\t\t// It means that the DOM selection is in some way incorrect. Ranges that were in the DOM selection could not be\n\t\t// converted to the view. This happens when the DOM selection was moved outside of the editable element.\n\t\tif ( newViewSelection.rangeCount == 0 ) {\n\t\t\tthis.view.hasDomSelection = false;\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.view.hasDomSelection = true;\n\n\t\tif ( this.selection.isEqual( newViewSelection ) && this.domConverter.isDomSelectionCorrect( domSelection! ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ensure we are not in the infinite loop (#400).\n\t\t// This counter is reset each second. 60 selection changes in 1 second is enough high number\n\t\t// to be very difficult (impossible) to achieve using just keyboard keys (during normal editor use).\n\t\tif ( ++this._loopbackCounter > 60 ) {\n\t\t\t// Selection change observer detected an infinite rendering loop.\n\t\t\t// Most probably you try to put the selection in the position which is not allowed\n\t\t\t// by the browser and browser fixes it automatically what causes `selectionchange` event on\n\t\t\t// which a loopback through a model tries to re-render the wrong selection and again.\n\t\t\t//\n\t\t\t// @if CK_DEBUG // console.warn( 'Selection change observer detected an infinite rendering loop.' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.selection.isSimilar( newViewSelection ) ) {\n\t\t\t// If selection was equal and we are at this point of algorithm, it means that it was incorrect.\n\t\t\t// Just re-render it, no need to fire any events, etc.\n\t\t\tthis.view.forceRender();\n\t\t} else {\n\t\t\tconst data: SelectionObserverEventData = {\n\t\t\t\toldSelection: this.selection,\n\t\t\t\tnewSelection: newViewSelection,\n\t\t\t\tdomSelection: domSelection!\n\t\t\t};\n\n\t\t\t// Prepare data for new selection and fire appropriate events.\n\t\t\tthis.document.fire<SelectionObserverEvent>( 'selectionChange', data );\n\n\t\t\t// Call `#_fireSelectionChangeDoneDebounced` every time when `selectionChange` event is fired.\n\t\t\t// This function is debounced what means that `selectionChangeDone` event will be fired only when\n\t\t\t// defined int the function time will elapse since the last time the function was called.\n\t\t\t// So `selectionChangeDone` will be fired when selection will stop changing.\n\t\t\tthis._fireSelectionChangeDoneDebounced( data );\n\t\t}\n\t}\n\n\t/**\n\t * Clears `SelectionObserver` internal properties connected with preventing infinite loop.\n\t *\n\t * @protected\n\t */\n\tprivate _clearInfiniteLoop(): void {\n\t\tthis._loopbackCounter = 0;\n\t}\n}\n\nexport type SelectionObserverEventData = {\n\toldSelection: DocumentSelection;\n\tnewSelection: Selection;\n\tdomSelection: DomSelection | null;\n};\n\n/**\n * Fired when a selection has changed. This event is fired only when the selection change was the only change that happened\n * in the document, and the old selection is different then the new selection.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChange\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\nexport type SelectionObserverEvent = {\n\tname: 'selectionChange' | 'selectionChangeDone';\n\targs: [ SelectionObserverEventData ];\n};\n\n/**\n * Fired when selection stops changing.\n *\n * Introduced by {@link module:engine/view/observer/selectionobserver~SelectionObserver}.\n *\n * Note that because {@link module:engine/view/observer/selectionobserver~SelectionObserver} is attached by the\n * {@link module:engine/view/view~View} this event is available by default.\n *\n * @see module:engine/view/observer/selectionobserver~SelectionObserver\n * @event module:engine/view/document~Document#event:selectionChangeDone\n * @param {Object} data\n * @param {module:engine/view/documentselection~DocumentSelection} data.oldSelection Old View selection which is\n * {@link module:engine/view/document~Document#selection}.\n * @param {module:engine/view/selection~Selection} data.newSelection New View selection which is converted DOM selection.\n * @param {Selection} data.domSelection Native DOM selection.\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/observer/tabobserver\n */\n\nimport Observer from './observer';\nimport BubblingEventInfo from './bubblingeventinfo';\nimport { type KeyObserverEvent } from './keyobserver';\nimport type View from '../view';\n\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\n/**\n * Tab observer introduces the {@link module:engine/view/document~Document#event:tab `Document#tab`} event.\n *\n * Note that because {@link module:engine/view/observer/tabobserver~TabObserver} is attached by the\n * {@link module:engine/view/view~View}, this event is available by default.\n *\n * @extends module:engine/view/observer/observer~Observer\n */\nexport default class TabObserver extends Observer {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( view: View ) {\n\t\tsuper( view );\n\n\t\tconst doc = this.document;\n\n\t\tdoc.on<KeyObserverEvent>( 'keydown', ( evt, data ) => {\n\t\t\tif (\n\t\t\t\t!this.isEnabled ||\n\t\t\t\tdata.keyCode != keyCodes.tab ||\n\t\t\t\tdata.ctrlKey\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst event = new BubblingEventInfo( doc, 'tab', doc.selection.getFirstRange()! );\n\n\t\t\tdoc.fire<TabObserverEvent>( event, data );\n\n\t\t\tif ( event.stop.called ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override observe(): void {}\n}\n\nexport type TabObserverEvent = {\n\tname: 'tab';\n\targs: KeyObserverEvent[ 'args' ];\n\teventInfo: BubblingEventInfo<'tab'>;\n};\n\n/**\n * Event fired when the user presses a tab key.\n *\n * Introduced by {@link module:engine/view/observer/tabobserver~TabObserver}.\n *\n * Note that because {@link module:engine/view/observer/tabobserver~TabObserver} is attached by the\n * {@link module:engine/view/view~View}, this event is available by default.\n *\n * @event module:engine/view/document~Document#event:tab\n *\n * @param {module:engine/view/observer/domeventdata~DomEventData} data\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/position\n */\n\nimport TypeCheckable from './typecheckable';\n\nimport compareArrays from '@ckeditor/ckeditor5-utils/src/comparearrays';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport EditableElement from './editableelement';\n\n// To check if component is loaded more than once.\nimport '@ckeditor/ckeditor5-utils/src/version';\n\nimport type DocumentFragment from './documentfragment';\nimport type Element from './element';\nimport type Item from './item';\nimport type Node from './node';\nimport { default as TreeWalker, type TreeWalkerValue, type TreeWalkerOptions } from './treewalker';\n\n/**\n * Position in the view tree. Position is represented by its parent node and an offset in this parent.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@link module:engine/view/view~View}\n * * {@link module:engine/view/downcastwriter~DowncastWriter}\n * * {@link module:engine/view/upcastwriter~UpcastWriter}\n */\nexport default class Position extends TypeCheckable {\n\tpublic parent: Node | DocumentFragment;\n\tpublic offset: number;\n\n\t/**\n\t * Creates a position.\n\t *\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} parent Position parent.\n\t * @param {Number} offset Position offset.\n\t */\n\tconstructor( parent: Node | DocumentFragment, offset: number ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Position parent.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t\t * module:engine/view/position~Position#parent\n\t\t */\n\t\tthis.parent = parent;\n\n\t\t/**\n\t\t * Position offset.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} module:engine/view/position~Position#offset\n\t\t */\n\t\tthis.offset = offset;\n\t}\n\n\t/**\n\t * Node directly after the position. Equals `null` when there is no node after position or position is located\n\t * inside text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tpublic get nodeAfter(): Node | null {\n\t\tif ( this.parent.is( '$text' ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn ( this.parent as Element ).getChild( this.offset ) || null;\n\t}\n\n\t/**\n\t * Node directly before the position. Equals `null` when there is no node before position or position is located\n\t * inside text node.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|null}\n\t */\n\tpublic get nodeBefore(): Node | null {\n\t\tif ( this.parent.is( '$text' ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn ( this.parent as Element ).getChild( this.offset - 1 ) || null;\n\t}\n\n\t/**\n\t * Is `true` if position is at the beginning of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tpublic get isAtStart(): boolean {\n\t\treturn this.offset === 0;\n\t}\n\n\t/**\n\t * Is `true` if position is at the end of its {@link module:engine/view/position~Position#parent parent}, `false` otherwise.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tpublic get isAtEnd(): boolean {\n\t\tconst endOffset = this.parent.is( '$text' ) ? this.parent.data.length : ( this.parent as any ).childCount;\n\n\t\treturn this.offset === endOffset;\n\t}\n\n\t/**\n\t * Position's root, that is the root of the position's parent element.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tpublic get root(): Node | DocumentFragment {\n\t\treturn this.parent.root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this position, or `null` if\n\t * position is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tpublic get editableElement(): EditableElement | null {\n\t\tlet editable = this.parent;\n\n\t\twhile ( !( editable instanceof EditableElement ) ) {\n\t\t\tif ( editable.parent ) {\n\t\t\t\teditable = editable.parent;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn editable;\n\t}\n\n\t/**\n\t * Returns a new instance of Position with offset incremented by `shift` value.\n\t *\n\t * @param {Number} shift How position offset should get changed. Accepts negative values.\n\t * @returns {module:engine/view/position~Position} Shifted position.\n\t */\n\tpublic getShiftedBy( shift: number ): Position {\n\t\tconst shifted = Position._createAt( this );\n\n\t\tconst offset = shifted.offset + shift;\n\t\tshifted.offset = offset < 0 ? 0 : offset;\n\n\t\treturn shifted;\n\t}\n\n\t/**\n\t * Gets the farthest position which matches the callback using\n\t * {@link module:engine/view/treewalker~TreeWalker TreeWalker}.\n\t *\n\t * For example:\n\t *\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n\t * \t\tgetLastMatchingPosition( value => value.type == 'text', { direction: 'backward' } ); // <p>foo[]</p> -> <p>{}foo</p>\n\t * \t\tgetLastMatchingPosition( value => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~type TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t *\n\t * @returns {module:engine/view/position~Position} The position after the last item which matches the `skip` callback test.\n\t */\n\tpublic getLastMatchingPosition( skip: ( value: TreeWalkerValue ) => boolean, options: TreeWalkerOptions = {} ): Position {\n\t\toptions.startPosition = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\t\ttreeWalker.skip( skip );\n\n\t\treturn treeWalker.position;\n\t}\n\n\t/**\n\t * Returns ancestors array of this position, that is this position's parent and it's ancestors.\n\t *\n\t * @returns {Array} Array with ancestors.\n\t */\n\tpublic getAncestors(): ( Node | DocumentFragment )[] {\n\t\tif ( this.parent.is( 'documentFragment' ) ) {\n\t\t\treturn [ this.parent ];\n\t\t} else {\n\t\t\treturn this.parent.getAncestors( { includeSelf: true } );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n\t * which is a common ancestor of both positions.\n\t *\n\t * @param {module:engine/view/position~Position} position\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tpublic getCommonAncestor( position: Position ): Node | DocumentFragment | null {\n\t\tconst ancestorsA = this.getAncestors();\n\t\tconst ancestorsB = position.getAncestors();\n\n\t\tlet i = 0;\n\n\t\twhile ( ancestorsA[ i ] == ancestorsB[ i ] && ancestorsA[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i === 0 ? null : ancestorsA[ i - 1 ];\n\t}\n\n\t/**\n\t * Checks whether this position equals given position.\n\t *\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} True if positions are same.\n\t */\n\tpublic isEqual( otherPosition: Position ): boolean {\n\t\treturn ( this.parent == otherPosition.parent && this.offset == otherPosition.offset );\n\t}\n\n\t/**\n\t * Checks whether this position is located before given position. When method returns `false` it does not mean that\n\t * this position is after give one. Two positions may be located inside separate roots and in that situation this\n\t * method will still return `false`.\n\t *\n\t * @see module:engine/view/position~Position#isAfter\n\t * @see module:engine/view/position~Position#compareWith\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} Returns `true` if this position is before given position.\n\t */\n\tpublic isBefore( otherPosition: Position ): boolean {\n\t\treturn this.compareWith( otherPosition ) == 'before';\n\t}\n\n\t/**\n\t * Checks whether this position is located after given position. When method returns `false` it does not mean that\n\t * this position is before give one. Two positions may be located inside separate roots and in that situation this\n\t * method will still return `false`.\n\t *\n\t * @see module:engine/view/position~Position#isBefore\n\t * @see module:engine/view/position~Position#compareWith\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {Boolean} Returns `true` if this position is after given position.\n\t */\n\tpublic isAfter( otherPosition: Position ): boolean {\n\t\treturn this.compareWith( otherPosition ) == 'after';\n\t}\n\n\t/**\n\t * Checks whether this position is before, after or in same position that other position. Two positions may be also\n\t * different when they are located in separate roots.\n\t *\n\t * @param {module:engine/view/position~Position} otherPosition Position to compare with.\n\t * @returns {module:engine/view/position~PositionRelation}\n\t */\n\tpublic compareWith( otherPosition: Position ): PositionRelation {\n\t\tif ( this.root !== otherPosition.root ) {\n\t\t\treturn 'different';\n\t\t}\n\n\t\tif ( this.isEqual( otherPosition ) ) {\n\t\t\treturn 'same';\n\t\t}\n\n\t\t// Get path from root to position's parent element.\n\t\tconst thisPath = this.parent.is( 'node' ) ? this.parent.getPath() : [];\n\t\tconst otherPath = otherPosition.parent.is( 'node' ) ? otherPosition.parent.getPath() : [];\n\n\t\t// Add the positions' offsets to the parents offsets.\n\t\tthisPath.push( this.offset );\n\t\totherPath.push( otherPosition.offset );\n\n\t\t// Compare both path arrays to find common ancestor.\n\t\tconst result = compareArrays( thisPath, otherPath );\n\n\t\tswitch ( result ) {\n\t\t\tcase 'prefix':\n\t\t\t\treturn 'before';\n\n\t\t\tcase 'extension':\n\t\t\t\treturn 'after';\n\n\t\t\tdefault:\n\t\t\t\treturn thisPath[ result as number ] < otherPath[ result as number ] ? 'before' : 'after';\n\t\t}\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this positions as a start position.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}\n\t * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t */\n\tpublic getWalker( options: TreeWalkerOptions = {} ): TreeWalker {\n\t\toptions.startPosition = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\tpublic clone(): Position {\n\t\treturn new Position( this.parent, this.offset );\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link module:engine/view/position~Position._createBefore},\n\t * * {@link module:engine/view/position~Position._createAfter}.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tpublic static _createAt( itemOrPosition: Item | Position, offset?: number | 'before' | 'after' | 'end' ): Position {\n\t\tif ( itemOrPosition instanceof Position ) {\n\t\t\treturn new this( itemOrPosition.parent, itemOrPosition.offset );\n\t\t} else {\n\t\t\tconst node = itemOrPosition;\n\n\t\t\tif ( offset == 'end' ) {\n\t\t\t\toffset = node.is( '$text' ) ? node.data.length : ( node as any ).childCount;\n\t\t\t} else if ( offset == 'before' ) {\n\t\t\t\treturn this._createBefore( node );\n\t\t\t} else if ( offset == 'after' ) {\n\t\t\t\treturn this._createAfter( node );\n\t\t\t} else if ( offset !== 0 && !offset ) {\n\t\t\t\t/**\n\t\t\t\t * {@link module:engine/view/view~View#createPositionAt `View#createPositionAt()`}\n\t\t\t\t * requires the offset to be specified when the first parameter is a view item.\n\t\t\t\t *\n\t\t\t\t * @error view-createpositionat-offset-required\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'view-createpositionat-offset-required', node );\n\t\t\t}\n\n\t\t\treturn new Position( node as any, offset as number );\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tpublic static _createAfter( item: Item ): Position {\n\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\n\t\tif ( item.is( '$textProxy' ) ) {\n\t\t\treturn new Position( item.textNode, item.offsetInText + item.data.length );\n\t\t}\n\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You can not make a position after a root.\n\t\t\t *\n\t\t\t * @error view-position-after-root\n\t\t\t * @param {module:engine/view/node~Node} root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-position-after-root', item, { root: item } );\n\t\t}\n\n\t\treturn new Position( item.parent, ( item.index as number ) + 1 );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tpublic static _createBefore( item: Item ): Position {\n\t\t// TextProxy is not a instance of Node so we need do handle it in specific way.\n\t\tif ( item.is( '$textProxy' ) ) {\n\t\t\treturn new Position( item.textNode, item.offsetInText );\n\t\t}\n\n\t\tif ( !item.parent ) {\n\t\t\t/**\n\t\t\t * You cannot make a position before a root.\n\t\t\t *\n\t\t\t * @error view-position-before-root\n\t\t\t * @param {module:engine/view/node~Node} root\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-position-before-root', item, { root: item } );\n\t\t}\n\n\t\treturn new Position( item.parent, item.index as number );\n\t}\n}\n\n/**\n * Checks whether this object is of the given type.\n *\n *\t\tposition.is( 'position' ); // -> true\n *\t\tposition.is( 'view:position' ); // -> true\n *\n *\t\tposition.is( 'model:position' ); // -> false\n *\t\tposition.is( 'element' ); // -> false\n *\t\tposition.is( 'range' ); // -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * @param {String} type\n * @returns {Boolean}\n */\nPosition.prototype.is = function( type: string ): boolean {\n\treturn type === 'position' || type === 'view:position';\n};\n\n/**\n * A flag indicating whether this position is `'before'` or `'after'` or `'same'` as given position.\n * If positions are in different roots `'different'` flag is returned.\n *\n * @typedef {String} module:engine/view/position~PositionRelation\n */\nexport type PositionRelation = 'before' | 'after' | 'same' | 'different';\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/range\n */\n\nimport TypeCheckable from './typecheckable';\nimport Position from './position';\n\nimport type DocumentFragment from './documentfragment';\nimport type Element from './element';\nimport type Item from './item';\nimport type Node from './node';\nimport { default as TreeWalker, type TreeWalkerValue, type TreeWalkerOptions } from './treewalker';\n\n/**\n * Range in the view tree. A range is represented by its start and end {@link module:engine/view/position~Position positions}.\n *\n * In order to create a new position instance use the `createPosition*()` factory methods available in:\n *\n * * {@link module:engine/view/view~View}\n * * {@link module:engine/view/downcastwriter~DowncastWriter}\n * * {@link module:engine/view/upcastwriter~UpcastWriter}\n */\nexport default class Range extends TypeCheckable {\n\tpublic start: Position;\n\tpublic end: Position;\n\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** Constructor creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at the `start` position.\n\t */\n\tconstructor( start: Position, end: Position | null = null ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Start position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position}\n\t\t */\n\t\tthis.start = start.clone();\n\n\t\t/**\n\t\t * End position.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position}\n\t\t */\n\t\tthis.end = end ? end.clone() : start.clone();\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * Iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n\t * them together with additional information like length or {@link module:engine/view/position~Position positions},\n\t * grouped as {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * This iterator uses {@link module:engine/view/treewalker~TreeWalker TreeWalker} with `boundaries` set to this range and\n\t * `ignoreElementEnd` option\n\t * set to `true`.\n\t *\n\t * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n\t */\n\tpublic* [ Symbol.iterator ](): IterableIterator<TreeWalkerValue> {\n\t\tyield* new TreeWalker( { boundaries: this, ignoreElementEnd: true } );\n\t}\n\n\t/**\n\t * Returns whether the range is collapsed, that is it start and end positions are equal.\n\t *\n\t * @type {Boolean}\n\t */\n\tpublic get isCollapsed(): boolean {\n\t\treturn this.start.isEqual( this.end );\n\t}\n\n\t/**\n\t * Returns whether this range is flat, that is if {@link module:engine/view/range~Range#start start} position and\n\t * {@link module:engine/view/range~Range#end end} position are in the same {@link module:engine/view/position~Position#parent parent}.\n\t *\n\t * @type {Boolean}\n\t */\n\tpublic get isFlat(): boolean {\n\t\treturn this.start.parent === this.end.parent;\n\t}\n\n\t/**\n\t * Range root element.\n\t *\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tpublic get root(): Node | DocumentFragment {\n\t\treturn this.start.root;\n\t}\n\n\t/**\n\t * Creates a maximal range that has the same content as this range but is expanded in both ways (at the beginning\n\t * and at the end).\n\t *\n\t * For example:\n\t *\n\t *\t\t<p>Foo</p><p><b>{Bar}</b></p> -> <p>Foo</p>[<p><b>Bar</b>]</p>\n\t *\t\t<p><b>foo</b>{bar}<span></span></p> -> <p><b>foo[</b>bar<span></span>]</p>\n\t *\n\t * Note that in the sample above:\n\t *\n\t * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n\t * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n\t * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n\t *\n\t * @returns {module:engine/view/range~Range} Enlarged range.\n\t */\n\tpublic getEnlarged(): Range {\n\t\tlet start = this.start.getLastMatchingPosition( enlargeTrimSkip, { direction: 'backward' } );\n\t\tlet end = this.end.getLastMatchingPosition( enlargeTrimSkip );\n\n\t\t// Fix positions, in case if they are in Text node.\n\t\tif ( start.parent.is( '$text' ) && start.isAtStart ) {\n\t\t\tstart = Position._createBefore( start.parent );\n\t\t}\n\n\t\tif ( end.parent.is( '$text' ) && end.isAtEnd ) {\n\t\t\tend = Position._createAfter( end.parent );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Creates a minimum range that has the same content as this range but is trimmed in both ways (at the beginning\n\t * and at the end).\n\t *\n\t * For example:\n\t *\n\t *\t\t<p>Foo</p>[<p><b>Bar</b>]</p> -> <p>Foo</p><p><b>{Bar}</b></p>\n\t *\t\t<p><b>foo[</b>bar<span></span>]</p> -> <p><b>foo</b>{bar}<span></span></p>\n\t *\n\t * Note that in the sample above:\n\t *\n\t * - `<p>` have type of {@link module:engine/view/containerelement~ContainerElement},\n\t * - `<b>` have type of {@link module:engine/view/attributeelement~AttributeElement},\n\t * - `<span>` have type of {@link module:engine/view/uielement~UIElement}.\n\t *\n\t * @returns {module:engine/view/range~Range} Shrink range.\n\t */\n\tpublic getTrimmed(): Range {\n\t\tlet start = this.start.getLastMatchingPosition( enlargeTrimSkip );\n\n\t\tif ( start.isAfter( this.end ) || start.isEqual( this.end ) ) {\n\t\t\treturn new Range( start, start );\n\t\t}\n\n\t\tlet end = this.end.getLastMatchingPosition( enlargeTrimSkip, { direction: 'backward' } );\n\t\tconst nodeAfterStart = start.nodeAfter;\n\t\tconst nodeBeforeEnd = end.nodeBefore;\n\n\t\t// Because TreeWalker prefers positions next to text node, we need to move them manually into these text nodes.\n\t\tif ( nodeAfterStart && nodeAfterStart.is( '$text' ) ) {\n\t\t\tstart = new Position( nodeAfterStart, 0 );\n\t\t}\n\n\t\tif ( nodeBeforeEnd && nodeBeforeEnd.is( '$text' ) ) {\n\t\t\tend = new Position( nodeBeforeEnd, nodeBeforeEnd.data.length );\n\t\t}\n\n\t\treturn new Range( start, end );\n\t}\n\n\t/**\n\t * Two ranges are equal if their start and end positions are equal.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} `true` if ranges are equal, `false` otherwise\n\t */\n\tpublic isEqual( otherRange: Range ): boolean {\n\t\treturn this == otherRange || ( this.start.isEqual( otherRange.start ) && this.end.isEqual( otherRange.end ) );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/view/position~Position position}.\n\t *\n\t * @param {module:engine/view/position~Position} position Position to check.\n\t * @returns {Boolean} `true` if given {@link module:engine/view/position~Position position} is contained in this range,\n\t * `false` otherwise.\n\t */\n\tpublic containsPosition( position: Position ): boolean {\n\t\treturn position.isAfter( this.start ) && position.isBefore( this.end );\n\t}\n\n\t/**\n\t * Checks whether this range contains given {@link module:engine/view/range~Range range}.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to check.\n\t * @param {Boolean} [loose=false] Whether the check is loose or strict. If the check is strict (`false`), compared range cannot\n\t * start or end at the same position as this range boundaries. If the check is loose (`true`), compared range can start, end or\n\t * even be equal to this range. Note that collapsed ranges are always compared in strict mode.\n\t * @returns {Boolean} `true` if given {@link module:engine/view/range~Range range} boundaries are contained by this range, `false`\n\t * otherwise.\n\t */\n\tpublic containsRange( otherRange: Range, loose: boolean = false ): boolean {\n\t\tif ( otherRange.isCollapsed ) {\n\t\t\tloose = false;\n\t\t}\n\n\t\tconst containsStart = this.containsPosition( otherRange.start ) || ( loose && this.start.isEqual( otherRange.start ) );\n\t\tconst containsEnd = this.containsPosition( otherRange.end ) || ( loose && this.end.isEqual( otherRange.end ) );\n\n\t\treturn containsStart && containsEnd;\n\t}\n\n\t/**\n\t * Computes which part(s) of this {@link module:engine/view/range~Range range} is not a part of given\n\t * {@link module:engine/view/range~Range range}.\n\t * Returned array contains zero, one or two {@link module:engine/view/range~Range ranges}.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet foo = downcastWriter.createText( 'foo' );\n\t *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n\t *\t\tlet bar = downcastWriter.createText( 'bar' );\n\t *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n\t *\n\t *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n\t *\t\tlet otherRange = view.createRange( // \"oo\", img, \"ba\" are in range.\n\t *\t\t\tview.createPositionAt( foo, 1 ),\n\t *\t\t\tview.createPositionAt( bar, 2 )\n\t *\t\t);\n\t *\t\tlet transformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has no ranges because `otherRange` contains `range`\n\t *\n\t *\t\totherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has one range: from ( p, 2 ) to ( bar, 1 )\n\t *\n\t *\t\totherRange = view.createRange( view.createPositionAt( p, 1 ), view.createPositionAt( p, 2 ) ); // img is in range.\n\t *\t\ttransformed = range.getDifference( otherRange );\n\t *\t\t// transformed array has two ranges: from ( foo, 1 ) to ( p, 1 ) and from ( p, 2 ) to ( bar, 1 )\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to differentiate against.\n\t * @returns {Array.<module:engine/view/range~Range>} The difference between ranges.\n\t */\n\tpublic getDifference( otherRange: Range ): Range[] {\n\t\tconst ranges: Range[] = [];\n\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect.\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the start to the middle of this range.\n\t\t\t\tranges.push( new Range( this.start, otherRange.start ) );\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// add shrunken range - from the middle of this range to the end.\n\t\t\t\tranges.push( new Range( otherRange.end, this.end ) );\n\t\t\t}\n\t\t} else {\n\t\t\t// Ranges do not intersect, return the original range.\n\t\t\tranges.push( this.clone() );\n\t\t}\n\n\t\treturn ranges;\n\t}\n\n\t/**\n\t * Returns an intersection of this {@link module:engine/view/range~Range range} and given {@link module:engine/view/range~Range range}.\n\t * Intersection is a common part of both of those ranges. If ranges has no common part, returns `null`.\n\t *\n\t * Examples:\n\t *\n\t *\t\tlet foo = downcastWriter.createText( 'foo' );\n\t *\t\tlet img = downcastWriter.createContainerElement( 'img' );\n\t *\t\tlet bar = downcastWriter.createText( 'bar' );\n\t *\t\tlet p = downcastWriter.createContainerElement( 'p', null, [ foo, img, bar ] );\n\t *\n\t *\t\tlet range = view.createRange( view.createPositionAt( foo, 2 ), view.createPositionAt( bar, 1 ); // \"o\", img, \"b\" are in range.\n\t *\t\tlet otherRange = view.createRange( view.createPositionAt( foo, 1 ), view.createPositionAt( p, 2 ); // \"oo\", img are in range.\n\t *\t\tlet transformed = range.getIntersection( otherRange ); // range from ( foo, 1 ) to ( p, 2 ).\n\t *\n\t *\t\totherRange = view.createRange( view.createPositionAt( bar, 1 ), view.createPositionAt( bar, 3 ); \"ar\" is in range.\n\t *\t\ttransformed = range.getIntersection( otherRange ); // null - no common part.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to check for intersection.\n\t * @returns {module:engine/view/range~Range|null} A common part of given ranges or `null` if ranges have no common part.\n\t */\n\tpublic getIntersection( otherRange: Range ): Range | null {\n\t\tif ( this.isIntersecting( otherRange ) ) {\n\t\t\t// Ranges intersect, so a common range will be returned.\n\t\t\t// At most, it will be same as this range.\n\t\t\tlet commonRangeStart = this.start;\n\t\t\tlet commonRangeEnd = this.end;\n\n\t\t\tif ( this.containsPosition( otherRange.start ) ) {\n\t\t\t\t// Given range start is inside this range. This means thaNt we have to\n\t\t\t\t// shrink common range to the given range start.\n\t\t\t\tcommonRangeStart = otherRange.start;\n\t\t\t}\n\n\t\t\tif ( this.containsPosition( otherRange.end ) ) {\n\t\t\t\t// Given range end is inside this range. This means that we have to\n\t\t\t\t// shrink common range to the given range end.\n\t\t\t\tcommonRangeEnd = otherRange.end;\n\t\t\t}\n\n\t\t\treturn new Range( commonRangeStart, commonRangeEnd );\n\t\t}\n\n\t\t// Ranges do not intersect, so they do not have common part.\n\t\treturn null;\n\t}\n\n\t/**\n\t * Creates a {@link module:engine/view/treewalker~TreeWalker TreeWalker} instance with this range as a boundary.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @param {module:engine/view/position~Position} [options.startPosition]\n\t * @param {Boolean} [options.singleCharacters=false]\n\t * @param {Boolean} [options.shallow=false]\n\t * @param {Boolean} [options.ignoreElementEnd=false]\n\t * @returns {module:engine/view/treewalker~TreeWalker}\n\t */\n\tpublic getWalker( options: TreeWalkerOptions = {} ): TreeWalker {\n\t\toptions.boundaries = this;\n\n\t\treturn new TreeWalker( options );\n\t}\n\n\t/**\n\t * Returns a {@link module:engine/view/node~Node} or {@link module:engine/view/documentfragment~DocumentFragment}\n\t * which is a common ancestor of range's both ends (in which the entire range is contained).\n\t *\n\t * @returns {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tpublic getCommonAncestor(): Node | DocumentFragment | null {\n\t\treturn this.start.getCommonAncestor( this.end );\n\t}\n\n\t/**\n\t * Returns an {@link module:engine/view/element~Element Element} contained by the range.\n\t * The element will be returned when it is the **only** node within the range and **fully–contained**\n\t * at the same time.\n\t *\n\t * @returns {module:engine/view/element~Element|null}\n\t */\n\tpublic getContainedElement(): Element | null {\n\t\tif ( this.isCollapsed ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet nodeAfterStart = this.start.nodeAfter;\n\t\tlet nodeBeforeEnd = this.end.nodeBefore;\n\n\t\t// Handle the situation when the range position is at the beginning / at the end of a text node.\n\t\t// In such situation `.nodeAfter` and `.nodeBefore` are `null` but the range still might be spanning\n\t\t// over one element.\n\t\t//\n\t\t// <p>Foo{<span class=\"widget\"></span>}bar</p> vs <p>Foo[<span class=\"widget\"></span>]bar</p>\n\t\t//\n\t\t// These are basically the same range, only the difference is if the range position is at\n\t\t// at the end/at the beginning of a text node or just before/just after the text node.\n\t\t//\n\t\tif ( this.start.parent.is( '$text' ) && this.start.isAtEnd && this.start.parent.nextSibling ) {\n\t\t\tnodeAfterStart = this.start.parent.nextSibling;\n\t\t}\n\n\t\tif ( this.end.parent.is( '$text' ) && this.end.isAtStart && this.end.parent.previousSibling ) {\n\t\t\tnodeBeforeEnd = this.end.parent.previousSibling;\n\t\t}\n\n\t\tif ( nodeAfterStart && nodeAfterStart.is( 'element' ) && nodeAfterStart === nodeBeforeEnd ) {\n\t\t\treturn nodeAfterStart;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Clones this range.\n\t *\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tpublic clone(): Range {\n\t\treturn new Range( this.start, this.end );\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/view/item~Item view items} that are in this range and returns\n\t * them.\n\t *\n\t * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range and `ignoreElementEnd` option\n\t * set to `true`. However it returns only {@link module:engine/view/item~Item items},\n\t * not {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/view/item~Item>}\n\t */\n\tpublic* getItems( options: TreeWalkerOptions = {} ): IterableIterator<Item> {\n\t\toptions.boundaries = this;\n\t\toptions.ignoreElementEnd = true;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.item;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an iterator that iterates over all {@link module:engine/view/position~Position positions} that are boundaries or\n\t * contained in this range.\n\t *\n\t * This method uses {@link module:engine/view/treewalker~TreeWalker} with `boundaries` set to this range. However it returns only\n\t * {@link module:engine/view/position~Position positions}, not {@link module:engine/view/treewalker~TreeWalkerValue}.\n\t *\n\t * You may specify additional options for the tree walker. See {@link module:engine/view/treewalker~TreeWalker} for\n\t * a full list of available options.\n\t *\n\t * @param {Object} options Object with configuration options. See {@link module:engine/view/treewalker~TreeWalker}.\n\t * @returns {Iterable.<module:engine/view/position~Position>}\n\t */\n\tpublic* getPositions( options: TreeWalkerOptions = {} ): IterableIterator<Position> {\n\t\toptions.boundaries = this;\n\n\t\tconst treeWalker = new TreeWalker( options );\n\n\t\tyield treeWalker.position;\n\n\t\tfor ( const value of treeWalker ) {\n\t\t\tyield value.nextPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Checks and returns whether this range intersects with the given range.\n\t *\n\t * @param {module:engine/view/range~Range} otherRange Range to compare with.\n\t * @returns {Boolean} True if ranges intersect.\n\t */\n\tpublic isIntersecting( otherRange: Range ): boolean {\n\t\treturn this.start.isBefore( otherRange.end ) && this.end.isAfter( otherRange.start );\n\t}\n\n\t/**\n\t * Creates a range from the given parents and offsets.\n\t *\n\t * @protected\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} startElement Start position\n\t * parent element.\n\t * @param {Number} startOffset Start position offset.\n\t * @param {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment} endElement End position\n\t * parent element.\n\t * @param {Number} endOffset End position offset.\n\t * @returns {module:engine/view/range~Range} Created range.\n\t */\n\tpublic static _createFromParentsAndOffsets(\n\t\tstartElement: Element | DocumentFragment,\n\t\tstartOffset: number,\n\t\tendElement: Element | DocumentFragment,\n\t\tendOffset: number\n\t): Range {\n\t\treturn new this(\n\t\t\tnew Position( startElement, startOffset ),\n\t\t\tnew Position( endElement, endOffset )\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new range, spreading from specified {@link module:engine/view/position~Position position} to a position moved by\n\t * given `shift`. If `shift` is a negative value, shifted position is treated as the beginning of the range.\n\t *\n\t * @protected\n\t * @param {module:engine/view/position~Position} position Beginning of the range.\n\t * @param {Number} shift How long the range should be.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tpublic static _createFromPositionAndShift( position: Position, shift: number ): Range {\n\t\tconst start = position;\n\t\tconst end = position.getShiftedBy( shift );\n\n\t\treturn shift > 0 ? new this( start, end ) : new this( end, start );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @protected\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tpublic static _createIn( element: Element | DocumentFragment ): Range {\n\t\treturn this._createFromParentsAndOffsets( element, 0, element, element.childCount );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @protected\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tpublic static _createOn( item: Item ): Range {\n\t\tconst size = item.is( '$textProxy' ) ? item.offsetSize : 1;\n\n\t\treturn this._createFromPositionAndShift( Position._createBefore( item ), size );\n\t}\n}\n\n/**\n * Checks whether this object is of the given type.\n *\n *\t\trange.is( 'range' ); // -> true\n *\t\trange.is( 'view:range' ); // -> true\n *\n *\t\trange.is( 'model:range' ); // -> false\n *\t\trange.is( 'element' ); // -> false\n *\t\trange.is( 'selection' ); // -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * @param {String} type\n * @returns {Boolean}\n */\nRange.prototype.is = function( type: string ): boolean {\n\treturn type === 'range' || type === 'view:range';\n};\n\n// Function used by getEnlarged and getTrimmed methods.\nfunction enlargeTrimSkip( value: TreeWalkerValue ): boolean {\n\tif ( value.item.is( 'attributeElement' ) || value.item.is( 'uiElement' ) ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/rawelement\n */\n\nimport Element from './element';\nimport Node from './node';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport type DomConverter from './domconverter';\nimport type Item from './item';\n\ntype DomElement = globalThis.HTMLElement;\n\n/**\n * The raw element class.\n *\n * The raw elements work as data containers (\"wrappers\", \"sandboxes\") but their children are not managed or\n * even recognized by the editor. This encapsulation allows integrations to maintain custom DOM structures\n * in the editor content without, for instance, worrying about compatibility with other editor features.\n * Raw elements are a perfect tool for integration with external frameworks and data sources.\n *\n * Unlike {@link module:engine/view/uielement~UIElement UI elements}, raw elements act like real editor\n * content (similar to {@link module:engine/view/containerelement~ContainerElement} or\n * {@link module:engine/view/emptyelement~EmptyElement}), they are considered by the editor selection and\n * {@link module:widget/utils~toWidget they can work as widgets}.\n *\n * To create a new raw element, use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createRawElement `downcastWriter#createRawElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class RawElement extends Element {\n\tpublic override readonly getFillerOffset: () => null;\n\n\t/**\n\t * Creates a new instance of a raw element.\n\t *\n\t * Throws the `view-rawelement-cannot-add` {@link module:utils/ckeditorerror~CKEditorError CKEditorError} when the `children`\n\t * parameter is passed to inform that the usage of `RawElement` is incorrect (adding child nodes to `RawElement` is forbidden).\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createRawElement\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name A node name.\n\t * @param {Object|Iterable} [attrs] The collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into the created element.\n\t */\n\tconstructor( ...args: ConstructorParameters<typeof Element> ) {\n\t\tsuper( ...args );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for raw elements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Overrides the {@link module:engine/view/element~Element#_insertChild} method.\n\t * Throws the `view-rawelement-cannot-add` {@link module:utils/ckeditorerror~CKEditorError CKEditorError} to prevent\n\t * adding any child nodes to a raw element.\n\t *\n\t * @protected\n\t */\n\tpublic override _insertChild( index: number, items: Item | Iterable<Item> ): number {\n\t\tif ( items && ( items instanceof Node || Array.from( items as Iterable<Item> ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to a {@link module:engine/view/rawelement~RawElement} instance.\n\t\t\t *\n\t\t\t * @error view-rawelement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-rawelement-cannot-add',\n\t\t\t\t[ this, items ]\n\t\t\t);\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * This allows rendering the children of a {@link module:engine/view/rawelement~RawElement} on the DOM level.\n\t * This method is called by the {@link module:engine/view/domconverter~DomConverter} with the raw DOM element\n\t * passed as an argument, leaving the number and shape of the children up to the integrator.\n\t *\n\t * This method **must be defined** for the raw element to work:\n\t *\n\t *\t\tconst myRawElement = downcastWriter.createRawElement( 'div' );\n\t *\n\t *\t\tmyRawElement.render = function( domElement, domConverter ) {\n\t *\t\t\tdomConverter.setContentOf( domElement, '<b>This is the raw content of myRawElement.</b>' );\n\t *\t\t};\n\t *\n\t * @method #render\n\t * @param {HTMLElement} domElement The native DOM element representing the raw view element.\n\t * @param {module:engine/view/domconverter~DomConverter} domConverter Instance of the DomConverter used to optimize the output.\n\t */\n\tpublic render( domElement?: DomElement, domConverter?: DomConverter ): void;\n\tpublic render(): void {}\n\t// TODO\n}\n\n/**\n * Checks whether this object is of the given type or name.\n *\n *\t\trawElement.is( 'rawElement' ); // -> true\n *\t\trawElement.is( 'element' ); // -> true\n *\t\trawElement.is( 'node' ); // -> true\n *\t\trawElement.is( 'view:rawElement' ); // -> true\n *\t\trawElement.is( 'view:element' ); // -> true\n *\t\trawElement.is( 'view:node' ); // -> true\n *\n *\t\trawElement.is( 'model:element' ); // -> false\n *\t\trawElement.is( 'documentFragment' ); // -> false\n *\n * Assuming that the object being checked is a raw element, you can also check its\n * {@link module:engine/view/rawelement~RawElement#name name}:\n *\n *\t\trawElement.is( 'img' ); // -> true if this is an img element\n *\t\trawElement.is( 'rawElement', 'img' ); // -> same as above\n *\t\ttext.is( 'img' ); -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * @param {String} type The type to check when the `name` parameter is present.\n * Otherwise, it acts like the `name` parameter.\n * @param {String} [name] The element name.\n * @returns {Boolean}\n */\nRawElement.prototype.is = function( type: string, name?: string ): boolean {\n\tif ( !name ) {\n\t\treturn type === 'rawElement' || type === 'view:rawElement' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === this.name || type === 'view:' + this.name ||\n\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\ttype === 'node' || type === 'view:node';\n\t} else {\n\t\treturn name === this.name && (\n\t\t\ttype === 'rawElement' || type === 'view:rawElement' ||\n\t\t\ttype === 'element' || type === 'view:element'\n\t\t);\n\t}\n};\n\n// Returns `null` because block filler is not needed for raw elements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/renderer\n */\n\nimport ViewText from './text';\nimport ViewPosition from './position';\nimport { INLINE_FILLER, INLINE_FILLER_LENGTH, startsWithFiller, isInlineFiller } from './filler';\n\nimport { default as diff, type DiffResult } from '@ckeditor/ckeditor5-utils/src/diff';\nimport insertAt from '@ckeditor/ckeditor5-utils/src/dom/insertat';\nimport remove from '@ckeditor/ckeditor5-utils/src/dom/remove';\nimport { Observable, type ChangeEvent as ObservableChangeEvent } from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport isText from '@ckeditor/ckeditor5-utils/src/dom/istext';\nimport isComment from '@ckeditor/ckeditor5-utils/src/dom/iscomment';\nimport isNode from '@ckeditor/ckeditor5-utils/src/dom/isnode';\nimport fastDiff from '@ckeditor/ckeditor5-utils/src/fastdiff';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\nimport type { ChangeType } from './document';\nimport type DocumentSelection from './documentselection';\nimport type DomConverter from './domconverter';\nimport type EditableElement from './editableelement';\nimport type ViewElement from './element';\nimport type ViewNode from './node';\n\nimport '../../theme/renderer.css';\n\ntype DomText = globalThis.Text;\ntype DomNode = globalThis.Node;\ntype DomDocument = globalThis.Document;\ntype DomElement = globalThis.HTMLElement;\ntype DomSelection = globalThis.Selection;\n\n/**\n * Renderer is responsible for updating the DOM structure and the DOM selection based on\n * the {@link module:engine/view/renderer~Renderer#markToSync information about updated view nodes}.\n * In other words, it renders the view to the DOM.\n *\n * Its main responsibility is to make only the necessary, minimal changes to the DOM. However, unlike in many\n * virtual DOM implementations, the primary reason for doing minimal changes is not the performance but ensuring\n * that native editing features such as text composition, autocompletion, spell checking, selection's x-index are\n * affected as little as possible.\n *\n * Renderer uses {@link module:engine/view/domconverter~DomConverter} to transform view nodes and positions\n * to and from the DOM.\n */\nexport default class Renderer extends Observable {\n\tpublic readonly domDocuments: Set<DomDocument>;\n\tpublic readonly domConverter: DomConverter;\n\tpublic readonly markedAttributes: Set<ViewElement>;\n\tpublic readonly markedChildren: Set<ViewElement>;\n\tpublic readonly markedTexts: Set<ViewNode>;\n\tpublic readonly selection: DocumentSelection;\n\n\tdeclare public readonly isFocused: boolean;\n\tdeclare public readonly isSelecting: boolean;\n\n\tprivate _inlineFiller: DomText | null;\n\tprivate _fakeSelectionContainer: DomElement | null;\n\n\t/**\n\t * Creates a renderer instance.\n\t *\n\t * @param {module:engine/view/domconverter~DomConverter} domConverter Converter instance.\n\t * @param {module:engine/view/documentselection~DocumentSelection} selection View selection.\n\t */\n\tconstructor( domConverter: DomConverter, selection: DocumentSelection ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Set of DOM Documents instances.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<Document>}\n\t\t */\n\t\tthis.domDocuments = new Set();\n\n\t\t/**\n\t\t * Converter instance.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = domConverter;\n\n\t\t/**\n\t\t * Set of nodes which attributes changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~ViewNode>}\n\t\t */\n\t\tthis.markedAttributes = new Set();\n\n\t\t/**\n\t\t * Set of elements which child lists changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~ViewNode>}\n\t\t */\n\t\tthis.markedChildren = new Set();\n\n\t\t/**\n\t\t * Set of text nodes which text data changed and may need to be rendered.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set.<module:engine/view/node~ViewNode>}\n\t\t */\n\t\tthis.markedTexts = new Set();\n\n\t\t/**\n\t\t * View selection. Renderer updates DOM selection based on the view selection.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/documentselection~DocumentSelection}\n\t\t */\n\t\tthis.selection = selection;\n\n\t\t/**\n\t\t * Indicates if the view document is focused and selection can be rendered. Selection will not be rendered if\n\t\t * this is set to `false`.\n\t\t *\n\t\t * @member {Boolean}\n\t\t * @observable\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * Indicates whether the user is making a selection in the document (e.g. holding the mouse button and moving the cursor).\n\t\t * When they stop selecting, the property goes back to `false`.\n\t\t *\n\t\t * Note: In some browsers, the renderer will stop rendering the selection and inline fillers while the user is making\n\t\t * a selection to avoid glitches in DOM selection\n\t\t * (https://github.com/ckeditor/ckeditor5/issues/10562, https://github.com/ckeditor/ckeditor5/issues/10723).\n\t\t *\n\t\t * @member {Boolean}\n\t\t * @observable\n\t\t */\n\t\tthis.set( 'isSelecting', false );\n\n\t\t// Rendering the selection and inline filler manipulation should be postponed in (non-Android) Blink until the user finishes\n\t\t// creating the selection in DOM to avoid accidental selection collapsing\n\t\t// (https://github.com/ckeditor/ckeditor5/issues/10562, https://github.com/ckeditor/ckeditor5/issues/10723).\n\t\t// When the user stops selecting, all pending changes should be rendered ASAP, though.\n\t\tif ( env.isBlink && !env.isAndroid ) {\n\t\t\tthis.on<ObservableChangeEvent>( 'change:isSelecting', () => {\n\t\t\t\tif ( !this.isSelecting ) {\n\t\t\t\t\tthis.render();\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t/**\n\t\t * The text node in which the inline filler was rendered.\n\t\t *\n\t\t * @private\n\t\t * @member {Text}\n\t\t */\n\t\tthis._inlineFiller = null;\n\n\t\t/**\n\t\t * DOM element containing fake selection.\n\t\t *\n\t\t * @private\n\t\t * @type {null|HTMLElement}\n\t\t */\n\t\tthis._fakeSelectionContainer = null;\n\t}\n\n\t/**\n\t * Marks a view node to be updated in the DOM by {@link #render `render()`}.\n\t *\n\t * Note that only view nodes whose parents have corresponding DOM elements need to be marked to be synchronized.\n\t *\n\t * @see #markedAttributes\n\t * @see #markedChildren\n\t * @see #markedTexts\n\t *\n\t * @param {module:engine/view/document~ChangeType} type Type of the change.\n\t * @param {module:engine/view/node~ViewNode} node ViewNode to be marked.\n\t */\n\tpublic markToSync( type: ChangeType, node: ViewNode ): void {\n\t\tif ( type === 'text' ) {\n\t\t\tif ( this.domConverter.mapViewToDom( node.parent! ) ) {\n\t\t\t\tthis.markedTexts.add( node );\n\t\t\t}\n\t\t} else {\n\t\t\t// If the node has no DOM element it is not rendered yet,\n\t\t\t// its children/attributes do not need to be marked to be sync.\n\t\t\tif ( !this.domConverter.mapViewToDom( node as ViewElement ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( type === 'attributes' ) {\n\t\t\t\tthis.markedAttributes.add( node as ViewElement );\n\t\t\t} else if ( type === 'children' ) {\n\t\t\t\tthis.markedChildren.add( node as ViewElement );\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * Unknown type passed to Renderer.markToSync.\n\t\t\t\t *\n\t\t\t\t * @error view-renderer-unknown-type\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'view-renderer-unknown-type', this );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Renders all buffered changes ({@link #markedAttributes}, {@link #markedChildren} and {@link #markedTexts}) and\n\t * the current view selection (if needed) to the DOM by applying a minimal set of changes to it.\n\t *\n\t * Renderer tries not to break the text composition (e.g. IME) and x-index of the selection,\n\t * so it does as little as it is needed to update the DOM.\n\t *\n\t * Renderer also handles {@link module:engine/view/filler fillers}. Especially, it checks if the inline filler is needed\n\t * at the selection position and adds or removes it. To prevent breaking text composition inline filler will not be\n\t * removed as long as the selection is in the text node which needed it at first.\n\t */\n\tpublic render(): void {\n\t\tlet inlineFillerPosition: ViewPosition | null = null;\n\t\tconst isInlineFillerRenderingPossible = env.isBlink && !env.isAndroid ? !this.isSelecting : true;\n\n\t\t// Refresh mappings.\n\t\tfor ( const element of this.markedChildren ) {\n\t\t\tthis._updateChildrenMappings( element );\n\t\t}\n\n\t\t// Don't manipulate inline fillers while the selection is being made in (non-Android) Blink to prevent accidental\n\t\t// DOM selection collapsing\n\t\t// (https://github.com/ckeditor/ckeditor5/issues/10562, https://github.com/ckeditor/ckeditor5/issues/10723).\n\t\tif ( isInlineFillerRenderingPossible ) {\n\t\t\t// There was inline filler rendered in the DOM but it's not\n\t\t\t// at the selection position any more, so we can remove it\n\t\t\t// (cause even if it's needed, it must be placed in another location).\n\t\t\tif ( this._inlineFiller && !this._isSelectionInInlineFiller() ) {\n\t\t\t\tthis._removeInlineFiller();\n\t\t\t}\n\n\t\t\t// If we've got the filler, let's try to guess its position in the view.\n\t\t\tif ( this._inlineFiller ) {\n\t\t\t\tinlineFillerPosition = this._getInlineFillerPosition();\n\t\t\t}\n\t\t\t// Otherwise, if it's needed, create it at the selection position.\n\t\t\telse if ( this._needsInlineFillerAtSelection() ) {\n\t\t\t\tinlineFillerPosition = this.selection.getFirstPosition()!;\n\n\t\t\t\t// Do not use `markToSync` so it will be added even if the parent is already added.\n\t\t\t\tthis.markedChildren.add( inlineFillerPosition.parent as ViewElement );\n\t\t\t}\n\t\t}\n\t\t// Make sure the inline filler has any parent, so it can be mapped to view position by DomConverter.\n\t\telse if ( this._inlineFiller && this._inlineFiller.parentNode ) {\n\t\t\t// While the user is making selection, preserve the inline filler at its original position.\n\t\t\tinlineFillerPosition = this.domConverter.domPositionToView( this._inlineFiller )!;\n\n\t\t\t// While down-casting the document selection attributes, all existing empty\n\t\t\t// attribute elements (for selection position) are removed from the view and DOM,\n\t\t\t// so make sure that we were able to map filler position.\n\t\t\t// https://github.com/ckeditor/ckeditor5/issues/12026\n\t\t\tif ( inlineFillerPosition && inlineFillerPosition.parent.is( '$text' ) ) {\n\t\t\t\t// The inline filler position is expected to be before the text node.\n\t\t\t\tinlineFillerPosition = ViewPosition._createBefore( inlineFillerPosition.parent );\n\t\t\t}\n\t\t}\n\n\t\tfor ( const element of this.markedAttributes ) {\n\t\t\tthis._updateAttrs( element );\n\t\t}\n\n\t\tfor ( const element of this.markedChildren ) {\n\t\t\tthis._updateChildren( element, { inlineFillerPosition } );\n\t\t}\n\n\t\tfor ( const node of this.markedTexts ) {\n\t\t\tif ( !this.markedChildren.has( node.parent as ViewElement ) && this.domConverter.mapViewToDom( node.parent as ViewElement ) ) {\n\t\t\t\tthis._updateText( node as ViewText, { inlineFillerPosition } );\n\t\t\t}\n\t\t}\n\n\t\t// * Check whether the inline filler is required and where it really is in the DOM.\n\t\t//   At this point in most cases it will be in the DOM, but there are exceptions.\n\t\t//   For example, if the inline filler was deep in the created DOM structure, it will not be created.\n\t\t//   Similarly, if it was removed at the beginning of this function and then neither text nor children were updated,\n\t\t//   it will not be present. Fix those and similar scenarios.\n\t\t// * Don't manipulate inline fillers while the selection is being made in (non-Android) Blink to prevent accidental\n\t\t//   DOM selection collapsing\n\t\t//   (https://github.com/ckeditor/ckeditor5/issues/10562, https://github.com/ckeditor/ckeditor5/issues/10723).\n\t\tif ( isInlineFillerRenderingPossible ) {\n\t\t\tif ( inlineFillerPosition ) {\n\t\t\t\tconst fillerDomPosition = this.domConverter.viewPositionToDom( inlineFillerPosition )!;\n\t\t\t\tconst domDocument = fillerDomPosition.parent.ownerDocument!;\n\n\t\t\t\tif ( !startsWithFiller( fillerDomPosition.parent ) ) {\n\t\t\t\t\t// Filler has not been created at filler position. Create it now.\n\t\t\t\t\tthis._inlineFiller = addInlineFiller( domDocument, fillerDomPosition.parent, fillerDomPosition.offset );\n\t\t\t\t} else {\n\t\t\t\t\t// Filler has been found, save it.\n\t\t\t\t\tthis._inlineFiller = fillerDomPosition.parent as DomText;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// There is no filler needed.\n\t\t\t\tthis._inlineFiller = null;\n\t\t\t}\n\t\t}\n\n\t\t// First focus the new editing host, then update the selection.\n\t\t// Otherwise, FF may throw an error (https://github.com/ckeditor/ckeditor5/issues/721).\n\t\tthis._updateFocus();\n\t\tthis._updateSelection();\n\n\t\tthis.markedTexts.clear();\n\t\tthis.markedAttributes.clear();\n\t\tthis.markedChildren.clear();\n\t}\n\n\t/**\n\t * Updates mappings of view element's children.\n\t *\n\t * Children that were replaced in the view structure by similar elements (same tag name) are treated as 'replaced'.\n\t * This means that their mappings can be updated so the new view elements are mapped to the existing DOM elements.\n\t * Thanks to that these elements do not need to be re-rendered completely.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~ViewNode} viewElement The view element whose children mappings will be updated.\n\t */\n\tprivate _updateChildrenMappings( viewElement: ViewElement ): void {\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that it was already removed from DOM and there is no need to process it.\n\t\t\treturn;\n\t\t}\n\n\t\t// Removing nodes from the DOM as we iterate can cause `actualDomChildren`\n\t\t// (which is a live-updating `NodeList`) to get out of sync with the\n\t\t// indices that we compute as we iterate over `actions`.\n\t\t// This would produce incorrect element mappings.\n\t\t//\n\t\t// Converting live list to an array to make the list static.\n\t\tconst actualDomChildren = Array.from(\n\t\t\tthis.domConverter.mapViewToDom( viewElement )!.childNodes\n\t\t);\n\t\tconst expectedDomChildren = Array.from(\n\t\t\tthis.domConverter.viewChildrenToDom( viewElement, { withChildren: false } )\n\t\t);\n\t\tconst diff = this._diffNodeLists( actualDomChildren, expectedDomChildren );\n\t\tconst actions = this._findReplaceActions( diff, actualDomChildren, expectedDomChildren );\n\n\t\tif ( actions.indexOf( 'replace' ) !== -1 ) {\n\t\t\tconst counter = { equal: 0, insert: 0, delete: 0 };\n\n\t\t\tfor ( const action of actions ) {\n\t\t\t\tif ( action === 'replace' ) {\n\t\t\t\t\tconst insertIndex = counter.equal + counter.insert;\n\t\t\t\t\tconst deleteIndex = counter.equal + counter.delete;\n\t\t\t\t\tconst viewChild = viewElement.getChild( insertIndex );\n\n\t\t\t\t\t// UIElement and RawElement are special cases. Their children are not stored in a view (#799)\n\t\t\t\t\t// so we cannot use them with replacing flow (since they use view children during rendering\n\t\t\t\t\t// which will always result in rendering empty elements).\n\t\t\t\t\tif ( viewChild && !( viewChild.is( 'uiElement' ) || viewChild.is( 'rawElement' ) ) ) {\n\t\t\t\t\t\tthis._updateElementMappings( viewChild as ViewElement, actualDomChildren[ deleteIndex ] as DomElement );\n\t\t\t\t\t}\n\n\t\t\t\t\tremove( expectedDomChildren[ insertIndex ] );\n\t\t\t\t\tcounter.equal++;\n\t\t\t\t} else {\n\t\t\t\t\tcounter[ action ]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates mappings of a given view element.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~ViewNode} viewElement The view element whose mappings will be updated.\n\t * @param {ViewNode} domElement The DOM element representing the given view element.\n\t */\n\tprivate _updateElementMappings( viewElement: ViewElement, domElement: DomElement ): void {\n\t\t// Remap 'DomConverter' bindings.\n\t\tthis.domConverter.unbindDomElement( domElement );\n\t\tthis.domConverter.bindElements( domElement, viewElement );\n\n\t\t// View element may have children which needs to be updated, but are not marked, mark them to update.\n\t\tthis.markedChildren.add( viewElement );\n\n\t\t// Because we replace new view element mapping with the existing one, the corresponding DOM element\n\t\t// will not be rerendered. The new view element may have different attributes than the previous one.\n\t\t// Since its corresponding DOM element will not be rerendered, new attributes will not be added\n\t\t// to the DOM, so we need to mark it here to make sure its attributes gets updated. See #1427 for more\n\t\t// detailed case study.\n\t\t// Also there are cases where replaced element is removed from the view structure and then has\n\t\t// its attributes changed or removed. In such cases the element will not be present in `markedAttributes`\n\t\t// and also may be the same (`element.isSimilar()`) as the reused element not having its attributes updated.\n\t\t// To prevent such situations we always mark reused element to have its attributes rerenderd (#1560).\n\t\tthis.markedAttributes.add( viewElement );\n\t}\n\n\t/**\n\t * Gets the position of the inline filler based on the current selection.\n\t * Here, we assume that we know that the filler is needed and\n\t * {@link #_isSelectionInInlineFiller is at the selection position}, and, since it is needed,\n\t * it is somewhere at the selection position.\n\t *\n\t * Note: The filler position cannot be restored based on the filler's DOM text node, because\n\t * when this method is called (before rendering), the bindings will often be broken. View-to-DOM\n\t * bindings are only dependable after rendering.\n\t *\n\t * @private\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tprivate _getInlineFillerPosition(): ViewPosition {\n\t\tconst firstPos = this.selection.getFirstPosition()!;\n\n\t\tif ( firstPos.parent.is( '$text' ) ) {\n\t\t\treturn ViewPosition._createBefore( firstPos.parent );\n\t\t} else {\n\t\t\treturn firstPos;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if the selection has not left the inline filler's text node.\n\t * If it is `true`, it means that the filler had been added for a reason and the selection did not\n\t * leave the filler's text node. For example, the user can be in the middle of a composition so it should not be touched.\n\t *\n\t * @private\n\t * @returns {Boolean} `true` if the inline filler and selection are in the same place.\n\t */\n\tprivate _isSelectionInInlineFiller(): boolean {\n\t\tif ( this.selection.rangeCount != 1 || !this.selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Note, we can't check if selection's position equals position of the\n\t\t// this._inlineFiller node, because of #663. We may not be able to calculate\n\t\t// the filler's position in the view at this stage.\n\t\t// Instead, we check it the other way – whether selection is anchored in\n\t\t// that text node or next to it.\n\n\t\t// Possible options are:\n\t\t// \"FILLER{}\"\n\t\t// \"FILLERadded-text{}\"\n\t\tconst selectionPosition = this.selection.getFirstPosition()!;\n\t\tconst position = this.domConverter.viewPositionToDom( selectionPosition );\n\n\t\tif ( position && isText( position.parent ) && startsWithFiller( position.parent ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Removes the inline filler.\n\t *\n\t * @private\n\t */\n\tprivate _removeInlineFiller(): void {\n\t\tconst domFillerNode = this._inlineFiller!;\n\n\t\t// Something weird happened and the stored node doesn't contain the filler's text.\n\t\tif ( !startsWithFiller( domFillerNode ) ) {\n\t\t\t/**\n\t\t\t * The inline filler node was lost. Most likely, something overwrote the filler text node\n\t\t\t * in the DOM.\n\t\t\t *\n\t\t\t * @error view-renderer-filler-was-lost\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-renderer-filler-was-lost', this );\n\t\t}\n\n\t\tif ( isInlineFiller( domFillerNode ) ) {\n\t\t\tdomFillerNode.remove();\n\t\t} else {\n\t\t\tdomFillerNode.data = domFillerNode.data.substr( INLINE_FILLER_LENGTH );\n\t\t}\n\n\t\tthis._inlineFiller = null;\n\t}\n\n\t/**\n\t * Checks if the inline {@link module:engine/view/filler filler} should be added.\n\t *\n\t * @private\n\t * @returns {Boolean} `true` if the inline filler should be added.\n\t */\n\tprivate _needsInlineFillerAtSelection(): boolean {\n\t\tif ( this.selection.rangeCount != 1 || !this.selection.isCollapsed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst selectionPosition = this.selection.getFirstPosition()!;\n\t\tconst selectionParent = selectionPosition.parent;\n\t\tconst selectionOffset = selectionPosition.offset;\n\n\t\t// If there is no DOM root we do not care about fillers.\n\t\tif ( !this.domConverter.mapViewToDom( selectionParent.root ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !( selectionParent.is( 'element' ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Prevent adding inline filler inside elements with contenteditable=false.\n\t\t// https://github.com/ckeditor/ckeditor5-engine/issues/1170\n\t\tif ( !isEditable( selectionParent ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have block filler, we do not need inline one.\n\t\tif ( selectionOffset === selectionParent.getFillerOffset!() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst nodeBefore = selectionPosition.nodeBefore;\n\t\tconst nodeAfter = selectionPosition.nodeAfter;\n\n\t\tif ( nodeBefore instanceof ViewText || nodeAfter instanceof ViewText ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks if text needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/text~Text} viewText View text to update.\n\t * @param {Object} options\n\t * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n\t * filler should be rendered.\n\t */\n\tprivate _updateText( viewText: ViewText, options: { inlineFillerPosition?: ViewPosition | null } ) {\n\t\tconst domText = this.domConverter.findCorrespondingDomText( viewText )!;\n\t\tconst newDomText = this.domConverter.viewToDom( viewText ) as DomText;\n\n\t\tconst actualText = domText.data;\n\t\tlet expectedText = newDomText.data;\n\n\t\tconst filler = options.inlineFillerPosition;\n\n\t\tif ( filler && filler.parent == viewText.parent && filler.offset == viewText.index ) {\n\t\t\texpectedText = INLINE_FILLER + expectedText;\n\t\t}\n\n\t\tif ( actualText != expectedText ) {\n\t\t\tconst actions = fastDiff( actualText, expectedText );\n\n\t\t\tfor ( const action of actions ) {\n\t\t\t\tif ( action.type === 'insert' ) {\n\t\t\t\t\tdomText.insertData( action.index, action.values.join( '' ) );\n\t\t\t\t} else { // 'delete'\n\t\t\t\t\tdomText.deleteData( action.index, action.howMany );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if attribute list needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewElement The view element to update.\n\t */\n\tprivate _updateAttrs( viewElement: ViewElement ): void {\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that 'viewElement' is outdated as its mapping was updated\n\t\t\t// in 'this._updateChildrenMappings()'. There is no need to process it as new view element which\n\t\t\t// replaced old 'viewElement' mapping was also added to 'this.markedAttributes'\n\t\t\t// in 'this._updateChildrenMappings()' so it will be processed separately.\n\t\t\treturn;\n\t\t}\n\n\t\tconst domAttrKeys = Array.from( ( domElement as DomElement ).attributes ).map( attr => attr.name );\n\t\tconst viewAttrKeys = viewElement.getAttributeKeys();\n\n\t\t// Add or overwrite attributes.\n\t\tfor ( const key of viewAttrKeys ) {\n\t\t\tthis.domConverter.setDomElementAttribute( domElement as DomElement, key, viewElement.getAttribute( key )!, viewElement );\n\t\t}\n\n\t\t// Remove from DOM attributes which do not exists in the view.\n\t\tfor ( const key of domAttrKeys ) {\n\t\t\t// All other attributes not present in the DOM should be removed.\n\t\t\tif ( !viewElement.hasAttribute( key ) ) {\n\t\t\t\tthis.domConverter.removeDomElementAttribute( domElement as DomElement, key );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if elements child list needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t * @param {module:engine/view/element~Element} viewElement View element to update.\n\t * @param {Object} options\n\t * @param {module:engine/view/position~Position} options.inlineFillerPosition The position where the inline\n\t * filler should be rendered.\n\t */\n\tprivate _updateChildren( viewElement: ViewElement, options: { inlineFillerPosition: ViewPosition | null } ) {\n\t\tconst domElement = this.domConverter.mapViewToDom( viewElement );\n\n\t\tif ( !domElement ) {\n\t\t\t// If there is no `domElement` it means that it was already removed from DOM.\n\t\t\t// There is no need to process it. It will be processed when re-inserted.\n\t\t\treturn;\n\t\t}\n\n\t\tconst inlineFillerPosition = options.inlineFillerPosition;\n\t\tconst actualDomChildren = this.domConverter.mapViewToDom( viewElement )!.childNodes;\n\t\tconst expectedDomChildren = Array.from(\n\t\t\tthis.domConverter.viewChildrenToDom( viewElement, { bind: true } )\n\t\t);\n\n\t\t// Inline filler element has to be created as it is present in the DOM, but not in the view. It is required\n\t\t// during diffing so text nodes could be compared correctly and also during rendering to maintain\n\t\t// proper order and indexes while updating the DOM.\n\t\tif ( inlineFillerPosition && inlineFillerPosition.parent === viewElement ) {\n\t\t\taddInlineFiller( ( domElement as DomElement ).ownerDocument, expectedDomChildren, inlineFillerPosition.offset );\n\t\t}\n\n\t\tconst diff = this._diffNodeLists( actualDomChildren, expectedDomChildren );\n\n\t\tlet i = 0;\n\t\tconst nodesToUnbind: Set<DomNode> = new Set();\n\n\t\t// Handle deletions first.\n\t\t// This is to prevent a situation where an element that already exists in `actualDomChildren` is inserted at a different\n\t\t// index in `actualDomChildren`. Since `actualDomChildren` is a `NodeList`, this works like move, not like an insert,\n\t\t// and it disrupts the whole algorithm. See https://github.com/ckeditor/ckeditor5/issues/6367.\n\t\t//\n\t\t// It doesn't matter in what order we remove or add nodes, as long as we remove and add correct nodes at correct indexes.\n\t\tfor ( const action of diff ) {\n\t\t\tif ( action === 'delete' ) {\n\t\t\t\tnodesToUnbind.add( actualDomChildren[ i ] as DomElement );\n\t\t\t\tremove( actualDomChildren[ i ] );\n\t\t\t} else if ( action === 'equal' ) {\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\ti = 0;\n\n\t\tfor ( const action of diff ) {\n\t\t\tif ( action === 'insert' ) {\n\t\t\t\tinsertAt( domElement as DomElement, i, expectedDomChildren[ i ] );\n\t\t\t\ti++;\n\t\t\t} else if ( action === 'equal' ) {\n\t\t\t\t// Force updating text nodes inside elements which did not change and do not need to be re-rendered (#1125).\n\t\t\t\t// Do it here (not in the loop above) because only after insertions the `i` index is correct.\n\t\t\t\tthis._markDescendantTextToSync( this.domConverter.domToView( expectedDomChildren[ i ] ) as any );\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\t// Unbind removed nodes. When node does not have a parent it means that it was removed from DOM tree during\n\t\t// comparison with the expected DOM. We don't need to check child nodes, because if child node was reinserted,\n\t\t// it was moved to DOM tree out of the removed node.\n\t\tfor ( const node of nodesToUnbind ) {\n\t\t\tif ( !node.parentNode ) {\n\t\t\t\tthis.domConverter.unbindDomElement( node as DomElement );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shorthand for diffing two arrays or node lists of DOM nodes.\n\t *\n\t * @private\n\t * @param {Array.<ViewNode>|NodeList} actualDomChildren Actual DOM children\n\t * @param {Array.<ViewNode>|NodeList} expectedDomChildren Expected DOM children.\n\t * @returns {Array.<String>} The list of actions based on the {@link module:utils/diff~diff} function.\n\t */\n\tprivate _diffNodeLists( actualDomChildren: DomNode[] | NodeList, expectedDomChildren: DomNode[] | NodeList ) {\n\t\tactualDomChildren = filterOutFakeSelectionContainer( actualDomChildren, this._fakeSelectionContainer );\n\n\t\treturn diff( actualDomChildren, expectedDomChildren, sameNodes.bind( null, this.domConverter ) );\n\t}\n\n\t/**\n\t * Finds DOM nodes that were replaced with the similar nodes (same tag name) in the view. All nodes are compared\n\t * within one `insert`/`delete` action group, for example:\n\t *\n\t * \t\tActual DOM:\t\t<p><b>Foo</b>Bar<i>Baz</i><b>Bax</b></p>\n\t * \t\tExpected DOM:\t<p>Bar<b>123</b><i>Baz</i><b>456</b></p>\n\t * \t\tInput actions:\t[ insert, insert, delete, delete, equal, insert, delete ]\n\t * \t\tOutput actions:\t[ insert, replace, delete, equal, replace ]\n\t *\n\t * @private\n\t * @param {Array.<String>} actions Actions array which is a result of the {@link module:utils/diff~diff} function.\n\t * @param {Array.<ViewNode>|NodeList} actualDom Actual DOM children\n\t * @param {Array.<ViewNode>} expectedDom Expected DOM children.\n\t * @returns {Array.<String>} Actions array modified with the `replace` actions.\n\t */\n\tprivate _findReplaceActions(\n\t\tactions: DiffResult[],\n\t\tactualDom: DomNode[] | NodeList,\n\t\texpectedDom: DomNode[]\n\t): ( DiffResult | 'replace' )[] {\n\t\t// If there is no both 'insert' and 'delete' actions, no need to check for replaced elements.\n\t\tif ( actions.indexOf( 'insert' ) === -1 || actions.indexOf( 'delete' ) === -1 ) {\n\t\t\treturn actions;\n\t\t}\n\n\t\tlet newActions: ( DiffResult | 'replace' )[] = [];\n\t\tlet actualSlice = [];\n\t\tlet expectedSlice = [];\n\n\t\tconst counter = { equal: 0, insert: 0, delete: 0 };\n\n\t\tfor ( const action of actions ) {\n\t\t\tif ( action === 'insert' ) {\n\t\t\t\texpectedSlice.push( expectedDom[ counter.equal + counter.insert ] );\n\t\t\t} else if ( action === 'delete' ) {\n\t\t\t\tactualSlice.push( actualDom[ counter.equal + counter.delete ] );\n\t\t\t} else { // equal\n\t\t\t\tnewActions = newActions.concat( diff( actualSlice, expectedSlice, areSimilar ).map( x => x === 'equal' ? 'replace' : x ) );\n\t\t\t\tnewActions.push( 'equal' );\n\t\t\t\t// Reset stored elements on 'equal'.\n\t\t\t\tactualSlice = [];\n\t\t\t\texpectedSlice = [];\n\t\t\t}\n\t\t\tcounter[ action ]++;\n\t\t}\n\n\t\treturn newActions.concat( diff( actualSlice, expectedSlice, areSimilar ).map( x => x === 'equal' ? 'replace' : x ) );\n\t}\n\n\t/**\n\t * Marks text nodes to be synchronized.\n\t *\n\t * If a text node is passed, it will be marked. If an element is passed, all descendant text nodes inside it will be marked.\n\t *\n\t * @private\n\t * @param {module:engine/view/node~ViewNode} viewNode View node to sync.\n\t */\n\tprivate _markDescendantTextToSync( viewNode: ViewNode | undefined ): void {\n\t\tif ( !viewNode ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( viewNode.is( '$text' ) ) {\n\t\t\tthis.markedTexts.add( viewNode );\n\t\t} else if ( viewNode.is( 'element' ) ) {\n\t\t\tfor ( const child of viewNode.getChildren() ) {\n\t\t\t\tthis._markDescendantTextToSync( child );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the selection needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t */\n\tprivate _updateSelection(): void {\n\t\t// Block updating DOM selection in (non-Android) Blink while the user is selecting to prevent accidental selection collapsing.\n\t\t// Note: Structural changes in DOM must trigger selection rendering, though. Nodes the selection was anchored\n\t\t// to, may disappear in DOM which would break the selection (e.g. in real-time collaboration scenarios).\n\t\t// https://github.com/ckeditor/ckeditor5/issues/10562, https://github.com/ckeditor/ckeditor5/issues/10723\n\t\tif ( env.isBlink && !env.isAndroid && this.isSelecting && !this.markedChildren.size ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there is no selection - remove DOM and fake selections.\n\t\tif ( this.selection.rangeCount === 0 ) {\n\t\t\tthis._removeDomSelection();\n\t\t\tthis._removeFakeSelection();\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst domRoot = this.domConverter.mapViewToDom( this.selection.editableElement! ) as DomElement;\n\n\t\t// Do nothing if there is no focus, or there is no DOM element corresponding to selection's editable element.\n\t\tif ( !this.isFocused || !domRoot ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Render selection.\n\t\tif ( this.selection.isFake ) {\n\t\t\tthis._updateFakeSelection( domRoot );\n\t\t} else {\n\t\t\tthis._removeFakeSelection();\n\t\t\tthis._updateDomSelection( domRoot );\n\t\t}\n\t}\n\n\t/**\n\t * Updates the fake selection.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot A valid DOM root where the fake selection container should be added.\n\t */\n\tprivate _updateFakeSelection( domRoot: DomElement ): void {\n\t\tconst domDocument = domRoot.ownerDocument;\n\n\t\tif ( !this._fakeSelectionContainer ) {\n\t\t\tthis._fakeSelectionContainer = createFakeSelectionContainer( domDocument );\n\t\t}\n\n\t\tconst container = this._fakeSelectionContainer;\n\n\t\t// Bind fake selection container with the current selection *position*.\n\t\tthis.domConverter.bindFakeSelection( container, this.selection );\n\n\t\tif ( !this._fakeSelectionNeedsUpdate( domRoot ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !container.parentElement || container.parentElement != domRoot ) {\n\t\t\tdomRoot.appendChild( container );\n\t\t}\n\n\t\tcontainer.textContent = this.selection.fakeSelectionLabel || '\\u00A0';\n\n\t\tconst domSelection = domDocument.getSelection()!;\n\t\tconst domRange = domDocument.createRange();\n\n\t\tdomSelection.removeAllRanges();\n\t\tdomRange.selectNodeContents( container );\n\t\tdomSelection.addRange( domRange );\n\t}\n\n\t/**\n\t * Updates the DOM selection.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot A valid DOM root where the DOM selection should be rendered.\n\t */\n\tprivate _updateDomSelection( domRoot: DomElement ) {\n\t\tconst domSelection = domRoot.ownerDocument.defaultView!.getSelection()!;\n\n\t\t// Let's check whether DOM selection needs updating at all.\n\t\tif ( !this._domSelectionNeedsUpdate( domSelection ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Multi-range selection is not available in most browsers, and, at least in Chrome, trying to\n\t\t// set such selection, that is not continuous, throws an error. Because of that, we will just use anchor\n\t\t// and focus of view selection.\n\t\t// Since we are not supporting multi-range selection, we also do not need to check if proper editable is\n\t\t// selected. If there is any editable selected, it is okay (editable is taken from selection anchor).\n\t\tconst anchor = this.domConverter.viewPositionToDom( this.selection.anchor! )!;\n\t\tconst focus = this.domConverter.viewPositionToDom( this.selection.focus! )!;\n\n\t\tdomSelection.collapse( anchor.parent, anchor.offset );\n\t\tdomSelection.extend( focus.parent, focus.offset );\n\n\t\t// Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n\t\tif ( env.isGecko ) {\n\t\t\tfixGeckoSelectionAfterBr( focus, domSelection );\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether a given DOM selection needs to be updated.\n\t *\n\t * @private\n\t * @param {Selection} domSelection The DOM selection to check.\n\t * @returns {Boolean}\n\t */\n\tprivate _domSelectionNeedsUpdate( domSelection: Selection ): boolean {\n\t\tif ( !this.domConverter.isDomSelectionCorrect( domSelection ) ) {\n\t\t\t// Current DOM selection is in incorrect position. We need to update it.\n\t\t\treturn true;\n\t\t}\n\n\t\tconst oldViewSelection = domSelection && this.domConverter.domSelectionToView( domSelection );\n\n\t\tif ( oldViewSelection && this.selection.isEqual( oldViewSelection ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If selection is not collapsed, it does not need to be updated if it is similar.\n\t\tif ( !this.selection.isCollapsed && this.selection.isSimilar( oldViewSelection ) ) {\n\t\t\t// Selection did not changed and is correct, do not update.\n\t\t\treturn false;\n\t\t}\n\n\t\t// Selections are not similar.\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether the fake selection needs to be updated.\n\t *\n\t * @private\n\t * @param {HTMLElement} domRoot A valid DOM root where a new fake selection container should be added.\n\t * @returns {Boolean}\n\t */\n\tprivate _fakeSelectionNeedsUpdate( domRoot: DomElement ): boolean {\n\t\tconst container = this._fakeSelectionContainer;\n\t\tconst domSelection = domRoot.ownerDocument.getSelection()!;\n\n\t\t// Fake selection needs to be updated if there's no fake selection container, or the container currently sits\n\t\t// in a different root.\n\t\tif ( !container || container.parentElement !== domRoot ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Make sure that the selection actually is within the fake selection.\n\t\tif ( domSelection.anchorNode !== container && !container.contains( domSelection.anchorNode ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn container.textContent !== this.selection.fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Removes the DOM selection.\n\t *\n\t * @private\n\t */\n\tprivate _removeDomSelection(): void {\n\t\tfor ( const doc of this.domDocuments ) {\n\t\t\tconst domSelection = doc.getSelection()!;\n\n\t\t\tif ( domSelection.rangeCount ) {\n\t\t\t\tconst activeDomElement = doc.activeElement!;\n\t\t\t\tconst viewElement = this.domConverter.mapDomToView( activeDomElement as DomElement );\n\n\t\t\t\tif ( activeDomElement && viewElement ) {\n\t\t\t\t\tdomSelection.removeAllRanges();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes the fake selection.\n\t *\n\t * @private\n\t */\n\tprivate _removeFakeSelection(): void {\n\t\tconst container = this._fakeSelectionContainer;\n\n\t\tif ( container ) {\n\t\t\tcontainer.remove();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if focus needs to be updated and possibly updates it.\n\t *\n\t * @private\n\t */\n\tprivate _updateFocus(): void {\n\t\tif ( this.isFocused ) {\n\t\t\tconst editable = this.selection.editableElement;\n\n\t\t\tif ( editable ) {\n\t\t\t\tthis.domConverter.focus( editable );\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Checks if provided element is editable.\n//\n// @private\n// @param {module:engine/view/element~Element} element\n// @returns {Boolean}\nfunction isEditable( element: ViewElement ): boolean {\n\tif ( element.getAttribute( 'contenteditable' ) == 'false' ) {\n\t\treturn false;\n\t}\n\n\tconst parent = element.findAncestor( element => element.hasAttribute( 'contenteditable' ) );\n\n\treturn !parent || parent.getAttribute( 'contenteditable' ) == 'true';\n}\n\n// Adds inline filler at a given position.\n//\n// The position can be given as an array of DOM nodes and an offset in that array,\n// or a DOM parent element and an offset in that element.\n//\n// @private\n// @param {Document} domDocument\n// @param {Element|Array.<ViewNode>} domParentOrArray\n// @param {Number} offset\n// @returns {Text} The DOM text node that contains an inline filler.\nfunction addInlineFiller( domDocument: DomDocument, domParentOrArray: DomNode | DomNode[], offset: number ): DomText {\n\tconst childNodes = domParentOrArray instanceof Array ? domParentOrArray : domParentOrArray.childNodes;\n\tconst nodeAfterFiller = childNodes[ offset ];\n\n\tif ( isText( nodeAfterFiller ) ) {\n\t\tnodeAfterFiller.data = INLINE_FILLER + nodeAfterFiller.data;\n\n\t\treturn nodeAfterFiller;\n\t} else {\n\t\tconst fillerNode = domDocument.createTextNode( INLINE_FILLER );\n\n\t\tif ( Array.isArray( domParentOrArray ) ) {\n\t\t\t( childNodes as DomNode[] ).splice( offset, 0, fillerNode );\n\t\t} else {\n\t\t\tinsertAt( domParentOrArray as DomElement, offset, fillerNode );\n\t\t}\n\n\t\treturn fillerNode;\n\t}\n}\n\n// Whether two DOM nodes should be considered as similar.\n// Nodes are considered similar if they have the same tag name.\n//\n// @private\n// @param {ViewNode} node1\n// @param {ViewNode} node2\n// @returns {Boolean}\nfunction areSimilar( node1: DomNode, node2: DomNode ): boolean {\n\treturn isNode( node1 ) && isNode( node2 ) &&\n\t\t!isText( node1 ) && !isText( node2 ) &&\n\t\t!isComment( node1 ) && !isComment( node2 ) &&\n\t\t( node1 as DomElement ).tagName.toLowerCase() === ( node2 as DomElement ).tagName.toLowerCase();\n}\n\n// Whether two dom nodes should be considered as the same.\n// Two nodes which are considered the same are:\n//\n//\t\t* Text nodes with the same text.\n//\t\t* Element nodes represented by the same object.\n//\t\t* Two block filler elements.\n//\n// @private\n// @param {String} blockFillerMode Block filler mode, see {@link module:engine/view/domconverter~DomConverter#blockFillerMode}.\n// @param {ViewNode} node1\n// @param {ViewNode} node2\n// @returns {Boolean}\nfunction sameNodes( domConverter: DomConverter, actualDomChild: DomNode, expectedDomChild: DomNode ): boolean {\n\t// Elements.\n\tif ( actualDomChild === expectedDomChild ) {\n\t\treturn true;\n\t}\n\t// Texts.\n\telse if ( isText( actualDomChild ) && isText( expectedDomChild ) ) {\n\t\treturn actualDomChild.data === expectedDomChild.data;\n\t}\n\t// Block fillers.\n\telse if ( domConverter.isBlockFiller( actualDomChild ) &&\n\t\tdomConverter.isBlockFiller( expectedDomChild ) ) {\n\t\treturn true;\n\t}\n\n\t// Not matching types.\n\treturn false;\n}\n\n// The following is a Firefox–specific hack (https://github.com/ckeditor/ckeditor5-engine/issues/1439).\n// When the native DOM selection is at the end of the block and preceded by <br /> e.g.\n//\n//\t\t<p>foo<br/>[]</p>\n//\n// which happens a lot when using the soft line break, the browser fails to (visually) move the\n// caret to the new line. A quick fix is as simple as force–refreshing the selection with the same range.\nfunction fixGeckoSelectionAfterBr( focus: ReturnType<DomConverter[ 'viewPositionToDom' ]>, domSelection: DomSelection ) {\n\tconst parent = focus!.parent;\n\n\t// This fix works only when the focus point is at the very end of an element.\n\t// There is no point in running it in cases unrelated to the browser bug.\n\tif ( parent.nodeType != Node.ELEMENT_NODE || focus!.offset != parent.childNodes.length - 1 ) {\n\t\treturn;\n\t}\n\n\tconst childAtOffset = parent.childNodes[ focus!.offset ];\n\n\t// To stay on the safe side, the fix being as specific as possible, it targets only the\n\t// selection which is at the very end of the element and preceded by <br />.\n\tif ( childAtOffset && ( childAtOffset as DomElement ).tagName == 'BR' ) {\n\t\tdomSelection.addRange( domSelection.getRangeAt( 0 ) );\n\t}\n}\n\nfunction filterOutFakeSelectionContainer( domChildList: DomNode[] | NodeList, fakeSelectionContainer: DomElement | null ) {\n\tconst childList = Array.from( domChildList );\n\n\tif ( childList.length == 0 || !fakeSelectionContainer ) {\n\t\treturn childList;\n\t}\n\n\tconst last = childList[ childList.length - 1 ];\n\n\tif ( last == fakeSelectionContainer ) {\n\t\tchildList.pop();\n\t}\n\n\treturn childList;\n}\n\n// Creates a fake selection container for a given document.\n//\n// @private\n// @param {Document} domDocument\n// @returns {HTMLElement}\nfunction createFakeSelectionContainer( domDocument: DomDocument ): DomElement {\n\tconst container = domDocument.createElement( 'div' );\n\n\tcontainer.className = 'ck-fake-selection-container';\n\n\tObject.assign( container.style, {\n\t\tposition: 'fixed',\n\t\ttop: 0,\n\t\tleft: '-9999px',\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/752.\n\t\twidth: '42px'\n\t} );\n\n\t// Fill it with a text node so we can update it later.\n\tcontainer.textContent = '\\u00A0';\n\n\treturn container;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* eslint-disable new-cap */\n\n/**\n * @module engine/view/selection\n */\n\nimport TypeCheckable from './typecheckable';\nimport Range from './range';\nimport Position from './position';\nimport Node from './node';\nimport DocumentSelection from './documentselection';\n\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport count from '@ckeditor/ckeditor5-utils/src/count';\nimport isIterable from '@ckeditor/ckeditor5-utils/src/isiterable';\nimport EmitterMixin from '@ckeditor/ckeditor5-utils/src/emittermixin';\n\nimport type Element from './element';\nimport type Item from './item';\nimport type EditableElement from './editableelement';\n\n/**\n * Class representing an arbirtary selection in the view.\n * See also {@link module:engine/view/documentselection~DocumentSelection}.\n *\n * New selection instances can be created via the constructor or one these methods:\n *\n * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n *\n * A selection can consist of {@link module:engine/view/range~Range ranges} that can be set by using\n * the {@link module:engine/view/selection~Selection#setTo `Selection#setTo()`} method.\n */\nexport default class Selection extends EmitterMixin( TypeCheckable ) {\n\tprivate _ranges: Range[];\n\tprivate _lastRangeBackward: boolean;\n\tprivate _isFake: boolean;\n\tprivate _fakeSelectionLabel: string;\n\n\t/**\n\t * Creates new selection instance.\n\t *\n\t * **Note**: The selection constructor is available as a factory method:\n\t *\n\t * * {@link module:engine/view/view~View#createSelection `View#createSelection()`},\n\t * * {@link module:engine/view/upcastwriter~UpcastWriter#createSelection `UpcastWriter#createSelection()`}.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = writer.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tconst selection = writer.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tconst selection = writer.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tconst selection = writer.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = writer.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = writer.createPositionFromPath( root, path );\n\t *\t\tconst selection = writer.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = writer.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = writer.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = writer.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s constructor allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = writer.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = writer.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tconstructor(\n\t\t...args: [] | [\n\t\t\tselectable?: Selectable,\n\t\t\tplaceOrOffset?: number | 'before' | 'end' | 'after' | 'on' | 'in',\n\t\t\toptions?: {\n\t\t\t\tbackward?: boolean;\n\t\t\t\tfake?: boolean;\n\t\t\t\tlabel?: string;\n\t\t\t}\n\t\t] | [\n\t\t\tselectable?: Selectable,\n\t\t\toptions?: {\n\t\t\t\tbackward?: boolean;\n\t\t\t\tfake?: boolean;\n\t\t\t\tlabel?: string;\n\t\t\t}\n\t\t]\n\t) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Stores all ranges that are selected.\n\t\t *\n\t\t * @protected\n\t\t * @member {Array.<module:engine/view/range~Range>}\n\t\t */\n\t\tthis._ranges = [];\n\n\t\t/**\n\t\t * Specifies whether the last added range was added as a backward or forward range.\n\t\t *\n\t\t * @protected\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._lastRangeBackward = false;\n\n\t\t/**\n\t\t * Specifies whether selection instance is fake.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._isFake = false;\n\n\t\t/**\n\t\t * Fake selection's label.\n\t\t *\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._fakeSelectionLabel = '';\n\n\t\tif ( args.length ) {\n\t\t\tthis.setTo( ...args );\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if selection instance is marked as `fake`.\n\t *\n\t * @see #setTo\n\t * @type {Boolean}\n\t */\n\tpublic get isFake(): boolean {\n\t\treturn this._isFake;\n\t}\n\n\t/**\n\t * Returns fake selection label.\n\t *\n\t * @see #setTo\n\t * @type {String}\n\t */\n\tpublic get fakeSelectionLabel(): string {\n\t\treturn this._fakeSelectionLabel;\n\t}\n\n\t/**\n\t * Selection anchor. Anchor may be described as a position where the selection starts. Together with\n\t * {@link #focus focus} they define the direction of selection, which is important\n\t * when expanding/shrinking selection. Anchor is always the start or end of the most recent added range.\n\t * It may be a bit unintuitive when there are multiple ranges in selection.\n\t *\n\t * @see #focus\n\t * @type {module:engine/view/position~Position}\n\t */\n\tpublic get anchor(): Position | null {\n\t\tif ( !this._ranges.length ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\t\tconst anchor = this._lastRangeBackward ? range.end : range.start;\n\n\t\treturn anchor.clone();\n\t}\n\n\t/**\n\t * Selection focus. Focus is a position where the selection ends.\n\t *\n\t * @see #anchor\n\t * @type {module:engine/view/position~Position}\n\t */\n\tpublic get focus(): Position | null {\n\t\tif ( !this._ranges.length ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst range = this._ranges[ this._ranges.length - 1 ];\n\t\tconst focus = this._lastRangeBackward ? range.start : range.end;\n\n\t\treturn focus.clone();\n\t}\n\n\t/**\n\t * Returns whether the selection is collapsed. Selection is collapsed when there is exactly one range which is\n\t * collapsed.\n\t *\n\t * @type {Boolean}\n\t */\n\tpublic get isCollapsed(): boolean {\n\t\treturn this.rangeCount === 1 && this._ranges[ 0 ].isCollapsed;\n\t}\n\n\t/**\n\t * Returns number of ranges in selection.\n\t *\n\t * @type {Number}\n\t */\n\tpublic get rangeCount(): number {\n\t\treturn this._ranges.length;\n\t}\n\n\t/**\n\t * Specifies whether the {@link #focus} precedes {@link #anchor}.\n\t *\n\t * @type {Boolean}\n\t */\n\tpublic get isBackward(): boolean {\n\t\treturn !this.isCollapsed && this._lastRangeBackward;\n\t}\n\n\t/**\n\t * {@link module:engine/view/editableelement~EditableElement EditableElement} instance that contains this selection, or `null`\n\t * if the selection is not inside an editable element.\n\t *\n\t * @type {module:engine/view/editableelement~EditableElement|null}\n\t */\n\tpublic get editableElement(): EditableElement | null {\n\t\tif ( this.anchor ) {\n\t\t\treturn this.anchor.editableElement;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns an iterable that contains copies of all ranges added to the selection.\n\t *\n\t * @returns {Iterable.<module:engine/view/range~Range>}\n\t */\n\tpublic* getRanges(): IterableIterator<Range> {\n\t\tfor ( const range of this._ranges ) {\n\t\t\tyield range.clone();\n\t\t}\n\t}\n\n\t/**\n\t * Returns copy of the first range in the selection. First range is the one which\n\t * {@link module:engine/view/range~Range#start start} position {@link module:engine/view/position~Position#isBefore is before} start\n\t * position of all other ranges (not to confuse with the first range added to the selection).\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tpublic getFirstRange(): Range | null {\n\t\tlet first = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !first || range.start.isBefore( first.start ) ) {\n\t\t\t\tfirst = range;\n\t\t\t}\n\t\t}\n\n\t\treturn first ? first.clone() : null;\n\t}\n\n\t/**\n\t * Returns copy of the last range in the selection. Last range is the one which {@link module:engine/view/range~Range#end end}\n\t * position {@link module:engine/view/position~Position#isAfter is after} end position of all other ranges (not to confuse\n\t * with the last range added to the selection). Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/range~Range|null}\n\t */\n\tpublic getLastRange(): Range | null {\n\t\tlet last = null;\n\n\t\tfor ( const range of this._ranges ) {\n\t\t\tif ( !last || range.end.isAfter( last.end ) ) {\n\t\t\t\tlast = range;\n\t\t\t}\n\t\t}\n\n\t\treturn last ? last.clone() : null;\n\t}\n\n\t/**\n\t * Returns copy of the first position in the selection. First position is the position that\n\t * {@link module:engine/view/position~Position#isBefore is before} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tpublic getFirstPosition(): Position | null {\n\t\tconst firstRange = this.getFirstRange();\n\n\t\treturn firstRange ? firstRange.start.clone() : null;\n\t}\n\n\t/**\n\t * Returns copy of the last position in the selection. Last position is the position that\n\t * {@link module:engine/view/position~Position#isAfter is after} any other position in the selection ranges.\n\t * Returns `null` if no ranges are added to selection.\n\t *\n\t * @returns {module:engine/view/position~Position|null}\n\t */\n\tpublic getLastPosition(): Position | null {\n\t\tconst lastRange = this.getLastRange();\n\n\t\treturn lastRange ? lastRange.end.clone() : null;\n\t}\n\n\t/**\n\t * Checks whether, this selection is equal to given selection. Selections are equal if they have same directions,\n\t * same number of ranges and all ranges from one selection equal to a range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are equal, `false` otherwise.\n\t */\n\tpublic isEqual( otherSelection: Selection | DocumentSelection ): boolean {\n\t\tif ( this.isFake != otherSelection.isFake ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.isFake && this.fakeSelectionLabel != otherSelection.fakeSelectionLabel ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( this.rangeCount != otherSelection.rangeCount ) {\n\t\t\treturn false;\n\t\t} else if ( this.rangeCount === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( !this.anchor!.isEqual( otherSelection.anchor! ) || !this.focus!.isEqual( otherSelection.focus! ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor ( const thisRange of this._ranges ) {\n\t\t\tlet found = false;\n\n\t\t\tfor ( const otherRange of ( otherSelection as any )._ranges ) {\n\t\t\t\tif ( thisRange.isEqual( otherRange ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether this selection is similar to given selection. Selections are similar if they have same directions, same\n\t * number of ranges, and all {@link module:engine/view/range~Range#getTrimmed trimmed} ranges from one selection are\n\t * equal to any trimmed range from other selection.\n\t *\n\t * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} otherSelection\n\t * Selection to compare with.\n\t * @returns {Boolean} `true` if selections are similar, `false` otherwise.\n\t */\n\tpublic isSimilar( otherSelection: Selection | DocumentSelection ): boolean {\n\t\tif ( this.isBackward != otherSelection.isBackward ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst numOfRangesA = count( this.getRanges() );\n\t\tconst numOfRangesB = count( otherSelection.getRanges() );\n\n\t\t// If selections have different number of ranges, they cannot be similar.\n\t\tif ( numOfRangesA != numOfRangesB ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If both selections have no ranges, they are similar.\n\t\tif ( numOfRangesA == 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Check if each range in one selection has a similar range in other selection.\n\t\tfor ( let rangeA of this.getRanges() ) {\n\t\t\trangeA = rangeA.getTrimmed();\n\n\t\t\tlet found = false;\n\n\t\t\tfor ( let rangeB of otherSelection.getRanges() ) {\n\t\t\t\trangeB = rangeB.getTrimmed();\n\n\t\t\t\tif ( rangeA.start.isEqual( rangeB.start ) && rangeA.end.isEqual( rangeB.end ) ) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// For `rangeA`, neither range in `otherSelection` was similar. So selections are not similar.\n\t\t\tif ( !found ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// There were no ranges that weren't matched. Selections are similar.\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns the selected element. {@link module:engine/view/element~Element Element} is considered as selected if there is only\n\t * one range in the selection, and that range contains exactly one element.\n\t * Returns `null` if there is no selected element.\n\t *\n\t * @returns {module:engine/view/element~Element|null}\n\t */\n\tpublic getSelectedElement(): Element | null {\n\t\tif ( this.rangeCount !== 1 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.getFirstRange()!.getContainedElement();\n\t}\n\n\t/**\n\t * Sets this selection's ranges and direction to the specified location based on the given\n\t * {@link module:engine/view/selection~Selectable selectable}.\n\t *\n\t *\t\t// Sets selection to the given range.\n\t *\t\tconst range = writer.createRange( start, end );\n\t *\t\tselection.setTo( range );\n\t *\n\t *\t\t// Sets selection to given ranges.\n\t * \t\tconst ranges = [ writer.createRange( start1, end2 ), writer.createRange( star2, end2 ) ];\n\t *\t\tselection.setTo( range );\n\t *\n\t *\t\t// Sets selection to the other selection.\n\t *\t\tconst otherSelection = writer.createSelection();\n\t *\t\tselection.setTo( otherSelection );\n\t *\n\t *\t \t// Sets selection to contents of DocumentSelection.\n\t *\t\tselection.setTo( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Sets collapsed selection at the given position.\n\t *\t\tconst position = writer.createPositionAt( root, path );\n\t *\t\tselection.setTo( position );\n\t *\n\t * \t\t// Sets collapsed selection at the position of given item and offset.\n\t *\t\tselection.setTo( paragraph, offset );\n\t *\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t *\t\tselection.setTo( paragraph, 'in' );\n\t *\n\t * Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends just after the item.\n\t *\n\t *\t\tselection.setTo( paragraph, 'on' );\n\t *\n\t * \t\t// Clears selection. Removes all ranges.\n\t *\t\tselection.setTo( null );\n\t *\n\t * `Selection#setTo()` method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Sets selection as backward.\n\t *\t\tselection.setTo( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tselection.setTo( range, { fake: true, label: 'foo' } );\n\t *\n\t * @fires change\n\t * @param {module:engine/view/selection~Selectable} selectable\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Sets place or offset of the selection.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t */\n\tpublic setTo(\n\t\t...args: [\n\t\t\tselectable?: Selectable,\n\t\t\tplaceOrOffset?: number | 'before' | 'end' | 'after' | 'on' | 'in',\n\t\t\toptions?: ConstructorParameters<typeof Selection>[ 2 ]\n\t\t] | [\n\t\t\tselectable?: Selectable,\n\t\t\toptions?: ConstructorParameters<typeof Selection>[ 2 ]\n\t\t]\n\t): void {\n\t\tlet [ selectable, placeOrOffset, options ] = args;\n\n\t\tif ( typeof placeOrOffset == 'object' ) {\n\t\t\toptions = placeOrOffset;\n\t\t\tplaceOrOffset = undefined;\n\t\t}\n\n\t\tif ( selectable === null ) {\n\t\t\tthis._setRanges( [] );\n\t\t\tthis._setFakeOptions( options );\n\t\t} else if ( selectable instanceof Selection || selectable instanceof DocumentSelection ) {\n\t\t\tthis._setRanges( selectable.getRanges(), selectable.isBackward );\n\t\t\tthis._setFakeOptions( { fake: selectable.isFake, label: selectable.fakeSelectionLabel } );\n\t\t} else if ( selectable instanceof Range ) {\n\t\t\tthis._setRanges( [ selectable ], options && options.backward );\n\t\t\tthis._setFakeOptions( options );\n\t\t} else if ( selectable instanceof Position ) {\n\t\t\tthis._setRanges( [ new Range( selectable ) ] );\n\t\t\tthis._setFakeOptions( options );\n\t\t} else if ( selectable instanceof Node ) {\n\t\t\tconst backward = !!options && !!options.backward;\n\t\t\tlet range;\n\n\t\t\tif ( placeOrOffset === undefined ) {\n\t\t\t\t/**\n\t\t\t\t * selection.setTo requires the second parameter when the first parameter is a node.\n\t\t\t\t *\n\t\t\t\t * @error view-selection-setto-required-second-parameter\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'view-selection-setto-required-second-parameter', this );\n\t\t\t} else if ( placeOrOffset == 'in' ) {\n\t\t\t\trange = Range._createIn( selectable as Element );\n\t\t\t} else if ( placeOrOffset == 'on' ) {\n\t\t\t\trange = Range._createOn( selectable );\n\t\t\t} else {\n\t\t\t\trange = new Range( Position._createAt( selectable, placeOrOffset ) );\n\t\t\t}\n\n\t\t\tthis._setRanges( [ range ], backward );\n\t\t\tthis._setFakeOptions( options );\n\t\t} else if ( isIterable( selectable ) ) {\n\t\t\t// We assume that the selectable is an iterable of ranges.\n\t\t\t// Array.from() is used to prevent setting ranges to the old iterable\n\t\t\tthis._setRanges( selectable, options && options.backward );\n\t\t\tthis._setFakeOptions( options );\n\t\t} else {\n\t\t\t/**\n\t\t\t * Cannot set selection to given place.\n\t\t\t *\n\t\t\t * @error view-selection-setto-not-selectable\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-selection-setto-not-selectable', this );\n\t\t}\n\n\t\tthis.fire<ChangeEvent>( 'change' );\n\t}\n\n\t/**\n\t * Moves {@link #focus} to the specified location.\n\t *\n\t * The location can be specified in the same form as {@link module:engine/view/view~View#createPositionAt view.createPositionAt()}\n\t * parameters.\n\t *\n\t * @fires change\n\t * @param {module:engine/view/item~Item|module:engine/view/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tpublic setFocus( itemOrPosition: Item | Position, offset?: number | 'before' | 'end' | 'after' ): void {\n\t\tif ( this.anchor === null ) {\n\t\t\t/**\n\t\t\t * Cannot set selection focus if there are no ranges in selection.\n\t\t\t *\n\t\t\t * @error view-selection-setfocus-no-ranges\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-selection-setfocus-no-ranges', this );\n\t\t}\n\n\t\tconst newFocus = Position._createAt( itemOrPosition, offset );\n\n\t\tif ( newFocus.compareWith( this.focus! ) == 'same' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst anchor = this.anchor;\n\n\t\tthis._ranges.pop();\n\n\t\tif ( newFocus.compareWith( anchor ) == 'before' ) {\n\t\t\tthis._addRange( new Range( newFocus, anchor ), true );\n\t\t} else {\n\t\t\tthis._addRange( new Range( anchor, newFocus ) );\n\t\t}\n\n\t\tthis.fire<ChangeEvent>( 'change' );\n\t}\n\n\t/**\n\t * Replaces all ranges that were added to the selection with given array of ranges. Last range of the array\n\t * is treated like the last added range and is used to set {@link #anchor anchor} and {@link #focus focus}.\n\t * Accepts a flag describing in which way the selection is made.\n\t *\n\t * @private\n\t * @param {Iterable.<module:engine/view/range~Range>} newRanges Iterable object of ranges to set.\n\t * @param {Boolean} [isLastBackward=false] Flag describing if last added range was selected forward - from start to end\n\t * (`false`) or backward - from end to start (`true`). Defaults to `false`.\n\t */\n\tprivate _setRanges( newRanges: Iterable<Range>, isLastBackward: boolean = false ) {\n\t\t// New ranges should be copied to prevent removing them by setting them to `[]` first.\n\t\t// Only applies to situations when selection is set to the same selection or same selection's ranges.\n\t\tnewRanges = Array.from( newRanges );\n\n\t\tthis._ranges = [];\n\n\t\tfor ( const range of newRanges ) {\n\t\t\tthis._addRange( range );\n\t\t}\n\n\t\tthis._lastRangeBackward = !!isLastBackward;\n\t}\n\n\t/**\n\t * Sets this selection instance to be marked as `fake`. A fake selection does not render as browser native selection\n\t * over selected elements and is hidden to the user. This way, no native selection UI artifacts are displayed to\n\t * the user and selection over elements can be represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM (and be\n\t * properly handled by screen readers).\n\t *\n\t * @private\n\t * @param {Object} [options] Options.\n\t * @param {Boolean} [options.fake] If set to true selection will be marked as `fake`.\n\t * @param {String} [options.label=''] Fake selection label.\n\t */\n\tprivate _setFakeOptions( options: ConstructorParameters<typeof Selection>[ 2 ] = {} ) {\n\t\tthis._isFake = !!options.fake;\n\t\tthis._fakeSelectionLabel = options.fake ? options.label || '' : '';\n\t}\n\n\t/**\n\t * Adds a range to the selection. Added range is copied. This means that passed range is not saved in the\n\t * selection instance and you can safely operate on it.\n\t *\n\t * Accepts a flag describing in which way the selection is made - passed range might be selected from\n\t * {@link module:engine/view/range~Range#start start} to {@link module:engine/view/range~Range#end end}\n\t * or from {@link module:engine/view/range~Range#end end} to {@link module:engine/view/range~Range#start start}.\n\t * The flag is used to set {@link #anchor anchor} and {@link #focus focus} properties.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n\t * with ranges already stored in Selection instance.\n\t *\n\t * @private\n\t * @fires change\n\t * @param {module:engine/view/range~Range} range\n\t * @param {Boolean} [isBackward]\n\t */\n\tprivate _addRange( range: Range, isBackward: boolean = false ): void {\n\t\tif ( !( range instanceof Range ) ) {\n\t\t\t/**\n\t\t\t * Selection range set to an object that is not an instance of {@link module:engine/view/range~Range}.\n\t\t\t *\n\t\t\t * @error view-selection-add-range-not-range\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-selection-add-range-not-range',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tthis._pushRange( range );\n\t\tthis._lastRangeBackward = !!isBackward;\n\t}\n\n\t/**\n\t * Adds range to selection - creates copy of given range so it can be safely used and modified.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-selection-range-intersects` if added range intersects\n\t * with ranges already stored in selection instance.\n\t *\n\t * @private\n\t * @param {module:engine/view/range~Range} range\n\t */\n\tprivate _pushRange( range: Range ): void {\n\t\tfor ( const storedRange of this._ranges ) {\n\t\t\tif ( range.isIntersecting( storedRange ) ) {\n\t\t\t\t/**\n\t\t\t\t * Trying to add a range that intersects with another range from selection.\n\t\t\t\t *\n\t\t\t\t * @error view-selection-range-intersects\n\t\t\t\t * @param {module:engine/view/range~Range} addedRange Range that was added to the selection.\n\t\t\t\t * @param {module:engine/view/range~Range} intersectingRange Range from selection that intersects with `addedRange`.\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'view-selection-range-intersects',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ addedRange: range, intersectingRange: storedRange }\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._ranges.push( new Range( range.start, range.end ) );\n\t}\n\n\t/**\n\t * Fired whenever selection ranges are changed through {@link ~Selection Selection API}.\n\t *\n\t * @event change\n\t */\n}\n\n/**\n * Checks whether this object is of the given type.\n *\n *\t\tselection.is( 'selection' ); // -> true\n *\t\tselection.is( 'view:selection' ); // -> true\n *\n *\t\tselection.is( 'model:selection' ); // -> false\n *\t\tselection.is( 'element' ); // -> false\n *\t\tselection.is( 'range' ); // -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * @param {String} type\n * @returns {Boolean}\n */\nSelection.prototype.is = function( type: string ): boolean {\n\treturn type === 'selection' || type === 'view:selection';\n};\n\nexport type ChangeEvent = {\n\tname: 'change';\n\targs: [];\n};\n\n/**\n * An entity that is used to set selection.\n *\n * See also {@link module:engine/view/selection~Selection#setTo}\n *\n * @typedef {\n *    module:engine/view/selection~Selection|\n *    module:engine/view/documentselection~DocumentSelection|\n *    module:engine/view/position~Position|\n *    Iterable.<module:engine/view/range~Range>|\n *    module:engine/view/range~Range|\n *    module:engine/view/item~Item|\n *    null\n * } module:engine/view/selection~Selectable\n */\nexport type Selectable = Selection | DocumentSelection | Position | Iterable<Range> | Range | Item | null;\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/stylesmap\n */\n\nimport { get, isObject, merge, set, unset } from 'lodash-es';\n\n/**\n * Styles map. Allows handling (adding, removing, retrieving) a set of style rules (usually, of an element).\n *\n * The styles map is capable of normalizing style names so e.g. the following operations are possible:\n */\nexport default class StylesMap {\n\tprivate _styles: Record<string, string>;\n\tprivate readonly _styleProcessor: StylesProcessor;\n\n\t/**\n\t * Creates Styles instance.\n\t *\n\t * @param {module:engine/view/stylesmap~StylesProcessor} styleProcessor\n\t */\n\tconstructor( styleProcessor: StylesProcessor ) {\n\t\t/**\n\t\t * Keeps an internal representation of styles map. Normalized styles are kept as object tree to allow unified modification and\n\t\t * value access model using lodash's get, set, unset, etc methods.\n\t\t *\n\t\t * When no style processor rules are defined it acts as simple key-value storage.\n\t\t *\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t\tthis._styles = {};\n\n\t\t/**\n\t\t * An instance of the {@link module:engine/view/stylesmap~StylesProcessor}.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/stylesmap~StylesProcessor}\n\t\t */\n\t\tthis._styleProcessor = styleProcessor;\n\t}\n\n\t/**\n\t * Returns true if style map has no styles set.\n\t *\n\t * @type {Boolean}\n\t */\n\tpublic get isEmpty(): boolean {\n\t\tconst entries = Object.entries( this._styles );\n\t\tconst from = Array.from( entries );\n\n\t\treturn !from.length;\n\t}\n\n\t/**\n\t * Number of styles defined.\n\t *\n\t * @type {Number}\n\t */\n\tpublic get size(): number {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn this.getStyleNames().length;\n\t}\n\n\t/**\n\t * Set styles map to a new value.\n\t *\n\t *\t\tstyles.setTo( 'border:1px solid blue;margin-top:1px;' );\n\t *\n\t * @param {String} inlineStyle\n\t */\n\tpublic setTo( inlineStyle: string ): void {\n\t\tthis.clear();\n\n\t\tconst parsedStyles = Array.from( parseInlineStyles( inlineStyle ).entries() );\n\n\t\tfor ( const [ key, value ] of parsedStyles ) {\n\t\t\tthis._styleProcessor.toNormalizedForm( key, value, this._styles );\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a given style is set.\n\t *\n\t *\t\tstyles.setTo( 'margin-left:1px;' );\n\t *\n\t *\t\tstyles.has( 'margin-left' );    // -> true\n\t *\t\tstyles.has( 'padding' );        // -> false\n\t *\n\t * **Note**: This check supports normalized style names.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.setTo( 'margin:2px;' );\n\t *\n\t *\t\tstyles.has( 'margin' );         // -> true\n\t *\t\tstyles.has( 'margin-top' );     // -> true\n\t *\t\tstyles.has( 'margin-left' );    // -> true\n\t *\n\t *\t\tstyles.remove( 'margin-top' );\n\t *\n\t *\t\tstyles.has( 'margin' );         // -> false\n\t *\t\tstyles.has( 'margin-top' );     // -> false\n\t *\t\tstyles.has( 'margin-left' );    // -> true\n\t *\n\t * @param {String} name Style name.\n\t * @returns {Boolean}\n\t */\n\tpublic has( name: string ): boolean {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst styles = this._styleProcessor.getReducedForm( name, this._styles );\n\n\t\tconst propertyDescriptor = styles.find( ( [ property ] ) => property === name );\n\n\t\t// Only return a value if it is set;\n\t\treturn Array.isArray( propertyDescriptor );\n\t}\n\n\t/**\n\t * Sets a given style.\n\t *\n\t * Can insert one by one:\n\t *\n\t *\t\tstyles.set( 'color', 'blue' );\n\t *\t\tstyles.set( 'margin-right', '1em' );\n\t *\n\t * or many styles at once:\n\t *\n\t *\t\tstyles.set( {\n\t *\t\t\tcolor: 'blue',\n\t *\t\t\t'margin-right': '1em'\n\t *\t\t} );\n\t *\n\t * ***Note**:* This method uses {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules\n\t * enabled style processor rules} to normalize passed values.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.set( 'margin', '2px' );\n\t *\n\t * The above code will set margin to:\n\t *\n\t *\t\tstyles.getNormalized( 'margin' );\n\t *\t\t// -> { top: '2px', right: '2px', bottom: '2px', left: '2px' }\n\t *\n\t * Which makes it possible to retrieve a \"sub-value\":\n\t *\n\t *\t\tstyles.get( 'margin-left' );       // -> '2px'\n\t *\n\t * Or modify it:\n\t *\n\t *\t\tstyles.remove( 'margin-left' );\n\t *\n\t *\t\tstyles.getNormalized( 'margin' );  // -> { top: '1px', bottom: '1px', right: '1px' }\n\t *\t\tstyles.toString();                 // -> 'margin-bottom:1px;margin-right:1px;margin-top:1px;'\n\t *\n\t * This method also allows to set normalized values directly (if a particular styles processor rule was enabled):\n\t *\n\t *\t\tstyles.set( 'border-color', { top: 'blue' } );\n\t *\t\tstyles.set( 'margin', { right: '2em' } );\n\t *\n\t *\t\tstyles.toString();                 // -> 'border-color-top:blue;margin-right:2em;'\n\t *\n\t * @param {String|Object} nameOrObject Style property name or object with multiple properties.\n\t * @param {String|Object} valueOrObject Value to set.\n\t */\n\tpublic set( nameOrObject: string, valueOrObject: StyleValue ): void;\n\tpublic set( nameOrObject: Styles ): void;\n\tpublic set( nameOrObject: string | Styles, valueOrObject?: StyleValue ): void {\n\t\tif ( isObject( nameOrObject ) ) {\n\t\t\tfor ( const [ key, value ] of Object.entries( nameOrObject ) ) {\n\t\t\t\tthis._styleProcessor.toNormalizedForm( key, value, this._styles );\n\t\t\t}\n\t\t} else {\n\t\t\tthis._styleProcessor.toNormalizedForm( nameOrObject, valueOrObject!, this._styles );\n\t\t}\n\t}\n\n\t/**\n\t * Removes given style.\n\t *\n\t *\t\tstyles.setTo( 'background:#f00;margin-right:2px;' );\n\t *\n\t *\t\tstyles.remove( 'background' );\n\t *\n\t *\t\tstyles.toString();   // -> 'margin-right:2px;'\n\t *\n\t * ***Note**:* This method uses {@link module:engine/controller/datacontroller~DataController#addStyleProcessorRules\n\t * enabled style processor rules} to normalize passed values.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.setTo( 'margin:1px' );\n\t *\n\t *\t\tstyles.remove( 'margin-top' );\n\t *\t\tstyles.remove( 'margin-right' );\n\t *\n\t *\t\tstyles.toString(); // -> 'margin-bottom:1px;margin-left:1px;'\n\t *\n\t * @param {String} name Style name.\n\t */\n\tpublic remove( name: string ): void {\n\t\tconst path = toPath( name );\n\n\t\tunset( this._styles, path );\n\t\tdelete this._styles[ name ];\n\n\t\tthis._cleanEmptyObjectsOnPath( path );\n\t}\n\n\t/**\n\t * Returns a normalized style object or a single value.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px 2px 3em;' );\n\t *\n\t *\t\tstyles.getNormalized( 'margin' );\n\t *\t\t// will log:\n\t *\t\t// {\n\t *\t\t//     top: '1px',\n\t *\t\t//     right: '2px',\n\t *\t\t//     bottom: '3em',\n\t *\t\t//     left: '2px'     // normalized value from margin shorthand\n\t *\t\t// }\n\t *\n\t *\t\tstyles.getNormalized( 'margin-left' ); // -> '2px'\n\t *\n\t * **Note**: This method will only return normalized styles if a style processor was defined.\n\t *\n\t * @param {String} name Style name.\n\t * @returns {Object|String|undefined}\n\t */\n\tpublic getNormalized( name?: string ): StyleValue {\n\t\treturn this._styleProcessor.getNormalized( name, this._styles );\n\t}\n\n\t/**\n\t * Returns a normalized style string. Styles are sorted by name.\n\t *\n\t *\t\tstyles.set( 'margin' , '1px' );\n\t *\t\tstyles.set( 'background', '#f00' );\n\t *\n\t *\t\tstyles.toString(); // -> 'background:#f00;margin:1px;'\n\t *\n\t * **Note**: This method supports normalized styles if defined.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tstyles.set( 'margin' , '1px' );\n\t *\t\tstyles.set( 'background', '#f00' );\n\t *\t\tstyles.remove( 'margin-top' );\n\t *\t\tstyles.remove( 'margin-right' );\n\t *\n\t *\t\tstyles.toString(); // -> 'background:#f00;margin-bottom:1px;margin-left:1px;'\n\t *\n\t * @returns {String}\n\t */\n\tpublic toString(): string {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn this._getStylesEntries()\n\t\t\t.map( arr => arr.join( ':' ) )\n\t\t\t.sort()\n\t\t\t.join( ';' ) + ';';\n\t}\n\n\t/**\n\t * Returns property as a value string or undefined if property is not set.\n\t *\n\t *\t\t// Enable 'margin' shorthand processing:\n\t *\t\teditor.data.addStyleProcessorRules( addMarginRules );\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\t\tstyles.set( 'margin-bottom', '3em' );\n\t *\n\t *\t\tstyles.getAsString( 'margin' ); // -> 'margin: 1px 1px 3em;'\n\t *\n\t * Note, however, that all sub-values must be set for the longhand property name to return a value:\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\t\tstyles.remove( 'margin-bottom' );\n\t *\n\t *\t\tstyles.getAsString( 'margin' ); // -> undefined\n\t *\n\t * In the above scenario, it is not possible to return a `margin` value, so `undefined` is returned.\n\t * Instead, you should use:\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\t\tstyles.remove( 'margin-bottom' );\n\t *\n\t *\t\tfor ( const styleName of styles.getStyleNames() ) {\n\t *\t\t\tconsole.log( styleName, styles.getAsString( styleName ) );\n\t *\t\t}\n\t *\t\t// 'margin-top', '1px'\n\t *\t\t// 'margin-right', '1px'\n\t *\t\t// 'margin-left', '1px'\n\t *\n\t * In general, it is recommend to iterate over style names like in the example above. This way, you will always get all\n\t * the currently set style values. So, if all the 4 margin values would be set\n\t * the for-of loop above would yield only `'margin'`, `'1px'`:\n\t *\n\t *\t\tconst styles = new Styles();\n\t *\t\tstyles.setTo( 'margin:1px;' );\n\t *\n\t *\t\tfor ( const styleName of styles.getStyleNames() ) {\n\t *\t\t\tconsole.log( styleName, styles.getAsString( styleName ) );\n\t *\t\t}\n\t *\t\t// 'margin', '1px'\n\t *\n\t * **Note**: To get a normalized version of a longhand property use the {@link #getNormalized `#getNormalized()`} method.\n\t *\n\t * @param {String} propertyName\n\t * @returns {String|undefined}\n\t */\n\tpublic getAsString( propertyName: string ): string | undefined {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this._styles[ propertyName ] && !isObject( this._styles[ propertyName ] ) ) {\n\t\t\t// Try return styles set directly - values that are not parsed.\n\t\t\treturn this._styles[ propertyName ];\n\t\t}\n\n\t\tconst styles = this._styleProcessor.getReducedForm( propertyName, this._styles );\n\n\t\tconst propertyDescriptor = styles.find( ( [ property ] ) => property === propertyName );\n\n\t\t// Only return a value if it is set;\n\t\tif ( Array.isArray( propertyDescriptor ) ) {\n\t\t\treturn propertyDescriptor[ 1 ];\n\t\t}\n\t}\n\n\t/**\n\t * Returns all style properties names as they would appear when using {@link #toString `#toString()`}.\n\t *\n\t * When `expand` is set to true and there's a shorthand style property set, it will also return all equivalent styles:\n\t *\n\t * \t\tstylesMap.setTo( 'margin: 1em' )\n\t *\n\t * will be expanded to:\n\t *\n\t * \t\t[ 'margin', 'margin-top', 'margin-right', 'margin-bottom', 'margin-left' ]\n\t *\n\t * @param {Boolean} [expand=false] Expand shorthand style properties and all return equivalent style representations.\n\t * @returns {Array.<String>}\n\t */\n\tpublic getStyleNames( expand = false ): string[] {\n\t\tif ( this.isEmpty ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif ( expand ) {\n\t\t\treturn this._styleProcessor.getStyleNames( this._styles );\n\t\t}\n\n\t\tconst entries = this._getStylesEntries();\n\n\t\treturn entries.map( ( [ key ] ) => key );\n\t}\n\n\t/**\n\t * Removes all styles.\n\t */\n\tpublic clear(): void {\n\t\tthis._styles = {};\n\t}\n\n\t/**\n\t * Returns normalized styles entries for further processing.\n\t *\n\t * @private\n\t * @returns {Array.<module:engine/view/stylesmap~PropertyDescriptor>}\n\t */\n\tprivate _getStylesEntries(): PropertyDescriptor[] {\n\t\tconst parsed: PropertyDescriptor[] = [];\n\n\t\tconst keys = Object.keys( this._styles );\n\n\t\tfor ( const key of keys ) {\n\t\t\tparsed.push( ...this._styleProcessor.getReducedForm( key, this._styles ) );\n\t\t}\n\n\t\treturn parsed;\n\t}\n\n\t/**\n\t * Removes empty objects upon removing an entry from internal object.\n\t *\n\t * @param {String} path\n\t * @private\n\t */\n\tprivate _cleanEmptyObjectsOnPath( path: string ): void {\n\t\tconst pathParts = path.split( '.' );\n\t\tconst isChildPath = pathParts.length > 1;\n\n\t\tif ( !isChildPath ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst parentPath = pathParts.splice( 0, pathParts.length - 1 ).join( '.' );\n\n\t\tconst parentObject = get( this._styles, parentPath );\n\n\t\tif ( !parentObject ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isParentEmpty = !Array.from( Object.keys( parentObject ) ).length;\n\n\t\tif ( isParentEmpty ) {\n\t\t\tthis.remove( parentPath );\n\t\t}\n\t}\n}\n\n/**\n * Style processor is responsible for writing and reading a normalized styles object.\n */\nexport class StylesProcessor {\n\tprivate readonly _normalizers: Map<string, Normalizer>;\n\tprivate readonly _extractors: Map<string, Extractor>;\n\tprivate readonly _reducers: Map<string, Reducer>;\n\tprivate readonly _consumables: Map<string, string[]>;\n\n\t/**\n\t * Creates StylesProcessor instance.\n\t *\n\t * @private\n\t */\n\tconstructor() {\n\t\tthis._normalizers = new Map();\n\t\tthis._extractors = new Map();\n\t\tthis._reducers = new Map();\n\t\tthis._consumables = new Map();\n\t}\n\n\t/**\n\t * Parse style string value to a normalized object and appends it to styles object.\n\t *\n\t *\t\tconst styles = {};\n\t *\n\t *\t\tstylesProcessor.toNormalizedForm( 'margin', '1px', styles );\n\t *\n\t *\t\t// styles will consist: { margin: { top: '1px', right: '1px', bottom: '1px', left: '1px; } }\n\t *\n\t * **Note**: To define normalizer callbacks use {@link #setNormalizer}.\n\t *\n\t * @param {String} name Name of style property.\n\t * @param {String} propertyValue Value of style property.\n\t * @param {Object} styles Object holding normalized styles.\n\t */\n\tpublic toNormalizedForm( name: string, propertyValue: StyleValue, styles: Styles ): void {\n\t\tif ( isObject( propertyValue ) ) {\n\t\t\tappendStyleValue( styles, toPath( name ), propertyValue );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this._normalizers.has( name ) ) {\n\t\t\tconst normalizer = this._normalizers.get( name )!;\n\n\t\t\tconst { path, value } = normalizer( propertyValue );\n\n\t\t\tappendStyleValue( styles, path, value );\n\t\t} else {\n\t\t\tappendStyleValue( styles, name, propertyValue );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a normalized version of a style property.\n\t *\t\tconst styles = {\n\t *\t\t\tmargin: { top: '1px', right: '1px', bottom: '1px', left: '1px; },\n\t *\t\t\tbackground: { color: '#f00' }\n\t *\t\t};\n\t *\n\t *\t\tstylesProcessor.getNormalized( 'background' );\n\t *\t\t// will return: { color: '#f00' }\n\t *\n\t *\t\tstylesProcessor.getNormalized( 'margin-top' );\n\t *\t\t// will return: '1px'\n\t *\n\t * **Note**: In some cases extracting single value requires defining an extractor callback {@link #setExtractor}.\n\t *\n\t * @param {String} name Name of style property.\n\t * @param {Object} styles Object holding normalized styles.\n\t * @returns {*}\n\t */\n\tpublic getNormalized( name: string | undefined, styles: Styles ): StyleValue {\n\t\tif ( !name ) {\n\t\t\treturn merge( {}, styles );\n\t\t}\n\n\t\t// Might be empty string.\n\t\tif ( styles[ name ] !== undefined ) {\n\t\t\treturn styles[ name ];\n\t\t}\n\n\t\tif ( this._extractors.has( name ) ) {\n\t\t\tconst extractor = this._extractors.get( name )!;\n\n\t\t\tif ( typeof extractor === 'string' ) {\n\t\t\t\treturn get( styles, extractor );\n\t\t\t}\n\n\t\t\tconst value = extractor( name, styles );\n\n\t\t\tif ( value ) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\n\t\treturn get( styles, toPath( name ) );\n\t}\n\n\t/**\n\t * Returns a reduced form of style property form normalized object.\n\t *\n\t * For default margin reducer, the below code:\n\t *\n\t *\t\tstylesProcessor.getReducedForm( 'margin', {\n\t *\t\t\tmargin: { top: '1px', right: '1px', bottom: '2px', left: '1px; }\n\t *\t\t} );\n\t *\n\t * will return:\n\t *\n\t *\t\t[\n\t *\t\t\t[ 'margin', '1px 1px 2px' ]\n\t *\t\t]\n\t *\n\t * because it might be represented as a shorthand 'margin' value. However if one of margin long hand values is missing it should return:\n\t *\n\t *\t\t[\n\t *\t\t\t[ 'margin-top', '1px' ],\n\t *\t\t\t[ 'margin-right', '1px' ],\n\t *\t\t\t[ 'margin-bottom', '2px' ]\n\t *\t\t\t// the 'left' value is missing - cannot use 'margin' shorthand.\n\t *\t\t]\n\t *\n\t * **Note**: To define reducer callbacks use {@link #setReducer}.\n\t *\n\t * @param {String} name Name of style property.\n\t * @param {Object} styles Object holding normalized styles.\n\t * @returns {Array.<module:engine/view/stylesmap~PropertyDescriptor>}\n\t */\n\tpublic getReducedForm( name: string, styles: Styles ): PropertyDescriptor[] {\n\t\tconst normalizedValue = this.getNormalized( name, styles );\n\n\t\t// Might be empty string.\n\t\tif ( normalizedValue === undefined ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif ( this._reducers.has( name ) ) {\n\t\t\tconst reducer = this._reducers.get( name )!;\n\n\t\t\treturn reducer( normalizedValue );\n\t\t}\n\n\t\treturn [ [ name, normalizedValue as string ] ];\n\t}\n\n\t/**\n\t * Return all style properties. Also expand shorthand properties (e.g. `margin`, `background`) if respective extractor is available.\n\t *\n\t * @param {Object} styles Object holding normalized styles.\n\t * @returns {Array.<String>}\n\t */\n\tpublic getStyleNames( styles: Styles ): string[] {\n\t\t// Find all extractable styles that have a value.\n\t\tconst expandedStyleNames = Array.from( this._consumables.keys() ).filter( name => {\n\t\t\tconst style = this.getNormalized( name, styles );\n\n\t\t\tif ( style && typeof style == 'object' ) {\n\t\t\t\treturn Object.keys( style ).length;\n\t\t\t}\n\n\t\t\treturn style;\n\t\t} );\n\n\t\t// For simple styles (for example `color`) we don't have a map of those styles\n\t\t// but they are 1 to 1 with normalized object keys.\n\t\tconst styleNamesKeysSet = new Set( [\n\t\t\t...expandedStyleNames,\n\t\t\t...Object.keys( styles )\n\t\t] );\n\n\t\treturn Array.from( styleNamesKeysSet.values() );\n\t}\n\n\t/**\n\t * Returns related style names.\n\t *\n\t *\t\tstylesProcessor.getRelatedStyles( 'margin' );\n\t *\t\t// will return: [ 'margin-top', 'margin-right', 'margin-bottom', 'margin-left' ];\n\t *\n\t *\t\tstylesProcessor.getRelatedStyles( 'margin-top' );\n\t *\t\t// will return: [ 'margin' ];\n\t *\n\t * **Note**: To define new style relations load an existing style processor or use\n\t * {@link module:engine/view/stylesmap~StylesProcessor#setStyleRelation `StylesProcessor.setStyleRelation()`}.\n\t *\n\t * @param {String} name\n\t * @returns {Array.<String>}\n\t */\n\tpublic getRelatedStyles( name: string ): string[] {\n\t\treturn this._consumables.get( name ) || [];\n\t}\n\n\t/**\n\t * Adds a normalizer method for a style property.\n\t *\n\t * A normalizer returns describing how the value should be normalized.\n\t *\n\t * For instance 'margin' style is a shorthand for four margin values:\n\t *\n\t * - 'margin-top'\n\t * - 'margin-right'\n\t * - 'margin-bottom'\n\t * - 'margin-left'\n\t *\n\t * and can be written in various ways if some values are equal to others. For instance `'margin: 1px 2em;'` is a shorthand for\n\t * `'margin-top: 1px;margin-right: 2em;margin-bottom: 1px;margin-left: 2em'`.\n\t *\n\t * A normalizer should parse various margin notations as a single object:\n\t *\n\t *\t\tconst styles = {\n\t *\t\t\tmargin: {\n\t *\t\t\t\ttop: '1px',\n\t *\t\t\t\tright: '2em',\n\t *\t\t\t\tbottom: '1px',\n\t *\t\t\t\tleft: '2em'\n\t *\t\t\t}\n\t *\t\t};\n\t *\n\t * Thus a normalizer for 'margin' style should return an object defining style path and value to store:\n\t *\n\t *\t\tconst returnValue = {\n\t *\t\t\tpath: 'margin',\n\t *\t\t\tvalue: {\n\t *\t\t\t\ttop: '1px',\n\t *\t\t\t\tright: '2em',\n\t *\t\t\t\tbottom: '1px',\n\t *\t\t\t\tleft: '2em'\n\t *\t\t\t}\n\t *\t\t};\n\t *\n\t * Additionally to fully support all margin notations there should be also defined 4 normalizers for longhand margin notations. Below\n\t * is an example for 'margin-top' style property normalizer:\n\t *\n\t *\t\tstylesProcessor.setNormalizer( 'margin-top', valueString => {\n\t *\t\t\treturn {\n\t *\t\t\t\tpath: 'margin.top',\n\t *\t\t\t\tvalue: valueString\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @param {String} name\n\t * @param {Function} callback\n\t */\n\tpublic setNormalizer( name: string, callback: Normalizer ): void {\n\t\tthis._normalizers.set( name, callback );\n\t}\n\n\t/**\n\t * Adds a extractor callback for a style property.\n\t *\n\t * Most normalized style values are stored as one level objects. It is assumed that `'margin-top'` style will be stored as:\n\t *\n\t *\t\tconst styles = {\n\t *\t\t\tmargin: {\n\t *\t\t\t\ttop: 'value'\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * However, some styles can have conflicting notations and thus it might be harder to extract a style value from shorthand. For instance\n\t * the 'border-top-style' can be defined using `'border-top:solid'`, `'border-style:solid none none none'` or by `'border:solid'`\n\t * shorthands. The default border styles processors stores styles as:\n\t *\n\t *\t\tconst styles = {\n\t *\t\t\tborder: {\n\t *\t\t\t\tstyle: {\n\t *\t\t\t\t\ttop: 'solid'\n\t *\t\t\t\t}\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t * as it is better to modify border style independently from other values. On the other part the output of the border might be\n\t * desired as `border-top`, `border-left`, etc notation.\n\t *\n\t * In the above example a reducer should return a side border value that combines style, color and width:\n\t *\n\t *\t\tstyleProcessor.setExtractor( 'border-top', styles => {\n\t *\t\t\treturn {\n\t *\t\t\t\tcolor: styles.border.color.top,\n\t *\t\t\t\tstyle: styles.border.style.top,\n\t *\t\t\t\twidth: styles.border.width.top\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t * @param {String} name\n\t * @param {Function|String} callbackOrPath Callback that return a requested value or path string for single values.\n\t */\n\tpublic setExtractor( name: string, callbackOrPath: Extractor ): void {\n\t\tthis._extractors.set( name, callbackOrPath );\n\t}\n\n\t/**\n\t * Adds a reducer callback for a style property.\n\t *\n\t * Reducer returns a minimal notation for given style name. For longhand properties it is not required to write a reducer as\n\t * by default the direct value from style path is taken.\n\t *\n\t * For shorthand styles a reducer should return minimal style notation either by returning single name-value tuple or multiple tuples\n\t * if a shorthand cannot be used. For instance for a margin shorthand a reducer might return:\n\t *\n\t *\t\tconst marginShortHandTuple = [\n\t *\t\t\t[ 'margin', '1px 1px 2px' ]\n\t *\t\t];\n\t *\n\t * or a longhand tuples for defined values:\n\t *\n\t *\t\t// Considering margin.bottom and margin.left are undefined.\n\t *\t\tconst marginLonghandsTuples = [\n\t *\t\t\t[ 'margin-top', '1px' ],\n\t *\t\t\t[ 'margin-right', '1px' ]\n\t *\t\t];\n\t *\n\t * A reducer obtains a normalized style value:\n\t *\n\t *\t\t// Simplified reducer that always outputs 4 values which are always present:\n\t *\t\tstylesProcessor.setReducer( 'margin', margin => {\n\t *\t\t\treturn [\n\t *\t\t\t\t[ 'margin', `${ margin.top } ${ margin.right } ${ margin.bottom } ${ margin.left }` ]\n\t *\t\t\t]\n\t *\t\t} );\n\t *\n\t * @param {String} name\n\t * @param {Function} callback\n\t */\n\tpublic setReducer( name: string, callback: Reducer ): void {\n\t\tthis._reducers.set( name, callback );\n\t}\n\n\t/**\n\t * Defines a style shorthand relation to other style notations.\n\t *\n\t *\t\tstylesProcessor.setStyleRelation( 'margin', [\n\t *\t\t\t'margin-top',\n\t *\t\t\t'margin-right',\n\t *\t\t\t'margin-bottom',\n\t *\t\t\t'margin-left'\n\t *\t\t] );\n\t *\n\t * This enables expanding of style names for shorthands. For instance, if defined,\n\t * {@link module:engine/conversion/viewconsumable~ViewConsumable view consumable} items are automatically created\n\t * for long-hand margin style notation alongside the `'margin'` item.\n\t *\n\t * This means that when an element being converted has a style `margin`, a converter for `margin-left` will work just\n\t * fine since the view consumable will contain a consumable `margin-left` item (thanks to the relation) and\n\t * `element.getStyle( 'margin-left' )` will work as well assuming that the style processor was correctly configured.\n\t * However, once `margin-left` is consumed, `margin` will not be consumable anymore.\n\t *\n\t * @param {String} shorthandName\n\t * @param {Array.<String>} styleNames\n\t */\n\tpublic setStyleRelation( shorthandName: string, styleNames: string[] ): void {\n\t\tthis._mapStyleNames( shorthandName, styleNames );\n\n\t\tfor ( const alsoName of styleNames ) {\n\t\t\tthis._mapStyleNames( alsoName, [ shorthandName ] );\n\t\t}\n\t}\n\n\t/**\n\t * Set two-way binding of style names.\n\t *\n\t * @param {String} name\n\t * @param {Array.<String>} styleNames\n\t * @private\n\t */\n\tprivate _mapStyleNames( name: string, styleNames: string[] ) {\n\t\tif ( !this._consumables.has( name ) ) {\n\t\t\tthis._consumables.set( name, [] );\n\t\t}\n\n\t\tthis._consumables.get( name )!.push( ...styleNames );\n\t}\n}\n\n// Parses inline styles and puts property - value pairs into styles map.\n//\n// @param {String} stylesString Styles to parse.\n// @returns {Map.<String, String>} stylesMap Map of parsed properties and values.\nfunction parseInlineStyles( stylesString: string ): Map<string, string> {\n\t// `null` if no quote was found in input string or last found quote was a closing quote. See below.\n\tlet quoteType = null;\n\tlet propertyNameStart = 0;\n\tlet propertyValueStart = 0;\n\tlet propertyName = null;\n\n\tconst stylesMap = new Map();\n\n\t// Do not set anything if input string is empty.\n\tif ( stylesString === '' ) {\n\t\treturn stylesMap;\n\t}\n\n\t// Fix inline styles that do not end with `;` so they are compatible with algorithm below.\n\tif ( stylesString.charAt( stylesString.length - 1 ) != ';' ) {\n\t\tstylesString = stylesString + ';';\n\t}\n\n\t// Seek the whole string for \"special characters\".\n\tfor ( let i = 0; i < stylesString.length; i++ ) {\n\t\tconst char = stylesString.charAt( i );\n\n\t\tif ( quoteType === null ) {\n\t\t\t// No quote found yet or last found quote was a closing quote.\n\t\t\tswitch ( char ) {\n\t\t\t\tcase ':':\n\t\t\t\t\t// Most of time colon means that property name just ended.\n\t\t\t\t\t// Sometimes however `:` is found inside property value (for example in background image url).\n\t\t\t\t\tif ( !propertyName ) {\n\t\t\t\t\t\t// Treat this as end of property only if property name is not already saved.\n\t\t\t\t\t\t// Save property name.\n\t\t\t\t\t\tpropertyName = stylesString.substr( propertyNameStart, i - propertyNameStart );\n\t\t\t\t\t\t// Save this point as the start of property value.\n\t\t\t\t\t\tpropertyValueStart = i + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase '\"':\n\t\t\t\tcase '\\'':\n\t\t\t\t\t// Opening quote found (this is an opening quote, because `quoteType` is `null`).\n\t\t\t\t\tquoteType = char;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ';': {\n\t\t\t\t\t// Property value just ended.\n\t\t\t\t\t// Use previously stored property value start to obtain property value.\n\t\t\t\t\tconst propertyValue = stylesString.substr( propertyValueStart, i - propertyValueStart );\n\n\t\t\t\t\tif ( propertyName ) {\n\t\t\t\t\t\t// Save parsed part.\n\t\t\t\t\t\tstylesMap.set( propertyName.trim(), propertyValue.trim() );\n\t\t\t\t\t}\n\n\t\t\t\t\tpropertyName = null;\n\n\t\t\t\t\t// Save this point as property name start. Property name starts immediately after previous property value ends.\n\t\t\t\t\tpropertyNameStart = i + 1;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( char === quoteType ) {\n\t\t\t// If a quote char is found and it is a closing quote, mark this fact by `null`-ing `quoteType`.\n\t\t\tquoteType = null;\n\t\t}\n\t}\n\n\treturn stylesMap;\n}\n\n// Return lodash compatible path from style name.\nfunction toPath( name: string ): string {\n\treturn name.replace( '-', '.' );\n}\n\n// Appends style definition to the styles object.\n//\n// @param {String} nameOrPath\n// @param {String|Object} valueOrObject\n// @private\nfunction appendStyleValue( stylesObject: Styles, nameOrPath: string, valueOrObject: StyleValue ) {\n\tlet valueToSet = valueOrObject;\n\n\tif ( isObject( valueOrObject ) ) {\n\t\tvalueToSet = merge( {}, get( stylesObject, nameOrPath ), valueOrObject );\n\t}\n\n\tset( stylesObject, nameOrPath, valueToSet );\n}\n\n/**\n * A CSS style property descriptor that contains tuplet of two strings:\n *\n * - first string describes property name\n * - second string describes property value\n *\n *\t\tconst marginDescriptor = [ 'margin', '2px 3em' ];\n *\t\tconst marginTopDescriptor = [ 'margin-top', '2px' ];\n *\n * @typedef {Array.<String, String>} module:engine/view/stylesmap~PropertyDescriptor\n */\nexport type PropertyDescriptor = [ string, string ];\n\n/**\n * An object describing values associated with the sides of a box, for instance margins, paddings,\n * border widths, border colors, etc.\n *\n *\t\tconst margin = {\n *\t\t\ttop: '1px',\n *\t\t\tright: '3px',\n *\t\t\tbottom: '3px',\n *\t\t\tleft: '7px'\n *\t\t};\n *\n *\t\tconst borderColor = {\n *\t\t\ttop: 'red',\n *\t\t\tright: 'blue',\n *\t\t\tbottom: 'blue',\n *\t\t\tleft: 'red'\n *\t\t};\n *\n * @typedef {Object} module:engine/view/stylesmap~BoxSides\n *\n * @property {String} top Top side value.\n * @property {String} right Right side value.\n * @property {String} bottom Bottom side value.\n * @property {String} left Left side value.\n */\nexport type BoxSides = {\n\ttop: undefined | string;\n\tleft: undefined | string;\n\tright: undefined | string;\n\tbottom: undefined | string;\n};\n\n/**\n * TODO docs\n */\nexport interface Styles {\n\t[ name: string ]: StyleValue;\n}\n\n/**\n * TODO docs\n */\nexport type StyleValue = string | string[] | Styles | BoxSides;\n\n/**\n * TODO docs\n */\nexport type Normalizer = ( name: string ) => { path: string; value: StyleValue };\n\n/**\n * TODO docs\n */\nexport type Extractor = string | ( ( name: string, styles: Styles ) => StyleValue | undefined );\n\n/**\n * TODO docs\n */\nexport type Reducer = ( value: StyleValue ) => PropertyDescriptor[];\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/text\n */\n\nimport Node from './node';\n\nimport type Document from './document';\n\n/**\n * Tree view text node.\n *\n * The constructor of this class should not be used directly. To create a new text node instance\n * use the {@link module:engine/view/downcastwriter~DowncastWriter#createText `DowncastWriter#createText()`}\n * method when working on data downcasted from the model or the\n * {@link module:engine/view/upcastwriter~UpcastWriter#createText `UpcastWriter#createText()`}\n * method when working on non-semantic views.\n *\n * @extends module:engine/view/node~Node\n */\nexport default class Text extends Node {\n\tprivate _textData: string;\n\n\t/**\n\t * Creates a tree view text node.\n\t *\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this text node belongs.\n\t * @param {String} data The text's data.\n\t */\n\tconstructor( document: Document, data: string ) {\n\t\tsuper( document );\n\n\t\t/**\n\t\t * The text content.\n\t\t *\n\t\t * Setting the data fires the {@link module:engine/view/node~Node#event:change:text change event}.\n\t\t *\n\t\t * @protected\n\t\t * @member {String} module:engine/view/text~Text#_textData\n\t\t */\n\t\tthis._textData = data;\n\t}\n\n\t/**\n\t * The text content.\n\t *\n\t * @readonly\n\t * @type {String}\n\t */\n\tpublic get data(): string {\n\t\treturn this._textData;\n\t}\n\n\t/**\n\t * The `_data` property is controlled by a getter and a setter.\n\t *\n\t * The getter is required when using the addition assignment operator on protected property:\n\t *\n\t *\t\tconst foo = downcastWriter.createText( 'foo' );\n\t *\t\tconst bar = downcastWriter.createText( 'bar' );\n\t *\n\t *\t\tfoo._data += bar.data;   // executes: `foo._data = foo._data + bar.data`\n\t *\t\tconsole.log( foo.data ); // prints: 'foobar'\n\t *\n\t * If the protected getter didn't exist, `foo._data` will return `undefined` and result of the merge will be invalid.\n\t *\n\t * The setter sets data and fires the {@link module:engine/view/node~Node#event:change:text change event}.\n\t *\n\t * @protected\n\t * @type {String}\n\t */\n\tpublic get _data(): string {\n\t\treturn this.data;\n\t}\n\n\tpublic set _data( data: string ) {\n\t\tthis._fireChange( 'text', this );\n\n\t\tthis._textData = data;\n\t}\n\n\t/**\n\t * Checks if this text node is similar to other text node.\n\t * Both nodes should have the same data to be considered as similar.\n\t *\n\t * @param {module:engine/view/node~Node} otherNode Node to check if it is same as this node.\n\t * @returns {Boolean}\n\t */\n\tpublic isSimilar( otherNode: Node ): boolean {\n\t\tif ( !( otherNode instanceof Text ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this === otherNode || this.data === otherNode.data;\n\t}\n\n\t/**\n\t * Clones this node.\n\t *\n\t * @protected\n\t * @returns {module:engine/view/text~Text} Text node that is a clone of this node.\n\t */\n\tpublic _clone(): Text {\n\t\treturn new Text( this.document, this.data );\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewText: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewText: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n/**\n * Checks whether this object is of the given type.\n *\n *\t\ttext.is( '$text' ); // -> true\n *\t\ttext.is( 'node' ); // -> true\n *\t\ttext.is( 'view:$text' ); // -> true\n *\t\ttext.is( 'view:node' ); // -> true\n *\n *\t\ttext.is( 'model:$text' ); // -> false\n *\t\ttext.is( 'element' ); // -> false\n *\t\ttext.is( 'range' ); // -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * **Note:** Until version 20.0.0 this method wasn't accepting `'$text'` type. The legacy `'text'` type is still\n * accepted for backward compatibility.\n *\n * @param {String} type Type to check.\n * @returns {Boolean}\n */\nText.prototype.is = function( type: string ): boolean {\n\treturn type === '$text' || type === 'view:$text' ||\n\t\t// This are legacy values kept for backward compatibility.\n\t\ttype === 'text' || type === 'view:text' ||\n\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\ttype === 'node' || type === 'view:node';\n};\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/textproxy\n */\n\nimport TypeCheckable from './typecheckable';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\n\nimport type Document from './document';\nimport type DocumentFragment from './documentfragment';\nimport type Element from './element';\nimport type Node from './node';\nimport type Text from './text';\n\n/**\n * TextProxy is a wrapper for substring of {@link module:engine/view/text~Text}. Instance of this class is created by\n * {@link module:engine/view/treewalker~TreeWalker} when only a part of {@link module:engine/view/text~Text} needs to be returned.\n *\n * `TextProxy` has an API similar to {@link module:engine/view/text~Text Text} and allows to do most of the common tasks performed\n * on view nodes.\n *\n * **Note:** Some `TextProxy` instances may represent whole text node, not just a part of it.\n * See {@link module:engine/view/textproxy~TextProxy#isPartial}.\n *\n * **Note:** `TextProxy` is a readonly interface.\n *\n * **Note:** `TextProxy` instances are created on the fly basing on the current state of parent {@link module:engine/view/text~Text}.\n * Because of this it is highly unrecommended to store references to `TextProxy instances because they might get\n * invalidated due to operations on Document. Also TextProxy is not a {@link module:engine/view/node~Node} so it can not be\n * inserted as a child of {@link module:engine/view/element~Element}.\n *\n * `TextProxy` instances are created by {@link module:engine/view/treewalker~TreeWalker view tree walker}. You should not need to create\n * an instance of this class by your own.\n */\nexport default class TextProxy extends TypeCheckable {\n\tpublic readonly textNode: Text;\n\tpublic readonly data: string;\n\tpublic readonly offsetInText: number;\n\n\t/**\n\t * Creates a text proxy.\n\t *\n\t * @protected\n\t * @param {module:engine/view/text~Text} textNode Text node which part is represented by this text proxy.\n\t * @param {Number} offsetInText Offset in {@link module:engine/view/textproxy~TextProxy#textNode text node}\n\t * from which the text proxy starts.\n\t * @param {Number} length Text proxy length, that is how many text node's characters, starting from `offsetInText` it represents.\n\t * @constructor\n\t */\n\tconstructor( textNode: Text, offsetInText: number, length: number ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Reference to the {@link module:engine/view/text~Text} element which TextProxy is a substring.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/text~Text} module:engine/view/textproxy~TextProxy#textNode\n\t\t */\n\t\tthis.textNode = textNode;\n\n\t\tif ( offsetInText < 0 || offsetInText > textNode.data.length ) {\n\t\t\t/**\n\t\t\t * Given offsetInText value is incorrect.\n\t\t\t *\n\t\t\t * @error view-textproxy-wrong-offsetintext\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-offsetintext', this );\n\t\t}\n\n\t\tif ( length < 0 || offsetInText + length > textNode.data.length ) {\n\t\t\t/**\n\t\t\t * Given length value is incorrect.\n\t\t\t *\n\t\t\t * @error view-textproxy-wrong-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-textproxy-wrong-length', this );\n\t\t}\n\n\t\t/**\n\t\t * Text data represented by this text proxy.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:engine/view/textproxy~TextProxy#data\n\t\t */\n\t\tthis.data = textNode.data.substring( offsetInText, offsetInText + length );\n\n\t\t/**\n\t\t * Offset in the `textNode` where this `TextProxy` instance starts.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number} module:engine/view/textproxy~TextProxy#offsetInText\n\t\t */\n\t\tthis.offsetInText = offsetInText;\n\t}\n\n\t/**\n\t * Offset size of this node.\n\t *\n\t * @readonly\n\t * @type {Number}\n\t */\n\tpublic get offsetSize(): number {\n\t\treturn this.data.length;\n\t}\n\n\t/**\n\t * Flag indicating whether `TextProxy` instance covers only part of the original {@link module:engine/view/text~Text text node}\n\t * (`true`) or the whole text node (`false`).\n\t *\n\t * This is `false` when text proxy starts at the very beginning of {@link module:engine/view/textproxy~TextProxy#textNode textNode}\n\t * ({@link module:engine/view/textproxy~TextProxy#offsetInText offsetInText} equals `0`) and text proxy sizes is equal to\n\t * text node size.\n\t *\n\t * @readonly\n\t * @type {Boolean}\n\t */\n\tpublic get isPartial(): boolean {\n\t\treturn this.data.length !== this.textNode.data.length;\n\t}\n\n\t/**\n\t * Parent of this text proxy, which is same as parent of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/element~Element|module:engine/view/documentfragment~DocumentFragment|null}\n\t */\n\tpublic get parent(): Element | DocumentFragment | null {\n\t\treturn this.textNode.parent;\n\t}\n\n\t/**\n\t * Root of this text proxy, which is same as root of text node represented by this text proxy.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/node~Node|module:engine/view/documentfragment~DocumentFragment}\n\t */\n\tpublic get root(): Node | DocumentFragment {\n\t\treturn this.textNode.root;\n\t}\n\n\t/**\n\t * {@link module:engine/view/document~Document View document} that owns this text proxy, or `null` if the text proxy is inside\n\t * {@link module:engine/view/documentfragment~DocumentFragment document fragment}.\n\t *\n\t * @readonly\n\t * @type {module:engine/view/document~Document|null}\n\t */\n\tpublic get document(): Document | null {\n\t\treturn this.textNode.document;\n\t}\n\n\t/**\n\t * Returns ancestors array of this text proxy.\n\t *\n\t * @param {Object} options Options object.\n\t * @param {Boolean} [options.includeSelf=false] When set to `true` {#textNode} will be also included in parent's array.\n\t * @param {Boolean} [options.parentFirst=false] When set to `true`, array will be sorted from text proxy parent to\n\t * root element, otherwise root element will be the first item in the array.\n\t * @returns {Array} Array with ancestors.\n\t */\n\tpublic getAncestors( options: {\n\t\tincludeSelf?: boolean;\n\t\tparentFirst?: boolean;\n\t} = {} ): ( Text | Element | DocumentFragment )[] {\n\t\tconst ancestors: ( Text | Element | DocumentFragment )[] = [];\n\t\tlet parent: Text | Element | DocumentFragment | null = options.includeSelf ? this.textNode : this.parent;\n\n\t\twhile ( parent !== null ) {\n\t\t\tancestors[ options.parentFirst ? 'push' : 'unshift' ]( parent );\n\t\t\tparent = parent.parent;\n\t\t}\n\n\t\treturn ancestors;\n\t}\n\n\t// @if CK_DEBUG_ENGINE // toString() {\n\t// @if CK_DEBUG_ENGINE // \treturn `#${ this.data }`;\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // log() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n\n\t// @if CK_DEBUG_ENGINE // logExtended() {\n\t// @if CK_DEBUG_ENGINE // \tconsole.log( 'ViewTextProxy: ' + this );\n\t// @if CK_DEBUG_ENGINE // }\n}\n\n/**\n * Checks whether this object is of the given type.\n *\n *\t\ttextProxy.is( '$textProxy' ); // -> true\n *\t\ttextProxy.is( 'view:$textProxy' ); // -> true\n *\n *\t\ttextProxy.is( 'model:$textProxy' ); // -> false\n *\t\ttextProxy.is( 'element' ); // -> false\n *\t\ttextProxy.is( 'range' ); // -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * **Note:** Until version 20.0.0 this method wasn't accepting `'$textProxy'` type. The legacy `'textProxy'` type is still\n * accepted for backward compatibility.\n *\n * @param {String} type Type to check.\n * @returns {Boolean}\n */\nTextProxy.prototype.is = function( type: string ): boolean {\n\treturn type === '$textProxy' || type === 'view:$textProxy' ||\n\t\t// This are legacy values kept for backward compatibility.\n\t\ttype === 'textProxy' || type === 'view:textProxy';\n};\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/treewalker\n */\n\nimport Element from './element';\nimport Text from './text';\nimport TextProxy from './textproxy';\nimport Position from './position';\nimport type Item from './item';\nimport type DocumentFragment from './documentfragment';\nimport type Range from './range';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport type Node from './node';\n\n/**\n * Position iterator class. It allows to iterate forward and backward over the document.\n */\nexport default class TreeWalker implements Iterable<TreeWalkerValue> {\n\tpublic readonly direction: TreeWalkerDirection;\n\tpublic readonly boundaries: Range | null;\n\tpublic position: Position;\n\tpublic readonly singleCharacters: boolean;\n\tpublic readonly shallow: boolean;\n\tpublic readonly ignoreElementEnd: boolean;\n\n\tprivate _boundaryStartParent: Node | DocumentFragment | null;\n\tprivate _boundaryEndParent: Node | DocumentFragment | null;\n\n\t/**\n\t * Creates a range iterator. All parameters are optional, but you have to specify either `boundaries` or `startPosition`.\n\t *\n\t * @constructor\n\t * @param {TODO ~TreeWalkerOptions} options Object with configuration.\n\t */\n\tconstructor( options: TreeWalkerOptions = {} ) {\n\t\tif ( !options.boundaries && !options.startPosition ) {\n\t\t\t/**\n\t\t\t * Neither boundaries nor starting position have been defined.\n\t\t\t *\n\t\t\t * @error view-tree-walker-no-start-position\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'view-tree-walker-no-start-position',\n\t\t\t\tnull\n\t\t\t);\n\t\t}\n\n\t\tif ( options.direction && options.direction != 'forward' && options.direction != 'backward' ) {\n\t\t\t/**\n\t\t\t * Only `backward` and `forward` direction allowed.\n\t\t\t *\n\t\t\t * @error view-tree-walker-unknown-direction\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-tree-walker-unknown-direction', options.startPosition, { direction: options.direction } );\n\t\t}\n\n\t\t/**\n\t\t * Iterator boundaries.\n\t\t *\n\t\t * When the iterator is walking `'forward'` on the end of boundary or is walking `'backward'`\n\t\t * on the start of boundary, then `{ done: true }` is returned.\n\t\t *\n\t\t * If boundaries are not defined they are set before first and after last child of the root node.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/range~Range} module:engine/view/treewalker~TreeWalker#boundaries\n\t\t */\n\t\tthis.boundaries = options.boundaries || null;\n\n\t\t/**\n\t\t * Iterator position. If start position is not defined then position depends on {@link #direction}. If direction is\n\t\t * `'forward'` position starts form the beginning, when direction is `'backward'` position starts from the end.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/view/position~Position} module:engine/view/treewalker~TreeWalker#position\n\t\t */\n\t\tif ( options.startPosition ) {\n\t\t\tthis.position = Position._createAt( options.startPosition );\n\t\t} else {\n\t\t\tthis.position = Position._createAt( options.boundaries![ options.direction == 'backward' ? 'end' : 'start' ] );\n\t\t}\n\n\t\t/**\n\t\t * Walking direction. Defaults `'forward'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {'backward'|'forward'} module:engine/view/treewalker~TreeWalker#direction\n\t\t */\n\t\tthis.direction = options.direction || 'forward';\n\n\t\t/**\n\t\t * Flag indicating whether all characters from {@link module:engine/view/text~Text} should be returned as one\n\t\t * {@link module:engine/view/text~Text} or one by one as {@link module:engine/view/textproxy~TextProxy}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#singleCharacters\n\t\t */\n\t\tthis.singleCharacters = !!options.singleCharacters;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should enter elements or not. If the iterator is shallow child nodes of any\n\t\t * iterated node will not be returned along with `elementEnd` tag.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#shallow\n\t\t */\n\t\tthis.shallow = !!options.shallow;\n\n\t\t/**\n\t\t * Flag indicating whether iterator should ignore `elementEnd` tags. If set to `true`, walker will not\n\t\t * return a parent node of the start position. Each {@link module:engine/view/element~Element} will be returned once.\n\t\t * When set to `false` each element might be returned twice: for `'elementStart'` and `'elementEnd'`.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} module:engine/view/treewalker~TreeWalker#ignoreElementEnd\n\t\t */\n\t\tthis.ignoreElementEnd = !!options.ignoreElementEnd;\n\n\t\t/**\n\t\t * Start boundary parent.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryStartParent\n\t\t */\n\t\tthis._boundaryStartParent = this.boundaries ? this.boundaries.start.parent : null;\n\n\t\t/**\n\t\t * End boundary parent.\n\t\t *\n\t\t * @private\n\t\t * @member {module:engine/view/node~Node} module:engine/view/treewalker~TreeWalker#_boundaryEndParent\n\t\t */\n\t\tthis._boundaryEndParent = this.boundaries ? this.boundaries.end.parent : null;\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<module:engine/view/treewalker~TreeWalkerValue>}\n\t */\n\tpublic [ Symbol.iterator ](): IterableIterator<TreeWalkerValue> {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves {@link #position} in the {@link #direction} skipping values as long as the callback function returns `true`.\n\t *\n\t * For example:\n\t *\n\t * \t\twalker.skip( value => value.type == 'text' ); // <p>{}foo</p> -> <p>foo[]</p>\n\t * \t\twalker.skip( value => true ); // Move the position to the end: <p>{}foo</p> -> <p>foo</p>[]\n\t * \t\twalker.skip( value => false ); // Do not move the position.\n\t *\n\t * @param {Function} skip Callback function. Gets {@link module:engine/view/treewalker~TreeWalkerValue} and should\n\t * return `true` if the value should be skipped or `false` if not.\n\t */\n\tpublic skip( skip: ( value: TreeWalkerValue ) => boolean ): void {\n\t\tlet done, value, prevPosition;\n\n\t\tdo {\n\t\t\tprevPosition = this.position;\n\n\t\t\t( { done, value } = this.next() );\n\t\t} while ( !done && skip( value ) );\n\n\t\tif ( !done ) {\n\t\t\tthis.position = prevPosition;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the next tree walker's value.\n\t *\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} Object implementing iterator interface, returning\n\t * information about taken step.\n\t */\n\tpublic next(): IteratorResult<TreeWalkerValue> {\n\t\tif ( this.direction == 'forward' ) {\n\t\t\treturn this._next();\n\t\t} else {\n\t\t\treturn this._previous();\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step forward in view. Moves the {@link #position} to the next position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done `true` if iterator is done, `false` otherwise.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\tprivate _next(): IteratorResult<TreeWalkerValue> {\n\t\tlet position = this.position.clone();\n\t\tconst previousPosition = this.position;\n\t\tconst parent = position.parent;\n\n\t\t// We are at the end of the root.\n\t\tif ( parent.parent === null && position.offset === ( parent as any ).childCount ) {\n\t\t\treturn { done: true, value: undefined };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent === this._boundaryEndParent && position.offset == this.boundaries!.end.offset ) {\n\t\t\treturn { done: true, value: undefined };\n\t\t}\n\n\t\t// Get node just after current position.\n\t\tlet node;\n\n\t\t// Text is a specific parent because it contains string instead of child nodes.\n\t\tif ( parent instanceof Text ) {\n\t\t\tif ( position.isAtEnd ) {\n\t\t\t\t// Prevent returning \"elementEnd\" for Text node. Skip that value and return the next walker step.\n\t\t\t\tthis.position = Position._createAfter( parent );\n\n\t\t\t\treturn this._next();\n\t\t\t}\n\n\t\t\tnode = parent.data[ position.offset ];\n\t\t} else {\n\t\t\tnode = ( parent as Element | DocumentFragment ).getChild( position.offset );\n\t\t}\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition = new Position( node, 0 );\n\t\t\t} else {\n\t\t\t\tposition.offset++;\n\t\t\t}\n\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t} else if ( node instanceof Text ) {\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tposition = new Position( node, 0 );\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\tlet charactersCount = node.data.length;\n\t\t\t\tlet item;\n\n\t\t\t\t// If text stick out of walker range, we need to cut it and wrap in TextProxy.\n\t\t\t\tif ( node == this._boundaryEndParent ) {\n\t\t\t\t\tcharactersCount = this.boundaries!.end.offset;\n\t\t\t\t\titem = new TextProxy( node, 0, charactersCount );\n\t\t\t\t\tposition = Position._createAfter( item );\n\t\t\t\t} else {\n\t\t\t\t\titem = new TextProxy( node, 0, node.data.length );\n\t\t\t\t\t// If not just keep moving forward.\n\t\t\t\t\tposition.offset++;\n\t\t\t\t}\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t\t}\n\t\t} else if ( typeof node == 'string' ) {\n\t\t\tlet textLength;\n\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\ttextLength = 1;\n\t\t\t} else {\n\t\t\t\t// Check if text stick out of walker range.\n\t\t\t\tconst endOffset = parent === this._boundaryEndParent ? this.boundaries!.end.offset : ( parent as Text ).data.length;\n\n\t\t\t\ttextLength = endOffset - position.offset;\n\t\t\t}\n\n\t\t\tconst textProxy = new TextProxy( parent as Text, position.offset, textLength );\n\n\t\t\tposition.offset += textLength;\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'text', textProxy, previousPosition, position, textLength );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the end of current `parent`.\n\t\t\tposition = Position._createAfter( parent as any );\n\t\t\tthis.position = position;\n\n\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\treturn this._next();\n\t\t\t} else {\n\t\t\t\treturn this._formatReturnValue( 'elementEnd', parent as any, previousPosition, position );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Makes a step backward in view. Moves the {@link #position} to the previous position and returns the encountered value.\n\t *\n\t * @private\n\t * @returns {Object}\n\t * @returns {Boolean} return.done True if iterator is done.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue} return.value Information about taken step.\n\t */\n\tprivate _previous(): IteratorResult<TreeWalkerValue> {\n\t\tlet position = this.position.clone();\n\t\tconst previousPosition = this.position;\n\t\tconst parent = position.parent;\n\n\t\t// We are at the beginning of the root.\n\t\tif ( parent.parent === null && position.offset === 0 ) {\n\t\t\treturn { done: true, value: undefined };\n\t\t}\n\n\t\t// We reached the walker boundary.\n\t\tif ( parent == this._boundaryStartParent && position.offset == this.boundaries!.start.offset ) {\n\t\t\treturn { done: true, value: undefined };\n\t\t}\n\n\t\t// Get node just before current position.\n\t\tlet node;\n\n\t\t// Text {@link module:engine/view/text~Text} element is a specific parent because contains string instead of child nodes.\n\t\tif ( parent instanceof Text ) {\n\t\t\tif ( position.isAtStart ) {\n\t\t\t\t// Prevent returning \"elementStart\" for Text node. Skip that value and return the next walker step.\n\t\t\t\tthis.position = Position._createBefore( parent );\n\n\t\t\t\treturn this._previous();\n\t\t\t}\n\n\t\t\tnode = parent.data[ position.offset - 1 ];\n\t\t} else {\n\t\t\tnode = ( parent as Element | DocumentFragment ).getChild( position.offset - 1 );\n\t\t}\n\n\t\tif ( node instanceof Element ) {\n\t\t\tif ( !this.shallow ) {\n\t\t\t\tposition = new Position( node, node.childCount );\n\t\t\t\tthis.position = position;\n\n\t\t\t\tif ( this.ignoreElementEnd ) {\n\t\t\t\t\treturn this._previous();\n\t\t\t\t} else {\n\t\t\t\t\treturn this._formatReturnValue( 'elementEnd', node, previousPosition, position );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tposition.offset--;\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'elementStart', node, previousPosition, position, 1 );\n\t\t\t}\n\t\t} else if ( node instanceof Text ) {\n\t\t\tif ( this.singleCharacters ) {\n\t\t\t\tposition = new Position( node, node.data.length );\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._previous();\n\t\t\t} else {\n\t\t\t\tlet charactersCount = node.data.length;\n\t\t\t\tlet item;\n\n\t\t\t\t// If text stick out of walker range, we need to cut it and wrap in TextProxy.\n\t\t\t\tif ( node == this._boundaryStartParent ) {\n\t\t\t\t\tconst offset = this.boundaries!.start.offset;\n\n\t\t\t\t\titem = new TextProxy( node, offset, node.data.length - offset );\n\t\t\t\t\tcharactersCount = item.data.length;\n\t\t\t\t\tposition = Position._createBefore( item );\n\t\t\t\t} else {\n\t\t\t\t\titem = new TextProxy( node, 0, node.data.length );\n\t\t\t\t\t// If not just keep moving backward.\n\t\t\t\t\tposition.offset--;\n\t\t\t\t}\n\n\t\t\t\tthis.position = position;\n\n\t\t\t\treturn this._formatReturnValue( 'text', item, previousPosition, position, charactersCount );\n\t\t\t}\n\t\t} else if ( typeof node == 'string' ) {\n\t\t\tlet textLength;\n\n\t\t\tif ( !this.singleCharacters ) {\n\t\t\t\t// Check if text stick out of walker range.\n\t\t\t\tconst startOffset = parent === this._boundaryStartParent ? this.boundaries!.start.offset : 0;\n\n\t\t\t\ttextLength = position.offset - startOffset;\n\t\t\t} else {\n\t\t\t\ttextLength = 1;\n\t\t\t}\n\n\t\t\tposition.offset -= textLength;\n\n\t\t\tconst textProxy = new TextProxy( parent as Text, position.offset, textLength );\n\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'text', textProxy, previousPosition, position, textLength );\n\t\t} else {\n\t\t\t// `node` is not set, we reached the beginning of current `parent`.\n\t\t\tposition = Position._createBefore( parent as any );\n\t\t\tthis.position = position;\n\n\t\t\treturn this._formatReturnValue( 'elementStart', parent as any, previousPosition, position, 1 );\n\t\t}\n\t}\n\n\t/**\n\t * Format returned data and adjust `previousPosition` and `nextPosition` if reach the bound of the {@link module:engine/view/text~Text}.\n\t *\n\t * @private\n\t * @param {module:engine/view/treewalker~TreeWalkerValueType} type Type of step.\n\t * @param {module:engine/view/item~Item} item Item between old and new position.\n\t * @param {module:engine/view/position~Position} previousPosition Previous position of iterator.\n\t * @param {module:engine/view/position~Position} nextPosition Next position of iterator.\n\t * @param {Number} [length] Length of the item.\n\t * @returns {module:engine/view/treewalker~TreeWalkerValue}\n\t */\n\tprivate _formatReturnValue(\n\t\ttype: TreeWalkerValueType,\n\t\titem: Item,\n\t\tpreviousPosition: Position,\n\t\tnextPosition: Position,\n\t\tlength?: number\n\t): IteratorResult<TreeWalkerValue> {\n\t\t// Text is a specific parent, because contains string instead of children.\n\t\t// Walker doesn't enter to the Text except situations when walker is iterating over every single character,\n\t\t// or the bound starts/ends inside the Text. So when the position is at the beginning or at the end of the Text\n\t\t// we move it just before or just after Text.\n\t\tif ( item instanceof TextProxy ) {\n\t\t\t// Position is at the end of Text.\n\t\t\tif ( item.offsetInText + item.data.length == item.textNode.data.length ) {\n\t\t\t\tif ( this.direction == 'forward' && !( this.boundaries && this.boundaries.end.isEqual( this.position ) ) ) {\n\t\t\t\t\tnextPosition = Position._createAfter( item.textNode );\n\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\n\t\t\t\t\tthis.position = nextPosition;\n\t\t\t\t} else {\n\t\t\t\t\tpreviousPosition = Position._createAfter( item.textNode );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Position is at the begining ot the text.\n\t\t\tif ( item.offsetInText === 0 ) {\n\t\t\t\tif ( this.direction == 'backward' && !( this.boundaries && this.boundaries.start.isEqual( this.position ) ) ) {\n\t\t\t\t\tnextPosition = Position._createBefore( item.textNode );\n\t\t\t\t\t// When we change nextPosition of returned value we need also update walker current position.\n\t\t\t\t\tthis.position = nextPosition;\n\t\t\t\t} else {\n\t\t\t\t\tpreviousPosition = Position._createBefore( item.textNode );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdone: false,\n\t\t\tvalue: {\n\t\t\t\ttype,\n\t\t\t\titem,\n\t\t\t\tpreviousPosition,\n\t\t\t\tnextPosition,\n\t\t\t\tlength\n\t\t\t}\n\t\t};\n\t}\n}\n\n/**\n * Type of the step made by {@link module:engine/view/treewalker~TreeWalker}.\n * Possible values: `'elementStart'` if walker is at the beginning of a node, `'elementEnd'` if walker is at the end\n * of node, or `'text'` if walker traversed over single and multiple characters.\n * For {@link module:engine/view/text~Text} `elementStart` and `elementEnd` is not returned.\n *\n * @typedef {String} module:engine/view/treewalker~TreeWalkerValueType\n */\nexport type TreeWalkerValueType = 'elementStart' | 'elementEnd' | 'text';\n\n/**\n * Object returned by {@link module:engine/view/treewalker~TreeWalker} when traversing tree view.\n *\n * @typedef {Object} module:engine/view/treewalker~TreeWalkerValue\n * @property {module:engine/view/treewalker~TreeWalkerValueType} type\n * @property {module:engine/view/item~Item} item Item between the old and the new positions\n * of the tree walker.\n * @property {module:engine/view/position~Position} previousPosition Previous position of the iterator.\n * * Forward iteration: For `'elementEnd'` it is the last position inside the element. For all other types it is the\n * position before the item.\n * * Backward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {module:engine/view/position~Position} nextPosition Next position of the iterator.\n * * Forward iteration: For `'elementStart'` it is the first position inside the element. For all other types it is\n * the position after the item.\n * * Backward iteration: For `'elementEnd'` it is last position inside element. For all other types it is the position\n * before the item.\n * * If the position is at the beginning or at the end of the {@link module:engine/view/text~Text} it is always moved from the\n * inside of the text to its parent just before or just after that text.\n * @property {Number} [length] Length of the item. For `'elementStart'` it is `1`. For `'text'` it is\n * the length of that text. For `'elementEnd'` it is `undefined`.\n */\nexport interface TreeWalkerValue {\n\ttype: TreeWalkerValueType;\n\titem: Item;\n\tpreviousPosition: Position;\n\tnextPosition: Position;\n\tlength?: number;\n}\n\n/**\n * Tree walking directions.\n *\n * @typedef {'forward'|'backward'} module:engine/view/treewalker~TreeWalkerDirection\n */\nexport type TreeWalkerDirection = 'forward' | 'backward';\n\n/**\n * TODO\n *\n * @typedef TreeWalkerOptions\n * @param {module:engine/view/range~Range} [options.boundaries=null] Range to define boundaries of the iterator.\n * @param {module:engine/view/position~Position} [options.startPosition] Starting position.\n * @param {'forward'|'backward'} [options.direction='forward'] Walking direction.\n * @param {Boolean} [options.singleCharacters=false] Flag indicating whether all characters from\n * {@link module:engine/view/text~Text} should be returned as one {@link module:engine/view/text~Text} (`false`) ore one by one as\n * {@link module:engine/view/textproxy~TextProxy} (`true`).\n * @param {Boolean} [options.shallow=false] Flag indicating whether iterator should enter elements or not. If the\n * iterator is shallow child nodes of any iterated node will not be returned along with `elementEnd` tag.\n * @param {Boolean} [options.ignoreElementEnd=false] Flag indicating whether iterator should ignore `elementEnd`\n * tags. If the option is true walker will not return a parent node of start position. If this option is `true`\n * each {@link module:engine/view/element~Element} will be returned once, while if the option is `false` they might be returned\n * twice: for `'elementStart'` and `'elementEnd'`.\n */\nexport type TreeWalkerOptions = {\n\tdirection?: TreeWalkerDirection;\n\tboundaries?: Range | null;\n\tstartPosition?: Position;\n\tsingleCharacters?: boolean;\n\tshallow?: boolean;\n\tignoreElementEnd?: boolean;\n};\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport type AttributeElement from './attributeelement';\nimport type ContainerElement from './containerelement';\nimport type DocumentFragment from './documentfragment';\nimport type DocumentSelection from './documentselection';\nimport type EditableElement from './editableelement';\nimport type Element from './element';\nimport type EmptyElement from './emptyelement';\nimport type Node from './node';\nimport type Position from './position';\nimport type Range from './range';\nimport type RawElement from './rawelement';\nimport type RootEditableElement from './rooteditableelement';\nimport type Selection from './selection';\nimport type Text from './text';\nimport type TextProxy from './textproxy';\nimport type UIElement from './uielement';\n\n/**\n * @module engine/view/typecheckable\n */\n\nexport default abstract class TypeCheckable {\n\tpublic is( type: 'node' | 'view:node' ): this is (\n\t\tNode |\n\t\tText |\n\t\tElement |\n\t\tAttributeElement |\n\t\tContainerElement |\n\t\tEditableElement |\n\t\tEmptyElement |\n\t\tRawElement |\n\t\tRootEditableElement |\n\t\tUIElement\n\t);\n\tpublic is( type: 'element' | 'view:element' ): this is (\n\t\tElement |\n\t\tAttributeElement |\n\t\tContainerElement |\n\t\tEditableElement |\n\t\tEmptyElement |\n\t\tRawElement |\n\t\tRootEditableElement |\n\t\tUIElement\n\t);\n\tpublic is( type: 'attributeElement' | 'view:attributeElement' ): this is AttributeElement;\n\tpublic is( type: 'containerElement' | 'view:containerElement' ): this is ContainerElement | EditableElement | RootEditableElement;\n\tpublic is( type: 'editableElement' | 'view:editableElement' ): this is EditableElement | RootEditableElement;\n\tpublic is( type: 'emptyElement' | 'view:emptyElement' ): this is EmptyElement;\n\tpublic is( type: 'rawElement' | 'view:rawElement' ): this is RawElement;\n\tpublic is( type: 'rootElement' | 'view:rootElement' ): this is RootEditableElement;\n\tpublic is( type: 'uiElement' | 'view:uiElement' ): this is UIElement;\n\n\tpublic is( type: '$text' | 'view:$text' ): this is Text;\n\tpublic is( type: 'documentFragment' | 'view:documentFragment' ): this is DocumentFragment;\n\tpublic is( type: '$textProxy' | 'view:$textProxy' ): this is TextProxy;\n\tpublic is( type: 'position' | 'view:position' ): this is Position;\n\tpublic is( type: 'range' | 'view:range' ): this is Range;\n\tpublic is( type: 'selection' | 'view:selection' ): this is Selection | DocumentSelection;\n\tpublic is( type: 'documentSelection' | 'view:documentSelection' ): this is DocumentSelection;\n\n\tpublic is<N extends string>( type: 'element' | 'view:element', name: N ): this is (\n\t\tElement |\n\t\tAttributeElement |\n\t\tContainerElement |\n\t\tEditableElement |\n\t\tEmptyElement |\n\t\tRawElement |\n\t\tRootEditableElement |\n\t\tUIElement\n\t) & { name: N };\n\tpublic is<N extends string>( type: 'attributeElement' | 'view:attributeElement', name: N ): this is AttributeElement & { name: N };\n\tpublic is<N extends string>( type: 'containerElement' | 'view:containerElement', name: N ): this is (\n\t\tContainerElement |\n\t\tEditableElement |\n\t\tRootEditableElement\n\t) & { name: N };\n\tpublic is<N extends string>( type: 'editableElement' | 'view:editableElement', name: N ): this is (\n\t\tEditableElement |\n\t\tRootEditableElement\n\t) & { name: N };\n\tpublic is<N extends string>( type: 'emptyElement' | 'view:emptyElement', name: N ): this is EmptyElement & { name: N };\n\tpublic is<N extends string>( type: 'rawElement' | 'view:rawElement', name: N ): this is RawElement & { name: N };\n\tpublic is<N extends string>( type: 'rootElement' | 'view:rootElement', name: N ): this is RootEditableElement & { name: N };\n\tpublic is<N extends string>( type: 'uiElement' | 'view:uiElement', name: N ): this is UIElement & { name: N };\n\n\t/* istanbul ignore next */\n\tpublic is(): boolean {\n\t\t// There are a lot of overloads above.\n\t\t// Overriding method in derived classes remove them and only `is( type: string ): boolean` is visible which we don't want.\n\t\t// One option would be to copy them all to all classes, but that's ugly.\n\t\t// It's best when TypeScript compiler doesn't see those overloads, except the one in the top base class.\n\t\t// To overload a method, but not let the compiler see it, do after class definition:\n\t\t// `MyClass.prototype.is = function( type: string ) {...}`\n\t\tthrow new Error( 'is() method is abstract' );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/uielement\n */\n\nimport Element from './element';\nimport Node from './node';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport { keyCodes } from '@ckeditor/ckeditor5-utils/src/keyboard';\n\nimport type View from './view';\nimport type DomConverter from './domconverter';\nimport type Item from './item';\n\ntype DomDocument = globalThis.Document;\ntype DomElement = globalThis.HTMLElement;\n\n/**\n * UI element class. It should be used to represent editing UI which needs to be injected into the editing view\n * If possible, you should keep your UI outside the editing view. However, if that is not possible,\n * UI elements can be used.\n *\n * How a UI element is rendered is in your control (you pass a callback to\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`}).\n * The editor will ignore your UI element – the selection cannot be placed in it, it is skipped (invisible) when\n * the user modifies the selection by using arrow keys and the editor does not listen to any mutations which\n * happen inside your UI elements.\n *\n * The limitation is that you cannot convert a model element to a UI element. UI elements need to be\n * created for {@link module:engine/model/markercollection~Marker markers} or as additinal elements\n * inside normal {@link module:engine/view/containerelement~ContainerElement container elements}.\n *\n * To create a new UI element use the\n * {@link module:engine/view/downcastwriter~DowncastWriter#createUIElement `downcastWriter#createUIElement()`} method.\n *\n * @extends module:engine/view/element~Element\n */\nexport default class UIElement extends Element {\n\tpublic override readonly getFillerOffset: () => null;\n\n\t/**\n\t * Creates new instance of UIElement.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` when third parameter is passed,\n\t * to inform that usage of UIElement is incorrect (adding child nodes to UIElement is forbidden).\n\t *\n\t * @see module:engine/view/downcastwriter~DowncastWriter#createUIElement\n\t * @protected\n\t * @param {module:engine/view/document~Document} document The document instance to which this element belongs.\n\t * @param {String} name Node name.\n\t * @param {Object|Iterable} [attributes] Collection of attributes.\n\t * @param {module:engine/view/node~Node|Iterable.<module:engine/view/node~Node>} [children]\n\t * A list of nodes to be inserted into created element.\n\t */\n\tconstructor( ...args: ConstructorParameters<typeof Element> ) {\n\t\tsuper( ...args );\n\n\t\t/**\n\t\t * Returns `null` because filler is not needed for UIElements.\n\t\t *\n\t\t * @method #getFillerOffset\n\t\t * @returns {null} Always returns null.\n\t\t */\n\t\tthis.getFillerOffset = getFillerOffset;\n\t}\n\n\t/**\n\t * Overrides {@link module:engine/view/element~Element#_insertChild} method.\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `view-uielement-cannot-add` to prevent adding any child nodes\n\t * to UIElement.\n\t *\n\t * @protected\n\t */\n\tpublic override _insertChild( index: number, items: Item | Iterable<Item> ): number {\n\t\tif ( items && ( items instanceof Node || Array.from( items as Iterable<Item> ).length > 0 ) ) {\n\t\t\t/**\n\t\t\t * Cannot add children to {@link module:engine/view/uielement~UIElement}.\n\t\t\t *\n\t\t\t * @error view-uielement-cannot-add\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'view-uielement-cannot-add', [ this, items ] );\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Renders this {@link module:engine/view/uielement~UIElement} to DOM. This method is called by\n\t * {@link module:engine/view/domconverter~DomConverter}.\n\t * Do not use inheritance to create custom rendering method, replace `render()` method instead:\n\t *\n\t *\t\tconst myUIElement = downcastWriter.createUIElement( 'span' );\n\t *\t\tmyUIElement.render = function( domDocument, domConverter ) {\n\t *\t\t\tconst domElement = this.toDomElement( domDocument );\n\t *\n\t *\t\t\tdomConverter.setContentOf( domElement, '<b>this is ui element</b>' );\n\t *\n\t *\t\t\treturn domElement;\n\t *\t\t};\n\t *\n\t * If changes in your UI element should trigger some editor UI update you should call\n\t * the {@link module:core/editor/editorui~EditorUI#update `editor.ui.update()`} method\n\t * after rendering your UI element.\n\t *\n\t * @param {Document} domDocument\n\t * @param {module:engine/view/domconverter~DomConverter} domConverter Instance of the DomConverter used to optimize the output.\n\t * @returns {HTMLElement}\n\t */\n\tpublic render( domDocument: DomDocument, domConverter: DomConverter ): DomElement {\n\t\t// Provide basic, default output.\n\t\treturn this.toDomElement( domDocument );\n\t}\n\n\t/**\n\t * Creates DOM element based on this view UIElement.\n\t * Note that each time this method is called new DOM element is created.\n\t *\n\t * @param {Document} domDocument\n\t * @returns {HTMLElement}\n\t */\n\tpublic toDomElement( domDocument: DomDocument ): DomElement {\n\t\tconst domElement = domDocument.createElement( this.name );\n\n\t\tfor ( const key of this.getAttributeKeys() ) {\n\t\t\tdomElement.setAttribute( key, this.getAttribute( key )! );\n\t\t}\n\n\t\treturn domElement;\n\t}\n}\n\n/**\n * Checks whether this object is of the given.\n *\n *\t\tuiElement.is( 'uiElement' ); // -> true\n *\t\tuiElement.is( 'element' ); // -> true\n *\t\tuiElement.is( 'node' ); // -> true\n *\t\tuiElement.is( 'view:uiElement' ); // -> true\n *\t\tuiElement.is( 'view:element' ); // -> true\n *\t\tuiElement.is( 'view:node' ); // -> true\n *\n *\t\tuiElement.is( 'model:element' ); // -> false\n *\t\tuiElement.is( 'documentFragment' ); // -> false\n *\n * Assuming that the object being checked is an ui element, you can also check its\n * {@link module:engine/view/uielement~UIElement#name name}:\n *\n *\t\tuiElement.is( 'element', 'span' ); // -> true if this is a span ui element\n *\t\tuiElement.is( 'uiElement', 'span' ); // -> same as above\n *\t\ttext.is( 'element', 'span' ); -> false\n *\n * {@link module:engine/view/node~Node#is Check the entire list of view objects} which implement the `is()` method.\n *\n * @param {String} type Type to check.\n * @param {String} [name] Element name.\n * @returns {Boolean}\n */\nUIElement.prototype.is = function( type: string, name?: string ): boolean {\n\tif ( !name ) {\n\t\treturn type === 'uiElement' || type === 'view:uiElement' ||\n\t\t\t// From super.is(). This is highly utilised method and cannot call super. See ckeditor/ckeditor5#6529.\n\t\t\ttype === 'element' || type === 'view:element' ||\n\t\t\ttype === 'node' || type === 'view:node';\n\t} else {\n\t\treturn name === this.name && (\n\t\t\ttype === 'uiElement' || type === 'view:uiElement' ||\n\t\t\ttype === 'element' || type === 'view:element'\n\t\t);\n\t}\n};\n\n/**\n * This function injects UI element handling to the given {@link module:engine/view/document~Document document}.\n *\n * A callback is added to {@link module:engine/view/document~Document#event:keydown document keydown event}.\n * The callback handles the situation when right arrow key is pressed and selection is collapsed before a UI element.\n * Without this handler, it would be impossible to \"jump over\" UI element using right arrow key.\n *\n * @param {module:engine/view/view~View} view View controller to which the quirks handling will be injected.\n */\nexport function injectUiElementHandling( view: View ): void {\n\tview.document.on( 'arrowKey', ( evt: unknown, data: any ) =>\n\t\tjumpOverUiElement( evt, data, view.domConverter ), { priority: 'low' } );\n}\n\n// Returns `null` because block filler is not needed for UIElements.\n//\n// @returns {null}\nfunction getFillerOffset() {\n\treturn null;\n}\n\n// Selection cannot be placed in a `UIElement`. Whenever it is placed there, it is moved before it. This\n// causes a situation when it is impossible to jump over `UIElement` using right arrow key, because the selection\n// ends up in ui element (in DOM) and is moved back to the left. This handler fixes this situation.\nfunction jumpOverUiElement( evt: unknown, data: any, domConverter: DomConverter ) {\n\tif ( data.keyCode == keyCodes.arrowright ) {\n\t\tconst domSelection = data.domTarget.ownerDocument.defaultView.getSelection();\n\t\tconst domSelectionCollapsed = domSelection.rangeCount == 1 && domSelection.getRangeAt( 0 ).collapsed;\n\n\t\t// Jump over UI element if selection is collapsed or shift key is pressed. These are the cases when selection would extend.\n\t\tif ( domSelectionCollapsed || data.shiftKey ) {\n\t\t\tconst domParent = domSelection.focusNode;\n\t\t\tconst domOffset = domSelection.focusOffset;\n\n\t\t\tconst viewPosition = domConverter.domPositionToView( domParent, domOffset );\n\n\t\t\t// In case if dom element is not converted to view or is not mapped or something. Happens for example in some tests.\n\t\t\tif ( viewPosition === null ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip all following ui elements.\n\t\t\tlet jumpedOverAnyUiElement = false;\n\n\t\t\tconst nextViewPosition = viewPosition.getLastMatchingPosition( value => {\n\t\t\t\tif ( value.item.is( 'uiElement' ) ) {\n\t\t\t\t\t// Remember that there was at least one ui element.\n\t\t\t\t\tjumpedOverAnyUiElement = true;\n\t\t\t\t}\n\n\t\t\t\t// Jump over ui elements, jump over empty attribute elements, move up from inside of attribute element.\n\t\t\t\tif ( value.item.is( 'uiElement' ) || value.item.is( 'attributeElement' ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// Don't jump over text or don't get out of container element.\n\t\t\t\treturn false;\n\t\t\t} );\n\n\t\t\t// If anything has been skipped, fix position.\n\t\t\t// This `if` could be possibly omitted but maybe it is better not to mess with DOM selection if not needed.\n\t\t\tif ( jumpedOverAnyUiElement ) {\n\t\t\t\tconst newDomPosition = domConverter.viewPositionToDom( nextViewPosition )!;\n\n\t\t\t\tif ( domSelectionCollapsed ) {\n\t\t\t\t\t// Selection was collapsed, so collapse it at further position.\n\t\t\t\t\tdomSelection.collapse( newDomPosition.parent, newDomPosition.offset );\n\t\t\t\t} else {\n\t\t\t\t\t// Selection was not collapse, so extend it instead of collapsing.\n\t\t\t\t\tdomSelection.extend( newDomPosition.parent, newDomPosition.offset );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module engine/view/view\n */\n\nimport Document, { type LayoutChangedEvent } from './document';\nimport DowncastWriter from './downcastwriter';\nimport Renderer from './renderer';\nimport DomConverter from './domconverter';\nimport Position from './position';\nimport Range from './range';\nimport Selection from './selection';\n\nimport type { default as Observer, ObserverConstructor } from './observer/observer';\nimport type { ChangeEvent as SelectionChangeEvent } from './documentselection';\nimport type { StylesProcessor } from './stylesmap';\nimport type Element from './element';\nimport type Item from './item';\n\nimport MutationObserver from './observer/mutationobserver';\nimport KeyObserver from './observer/keyobserver';\nimport FakeSelectionObserver from './observer/fakeselectionobserver';\nimport SelectionObserver from './observer/selectionobserver';\nimport FocusObserver from './observer/focusobserver';\nimport CompositionObserver from './observer/compositionobserver';\nimport InputObserver from './observer/inputobserver';\nimport ArrowKeysObserver from './observer/arrowkeysobserver';\nimport TabObserver from './observer/tabobserver';\n\nimport { Observable, type ChangeEvent as ObservableChangeEvent } from '@ckeditor/ckeditor5-utils/src/observablemixin';\nimport { scrollViewportToShowTarget } from '@ckeditor/ckeditor5-utils/src/dom/scroll';\nimport { injectUiElementHandling } from './uielement';\nimport { injectQuirksHandling } from './filler';\nimport CKEditorError from '@ckeditor/ckeditor5-utils/src/ckeditorerror';\nimport env from '@ckeditor/ckeditor5-utils/src/env';\n\n/**\n * Editor's view controller class. Its main responsibility is DOM - View management for editing purposes, to provide\n * abstraction over the DOM structure and events and hide all browsers quirks.\n *\n * View controller renders view document to DOM whenever view structure changes. To determine when view can be rendered,\n * all changes need to be done using the {@link module:engine/view/view~View#change} method, using\n * {@link module:engine/view/downcastwriter~DowncastWriter}:\n *\n *\t\tview.change( writer => {\n *\t\t\twriter.insert( position, writer.createText( 'foo' ) );\n *\t\t} );\n *\n * View controller also register {@link module:engine/view/observer/observer~Observer observers} which observes changes\n * on DOM and fire events on the {@link module:engine/view/document~Document Document}.\n * Note that the following observers are added by the class constructor and are always available:\n *\n * * {@link module:engine/view/observer/mutationobserver~MutationObserver},\n * * {@link module:engine/view/observer/selectionobserver~SelectionObserver},\n * * {@link module:engine/view/observer/focusobserver~FocusObserver},\n * * {@link module:engine/view/observer/keyobserver~KeyObserver},\n * * {@link module:engine/view/observer/fakeselectionobserver~FakeSelectionObserver}.\n * * {@link module:engine/view/observer/compositionobserver~CompositionObserver}.\n * * {@link module:engine/view/observer/arrowkeysobserver~ArrowKeysObserver}.\n * * {@link module:engine/view/observer/tabobserver~TabObserver}.\n *\n * This class also {@link module:engine/view/view~View#attachDomRoot binds the DOM and the view elements}.\n *\n * If you do not need full a DOM - view management, and only want to transform a tree of view elements to a tree of DOM\n * elements you do not need this controller. You can use the {@link module:engine/view/domconverter~DomConverter DomConverter} instead.\n *\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class View extends Observable {\n\tpublic readonly document: Document;\n\tpublic readonly domConverter: DomConverter;\n\tpublic readonly domRoots: Map<string, HTMLElement>;\n\n\tdeclare public isFocused: boolean;\n\tdeclare public isSelecting: boolean;\n\tdeclare public isRenderingInProgress: boolean;\n\tdeclare public hasDomSelection: boolean;\n\n\tprivate readonly _renderer: Renderer;\n\tprivate readonly _initialDomRootAttributes: WeakMap<HTMLElement, Record<string, string>>;\n\tprivate readonly _observers: Map<ObserverConstructor, Observer>;\n\tprivate readonly _writer: DowncastWriter;\n\tprivate _ongoingChange: boolean;\n\tprivate _postFixersInProgress: boolean;\n\tprivate _renderingDisabled: boolean;\n\tprivate _hasChangedSinceTheLastRendering: boolean;\n\n\t/**\n\t * @param {module:engine/view/stylesmap~StylesProcessor} stylesProcessor The styles processor instance.\n\t */\n\tconstructor( stylesProcessor: StylesProcessor ) {\n\t\tsuper();\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/document~Document} associated with this view controller.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/document~Document}\n\t\t */\n\t\tthis.document = new Document( stylesProcessor );\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/domconverter~DomConverter domConverter} used by\n\t\t * {@link module:engine/view/view~View#_renderer renderer}\n\t\t * and {@link module:engine/view/observer/observer~Observer observers}.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:engine/view/domconverter~DomConverter}\n\t\t */\n\t\tthis.domConverter = new DomConverter( this.document );\n\n\t\t/**\n\t\t * Roots of the DOM tree. Map on the `HTMLElement`s with roots names as keys.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Map.<String, HTMLElement>}\n\t\t */\n\t\tthis.domRoots = new Map();\n\n\t\t/**\n\t\t * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isRenderingInProgress\n\t\t */\n\t\tthis.set( 'isRenderingInProgress', false );\n\n\t\t/**\n\t\t * Informs whether the DOM selection is inside any of the DOM roots managed by the view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #hasDomSelection\n\t\t */\n\t\tthis.set( 'hasDomSelection', false );\n\n\t\t/**\n\t\t * Instance of the {@link module:engine/view/renderer~Renderer renderer}.\n\t\t *\n\t\t * @protected\n\t\t * @type {module:engine/view/renderer~Renderer}\n\t\t */\n\t\tthis._renderer = new Renderer( this.domConverter, this.document.selection );\n\t\tthis._renderer.bind( 'isFocused', 'isSelecting' ).to( this.document, 'isFocused', 'isSelecting' );\n\n\t\t/**\n\t\t * A DOM root attributes cache. It saves the initial values of DOM root attributes before the DOM element\n\t\t * is {@link module:engine/view/view~View#attachDomRoot attached} to the view so later on, when\n\t\t * the view is destroyed ({@link module:engine/view/view~View#detachDomRoot}), they can be easily restored.\n\t\t * This way, the DOM element can go back to the (clean) state as if the editing view never used it.\n\t\t *\n\t\t * @private\n\t\t * @member {WeakMap.<HTMLElement,Object>}\n\t\t */\n\t\tthis._initialDomRootAttributes = new WeakMap();\n\n\t\t/**\n\t\t * Map of registered {@link module:engine/view/observer/observer~Observer observers}.\n\t\t *\n\t\t * @private\n\t\t * @type {Map.<Function, module:engine/view/observer/observer~Observer>}\n\t\t */\n\t\tthis._observers = new Map();\n\n\t\t/**\n\t\t * Is set to `true` when {@link #change view changes} are currently in progress.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._ongoingChange = false;\n\n\t\t/**\n\t\t * Used to prevent calling {@link #forceRender} and {@link #change} during rendering view to the DOM.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._postFixersInProgress = false;\n\n\t\t/**\n\t\t * Internal flag to temporary disable rendering. See the usage in the {@link #_disableRendering}.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._renderingDisabled = false;\n\n\t\t/**\n\t\t * Internal flag that disables rendering when there are no changes since the last rendering.\n\t\t * It stores information about changed selection and changed elements from attached document roots.\n\t\t *\n\t\t * @private\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis._hasChangedSinceTheLastRendering = false;\n\n\t\t/**\n\t\t * DowncastWriter instance used in {@link #change change method} callbacks.\n\t\t *\n\t\t * @private\n\t\t * @type {module:engine/view/downcastwriter~DowncastWriter}\n\t\t */\n\t\tthis._writer = new DowncastWriter( this.document );\n\n\t\t// Add default observers.\n\t\tthis.addObserver( MutationObserver );\n\t\tthis.addObserver( SelectionObserver );\n\t\tthis.addObserver( FocusObserver );\n\t\tthis.addObserver( KeyObserver );\n\t\tthis.addObserver( FakeSelectionObserver );\n\t\tthis.addObserver( CompositionObserver );\n\t\tthis.addObserver( ArrowKeysObserver );\n\t\tthis.addObserver( TabObserver );\n\n\t\tif ( env.isAndroid ) {\n\t\t\tthis.addObserver( InputObserver );\n\t\t}\n\n\t\t// Inject quirks handlers.\n\t\tinjectQuirksHandling( this );\n\t\tinjectUiElementHandling( this );\n\n\t\t// Use 'normal' priority so that rendering is performed as first when using that priority.\n\t\tthis.on<RenderEvent>( 'render', () => {\n\t\t\tthis._render();\n\n\t\t\t// Informs that layout has changed after render.\n\t\t\tthis.document.fire<LayoutChangedEvent>( 'layoutChanged' );\n\n\t\t\t// Reset the `_hasChangedSinceTheLastRendering` flag after rendering.\n\t\t\tthis._hasChangedSinceTheLastRendering = false;\n\t\t} );\n\n\t\t// Listen to the document selection changes directly.\n\t\tthis.listenTo<SelectionChangeEvent>( this.document.selection, 'change', () => {\n\t\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\t} );\n\n\t\t// Trigger re-render if only the focus changed.\n\t\tthis.listenTo<ObservableChangeEvent>( this.document, 'change:isFocused', () => {\n\t\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\t} );\n\t}\n\n\t/**\n\t * Attaches a DOM root element to the view element and enable all observers on that element.\n\t * Also {@link module:engine/view/renderer~Renderer#markToSync mark element} to be synchronized\n\t * with the view what means that all child nodes will be removed and replaced with content of the view root.\n\t *\n\t * This method also will change view element name as the same as tag name of given dom root.\n\t * Name is always transformed to lower case.\n\t *\n\t * **Note:** Use {@link #detachDomRoot `detachDomRoot()`} to revert this action.\n\t *\n\t * @param {Element} domRoot DOM root element.\n\t * @param {String} [name='main'] Name of the root.\n\t */\n\tpublic attachDomRoot( domRoot: HTMLElement, name: string = 'main' ): void {\n\t\tconst viewRoot = this.document.getRoot( name )!;\n\n\t\t// Set view root name the same as DOM root tag name.\n\t\tviewRoot._name = domRoot.tagName.toLowerCase();\n\n\t\tconst initialDomRootAttributes: Record<string, string> = {};\n\n\t\t// 1. Copy and cache the attributes to remember the state of the element before attaching.\n\t\t//    The cached attributes will be restored in detachDomRoot() so the element goes to the\n\t\t//    clean state as if the editing view never used it.\n\t\t// 2. Apply the attributes using the view writer, so they all go under the control of the engine.\n\t\t//    The editing view takes over the attribute management completely because various\n\t\t//    features (e.g. addPlaceholder()) require dynamic changes of those attributes and they\n\t\t//    cannot be managed by the engine and the UI library at the same time.\n\t\tfor ( const { name, value } of Array.from( domRoot.attributes ) ) {\n\t\t\tinitialDomRootAttributes[ name ] = value;\n\n\t\t\t// Do not use writer.setAttribute() for the class attribute. The EditableUIView class\n\t\t\t// and its descendants could have already set some using the writer.addClass() on the view\n\t\t\t// document root. They haven't been rendered yet so they are not present in the DOM root.\n\t\t\t// Using writer.setAttribute( 'class', ... ) would override them completely.\n\t\t\tif ( name === 'class' ) {\n\t\t\t\tthis._writer.addClass( value.split( ' ' ), viewRoot );\n\t\t\t} else {\n\t\t\t\tthis._writer.setAttribute( name, value, viewRoot );\n\t\t\t}\n\t\t}\n\n\t\tthis._initialDomRootAttributes.set( domRoot, initialDomRootAttributes );\n\n\t\tconst updateContenteditableAttribute = () => {\n\t\t\tthis._writer.setAttribute( 'contenteditable', ( !viewRoot.isReadOnly ).toString(), viewRoot );\n\n\t\t\tif ( viewRoot.isReadOnly ) {\n\t\t\t\tthis._writer.addClass( 'ck-read-only', viewRoot );\n\t\t\t} else {\n\t\t\t\tthis._writer.removeClass( 'ck-read-only', viewRoot );\n\t\t\t}\n\t\t};\n\n\t\t// Set initial value.\n\t\tupdateContenteditableAttribute();\n\n\t\tthis.domRoots.set( name, domRoot );\n\t\tthis.domConverter.bindElements( domRoot, viewRoot );\n\t\tthis._renderer.markToSync( 'children', viewRoot );\n\t\tthis._renderer.markToSync( 'attributes', viewRoot );\n\t\tthis._renderer.domDocuments.add( domRoot.ownerDocument );\n\n\t\tviewRoot.on( 'change:children', ( evt, node ) => this._renderer.markToSync( 'children', node ) );\n\t\tviewRoot.on( 'change:attributes', ( evt, node ) => this._renderer.markToSync( 'attributes', node ) );\n\t\tviewRoot.on( 'change:text', ( evt, node ) => this._renderer.markToSync( 'text', node ) );\n\t\tviewRoot.on( 'change:isReadOnly', () => this.change( updateContenteditableAttribute ) );\n\n\t\tviewRoot.on( 'change', () => {\n\t\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\t} );\n\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.observe( domRoot, name );\n\t\t}\n\t}\n\n\t/**\n\t * Detaches a DOM root element from the view element and restores its attributes to the state before\n\t * {@link #attachDomRoot `attachDomRoot()`}.\n\t *\n\t * @param {String} name Name of the root to detach.\n\t */\n\tpublic detachDomRoot( name: string ): void {\n\t\tconst domRoot = this.domRoots.get( name )!;\n\n\t\t// Remove all root attributes so the DOM element is \"bare\".\n\t\tArray.from( domRoot.attributes ).forEach( ( { name } ) => domRoot.removeAttribute( name ) );\n\n\t\tconst initialDomRootAttributes = this._initialDomRootAttributes.get( domRoot );\n\n\t\t// Revert all view root attributes back to the state before attachDomRoot was called.\n\t\tfor ( const attribute in initialDomRootAttributes ) {\n\t\t\tdomRoot.setAttribute( attribute, initialDomRootAttributes[ attribute ] );\n\t\t}\n\n\t\tthis.domRoots.delete( name );\n\t\tthis.domConverter.unbindDomElement( domRoot );\n\t}\n\n\t/**\n\t * Gets DOM root element.\n\t *\n\t * @param {String} [name='main']  Name of the root.\n\t * @returns {Element} DOM root element instance.\n\t */\n\tpublic getDomRoot( name: string = 'main' ): HTMLElement | undefined {\n\t\treturn this.domRoots.get( name );\n\t}\n\n\t/**\n\t * Creates observer of the given type if not yet created, {@link module:engine/view/observer/observer~Observer#enable enables} it\n\t * and {@link module:engine/view/observer/observer~Observer#observe attaches} to all existing and future\n\t * {@link #domRoots DOM roots}.\n\t *\n\t * Note: Observers are recognized by their constructor (classes). A single observer will be instantiated and used only\n\t * when registered for the first time. This means that features and other components can register a single observer\n\t * multiple times without caring whether it has been already added or not.\n\t *\n\t * @param {Function} Observer The constructor of an observer to add.\n\t * Should create an instance inheriting from {@link module:engine/view/observer/observer~Observer}.\n\t * @returns {module:engine/view/observer/observer~Observer} Added observer instance.\n\t */\n\tpublic addObserver( ObserverConstructor: ObserverConstructor ): Observer {\n\t\tlet observer = this._observers.get( ObserverConstructor );\n\n\t\tif ( observer ) {\n\t\t\treturn observer;\n\t\t}\n\n\t\tobserver = new ObserverConstructor( this ) as Observer;\n\n\t\tthis._observers.set( ObserverConstructor, observer );\n\n\t\tfor ( const [ name, domElement ] of this.domRoots ) {\n\t\t\tobserver.observe( domElement, name );\n\t\t}\n\n\t\tobserver.enable();\n\n\t\treturn observer;\n\t}\n\n\t/**\n\t * Returns observer of the given type or `undefined` if such observer has not been added yet.\n\t *\n\t * @param {Function} Observer The constructor of an observer to get.\n\t * @returns {module:engine/view/observer/observer~Observer|undefined} Observer instance or undefined.\n\t */\n\tpublic getObserver<T extends ObserverConstructor>( ObserverConstructor: T ): InstanceType<T> | undefined {\n\t\treturn this._observers.get( ObserverConstructor ) as ( InstanceType<T> | undefined );\n\t}\n\n\t/**\n\t * Disables all added observers.\n\t */\n\tpublic disableObservers(): void {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.disable();\n\t\t}\n\t}\n\n\t/**\n\t * Enables all added observers.\n\t */\n\tpublic enableObservers(): void {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.enable();\n\t\t}\n\t}\n\n\t/**\n\t * Scrolls the page viewport and {@link #domRoots} with their ancestors to reveal the\n\t * caret, if not already visible to the user.\n\t */\n\tpublic scrollToTheSelection(): void {\n\t\tconst range = this.document.selection.getFirstRange();\n\n\t\tif ( range ) {\n\t\t\tscrollViewportToShowTarget( {\n\t\t\t\ttarget: this.domConverter.viewRangeToDom( range ),\n\t\t\t\tviewportOffset: 20\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * It will focus DOM element representing {@link module:engine/view/editableelement~EditableElement EditableElement}\n\t * that is currently having selection inside.\n\t */\n\tpublic focus(): void {\n\t\tif ( !this.document.isFocused ) {\n\t\t\tconst editable = this.document.selection.editableElement;\n\n\t\t\tif ( editable ) {\n\t\t\t\tthis.domConverter.focus( editable );\n\t\t\t\tthis.forceRender();\n\t\t\t} else {\n\t\t\t\t// Before focusing view document, selection should be placed inside one of the view's editables.\n\t\t\t\t// Normally its selection will be converted from model document (which have default selection), but\n\t\t\t\t// when using view document on its own, we need to manually place selection before focusing it.\n\t\t\t\t//\n\t\t\t\t// @if CK_DEBUG // console.warn( 'There is no selection in any editable to focus.' );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * The `change()` method is the primary way of changing the view. You should use it to modify any node in the view tree.\n\t * It makes sure that after all changes are made the view is rendered to the DOM (assuming that the view will be changed\n\t * inside the callback). It prevents situations when the DOM is updated when the view state is not yet correct. It allows\n\t * to nest calls one inside another and still performs a single rendering after all those changes are made.\n\t * It also returns the return value of its callback.\n\t *\n\t *\t\tconst text = view.change( writer => {\n\t *\t\t\tconst newText = writer.createText( 'foo' );\n\t *\t\t\twriter.insert( position1, newText );\n\t *\n\t *\t\t\tview.change( writer => {\n\t *\t\t\t\twriter.insert( position2, writer.createText( 'bar' ) );\n\t *\t\t\t} );\n\t *\n\t * \t\t\twriter.remove( range );\n\t *\n\t * \t\t\treturn newText;\n\t *\t\t} );\n\t *\n\t * When the outermost change block is done and rendering to the DOM is over the\n\t * {@link module:engine/view/view~View#event:render `View#render`} event is fired.\n\t *\n\t * This method throws a `applying-view-changes-on-rendering` error when\n\t * the change block is used after rendering to the DOM has started.\n\t *\n\t * @param {Function} callback Callback function which may modify the view.\n\t * @returns {*} Value returned by the callback.\n\t */\n\tpublic change<TReturn>( callback: ( writer: DowncastWriter ) => TReturn ): TReturn {\n\t\tif ( this.isRenderingInProgress || this._postFixersInProgress ) {\n\t\t\t/**\n\t\t\t * Thrown when there is an attempt to make changes to the view tree when it is in incorrect state. This may\n\t\t\t * cause some unexpected behaviour and inconsistency between the DOM and the view.\n\t\t\t * This may be caused by:\n\t\t\t *\n\t\t\t * * calling {@link #change} or {@link #forceRender} during rendering process,\n\t\t\t * * calling {@link #change} or {@link #forceRender} inside of\n\t\t\t *   {@link module:engine/view/document~Document#registerPostFixer post-fixer function}.\n\t\t\t *\n\t\t\t * @error cannot-change-view-tree\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'cannot-change-view-tree',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\ttry {\n\t\t\t// Recursive call to view.change() method - execute listener immediately.\n\t\t\tif ( this._ongoingChange ) {\n\t\t\t\treturn callback( this._writer );\n\t\t\t}\n\n\t\t\t// This lock will assure that all recursive calls to view.change() will end up in same block - one \"render\"\n\t\t\t// event for all nested calls.\n\t\t\tthis._ongoingChange = true;\n\t\t\tconst callbackResult = callback( this._writer );\n\t\t\tthis._ongoingChange = false;\n\n\t\t\t// This lock is used by editing controller to render changes from outer most model.change() once. As plugins might call\n\t\t\t// view.change() inside model.change() block - this will ensures that postfixers and rendering are called once after all\n\t\t\t// changes. Also, we don't need to render anything if there're no changes since last rendering.\n\t\t\tif ( !this._renderingDisabled && this._hasChangedSinceTheLastRendering ) {\n\t\t\t\tthis._postFixersInProgress = true;\n\t\t\t\tthis.document._callPostFixers( this._writer );\n\t\t\t\tthis._postFixersInProgress = false;\n\n\t\t\t\tthis.fire<RenderEvent>( 'render' );\n\t\t\t}\n\n\t\t\treturn callbackResult;\n\t\t} catch ( err: any ) {\n\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t/* istanbul ignore next */\n\t\t\tCKEditorError.rethrowUnexpectedError( err, this );\n\t\t}\n\t}\n\n\t/**\n\t * Forces rendering {@link module:engine/view/document~Document view document} to DOM. If any view changes are\n\t * currently in progress, rendering will start after all {@link #change change blocks} are processed.\n\t *\n\t * Note that this method is dedicated for special cases. All view changes should be wrapped in the {@link #change}\n\t * block and the view will automatically check whether it needs to render DOM or not.\n\t *\n\t * Throws {@link module:utils/ckeditorerror~CKEditorError CKEditorError} `applying-view-changes-on-rendering` when\n\t * trying to re-render when rendering to DOM has already started.\n\t */\n\tpublic forceRender(): void {\n\t\tthis._hasChangedSinceTheLastRendering = true;\n\t\tthis.change( () => {} );\n\t}\n\n\t/**\n\t * Destroys this instance. Makes sure that all observers are destroyed and listeners removed.\n\t */\n\tpublic destroy(): void {\n\t\tfor ( const observer of this._observers.values() ) {\n\t\t\tobserver.destroy();\n\t\t}\n\n\t\tthis.document.destroy();\n\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Creates position at the given location. The location can be specified as:\n\t *\n\t * * a {@link module:engine/view/position~Position position},\n\t * * parent element and offset (offset defaults to `0`),\n\t * * parent element and `'end'` (sets position at the end of that element),\n\t * * {@link module:engine/view/item~Item view item} and `'before'` or `'after'` (sets position before or after given view item).\n\t *\n\t * This method is a shortcut to other constructors such as:\n\t *\n\t * * {@link #createPositionBefore},\n\t * * {@link #createPositionAfter},\n\t *\n\t * @param {module:engine/view/item~Item|module:engine/model/position~Position} itemOrPosition\n\t * @param {Number|'end'|'before'|'after'} [offset] Offset or one of the flags. Used only when\n\t * first parameter is a {@link module:engine/view/item~Item view item}.\n\t */\n\tpublic createPositionAt( itemOrPosition: Item | Position, offset?: number | 'before' | 'after' | 'end' ): Position {\n\t\treturn Position._createAt( itemOrPosition, offset );\n\t}\n\n\t/**\n\t * Creates a new position after given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item after which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tpublic createPositionAfter( item: Item ): Position {\n\t\treturn Position._createAfter( item );\n\t}\n\n\t/**\n\t * Creates a new position before given view item.\n\t *\n\t * @param {module:engine/view/item~Item} item View item before which the position should be located.\n\t * @returns {module:engine/view/position~Position}\n\t */\n\tpublic createPositionBefore( item: Item ): Position {\n\t\treturn Position._createBefore( item );\n\t}\n\n\t/**\n\t * Creates a range spanning from `start` position to `end` position.\n\t *\n\t * **Note:** This factory method creates it's own {@link module:engine/view/position~Position} instances basing on passed values.\n\t *\n\t * @param {module:engine/view/position~Position} start Start position.\n\t * @param {module:engine/view/position~Position} [end] End position. If not set, range will be collapsed at `start` position.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tpublic createRange( ...args: ConstructorParameters<typeof Range> ): Range {\n\t\treturn new Range( ...args );\n\t}\n\n\t/**\n\t * Creates a range that starts before given {@link module:engine/view/item~Item view item} and ends after it.\n\t *\n\t * @param {module:engine/view/item~Item} item\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tpublic createRangeOn( item: Item ): Range {\n\t\treturn Range._createOn( item );\n\t}\n\n\t/**\n\t * Creates a range inside an {@link module:engine/view/element~Element element} which starts before the first child of\n\t * that element and ends after the last child of that element.\n\t *\n\t * @param {module:engine/view/element~Element} element Element which is a parent for the range.\n\t * @returns {module:engine/view/range~Range}\n\t */\n\tpublic createRangeIn( element: Element ): Range {\n\t\treturn Range._createIn( element );\n\t}\n\n\t/**\n\t Creates new {@link module:engine/view/selection~Selection} instance.\n\t *\n\t * \t\t// Creates empty selection without ranges.\n\t *\t\tconst selection = view.createSelection();\n\t *\n\t *\t\t// Creates selection at the given range.\n\t *\t\tconst range = view.createRange( start, end );\n\t *\t\tconst selection = view.createSelection( range );\n\t *\n\t *\t\t// Creates selection at the given ranges\n\t * \t\tconst ranges = [ view.createRange( start1, end2 ), view.createRange( star2, end2 ) ];\n\t *\t\tconst selection = view.createSelection( ranges );\n\t *\n\t *\t\t// Creates selection from the other selection.\n\t *\t\tconst otherSelection = view.createSelection();\n\t *\t\tconst selection = view.createSelection( otherSelection );\n\t *\n\t *\t\t// Creates selection from the document selection.\n\t *\t\tconst selection = view.createSelection( editor.editing.view.document.selection );\n\t *\n\t * \t\t// Creates selection at the given position.\n\t *\t\tconst position = view.createPositionFromPath( root, path );\n\t *\t\tconst selection = view.createSelection( position );\n\t *\n\t *\t\t// Creates collapsed selection at the position of given item and offset.\n\t *\t\tconst paragraph = view.createContainerElement( 'paragraph' );\n\t *\t\tconst selection = view.createSelection( paragraph, offset );\n\t *\n\t *\t\t// Creates a range inside an {@link module:engine/view/element~Element element} which starts before the\n\t *\t\t// first child of that element and ends after the last child of that element.\n\t *\t\tconst selection = view.createSelection( paragraph, 'in' );\n\t *\n\t *\t\t// Creates a range on an {@link module:engine/view/item~Item item} which starts before the item and ends\n\t *\t\t// just after the item.\n\t *\t\tconst selection = view.createSelection( paragraph, 'on' );\n\t *\n\t * `Selection`'s factory method allow passing additional options (`backward`, `fake` and `label`) as the last argument.\n\t *\n\t *\t\t// Creates backward selection.\n\t *\t\tconst selection = view.createSelection( range, { backward: true } );\n\t *\n\t * Fake selection does not render as browser native selection over selected elements and is hidden to the user.\n\t * This way, no native selection UI artifacts are displayed to the user and selection over elements can be\n\t * represented in other way, for example by applying proper CSS class.\n\t *\n\t * Additionally fake's selection label can be provided. It will be used to describe fake selection in DOM\n\t * (and be  properly handled by screen readers).\n\t *\n\t *\t\t// Creates fake selection with label.\n\t *\t\tconst selection = view.createSelection( range, { fake: true, label: 'foo' } );\n\t *\n\t * @param {module:engine/view/selection~Selectable} [selectable=null]\n\t * @param {Number|'before'|'end'|'after'|'on'|'in'} [placeOrOffset] Offset or place when selectable is an `Item`.\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.backward] Sets this selection instance to be backward.\n\t * @param {Boolean} [options.fake] Sets this selection instance to be marked as `fake`.\n\t * @param {String} [options.label] Label for the fake selection.\n\t * @returns {module:engine/view/selection~Selection}\n\t */\n\tpublic createSelection( ...args: ConstructorParameters<typeof Selection> ): Selection {\n\t\treturn new Selection( ...args );\n\t}\n\n\t/**\n\t * Disables or enables rendering. If the flag is set to `true` then the rendering will be disabled.\n\t * If the flag is set to `false` and if there was some change in the meantime, then the rendering action will be performed.\n\t *\n\t * @protected\n\t * @internal\n\t * @param {Boolean} flag A flag indicates whether the rendering should be disabled.\n\t */\n\tpublic _disableRendering( flag: boolean ): void {\n\t\tthis._renderingDisabled = flag;\n\n\t\tif ( flag == false ) {\n\t\t\t// Render when you stop blocking rendering.\n\t\t\tthis.change( () => {} );\n\t\t}\n\t}\n\n\t/**\n\t * Renders all changes. In order to avoid triggering the observers (e.g. mutations) all observers are disabled\n\t * before rendering and re-enabled after that.\n\t *\n\t * @private\n\t */\n\tprivate _render(): void {\n\t\tthis.isRenderingInProgress = true;\n\t\tthis.disableObservers();\n\t\tthis._renderer.render();\n\t\tthis.enableObservers();\n\t\tthis.isRenderingInProgress = false;\n\t}\n\n\t/**\n\t * Fired after a topmost {@link module:engine/view/view~View#change change block} and all\n\t * {@link module:engine/view/document~Document#registerPostFixer post-fixers} are executed.\n\t *\n\t * Actual rendering is performed as a first listener on 'normal' priority.\n\t *\n\t *\t\tview.on( 'render', () => {\n\t *\t\t\t// Rendering to the DOM is complete.\n\t *\t\t} );\n\t *\n\t * This event is useful when you want to update interface elements after the rendering, e.g. position of the\n\t * balloon panel. If you wants to change view structure use\n\t * {@link module:engine/view/document~Document#registerPostFixer post-fixers}.\n\t *\n\t * @event module:engine/view/view~View#event:render\n\t */\n}\n\nexport type RenderEvent = {\n\tname: 'render';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/ckeditorerror\n */\n\n/* globals console */\n\n/**\n * URL to the documentation with error codes.\n */\nexport const DOCUMENTATION_URL = 'https://ckeditor.com/docs/ckeditor5/latest/support/error-codes.html';\n\n/**\n * The CKEditor error class.\n *\n * You should throw `CKEditorError` when:\n *\n * * An unexpected situation occurred and the editor (most probably) will not work properly. Such exception will be handled\n * by the {@link module:watchdog/watchdog~Watchdog watchdog} (if it is integrated),\n * * If the editor is incorrectly integrated or the editor API is used in the wrong way. This way you will give\n * feedback to the developer as soon as possible. Keep in mind that for common integration issues which should not\n * stop editor initialization (like missing upload adapter, wrong name of a toolbar component) we use\n * {@link module:utils/ckeditorerror~logWarning `logWarning()`} and\n * {@link module:utils/ckeditorerror~logError `logError()`}\n * to improve developers experience and let them see the a working editor as soon as possible.\n *\n *\t\t/**\n *\t\t * Error thrown when a plugin cannot be loaded due to JavaScript errors, lack of plugins with a given name, etc.\n *\t\t *\n *\t\t * @error plugin-load\n *\t\t * @param pluginName The name of the plugin that could not be loaded.\n *\t\t * @param moduleName The name of the module which tried to load this plugin.\n *\t\t * /\n *\t\tthrow new CKEditorError( 'plugin-load', {\n *\t\t\tpluginName: 'foo',\n *\t\t\tmoduleName: 'bar'\n *\t\t} );\n *\n * @extends Error\n */\nexport default class CKEditorError extends Error {\n\tpublic readonly context: object | null | undefined;\n\tpublic readonly data?: object;\n\n\t/**\n\t * Creates an instance of the CKEditorError class.\n\t *\n\t * @param {String} errorName The error id in an `error-name` format. A link to this error documentation page will be added\n\t * to the thrown error's `message`.\n\t * @param {Object|null} context A context of the error by which the {@link module:watchdog/watchdog~Watchdog watchdog}\n\t * is able to determine which editor crashed. It should be an editor instance or a property connected to it. It can be also\n\t * a `null` value if the editor should not be restarted in case of the error (e.g. during the editor initialization).\n\t * The error context should be checked using the `areConnectedThroughProperties( editor, context )` utility\n\t * to check if the object works as the context.\n\t * @param {Object} [data] Additional data describing the error. A stringified version of this object\n\t * will be appended to the error message, so the data are quickly visible in the console. The original\n\t * data object will also be later available under the {@link #data} property.\n\t */\n\tconstructor( errorName: string, context: object | null | undefined, data?: object ) {\n\t\tsuper( getErrorMessage( errorName, data ) );\n\n\t\t/**\n\t\t * @type {String}\n\t\t */\n\t\tthis.name = 'CKEditorError';\n\n\t\t/**\n\t\t * A context of the error by which the Watchdog is able to determine which editor crashed.\n\t\t *\n\t\t * @type {Object|null}\n\t\t */\n\t\tthis.context = context;\n\n\t\t/**\n\t\t * The additional error data passed to the constructor. Undefined if none was passed.\n\t\t *\n\t\t * @type {Object|undefined}\n\t\t */\n\t\tthis.data = data;\n\t}\n\n\t/**\n\t * Checks if the error is of the `CKEditorError` type.\n\t * @returns {Boolean}\n\t */\n\tpublic is( type: string ): boolean {\n\t\treturn type === 'CKEditorError';\n\t}\n\n\t/**\n\t * A utility that ensures that the thrown error is a {@link module:utils/ckeditorerror~CKEditorError} one.\n\t * It is useful when combined with the {@link module:watchdog/watchdog~Watchdog} feature, which can restart the editor in case\n\t * of a {@link module:utils/ckeditorerror~CKEditorError} error.\n\t *\n\t * @static\n\t * @param {Error} err The error to rethrow.\n\t * @param {Object} context An object connected through properties with the editor instance. This context will be used\n\t * by the watchdog to verify which editor should be restarted.\n\t */\n\tpublic static rethrowUnexpectedError( err: Error, context: object ): never {\n\t\tif ( ( err as any ).is && ( err as any ).is( 'CKEditorError' ) ) {\n\t\t\tthrow err;\n\t\t}\n\n\t\t/**\n\t\t * An unexpected error occurred inside the CKEditor 5 codebase. This error will look like the original one\n\t\t * to make the debugging easier.\n\t\t *\n\t\t * This error is only useful when the editor is initialized using the {@link module:watchdog/watchdog~Watchdog} feature.\n\t\t * In case of such error (or any {@link module:utils/ckeditorerror~CKEditorError} error) the watchdog should restart the editor.\n\t\t *\n\t\t * @error unexpected-error\n\t\t */\n\t\tconst error = new CKEditorError( err.message, context );\n\n\t\t// Restore the original stack trace to make the error look like the original one.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/5595 for more details.\n\t\terror.stack = err.stack;\n\n\t\tthrow error;\n\t}\n}\n\n/**\n * Logs a warning to the console with a properly formatted message and adds a link to the documentation.\n * Use whenever you want to log a warning to the console.\n *\n *\t\t/**\n *\t\t * There was a problem processing the configuration of the toolbar. The item with the given\n *\t\t * name does not exist, so it was omitted when rendering the toolbar.\n *\t\t *\n *\t\t * @error toolbarview-item-unavailable\n *\t\t * @param {String} name The name of the component.\n *\t\t * /\n *\t\tlogWarning( 'toolbarview-item-unavailable', { name } );\n *\n * See also {@link module:utils/ckeditorerror~CKEditorError} for an explanation when to throw an error and when to log\n * a warning or an error to the console.\n *\n * @param {String} errorName The error name to be logged.\n * @param {Object} [data] Additional data to be logged.\n */\nexport function logWarning( errorName: string, data?: object ): void {\n\tconsole.warn( ...formatConsoleArguments( errorName, data ) );\n}\n\n/**\n * Logs an error to the console with a properly formatted message and adds a link to the documentation.\n * Use whenever you want to log an error to the console.\n *\n *\t\t/**\n *\t\t * There was a problem processing the configuration of the toolbar. The item with the given\n *\t\t * name does not exist, so it was omitted when rendering the toolbar.\n *\t\t *\n *\t\t * @error toolbarview-item-unavailable\n *\t\t * @param {String} name The name of the component.\n *\t\t * /\n *\t\t logError( 'toolbarview-item-unavailable', { name } );\n *\n * **Note**: In most cases logging a warning using {@link module:utils/ckeditorerror~logWarning} is enough.\n *\n * See also {@link module:utils/ckeditorerror~CKEditorError} for an explanation when to use each method.\n *\n * @param {String} errorName The error name to be logged.\n * @param {Object} [data] Additional data to be logged.\n */\nexport function logError( errorName: string, data?: object ): void {\n\tconsole.error( ...formatConsoleArguments( errorName, data ) );\n}\n\n// Returns formatted link to documentation message.\n//\n// @private\n// @param {String} errorName\n// @returns {string}\nfunction getLinkToDocumentationMessage( errorName: string ): string {\n\treturn `\\nRead more: ${ DOCUMENTATION_URL }#error-${ errorName }`;\n}\n\n// Returns formatted error message.\n//\n// @private\n// @param {String} errorName\n// @param {Object} [data]\n// @returns {string}\nfunction getErrorMessage( errorName: string, data?: object ): string {\n\tconst processedObjects = new WeakSet();\n\tconst circularReferencesReplacer = ( key: string, value: unknown ) => {\n\t\tif ( typeof value === 'object' && value !== null ) {\n\t\t\tif ( processedObjects.has( value ) ) {\n\t\t\t\treturn `[object ${ value.constructor.name }]`;\n\t\t\t}\n\n\t\t\tprocessedObjects.add( value );\n\t\t}\n\n\t\treturn value;\n\t};\n\n\tconst stringifiedData = data ? ` ${ JSON.stringify( data, circularReferencesReplacer ) }` : '';\n\tconst documentationLink = getLinkToDocumentationMessage( errorName );\n\n\treturn errorName + stringifiedData + documentationLink;\n}\n\n// Returns formatted console error arguments.\n//\n// @private\n// @param {String} errorName\n// @param {Object} [data]\n// @returns {Array}\nfunction formatConsoleArguments( errorName: string, data?: object ): unknown[] {\n\tconst documentationMessage = getLinkToDocumentationMessage( errorName );\n\n\treturn data ? [ errorName, data, documentationMessage ] : [ errorName, documentationMessage ];\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/collection\n */\n\nimport { Emitter } from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport uid from './uid';\nimport isIterable from './isiterable';\n\n/**\n * Collections are ordered sets of objects. Items in the collection can be retrieved by their indexes\n * in the collection (like in an array) or by their ids.\n *\n * If an object without an `id` property is being added to the collection, the `id` property will be generated\n * automatically. Note that the automatically generated id is unique only within this single collection instance.\n *\n * By default an item in the collection is identified by its `id` property. The name of the identifier can be\n * configured through the constructor of the collection.\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n */\nexport default class Collection<T extends { [ id in I ]?: string }, I extends string = 'id'> extends Emitter implements Iterable<T> {\n\t/**\n\t * The internal list of items in the collection.\n\t *\n\t * @private\n\t * @member {Object[]}\n\t */\n\tprivate readonly _items: T[];\n\n\t/**\n\t * The internal map of items in the collection.\n\t *\n\t * @private\n\t * @member {Map}\n\t */\n\tprivate readonly _itemMap: Map<string, T>;\n\n\t/**\n\t * The name of the property which is considered to identify an item.\n\t *\n\t * @private\n\t * @member {String}\n\t */\n\tprivate readonly _idProperty: I;\n\n\t/**\n\t * A collection instance this collection is bound to as a result\n\t * of calling {@link #bindTo} method.\n\t *\n\t * @private\n\t * @member {module:utils/collection~Collection} #_bindToCollection\n\t */\n\tprivate _bindToCollection?: Collection<any, any> | null;\n\n\t/**\n\t * A helper mapping external items of a bound collection ({@link #bindTo})\n\t * and actual items of this collection. It provides information\n\t * necessary to properly remove items bound to another collection.\n\t *\n\t * See {@link #_bindToInternalToExternalMap}.\n\t *\n\t * @private\n\t * @member {WeakMap}\n\t */\n\tprivate readonly _bindToExternalToInternalMap: WeakMap<any, T>;\n\n\t/**\n\t * A helper mapping items of this collection to external items of a bound collection\n\t * ({@link #bindTo}). It provides information necessary to manage the bindings, e.g.\n\t * to avoid loops in two–way bindings.\n\t *\n\t * See {@link #_bindToExternalToInternalMap}.\n\t *\n\t * @private\n\t * @member {WeakMap}\n\t */\n\tprivate readonly _bindToInternalToExternalMap: WeakMap<T, any>;\n\n\t/**\n\t * Stores indexes of skipped items from bound external collection.\n\t *\n\t * @private\n\t * @member {Array}\n\t */\n\tprivate _skippedIndexesFromExternal: number[];\n\n\tconstructor( options?: { readonly idProperty?: I } );\n\tconstructor( initialItems: Iterable<T>, options?: { readonly idProperty?: I } );\n\n\t/**\n\t * Creates a new Collection instance.\n\t *\n\t * You can provide an iterable of initial items the collection will be created with:\n\t *\n\t *\t\tconst collection = new Collection( [ { id: 'John' }, { id: 'Mike' } ] );\n\t *\n\t *\t\tconsole.log( collection.get( 0 ) ); // -> { id: 'John' }\n\t *\t\tconsole.log( collection.get( 1 ) ); // -> { id: 'Mike' }\n\t *\t\tconsole.log( collection.get( 'Mike' ) ); // -> { id: 'Mike' }\n\t *\n\t * Or you can first create a collection and then add new items using the {@link #add} method:\n\t *\n\t *\t\tconst collection = new Collection();\n\t *\n\t *\t\tcollection.add( { id: 'John' } );\n\t *\t\tconsole.log( collection.get( 0 ) ); // -> { id: 'John' }\n\t *\n\t * Whatever option you choose, you can always pass a configuration object as the last argument\n\t * of the constructor:\n\t *\n\t *\t\tconst emptyCollection = new Collection( { idProperty: 'name' } );\n\t *\t\temptyCollection.add( { name: 'John' } );\n\t *\t\tconsole.log( collection.get( 'John' ) ); // -> { name: 'John' }\n\t *\n\t *\t\tconst nonEmptyCollection = new Collection( [ { name: 'John' } ], { idProperty: 'name' } );\n\t *\t\tnonEmptyCollection.add( { name: 'George' } );\n\t *\t\tconsole.log( collection.get( 'George' ) ); // -> { name: 'George' }\n\t *\t\tconsole.log( collection.get( 'John' ) ); // -> { name: 'John' }\n\t *\n\t * @param {Iterable.<Object>|Object} [initialItemsOrOptions] The initial items of the collection or\n\t * the options object.\n\t * @param {Object} [options={}] The options object, when the first argument is an array of initial items.\n\t * @param {String} [options.idProperty='id'] The name of the property which is used to identify an item.\n\t * Items that do not have such a property will be assigned one when added to the collection.\n\t */\n\tconstructor( initialItemsOrOptions: Iterable<T> | { readonly idProperty?: I } = {}, options: { readonly idProperty?: I } = {} ) {\n\t\tsuper();\n\n\t\tconst hasInitialItems = isIterable( initialItemsOrOptions );\n\n\t\tif ( !hasInitialItems ) {\n\t\t\toptions = initialItemsOrOptions;\n\t\t}\n\n\t\tthis._items = [];\n\t\tthis._itemMap = new Map();\n\t\tthis._idProperty = options.idProperty || 'id' as I;\n\t\tthis._bindToExternalToInternalMap = new WeakMap();\n\t\tthis._bindToInternalToExternalMap = new WeakMap();\n\t\tthis._skippedIndexesFromExternal = [];\n\n\t\t// Set the initial content of the collection (if provided in the constructor).\n\t\tif ( hasInitialItems ) {\n\t\t\tfor ( const item of initialItemsOrOptions ) {\n\t\t\t\tthis._items.push( item );\n\t\t\t\tthis._itemMap.set( this._getItemIdBeforeAdding( item ), item );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * The number of items available in the collection.\n\t *\n\t * @member {Number} #length\n\t */\n\tpublic get length(): number {\n\t\treturn this._items.length;\n\t}\n\n\t/**\n\t * Returns the first item from the collection or null when collection is empty.\n\t *\n\t * @returns {Object|null} The first item or `null` if collection is empty.\n\t */\n\tpublic get first(): T | null {\n\t\treturn this._items[ 0 ] || null;\n\t}\n\n\t/**\n\t * Returns the last item from the collection or null when collection is empty.\n\t *\n\t * @returns {Object|null} The last item or `null` if collection is empty.\n\t */\n\tpublic get last(): T | null {\n\t\treturn this._items[ this.length - 1 ] || null;\n\t}\n\n\t/**\n\t * Adds an item into the collection.\n\t *\n\t * If the item does not have an id, then it will be automatically generated and set on the item.\n\t *\n\t * @chainable\n\t * @param {Object} item\n\t * @param {Number} [index] The position of the item in the collection. The item\n\t * is pushed to the collection when `index` not specified.\n\t * @fires add\n\t * @fires change\n\t */\n\tpublic add( item: T, index?: number ): this {\n\t\treturn this.addMany( [ item ], index );\n\t}\n\n\t/**\n\t * Adds multiple items into the collection.\n\t *\n\t * Any item not containing an id will get an automatically generated one.\n\t *\n\t * @chainable\n\t * @param {Iterable.<Object>} items\n\t * @param {Number} [index] The position of the insertion. Items will be appended if no `index` is specified.\n\t * @fires add\n\t * @fires change\n\t */\n\tpublic addMany( items: Iterable<T>, index?: number ): this {\n\t\tif ( index === undefined ) {\n\t\t\tindex = this._items.length;\n\t\t} else if ( index > this._items.length || index < 0 ) {\n\t\t\t/**\n\t\t\t * The `index` passed to {@link module:utils/collection~Collection#addMany `Collection#addMany()`}\n\t\t\t * is invalid. It must be a number between 0 and the collection's length.\n\t\t\t *\n\t\t\t * @error collection-add-item-invalid-index\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-add-item-invalid-index', this );\n\t\t}\n\n\t\tlet offset = 0;\n\n\t\tfor ( const item of items ) {\n\t\t\tconst itemId = this._getItemIdBeforeAdding( item );\n\t\t\tconst currentItemIndex = index + offset;\n\n\t\t\tthis._items.splice( currentItemIndex, 0, item );\n\t\t\tthis._itemMap.set( itemId, item );\n\n\t\t\tthis.fire<AddEvent<T>>( 'add', item, currentItemIndex );\n\n\t\t\toffset++;\n\t\t}\n\n\t\tthis.fire<ChangeEvent<T>>( 'change', {\n\t\t\tadded: items,\n\t\t\tremoved: [],\n\t\t\tindex\n\t\t} );\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets an item by its ID or index.\n\t *\n\t * @param {String|Number} idOrIndex The item ID or index in the collection.\n\t * @returns {Object|null} The requested item or `null` if such item does not exist.\n\t */\n\tpublic get( idOrIndex: string | number ): T | null {\n\t\tlet item: T | undefined;\n\n\t\tif ( typeof idOrIndex == 'string' ) {\n\t\t\titem = this._itemMap.get( idOrIndex );\n\t\t} else if ( typeof idOrIndex == 'number' ) {\n\t\t\titem = this._items[ idOrIndex ];\n\t\t} else {\n\t\t\t/**\n\t\t\t * An index or ID must be given.\n\t\t\t *\n\t\t\t * @error collection-get-invalid-arg\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-get-invalid-arg', this );\n\t\t}\n\n\t\treturn item || null;\n\t}\n\n\t/**\n\t * Returns a Boolean indicating whether the collection contains an item.\n\t *\n\t * @param {Object|String} itemOrId The item or its ID in the collection.\n\t * @returns {Boolean} `true` if the collection contains the item, `false` otherwise.\n\t */\n\tpublic has( itemOrId: T | string ): boolean {\n\t\tif ( typeof itemOrId == 'string' ) {\n\t\t\treturn this._itemMap.has( itemOrId );\n\t\t} else { // Object\n\t\t\tconst idProperty = this._idProperty;\n\t\t\tconst id = itemOrId[ idProperty ];\n\n\t\t\treturn id && this._itemMap.has( id );\n\t\t}\n\t}\n\n\t/**\n\t * Gets an index of an item in the collection.\n\t * When an item is not defined in the collection, the index will equal -1.\n\t *\n\t * @param {Object|String} itemOrId The item or its ID in the collection.\n\t * @returns {Number} The index of a given item.\n\t */\n\tpublic getIndex( itemOrId: T | string ): number {\n\t\tlet item: T | undefined;\n\n\t\tif ( typeof itemOrId == 'string' ) {\n\t\t\titem = this._itemMap.get( itemOrId );\n\t\t} else {\n\t\t\titem = itemOrId;\n\t\t}\n\n\t\treturn item ? this._items.indexOf( item ) : -1;\n\t}\n\n\t/**\n\t * Removes an item from the collection.\n\t *\n\t * @param {Object|Number|String} subject The item to remove, its ID or index in the collection.\n\t * @returns {Object} The removed item.\n\t * @fires remove\n\t * @fires change\n\t */\n\tpublic remove( subject: T | number | string ): T {\n\t\tconst [ item, index ] = this._remove( subject );\n\n\t\tthis.fire<ChangeEvent<T>>( 'change', {\n\t\t\tadded: [],\n\t\t\tremoved: [ item ],\n\t\t\tindex\n\t\t} );\n\n\t\treturn item;\n\t}\n\n\t/**\n\t * Executes the callback for each item in the collection and composes an array or values returned by this callback.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @param {Object} [ctx] Context in which the `callback` will be called.\n\t * @returns {Array} The result of mapping.\n\t */\n\tpublic map<U>(\n\t\tcallback: ( item: T, index: number ) => U,\n\t\tctx?: any\n\t): U[] {\n\t\treturn this._items.map( callback, ctx );\n\t}\n\n\t/**\n\t * Finds the first item in the collection for which the `callback` returns a true value.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @param {Object} [ctx] Context in which the `callback` will be called.\n\t * @returns {Object|undefined} The item for which `callback` returned a true value.\n\t */\n\tpublic find(\n\t\tcallback: ( item: T, index: number ) => boolean,\n\t\tctx?: any\n\t): T | undefined {\n\t\treturn this._items.find( callback, ctx );\n\t}\n\n\t/**\n\t * Returns an array with items for which the `callback` returned a true value.\n\t *\n\t * @param {Function} callback\n\t * @param {Object} callback.item\n\t * @param {Number} callback.index\n\t * @param {Object} [ctx] Context in which the `callback` will be called.\n\t * @returns {Array} The array with matching items.\n\t */\n\tpublic filter(\n\t\tcallback: ( item: T, index: number ) => boolean,\n\t\tctx?: any\n\t): T[] {\n\t\treturn this._items.filter( callback, ctx );\n\t}\n\n\t/**\n\t * Removes all items from the collection and destroys the binding created using\n\t * {@link #bindTo}.\n\t *\n\t * @fires remove\n\t * @fires change\n\t */\n\tpublic clear(): void {\n\t\tif ( this._bindToCollection ) {\n\t\t\tthis.stopListening( this._bindToCollection );\n\t\t\tthis._bindToCollection = null;\n\t\t}\n\n\t\tconst removedItems = Array.from( this._items );\n\n\t\twhile ( this.length ) {\n\t\t\tthis._remove( 0 );\n\t\t}\n\n\t\tthis.fire<ChangeEvent<T>>( 'change', {\n\t\t\tadded: [],\n\t\t\tremoved: removedItems,\n\t\t\tindex: 0\n\t\t} );\n\t}\n\n\t/**\n\t * Binds and synchronizes the collection with another one.\n\t *\n\t * The binding can be a simple factory:\n\t *\n\t *\t\tclass FactoryClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).as( FactoryClass );\n\t *\n\t *\t\tsource.add( { label: 'foo' } );\n\t *\t\tsource.add( { label: 'bar' } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 1 ).label ); // 'bar'\n\t *\n\t *\t\tsource.remove( 0 );\n\t *\t\tconsole.log( target.length ); // 1\n\t *\t\tconsole.log( target.get( 0 ).label ); // 'bar'\n\t *\n\t * or the factory driven by a custom callback:\n\t *\n\t *\t\tclass FooClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tclass BarClass {\n\t *\t\t\tconstructor( data ) {\n\t *\t\t\t\tthis.label = data.label;\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( ( item ) => {\n\t *\t\t\tif ( item.label == 'foo' ) {\n\t *\t\t\t\treturn new FooClass( item );\n\t *\t\t\t} else {\n\t *\t\t\t\treturn new BarClass( item );\n\t *\t\t\t}\n\t *\t\t} );\n\t *\n\t *\t\tsource.add( { label: 'foo' } );\n\t *\t\tsource.add( { label: 'bar' } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 0 ) instanceof FooClass ); // true\n\t *\t\tconsole.log( target.get( 1 ) instanceof BarClass ); // true\n\t *\n\t * or the factory out of property name:\n\t *\n\t *\t\tconst source = new Collection( { idProperty: 'label' } );\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( 'label' );\n\t *\n\t *\t\tsource.add( { label: { value: 'foo' } } );\n\t *\t\tsource.add( { label: { value: 'bar' } } );\n\t *\n\t *\t\tconsole.log( target.length ); // 2\n\t *\t\tconsole.log( target.get( 0 ).value ); // 'foo'\n\t *\t\tconsole.log( target.get( 1 ).value ); // 'bar'\n\t *\n\t * It's possible to skip specified items by returning falsy value:\n\t *\n\t *\t\tconst source = new Collection();\n\t *\t\tconst target = new Collection();\n\t *\n\t *\t\ttarget.bindTo( source ).using( item => {\n\t *\t\t\tif ( item.hidden ) {\n\t *\t\t\t\treturn null;\n\t *\t\t\t}\n\t *\n\t *\t\t\treturn item;\n\t *\t\t} );\n\t *\n\t *\t\tsource.add( { hidden: true } );\n\t *\t\tsource.add( { hidden: false } );\n\t *\n\t *\t\tconsole.log( source.length ); // 2\n\t *\t\tconsole.log( target.length ); // 1\n\t *\n\t * **Note**: {@link #clear} can be used to break the binding.\n\t *\n\t * @param {module:utils/collection~Collection} externalCollection A collection to be bound.\n\t * @returns {module:utils/collection~CollectionBindToChain} The binding chain object.\n\t */\n\tpublic bindTo<S extends { [id in I2]?: string }, I2 extends string>(\n\t\texternalCollection: Collection<S, I2>\n\t): CollectionBindToChain<S, T> {\n\t\tif ( this._bindToCollection ) {\n\t\t\t/**\n\t\t\t * The collection cannot be bound more than once.\n\t\t\t *\n\t\t\t * @error collection-bind-to-rebind\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-bind-to-rebind', this );\n\t\t}\n\n\t\tthis._bindToCollection = externalCollection;\n\n\t\treturn {\n\t\t\tas: Class => {\n\t\t\t\tthis._setUpBindToBinding<S>( item => new Class( item ) );\n\t\t\t},\n\n\t\t\tusing: callbackOrProperty => {\n\t\t\t\tif ( typeof callbackOrProperty == 'function' ) {\n\t\t\t\t\tthis._setUpBindToBinding<S>( callbackOrProperty );\n\t\t\t\t} else {\n\t\t\t\t\tthis._setUpBindToBinding<S>( item => item[ callbackOrProperty ] as any );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Finalizes and activates a binding initiated by {#bindTo}.\n\t *\n\t * @private\n\t * @param {Function} factory A function which produces collection items.\n\t */\n\tprivate _setUpBindToBinding<S extends object>( factory: ( item: S ) => T | null ): void {\n\t\tconst externalCollection = this._bindToCollection!;\n\n\t\t// Adds the item to the collection once a change has been done to the external collection.\n\t\t//\n\t\t// @private\n\t\tconst addItem = ( evt: unknown, externalItem: S, index: number ) => {\n\t\t\tconst isExternalBoundToThis = externalCollection._bindToCollection == this;\n\t\t\tconst externalItemBound = externalCollection._bindToInternalToExternalMap.get( externalItem );\n\n\t\t\t// If an external collection is bound to this collection, which makes it a 2–way binding,\n\t\t\t// and the particular external collection item is already bound, don't add it here.\n\t\t\t// The external item has been created **out of this collection's item** and (re)adding it will\n\t\t\t// cause a loop.\n\t\t\tif ( isExternalBoundToThis && externalItemBound ) {\n\t\t\t\tthis._bindToExternalToInternalMap.set( externalItem, externalItemBound );\n\t\t\t\tthis._bindToInternalToExternalMap.set( externalItemBound, externalItem );\n\t\t\t} else {\n\t\t\t\tconst item = factory( externalItem );\n\n\t\t\t\t// When there is no item we need to remember skipped index first and then we can skip this item.\n\t\t\t\tif ( !item ) {\n\t\t\t\t\tthis._skippedIndexesFromExternal.push( index );\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Lets try to put item at the same index as index in external collection\n\t\t\t\t// but when there are a skipped items in one or both collections we need to recalculate this index.\n\t\t\t\tlet finalIndex = index;\n\n\t\t\t\t// When we try to insert item after some skipped items from external collection we need\n\t\t\t\t// to include this skipped items and decrease index.\n\t\t\t\t//\n\t\t\t\t// For the following example:\n\t\t\t\t// external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal' ]\n\t\t\t\t// internal -> [ A ]\n\t\t\t\t//\n\t\t\t\t// Another item is been added at the end of external collection:\n\t\t\t\t// external.add( 'D' )\n\t\t\t\t// external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal', 'D' ]\n\t\t\t\t//\n\t\t\t\t// We can't just add 'D' to internal at the same index as index in external because\n\t\t\t\t// this will produce empty indexes what is invalid:\n\t\t\t\t// internal -> [ 'A', empty, empty, 'D' ]\n\t\t\t\t//\n\t\t\t\t// So we need to include skipped items and decrease index\n\t\t\t\t// internal -> [ 'A', 'D' ]\n\t\t\t\tfor ( const skipped of this._skippedIndexesFromExternal ) {\n\t\t\t\t\tif ( index > skipped ) {\n\t\t\t\t\t\tfinalIndex--;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// We need to take into consideration that external collection could skip some items from\n\t\t\t\t// internal collection.\n\t\t\t\t//\n\t\t\t\t// For the following example:\n\t\t\t\t// internal -> [ 'A', 'B - skipped for external', 'C - skipped for external' ]\n\t\t\t\t// external -> [ A ]\n\t\t\t\t//\n\t\t\t\t// Another item is been added at the end of external collection:\n\t\t\t\t// external.add( 'D' )\n\t\t\t\t// external -> [ 'A', 'D' ]\n\t\t\t\t//\n\t\t\t\t// We need to include skipped items and place new item after them:\n\t\t\t\t// internal -> [ 'A', 'B - skipped for external', 'C - skipped for external', 'D' ]\n\t\t\t\tfor ( const skipped of externalCollection._skippedIndexesFromExternal ) {\n\t\t\t\t\tif ( finalIndex >= skipped ) {\n\t\t\t\t\t\tfinalIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._bindToExternalToInternalMap.set( externalItem, item );\n\t\t\t\tthis._bindToInternalToExternalMap.set( item, externalItem );\n\t\t\t\tthis.add( item, finalIndex );\n\n\t\t\t\t// After adding new element to internal collection we need update indexes\n\t\t\t\t// of skipped items in external collection.\n\t\t\t\tfor ( let i = 0; i < externalCollection._skippedIndexesFromExternal.length; i++ ) {\n\t\t\t\t\tif ( finalIndex <= externalCollection._skippedIndexesFromExternal[ i ] ) {\n\t\t\t\t\t\texternalCollection._skippedIndexesFromExternal[ i ]++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Load the initial content of the collection.\n\t\tfor ( const externalItem of externalCollection ) {\n\t\t\taddItem( null, externalItem, externalCollection.getIndex( externalItem ) );\n\t\t}\n\n\t\t// Synchronize the with collection as new items are added.\n\t\tthis.listenTo<AddEvent<S>>( externalCollection, 'add', addItem );\n\n\t\t// Synchronize the with collection as new items are removed.\n\t\tthis.listenTo<RemoveEvent<S>>( externalCollection, 'remove', ( evt, externalItem, index ) => {\n\t\t\tconst item = this._bindToExternalToInternalMap.get( externalItem );\n\n\t\t\tif ( item ) {\n\t\t\t\tthis.remove( item );\n\t\t\t}\n\n\t\t\t// After removing element from external collection we need update/remove indexes\n\t\t\t// of skipped items in internal collection.\n\t\t\tthis._skippedIndexesFromExternal = this._skippedIndexesFromExternal.reduce( ( result, skipped ) => {\n\t\t\t\tif ( index < skipped ) {\n\t\t\t\t\tresult.push( skipped - 1 );\n\t\t\t\t}\n\n\t\t\t\tif ( index > skipped ) {\n\t\t\t\t\tresult.push( skipped );\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [] as number[] );\n\t\t} );\n\t}\n\n\t/**\n\t * Returns an unique id property for a given `item`.\n\t *\n\t * The method will generate new id and assign it to the `item` if it doesn't have any.\n\t *\n\t * @private\n\t * @param {Object} item Item to be added.\n\t * @returns {String}\n\t */\n\tprivate _getItemIdBeforeAdding( item: { [ id in I ]?: string } ): string {\n\t\tconst idProperty = this._idProperty;\n\t\tlet itemId: string | undefined;\n\n\t\tif ( ( idProperty in item ) ) {\n\t\t\titemId = item[ idProperty ];\n\n\t\t\tif ( typeof itemId != 'string' ) {\n\t\t\t\t/**\n\t\t\t\t * This item's ID should be a string.\n\t\t\t\t *\n\t\t\t\t * @error collection-add-invalid-id\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'collection-add-invalid-id', this );\n\t\t\t}\n\n\t\t\tif ( this.get( itemId ) ) {\n\t\t\t\t/**\n\t\t\t\t * This item already exists in the collection.\n\t\t\t\t *\n\t\t\t\t * @error collection-add-item-already-exists\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'collection-add-item-already-exists', this );\n\t\t\t}\n\t\t} else {\n\t\t\titem[ idProperty ] = itemId = uid();\n\t\t}\n\n\t\treturn itemId;\n\t}\n\n\t/**\n\t * Core {@link #remove} method implementation shared in other functions.\n\t *\n\t * In contrast this method **does not** fire the {@link #event:change} event.\n\t *\n\t * @private\n\t * @param {Object|Number|String} subject The item to remove, its id or index in the collection.\n\t * @returns {Array} Returns an array with the removed item and its index.\n\t * @fires remove\n\t */\n\tprivate _remove( subject: T | number | string ): [ item: T, index: number ] {\n\t\tlet index: number, id: string, item: T;\n\t\tlet itemDoesNotExist = false;\n\t\tconst idProperty = this._idProperty;\n\n\t\tif ( typeof subject == 'string' ) {\n\t\t\tid = subject;\n\t\t\titem = this._itemMap.get( id )!;\n\t\t\titemDoesNotExist = !item;\n\n\t\t\tif ( item ) {\n\t\t\t\tindex = this._items.indexOf( item );\n\t\t\t}\n\t\t} else if ( typeof subject == 'number' ) {\n\t\t\tindex = subject;\n\t\t\titem = this._items[ index ];\n\t\t\titemDoesNotExist = !item;\n\n\t\t\tif ( item ) {\n\t\t\t\tid = item[ idProperty ]!;\n\t\t\t}\n\t\t} else {\n\t\t\titem = subject;\n\t\t\tid = item[ idProperty ]!;\n\t\t\tindex = this._items.indexOf( item );\n\t\t\titemDoesNotExist = ( index == -1 || !this._itemMap.get( id ) );\n\t\t}\n\n\t\tif ( itemDoesNotExist ) {\n\t\t\t/**\n\t\t\t * Item not found.\n\t\t\t *\n\t\t\t * @error collection-remove-404\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'collection-remove-404', this );\n\t\t}\n\n\t\tthis._items.splice( index!, 1 );\n\t\tthis._itemMap.delete( id! );\n\n\t\tconst externalItem = this._bindToInternalToExternalMap.get( item );\n\t\tthis._bindToInternalToExternalMap.delete( item );\n\t\tthis._bindToExternalToInternalMap.delete( externalItem );\n\n\t\tthis.fire<RemoveEvent<T>>( 'remove', item, index! );\n\n\t\treturn [ item, index! ];\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterator.<*>}\n\t */\n\tpublic [ Symbol.iterator ](): Iterator<T> {\n\t\treturn this._items[ Symbol.iterator ]();\n\t}\n\n\t/**\n\t * Fired when an item is added to the collection.\n\t *\n\t * @event add\n\t * @param {Object} item The added item.\n\t */\n\n\t/**\n\t * Fired when the collection was changed due to adding or removing items.\n\t *\n\t * @event change\n\t * @param {Iterable.<Object>} added A list of added items.\n\t * @param {Iterable.<Object>} removed A list of removed items.\n\t * @param {Number} index An index where the addition or removal occurred.\n\t */\n\n\t/**\n\t * Fired when an item is removed from the collection.\n\t *\n\t * @event remove\n\t * @param {Object} item The removed item.\n\t * @param {Number} index Index from which item was removed.\n\t */\n}\n\nexport type AddEvent<T = any> = {\n\tname: 'add';\n\targs: [ item: T, index: number ];\n};\n\nexport type ChangeEvent<T = any> = {\n\tname: 'change';\n\targs: [ {\n\t\tadded: Iterable<T>;\n\t\tremoved: Iterable<T>;\n\t\tindex: number;\n\t} ];\n};\n\nexport type RemoveEvent<T = any> = {\n\tname: 'remove';\n\targs: [ item: T, index: number ];\n};\n\n/**\n * An object returned by the {@link module:utils/collection~Collection#bindTo `bindTo()`} method\n * providing functions that specify the type of the binding.\n *\n * See the {@link module:utils/collection~Collection#bindTo `bindTo()`} documentation for examples.\n *\n * @interface\n */\nexport interface CollectionBindToChain<S, T> {\n\n\t/**\n\t * Creates the class factory binding in which items of the source collection are passed to\n\t * the constructor of the specified class.\n\t *\n\t * @method #as\n\t * @param {Function} Class The class constructor used to create instances in the factory.\n\t */\n\tas( Class: new ( item: S ) => T ): void;\n\n\t/**\n\t * Creates a callback or a property binding.\n\t *\n\t * @method #using\n\t * @param {Function|String} callbackOrProperty  When the function is passed, it should return\n\t * the collection items. When the string is provided, the property value is used to create the bound collection items.\n\t */\n\tusing( callbackOrProperty: keyof S | ( ( item: S ) => T | null ) ): void;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/comparearrays\n */\n\n/**\n * Compares how given arrays relate to each other. One array can be: same as another array, prefix of another array\n * or completely different. If arrays are different, first index at which they differ is returned. Otherwise,\n * a flag specifying the relation is returned. Flags are negative numbers, so whenever a number >= 0 is returned\n * it means that arrays differ.\n *\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2 ] );\t\t// 'same'\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 2, 1 ] );\t\t// 'prefix'\n *\t\tcompareArrays( [ 0, 2 ], [ 0 ] );\t\t\t// 'extension'\n *\t\tcompareArrays( [ 0, 2 ], [ 1, 2 ] );\t\t// 0\n *\t\tcompareArrays( [ 0, 2 ], [ 0, 1 ] );\t\t// 1\n *\n * @param {Array} a Array that is compared.\n * @param {Array} b Array to compare with.\n * @returns {module:utils/comparearrays~ArrayRelation|Number} How array `a` is related to `b`.\n */\nexport default function compareArrays( a: readonly unknown[], b: readonly unknown[] ): ArrayRelation | number {\n\tconst minLen = Math.min( a.length, b.length );\n\n\tfor ( let i = 0; i < minLen; i++ ) {\n\t\tif ( a[ i ] != b[ i ] ) {\n\t\t\t// The arrays are different.\n\t\t\treturn i;\n\t\t}\n\t}\n\n\t// Both arrays were same at all points.\n\tif ( a.length == b.length ) {\n\t\t// If their length is also same, they are the same.\n\t\treturn 'same';\n\t} else if ( a.length < b.length ) {\n\t\t// Compared array is shorter so it is a prefix of the other array.\n\t\treturn 'prefix';\n\t} else {\n\t\t// Compared array is longer so it is an extension of the other array.\n\t\treturn 'extension';\n\t}\n}\n\n/**\n * @typedef {'extension'|'same'|'prefix'} module:utils/comparearrays~ArrayRelation\n */\nexport type ArrayRelation = 'extension' | 'same' | 'prefix';\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/count\n */\n\n/**\n * Returns the number of items return by the iterator.\n *\n *\t\tcount( [ 1, 2, 3, 4, 5 ] ); // 5;\n *\n * @param {Iterable.<*>} iterable Any iterable.\n * @returns {Number} Number of items returned by that iterable.\n */\nexport default function count( iterable: Iterable<unknown> ): number {\n\tlet count = 0;\n\n\tfor ( const _ of iterable ) { // eslint-disable-line no-unused-vars\n\t\tcount++;\n\t}\n\n\treturn count;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/diff\n */\n\nimport fastDiff from './fastdiff';\n\n// The following code is based on the \"O(NP) Sequence Comparison Algorithm\"\n// by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n\n/**\n * Calculates the difference between two arrays or strings producing an array containing a list of changes\n * necessary to transform input into output.\n *\n *\t\tdiff( 'aba', 'acca' ); // [ 'equal', 'insert', 'insert', 'delete', 'equal' ]\n *\n * This function is based on the \"O(NP) Sequence Comparison Algorithm\" by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n * Unfortunately, while it gives the most precise results, its to complex for longer strings/arrow (above 200 items).\n * Therefore, `diff()` automatically switches to {@link module:utils/fastdiff~fastDiff `fastDiff()`} when detecting\n * such a scenario. The return formats of both functions are identical.\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Output array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default === is used.\n * @returns {Array.<module:utils/diff~DiffResult>} Array of changes.\n */\nexport default function diff<T>(\n\ta: ArrayLike<T>,\n\tb: ArrayLike<T>,\n\tcmp?: ( a: T, b: T ) => boolean\n): DiffResult[] {\n\t// Set the comparator function.\n\tcmp = cmp || function( a, b ) {\n\t\treturn a === b;\n\t};\n\n\tconst aLength = a.length;\n\tconst bLength = b.length;\n\n\t// Perform `fastDiff` for longer strings/arrays (see #269).\n\tif ( aLength > 200 || bLength > 200 || aLength + bLength > 300 ) {\n\t\treturn diff.fastDiff( a, b, cmp, true );\n\t}\n\n\t// Temporary action type statics.\n\tlet _insert: DiffResult, _delete: DiffResult;\n\n\t// Swapped the arrays to use the shorter one as the first one.\n\tif ( bLength < aLength ) {\n\t\tconst tmp = a;\n\n\t\ta = b;\n\t\tb = tmp;\n\n\t\t// We swap the action types as well.\n\t\t_insert = 'delete';\n\t\t_delete = 'insert';\n\t} else {\n\t\t_insert = 'insert';\n\t\t_delete = 'delete';\n\t}\n\n\tconst m = a.length;\n\tconst n = b.length;\n\tconst delta = n - m;\n\n\t// Edit scripts, for each diagonal.\n\tconst es: { [ k: number ]: DiffResult[] } = {};\n\t// Furthest points, the furthest y we can get on each diagonal.\n\tconst fp: { [ k: number]: number } = {};\n\n\tfunction snake( k: number ): number {\n\t\t// We use -1 as an alternative below to handle initial values ( instead of filling the fp with -1 first ).\n\t\t// Furthest points (y) on the diagonal below k.\n\t\tconst y1 = ( fp[ k - 1 ] !== undefined ? fp[ k - 1 ] : -1 ) + 1;\n\t\t// Furthest points (y) on the diagonal above k.\n\t\tconst y2 = fp[ k + 1 ] !== undefined ? fp[ k + 1 ] : -1;\n\t\t// The way we should go to get further.\n\t\tconst dir = y1 > y2 ? -1 : 1;\n\n\t\t// Clone previous changes array (if any).\n\t\tif ( es[ k + dir ] ) {\n\t\t\tes[ k ] = es[ k + dir ].slice( 0 );\n\t\t}\n\n\t\t// Create changes array.\n\t\tif ( !es[ k ] ) {\n\t\t\tes[ k ] = [];\n\t\t}\n\n\t\t// Push the action.\n\t\tes[ k ].push( y1 > y2 ? _insert : _delete );\n\n\t\t// Set the beginning coordinates.\n\t\tlet y = Math.max( y1, y2 );\n\t\tlet x = y - k;\n\n\t\t// Traverse the diagonal as long as the values match.\n\t\twhile ( x < m && y < n && cmp!( a[ x ], b[ y ] ) ) {\n\t\t\tx++;\n\t\t\ty++;\n\t\t\t// Push no change action.\n\t\t\tes[ k ].push( 'equal' );\n\t\t}\n\n\t\treturn y;\n\t}\n\n\tlet p = 0;\n\tlet k;\n\n\t// Traverse the graph until we reach the end of the longer string.\n\tdo {\n\t\t// Updates furthest points and edit scripts for diagonals below delta.\n\t\tfor ( k = -p; k < delta; k++ ) {\n\t\t\tfp[ k ] = snake( k );\n\t\t}\n\n\t\t// Updates furthest points and edit scripts for diagonals above delta.\n\t\tfor ( k = delta + p; k > delta; k-- ) {\n\t\t\tfp[ k ] = snake( k );\n\t\t}\n\n\t\t// Updates furthest point and edit script for the delta diagonal.\n\t\t// note that the delta diagonal is the one which goes through the sink (m, n).\n\t\tfp[ delta ] = snake( delta );\n\n\t\tp++;\n\t} while ( fp[ delta ] !== n );\n\n\t// Return the final list of edit changes.\n\t// We remove the first item that represents the action for the injected nulls.\n\treturn es[ delta ].slice( 1 );\n}\n\n// Store the API in static property to easily overwrite it in tests.\n// Too bad dependency injection does not work in Webpack + ES 6 (const) + Babel.\ndiff.fastDiff = fastDiff;\n\n/**\n * The element of the result of {@link module:utils/diff~diff} function.\n *\n * @typedef {'equal'|'insert'|'delete'} module:utils/diff~DiffResult\n */\nexport type DiffResult = 'equal' | 'insert' | 'delete';\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/createelement\n */\n\nimport isIterable from '../isiterable';\nimport { isString } from 'lodash-es';\n\n/**\n * Creates element with attributes and children.\n *\n *\t\tcreateElement( document, 'p' ); // <p>\n *\t\tcreateElement( document, 'p', { class: 'foo' } ); // <p class=\"foo\">\n *\t\tcreateElement( document, 'p', null, 'foo' ); // <p>foo</p>\n *\t\tcreateElement( document, 'p', null, [ 'foo', createElement( document, 'img' ) ] ); // <p>foo<img></p>\n *\n * @param {Document} doc Document used to create element.\n * @param {String} name Name of the element.\n * @param {Object} [attributes] Object keys will become attributes keys and object values will became attributes values.\n * @param {Node|String|Iterable.<Node|String>} [children] Child or any iterable of children. Strings will be automatically turned\n * into Text nodes.\n * @returns {Element} Created element.\n */\nexport default function createElement(\n\tdoc: Document,\n\tname: string,\n\tattributes: { readonly [ key: string ]: string } = {},\n\tchildren: Node | string | Iterable<Node | string> = []\n): Element {\n\tconst namespace = attributes && attributes.xmlns;\n\tconst element = namespace ? doc.createElementNS( namespace, name ) : doc.createElement( name );\n\n\tfor ( const key in attributes ) {\n\t\telement.setAttribute( key, attributes[ key ] );\n\t}\n\n\tif ( isString( children ) || !isIterable( children ) ) {\n\t\tchildren = [ children ];\n\t}\n\n\tfor ( let child of children ) {\n\t\tif ( isString( child ) ) {\n\t\t\tchild = doc.createTextNode( child );\n\t\t}\n\n\t\telement.appendChild( child );\n\t}\n\n\treturn element;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* eslint-disable new-cap */\n\n/**\n * @module utils/dom/emittermixin\n */\n\nimport {\n\t_getEmitterListenedTo,\n\t_setEmitterId,\n\tEmitter as BaseEmitter,\n\ttype CallbackOptions,\n\ttype BaseEvent,\n\ttype GetCallback\n} from '../emittermixin';\nimport uid from '../uid';\nimport isNode from './isnode';\nimport isWindow from './iswindow';\nimport type EventInfo from '../eventinfo';\n\n/**\n * Mixin that injects the DOM events API into its host. It provides the API\n * compatible with {@link module:utils/emittermixin~EmitterMixin}.\n *\n * DOM emitter mixin is by default available in the {@link module:ui/view~View} class,\n * but it can also be mixed into any other class:\n *\n *\t\timport mix from '../utils/mix.js';\n *\t\timport DomEmitterMixin from '../utils/dom/emittermixin.js';\n *\t\timport { Emitter } from '../utils/emittermixin.js';\n *\n *\t\tclass SomeView extends DomEmitterMixin( Emitter ) {}\n *\n *\t\tconst view = new SomeView();\n *\t\tview.listenTo( domElement, ( evt, domEvt ) => {\n *\t\t\tconsole.log( evt, domEvt );\n *\t\t} );\n *\n * @mixin EmitterMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n */\nexport default function DomEmitterMixin<Base extends abstract new( ...args: any[] ) => BaseEmitter>(\n\tbase: Base\n): {\n\tnew( ...args: ConstructorParameters<Base> ): InstanceType<Base> & Emitter;\n\tprototype: InstanceType<Base> & Emitter;\n} {\n\tabstract class Mixin extends base implements Emitter {\n\t\tpublic override listenTo<K extends keyof HTMLElementEventMap>(\n\t\t\temitter: Node | Window,\n\t\t\tevent: K,\n\t\t\tcallback: ( this: this, ev: EventInfo, event: HTMLElementEventMap[ K ] ) => void,\n\t\t\toptions?: CallbackOptions & { readonly useCapture?: boolean; readonly usePassive?: boolean }\n\t\t): void;\n\t\tpublic override listenTo<TEvent extends BaseEvent>(\n\t\t\temitter: BaseEmitter,\n\t\t\tevent: TEvent[ 'name' ],\n\t\t\tcallback: GetCallback<TEvent>,\n\t\t\toptions?: CallbackOptions\n\t\t): void;\n\t\tpublic override listenTo(\n\t\t\temitter: BaseEmitter | Node | Window,\n\t\t\tevent: string,\n\t\t\tcallback: ( ev: EventInfo, ...args: any[] ) => void,\n\t\t\toptions: CallbackOptions & { readonly useCapture?: boolean; readonly usePassive?: boolean } = {}\n\t\t): void {\n\t\t\t// Check if emitter is an instance of DOM Node. If so, use corresponding ProxyEmitter (or create one if not existing).\n\t\t\tif ( isNode( emitter ) || isWindow( emitter ) ) {\n\t\t\t\tconst proxyOptions = {\n\t\t\t\t\tcapture: !!options.useCapture,\n\t\t\t\t\tpassive: !!options.usePassive\n\t\t\t\t};\n\n\t\t\t\tconst proxyEmitter = this._getProxyEmitter( emitter, proxyOptions ) || new ProxyEmitter( emitter, proxyOptions );\n\n\t\t\t\tthis.listenTo( proxyEmitter, event, callback, options );\n\t\t\t} else {\n\t\t\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\n\t\t\t\tBaseEmitter.prototype.listenTo.call( this, emitter, event, callback, options );\n\t\t\t}\n\t\t}\n\n\t\tpublic override stopListening(\n\t\t\temitter?: BaseEmitter | Node | Window,\n\t\t\tevent?: string,\n\t\t\tcallback?: Function\n\t\t): void {\n\t\t\t// Check if the emitter is an instance of DOM Node. If so, forward the call to the corresponding ProxyEmitters.\n\t\t\tif ( isNode( emitter ) || isWindow( emitter ) ) {\n\t\t\t\tconst proxyEmitters = this._getAllProxyEmitters( emitter );\n\n\t\t\t\tfor ( const proxy of proxyEmitters ) {\n\t\t\t\t\tthis.stopListening( proxy, event, callback );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Execute parent class method with Emitter (or ProxyEmitter) instance.\n\t\t\t\tBaseEmitter.prototype.stopListening.call( this, emitter, event, callback );\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Retrieves ProxyEmitter instance for given DOM Node residing in this Host and given options.\n\t\t *\n\t\t * @private\n\t\t * @param {Node|Window} node DOM Node of the ProxyEmitter.\n\t\t * @param {Object} [options] Additional options.\n\t\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n\t\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n\t\t * @param {Boolean} [options.usePassive=false] Indicates that the function specified by listener will never call preventDefault()\n\t\t * and prevents blocking browser's main thread by this event handler.\n\t\t * @returns {module:utils/dom/emittermixin~ProxyEmitter|null} ProxyEmitter instance bound to the DOM Node.\n\t\t */\n\t\tprivate _getProxyEmitter(\n\t\t\tnode: Node | Window,\n\t\t\toptions: { capture: boolean; passive: boolean }\n\t\t): BaseEmitter | null {\n\t\t\treturn _getEmitterListenedTo( this, getProxyEmitterId( node, options ) );\n\t\t}\n\n\t\t/**\n\t\t * Retrieves all the ProxyEmitter instances for given DOM Node residing in this Host.\n\t\t *\n\t\t * @private\n\t\t * @param {Node|Window} node DOM Node of the ProxyEmitter.\n\t\t * @returns {Array.<module:utils/dom/emittermixin~ProxyEmitter>}\n\t\t */\n\t\tprivate _getAllProxyEmitters( node: Node | Window ): ProxyEmitter[] {\n\t\t\treturn [\n\t\t\t\t{ capture: false, passive: false },\n\t\t\t\t{ capture: false, passive: true },\n\t\t\t\t{ capture: true, passive: false },\n\t\t\t\t{ capture: true, passive: true }\n\t\t\t].map( options => this._getProxyEmitter( node, options ) ).filter( proxy => !!proxy ) as any;\n\t\t}\n\t}\n\n\treturn Mixin as any;\n}\n\nexport const Emitter = DomEmitterMixin( BaseEmitter );\n\n// Backward compatibility with `mix`\n( [\n\t'_getProxyEmitter', '_getAllProxyEmitters',\n\t'on', 'once', 'off', 'listenTo',\n\t'stopListening', 'fire', 'delegate', 'stopDelegating',\n\t'_addEventListener', '_removeEventListener'\n] ).forEach( key => {\n\t( DomEmitterMixin as any )[ key ] = ( Emitter.prototype as any )[ key ];\n} );\n\n/**\n * Creates a ProxyEmitter instance. Such an instance is a bridge between a DOM Node firing events\n * and any Host listening to them. It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#on}.\n * There is a separate instance for each combination of modes (useCapture & usePassive). The mode is concatenated with\n * UID stored in HTMLElement to give each instance unique identifier.\n *\n *                                  listenTo( click, ... )\n *                    +-----------------------------------------+\n *                    |              stopListening( ... )       |\n *     +----------------------------+                           |             addEventListener( click, ... )\n *     | Host                       |                           |   +---------------------------------------------+\n *     +----------------------------+                           |   |       removeEventListener( click, ... )     |\n *     | _listeningTo: {            |                +----------v-------------+                                   |\n *     |   UID+mode: {              |                | ProxyEmitter           |                                   |\n *     |     emitter: ProxyEmitter, |                +------------------------+                      +------------v----------+\n *     |     callbacks: {           |                | events: {              |                      | Node (HTMLElement)    |\n *     |       click: [ callbacks ] |                |   click: [ callbacks ] |                      +-----------------------+\n *     |     }                      |                | },                     |                      | data-ck-expando: UID  |\n *     |   }                        |                | _domNode: Node,        |                      +-----------------------+\n *     | }                          |                | _domListeners: {},     |                                   |\n *     | +------------------------+ |                | _emitterId: UID+mode   |                                   |\n *     | | DomEmitterMixin        | |                +--------------^---------+                                   |\n *     | +------------------------+ |                           |   |                                             |\n *     +--------------^-------------+                           |   +---------------------------------------------+\n *                    |                                         |                  click (DOM Event)\n *                    +-----------------------------------------+\n *                                fire( click, DOM Event )\n *\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/dom/emittermixin~Emitter\n * @private\n */\nclass ProxyEmitter extends BaseEmitter {\n\tprivate readonly _domNode: Node | Window;\n\tprivate readonly _options: { capture: boolean; passive: boolean };\n\n\t/**\n\t * @param {Node|Window} node DOM Node that fires events.\n\t * @param {Object} [options] Additional options.\n\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n\t * @param {Boolean} [options.usePassive=false] Indicates that the function specified by listener will never call preventDefault()\n\t * and prevents blocking browser's main thread by this event handler.\n\t */\n\tconstructor(\n\t\tnode: Node | Window,\n\t\toptions: { capture: boolean; passive: boolean }\n\t) {\n\t\tsuper();\n\n\t\t// Set emitter ID to match DOM Node \"expando\" property.\n\t\t_setEmitterId( this, getProxyEmitterId( node, options ) );\n\n\t\t// Remember the DOM Node this ProxyEmitter is bound to.\n\t\tthis._domNode = node;\n\n\t\t// And given options.\n\t\tthis._options = options;\n\t}\n\n\t/**\n\t * Collection of native DOM listeners.\n\t *\n\t * @private\n\t * @member {Object} module:utils/dom/emittermixin~ProxyEmitter#_domListeners\n\t */\n\tprivate _domListeners?: {\n\t\t[ event: string ]: {\n\t\t\t( domEvent: unknown ): void;\n\t\t\tremoveListener(): void;\n\t\t};\n\t};\n\n\t/**\n\t * Registers a callback function to be executed when an event is fired.\n\t *\n\t * It attaches a native DOM listener to the DOM Node. When fired,\n\t * a corresponding Emitter event will also fire with DOM Event object as an argument.\n\t *\n\t * **Note**: This is automatically called by the\n\t * {@link module:utils/emittermixin~EmitterMixin#listenTo `EmitterMixin#listenTo()`}.\n\t *\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#attach\n\t * @param {String} event The name of the event.\n\t */\n\tpublic attach( event: string ): void {\n\t\t// If the DOM Listener for given event already exist it is pointless\n\t\t// to attach another one.\n\t\tif ( this._domListeners && this._domListeners[ event ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domListener = this._createDomListener( event );\n\n\t\t// Attach the native DOM listener to DOM Node.\n\t\tthis._domNode.addEventListener( event, domListener, this._options );\n\n\t\tif ( !this._domListeners ) {\n\t\t\tthis._domListeners = {};\n\t\t}\n\n\t\t// Store the native DOM listener in this ProxyEmitter. It will be helpful\n\t\t// when stopping listening to the event.\n\t\tthis._domListeners[ event ] = domListener;\n\t}\n\n\t/**\n\t * Stops executing the callback on the given event.\n\t *\n\t * **Note**: This is automatically called by the\n\t * {@link module:utils/emittermixin~EmitterMixin#stopListening `EmitterMixin#stopListening()`}.\n\t *\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#detach\n\t * @param {String} event The name of the event.\n\t */\n\tpublic detach( event: string ): void {\n\t\tlet events;\n\n\t\t// Remove native DOM listeners which are orphans. If no callbacks\n\t\t// are awaiting given event, detach native DOM listener from DOM Node.\n\t\t// See: {@link attach}.\n\n\t\tif ( this._domListeners![ event ] && ( !( events = ( this as any )._events![ event ] ) || !events.callbacks.length ) ) {\n\t\t\tthis._domListeners![ event ].removeListener();\n\t\t}\n\t}\n\n\t/**\n\t * Adds callback to emitter for given event.\n\t *\n\t * @protected\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#_addEventListener\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t */\n\tpublic _addEventListener<TEvent extends BaseEvent>(\n\t\tevent: TEvent[ 'name' ],\n\t\tcallback: GetCallback<TEvent>,\n\t\toptions: CallbackOptions\n\t): void {\n\t\tthis.attach( event );\n\t\t( BaseEmitter.prototype as any )._addEventListener.call( this, event, callback, options );\n\t}\n\n\t/**\n\t * Removes callback from emitter for given event.\n\t *\n\t * @protected\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#_removeEventListener\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to stop being called.\n\t */\n\tpublic _removeEventListener( event: string, callback: Function ) {\n\t\t( BaseEmitter.prototype as any )._removeEventListener.call( this, event, callback );\n\t\tthis.detach( event );\n\t}\n\n\t/**\n\t * Creates a native DOM listener callback. When the native DOM event\n\t * is fired it will fire corresponding event on this ProxyEmitter.\n\t * Note: A native DOM Event is passed as an argument.\n\t *\n\t * @private\n\t * @method module:utils/dom/emittermixin~ProxyEmitter#_createDomListener\n\t * @param {String} event The name of the event.\n\t * @returns {Function} The DOM listener callback.\n\t */\n\tprivate _createDomListener( event: string ) {\n\t\tconst domListener = ( domEvt: unknown ) => {\n\t\t\tthis.fire( event, domEvt );\n\t\t};\n\n\t\t// Supply the DOM listener callback with a function that will help\n\t\t// detach it from the DOM Node, when it is no longer necessary.\n\t\t// See: {@link detach}.\n\t\tdomListener.removeListener = () => {\n\t\t\tthis._domNode.removeEventListener( event, domListener, this._options );\n\t\t\tdelete this._domListeners![ event ];\n\t\t};\n\n\t\treturn domListener;\n\t}\n}\n\n// Gets an unique DOM Node identifier. The identifier will be set if not defined.\n//\n// @private\n// @param {Node} node\n// @returns {String} UID for given DOM Node.\nfunction getNodeUID( node: any ): string {\n\treturn node[ 'data-ck-expando' ] || ( node[ 'data-ck-expando' ] = uid() );\n}\n\n// Gets id of the ProxyEmitter for the given node.\n//\n// Combines DOM Node identifier and additional options.\n//\n// @private\n// @param {Node} node\n// @param {Object} options Additional options.\n// @returns {String} ProxyEmitter id.\nfunction getProxyEmitterId( node: Node | Window, options: { [ option: string ]: any } ): string {\n\tlet id = getNodeUID( node );\n\n\tfor ( const option of Object.keys( options ).sort() ) {\n\t\tif ( options[ option ] ) {\n\t\t\tid += '-' + option;\n\t\t}\n\t}\n\n\treturn id;\n}\n\n/**\n * Interface representing classes which mix in {@link module:utils/dom/emittermixin~EmitterMixin}.\n *\n * @interface Emitter\n */\nexport interface Emitter extends BaseEmitter {\n\n\t/**\n\t * Registers a callback function to be executed when an event is fired in a specific Emitter or DOM Node.\n\t * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n\t *\n\t * @param {module:utils/emittermixin~Emitter|Node|Window} emitter The object that fires the event.\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t * @param {Boolean} [options.useCapture=false] Indicates that events of this type will be dispatched to the registered\n\t * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n\t * @param {Boolean} [options.usePassive=false] Indicates that the function specified by listener will never call preventDefault()\n\t * and prevents blocking browser's main thread by this event handler.\n\t */\n\tlistenTo<K extends keyof HTMLElementEventMap>(\n\t\temitter: Node | Window,\n\t\tevent: K,\n\t\tcallback: ( this: this, ev: EventInfo, event: HTMLElementEventMap[ K ] ) => void,\n\t\toptions?: CallbackOptions & { readonly useCapture?: boolean; readonly usePassive?: boolean }\n\t): void;\n\tlistenTo<TEvent extends BaseEvent>(\n\t\temitter: BaseEmitter,\n\t\tevent: TEvent[ 'name' ],\n\t\tcallback: GetCallback<TEvent>,\n\t\toptions?: CallbackOptions\n\t): void;\n\n\t/**\n\t * Stops listening for events. It can be used at different levels:\n\t * It is backwards compatible with {@link module:utils/emittermixin~EmitterMixin#listenTo}.\n\t *\n\t * * To stop listening to a specific callback.\n\t * * To stop listening to a specific event.\n\t * * To stop listening to all events fired by a specific object.\n\t * * To stop listening to all events fired by all object.\n\t *\n\t * @param {module:utils/emittermixin~Emitter|Node|Window} [emitter] The object to stop listening to.\n\t * If omitted, stops it for all objects.\n\t * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n\t * for all events from `emitter`.\n\t * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n\t * `event`.\n\t */\n\tstopListening( emitter?: BaseEmitter | Node | Window, event?: string, callback?: Function ): void;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals Node */\n\n/**\n * @module utils/dom/getancestors\n */\n\n/**\n * Returns all ancestors of given DOM node, starting from the top-most (root). Includes the given node itself. If the\n * node is a part of `DocumentFragment` that `DocumentFragment` will be returned. In contrary, if the node is\n * appended to a `Document`, that `Document` will not be returned (algorithms operating on DOM tree care for `Document#documentElement`\n * at most, which will be returned).\n *\n * @param {Node} node DOM node.\n * @returns {Array.<Node|DocumentFragment>} Array of given `node` parents.\n */\nexport default function getAncestors( node: Node ): Node[] {\n\tconst nodes: Node[] = [];\n\tlet currentNode: Node | null = node;\n\n\t// We are interested in `Node`s `DocumentFragment`s only.\n\twhile ( currentNode && currentNode.nodeType != Node.DOCUMENT_NODE ) {\n\t\tnodes.unshift( currentNode );\n\t\tcurrentNode = currentNode.parentNode;\n\t}\n\n\treturn nodes;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/getborderwidths\n */\n\n/**\n * Returns an object containing CSS border widths of a specified HTML element.\n *\n * @param {HTMLElement} element An element which has CSS borders.\n * @returns {module:utils/dom/getborderwidths~BorderWidths} An object containing `top`, `left`, `right` and `bottom` properties\n * with numerical values of the `border-[top,left,right,bottom]-width` CSS styles.\n */\nexport default function getBorderWidths( element: HTMLElement ): BorderWidths {\n\t// Call getComputedStyle on the window the element document belongs to.\n\tconst style = element.ownerDocument.defaultView!.getComputedStyle( element );\n\n\treturn {\n\t\ttop: parseInt( style.borderTopWidth, 10 ),\n\t\tright: parseInt( style.borderRightWidth, 10 ),\n\t\tbottom: parseInt( style.borderBottomWidth, 10 ),\n\t\tleft: parseInt( style.borderLeftWidth, 10 )\n\t};\n}\n\n/**\n * An object describing widths of `HTMLElement` borders.\n *\n * @typedef {Object} module:utils/dom/getborderwidths~BorderWidths\n * @property {Number} top\n * @property {Number} right\n * @property {Number} bottom\n * @property {Number} left\n*/\nexport interface BorderWidths {\n\ttop: number;\n\tright: number;\n\tbottom: number;\n\tleft: number;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * @module utils/dom/getdatafromelement\n */\n\n/**\n * Gets data from a given source element.\n *\n * @param {HTMLElement} el The element from which the data will be retrieved.\n * @returns {String} The data string.\n */\nexport default function getDataFromElement( el: HTMLElement ): string {\n\tif ( el instanceof HTMLTextAreaElement ) {\n\t\treturn el.value;\n\t}\n\n\treturn el.innerHTML;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals window, document */\n\n/**\n * @module utils/dom/global\n */\n\n/**\n * A helper (module) giving an access to the global DOM objects such as `window` and\n * `document`. Accessing these objects using this helper allows easy and bulletproof\n * testing, i.e. stubbing native properties:\n *\n *\t\timport global from 'ckeditor5/utils/dom/global.js';\n *\n *\t\t// This stub will work for any code using global module.\n *\t\ttestUtils.sinon.stub( global, 'window', {\n *\t\t\tinnerWidth: 10000\n *\t\t} );\n *\n *\t\tconsole.log( global.window.innerWidth );\n */\n\nlet global: { window: Window & typeof globalThis; document: Document };\n\n// In some environments window and document API might not be available.\ntry {\n\tglobal = { window, document };\n} catch ( e ) {\n\t// It's not possible to mock a window object to simulate lack of a window object without writing extremely convoluted code.\n\t/* istanbul ignore next */\n\n\t// Let's cast it to not change module's API.\n\t// We only handle this so loading editor in environments without window and document doesn't fail.\n\t// For better DX we shouldn't introduce mixed types and require developers to check the type manually.\n\t// This module should not be used on purpose in any environment outside browser.\n\tglobal = { window: {} as any, document: {} as any };\n}\n\nexport default global;\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/indexof\n */\n\n/**\n * Returns index of the node in the parent element.\n *\n * @param {Node} node Node which index is tested.\n * @returns {Number} Index of the node in the parent element. Returns 0 if node has no parent.\n */\nexport default function indexOf( node: Node ): number {\n\tlet index = 0;\n\n\twhile ( node.previousSibling ) {\n\t\tnode = node.previousSibling;\n\t\tindex++;\n\t}\n\n\treturn index;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/insertat\n */\n\n/**\n * Inserts node to the parent at given index.\n *\n * @param {Element} parentElement Parent element.\n * @param {Number} index Insertions index.\n * @param {Node} nodeToInsert Node to insert.\n */\nexport default function insertAt(\n\tparentElement: Element,\n\tindex: number,\n\tnodeToInsert: Node\n): void {\n\tparentElement.insertBefore( nodeToInsert, parentElement.childNodes[ index ] || null );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals Node */\n\n/**\n * @module utils/dom/iscomment\n */\n\n/**\n * Checks whether the object is a native DOM Comment node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isComment( obj: any ): obj is Comment {\n\treturn obj && obj.nodeType === Node.COMMENT_NODE;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/isnode\n */\n\n/**\n * Checks if the object is a native DOM Node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isNode( obj: any ): obj is Node {\n\tif ( obj ) {\n\t\tif ( obj.defaultView ) {\n\t\t\treturn obj instanceof obj.defaultView.Document;\n\t\t} else if ( obj.ownerDocument && obj.ownerDocument.defaultView ) {\n\t\t\treturn obj instanceof obj.ownerDocument.defaultView.Node;\n\t\t}\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/isrange\n */\n\n/**\n * Checks if the object is a native DOM Range.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isRange( obj: unknown ): obj is Range {\n\treturn Object.prototype.toString.apply( obj ) == '[object Range]';\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/istext\n */\n\n/**\n * Checks if the object is a native DOM Text node.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isText( obj: unknown ): obj is Text {\n\treturn Object.prototype.toString.call( obj ) == '[object Text]';\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/isvisible\n */\n\n/**\n * Checks whether the element is visible to the user in DOM:\n *\n * * connected to the root of the document,\n * * has no `display: none`,\n * * has no ancestors with `display: none`.\n *\n * **Note**: This helper does not check whether the element is hidden by cropping, overflow, etc..\n * To check that, use {@link module:utils/dom/rect~Rect} instead.\n *\n * @param {HTMLElement|null|undefined} element\n * @returns {Boolean}\n */\nexport default function isVisible( element: HTMLElement | null | undefined ): boolean {\n\treturn !!( element && element.getClientRects && element.getClientRects().length );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/iswindow\n */\n\n/**\n * Checks if the object is a native DOM Window.\n *\n * @param {*} obj\n * @returns {Boolean}\n */\nexport default function isWindow( obj: unknown ): obj is Window {\n\tconst stringifiedObject = Object.prototype.toString.apply( obj );\n\n\t// Returns `true` for the `window` object in browser environments.\n\tif ( stringifiedObject == '[object Window]' ) {\n\t\treturn true;\n\t}\n\n\t// Returns `true` for the `window` object in the Electron environment.\n\tif ( stringifiedObject == '[object global]' ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/rect\n */\n\nimport isRange from './isrange';\nimport isWindow from './iswindow';\nimport getBorderWidths from './getborderwidths';\nimport isText from './istext';\n\nconst rectProperties: ( keyof RectLike )[] = [ 'top', 'right', 'bottom', 'left', 'width', 'height' ];\n\n/**\n * A helper class representing a `ClientRect` object, e.g. value returned by\n * the native `object.getBoundingClientRect()` method. Provides a set of methods\n * to manipulate the rect and compare it against other rect instances.\n */\nexport default class Rect {\n\t/**\n\t * The \"top\" value of the rect.\n\t *\n\t * @readonly\n\t * @member {Number}\n\t */\n\tdeclare public top: number;\n\n\t/**\n\t * The \"right\" value of the rect.\n\t *\n\t * @readonly\n\t * @member {Number}\n\t */\n\tdeclare public right: number;\n\n\t/**\n\t * The \"bottom\" value of the rect.\n\t *\n\t * @readonly\n\t * @member {Number}\n\t */\n\tdeclare public bottom: number;\n\n\t/**\n\t * The \"left\" value of the rect.\n\t *\n\t * @readonly\n\t * @member {Number}\n\t */\n\tdeclare public left: number;\n\n\t/**\n\t * The \"width\" value of the rect.\n\t *\n\t * @readonly\n\t * @member {Number}\n\t */\n\tdeclare public width: number;\n\n\t/**\n\t * The \"height\" value of the rect.\n\t *\n\t * @readonly\n\t * @member {Number}\n\t */\n\tdeclare public height: number;\n\n\t/**\n\t * The object this rect is for.\n\t *\n\t * @protected\n\t * @readonly\n\t * @member {module:utils/dom/rect~RectSource}\n\t */\n\tprivate _source!: RectSource;\n\n\t/**\n\t * Creates an instance of rect.\n\t *\n\t *\t\t// Rect of an HTMLElement.\n\t *\t\tconst rectA = new Rect( document.body );\n\t *\n\t *\t\t// Rect of a DOM Range.\n\t *\t\tconst rectB = new Rect( document.getSelection().getRangeAt( 0 ) );\n\t *\n\t *\t\t// Rect of a window (web browser viewport).\n\t *\t\tconst rectC = new Rect( window );\n\t *\n\t *\t\t// Rect out of an object.\n\t *\t\tconst rectD = new Rect( { top: 0, right: 10, bottom: 10, left: 0, width: 10, height: 10 } );\n\t *\n\t *\t\t// Rect out of another Rect instance.\n\t *\t\tconst rectE = new Rect( rectD );\n\t *\n\t *\t\t// Rect out of a ClientRect.\n\t *\t\tconst rectF = new Rect( document.body.getClientRects().item( 0 ) );\n\t *\n\t * **Note**: By default a rect of an HTML element includes its CSS borders and scrollbars (if any)\n\t * ant the rect of a `window` includes scrollbars too. Use {@link #excludeScrollbarsAndBorders}\n\t * to get the inner part of the rect.\n\t *\n\t * @param {module:utils/dom/rect~RectSource} source A source object to create the rect.\n\t */\n\tconstructor( source: RectSource ) {\n\t\tconst isSourceRange = isRange( source );\n\n\t\tObject.defineProperty( this, '_source', {\n\t\t\t// If the source is a Rect instance, copy it's #_source.\n\t\t\tvalue: ( source as any )._source || source,\n\t\t\twritable: true,\n\t\t\tenumerable: false\n\t\t} );\n\n\t\tif ( isDomElement( source ) || isSourceRange ) {\n\t\t\t// The `Rect` class depends on `getBoundingClientRect` and `getClientRects` DOM methods. If the source\n\t\t\t// of a rect in an HTML element or a DOM range but it does not belong to any rendered DOM tree, these methods\n\t\t\t// will fail to obtain the geometry and the rect instance makes little sense to the features using it.\n\t\t\t// To get rid of this warning make sure the source passed to the constructor is a descendant of `window.document.body`.\n\t\t\t// @if CK_DEBUG // const sourceNode = isSourceRange ? source.startContainer : source;\n\t\t\t// @if CK_DEBUG // if ( !sourceNode.ownerDocument || !sourceNode.ownerDocument.body.contains( sourceNode ) ) {\n\t\t\t// @if CK_DEBUG // \tconsole.warn(\n\t\t\t// @if CK_DEBUG // \t\t'rect-source-not-in-dom: The source of this rect does not belong to any rendered DOM tree.',\n\t\t\t// @if CK_DEBUG // \t\t{ source } );\n\t\t\t// @if CK_DEBUG // }\n\n\t\t\tif ( isSourceRange ) {\n\t\t\t\tconst rangeRects = Rect.getDomRangeRects( source );\n\t\t\t\tcopyRectProperties( this, Rect.getBoundingRect( rangeRects )! );\n\t\t\t} else {\n\t\t\t\tcopyRectProperties( this, source.getBoundingClientRect() );\n\t\t\t}\n\t\t} else if ( isWindow( source ) ) {\n\t\t\tconst { innerWidth, innerHeight } = source;\n\n\t\t\tcopyRectProperties( this, {\n\t\t\t\ttop: 0,\n\t\t\t\tright: innerWidth,\n\t\t\t\tbottom: innerHeight,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: innerWidth,\n\t\t\t\theight: innerHeight\n\t\t\t} );\n\t\t} else {\n\t\t\tcopyRectProperties( this, source );\n\t\t}\n\t}\n\n\t/**\n\t * Returns a clone of the rect.\n\t *\n\t * @returns {module:utils/dom/rect~Rect} A cloned rect.\n\t */\n\tpublic clone(): Rect {\n\t\treturn new Rect( this );\n\t}\n\n\t/**\n\t * Moves the rect so that its upper–left corner lands in desired `[ x, y ]` location.\n\t *\n\t * @param {Number} x Desired horizontal location.\n\t * @param {Number} y Desired vertical location.\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n\t */\n\tpublic moveTo( x: number, y: number ): this {\n\t\tthis.top = y;\n\t\tthis.right = x + this.width;\n\t\tthis.bottom = y + this.height;\n\t\tthis.left = x;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Moves the rect in–place by a dedicated offset.\n\t *\n\t * @param {Number} x A horizontal offset.\n\t * @param {Number} y A vertical offset\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been moved.\n\t */\n\tpublic moveBy( x: number, y: number ): this {\n\t\tthis.top += y;\n\t\tthis.right += x;\n\t\tthis.left += x;\n\t\tthis.bottom += y;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a new rect a a result of intersection with another rect.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect\n\t * @returns {module:utils/dom/rect~Rect|null}\n\t */\n\tpublic getIntersection( anotherRect: Rect ): Rect | null {\n\t\tconst rect = {\n\t\t\ttop: Math.max( this.top, anotherRect.top ),\n\t\t\tright: Math.min( this.right, anotherRect.right ),\n\t\t\tbottom: Math.min( this.bottom, anotherRect.bottom ),\n\t\t\tleft: Math.max( this.left, anotherRect.left ),\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\trect.width = rect.right - rect.left;\n\t\trect.height = rect.bottom - rect.top;\n\n\t\tif ( rect.width < 0 || rect.height < 0 ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn new Rect( rect );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the area of intersection with another rect.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect\n\t * @returns {Number} Area of intersection.\n\t */\n\tpublic getIntersectionArea( anotherRect: Rect ): number {\n\t\tconst rect = this.getIntersection( anotherRect );\n\n\t\tif ( rect ) {\n\t\t\treturn rect.getArea();\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the area of the rect.\n\t *\n\t * @returns {Number}\n\t */\n\tpublic getArea(): number {\n\t\treturn this.width * this.height;\n\t}\n\n\t/**\n\t * Returns a new rect, a part of the original rect, which is actually visible to the user,\n\t * e.g. an original rect cropped by parent element rects which have `overflow` set in CSS\n\t * other than `\"visible\"`.\n\t *\n\t * If there's no such visible rect, which is when the rect is limited by one or many of\n\t * the ancestors, `null` is returned.\n\t *\n\t * @returns {module:utils/dom/rect~Rect|null} A visible rect instance or `null`, if there's none.\n\t */\n\tpublic getVisible(): Rect | null {\n\t\tconst source: RectSource & { parentNode?: Node | null; commonAncestorContainer?: Node | null } = this._source;\n\t\tlet visibleRect = this.clone();\n\n\t\t// There's no ancestor to crop <body> with the overflow.\n\t\tif ( !isBody( source ) ) {\n\t\t\tlet parent = source.parentNode || source.commonAncestorContainer;\n\n\t\t\t// Check the ancestors all the way up to the <body>.\n\t\t\twhile ( parent && !isBody( parent ) ) {\n\t\t\t\tconst parentRect = new Rect( parent as HTMLElement );\n\t\t\t\tconst intersectionRect = visibleRect.getIntersection( parentRect );\n\n\t\t\t\tif ( intersectionRect ) {\n\t\t\t\t\tif ( intersectionRect.getArea() < visibleRect.getArea() ) {\n\t\t\t\t\t\t// Reduce the visible rect to the intersection.\n\t\t\t\t\t\tvisibleRect = intersectionRect;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// There's no intersection, the rect is completely invisible.\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\t\t}\n\n\t\treturn visibleRect;\n\t}\n\n\t/**\n\t * Checks if all property values ({@link #top}, {@link #left}, {@link #right},\n\t * {@link #bottom}, {@link #width} and {@link #height}) are the equal in both rect\n\t * instances.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect A rect instance to compare with.\n\t * @returns {Boolean} `true` when Rects are equal. `false` otherwise.\n\t */\n\tpublic isEqual( anotherRect: Rect ): boolean {\n\t\tfor ( const prop of rectProperties ) {\n\t\t\tif ( this[ prop ] !== anotherRect[ prop ] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether a rect fully contains another rect instance.\n\t *\n\t * @param {module:utils/dom/rect~Rect} anotherRect\n\t * @returns {Boolean} `true` if contains, `false` otherwise.\n\t */\n\tpublic contains( anotherRect: Rect ): boolean {\n\t\tconst intersectRect = this.getIntersection( anotherRect );\n\n\t\treturn !!( intersectRect && intersectRect.isEqual( anotherRect ) );\n\t}\n\n\t/**\n\t * Excludes scrollbars and CSS borders from the rect.\n\t *\n\t * * Borders are removed when {@link #_source} is an HTML element.\n\t * * Scrollbars are excluded from HTML elements and the `window`.\n\t *\n\t * @returns {module:utils/dom/rect~Rect} A rect which has been updated.\n\t */\n\tpublic excludeScrollbarsAndBorders(): this {\n\t\tconst source = this._source as ( HTMLElement | Window );\n\t\tlet scrollBarWidth, scrollBarHeight, direction;\n\n\t\tif ( isWindow( source ) ) {\n\t\t\tscrollBarWidth = source.innerWidth - source.document.documentElement.clientWidth;\n\t\t\tscrollBarHeight = source.innerHeight - source.document.documentElement.clientHeight;\n\t\t\tdirection = source.getComputedStyle( source.document.documentElement ).direction;\n\t\t} else {\n\t\t\tconst borderWidths = getBorderWidths( source );\n\n\t\t\tscrollBarWidth = source.offsetWidth - source.clientWidth - borderWidths.left - borderWidths.right;\n\t\t\tscrollBarHeight = source.offsetHeight - source.clientHeight - borderWidths.top - borderWidths.bottom;\n\t\t\tdirection = source.ownerDocument.defaultView!.getComputedStyle( source ).direction;\n\n\t\t\tthis.left += borderWidths.left;\n\t\t\tthis.top += borderWidths.top;\n\t\t\tthis.right -= borderWidths.right;\n\t\t\tthis.bottom -= borderWidths.bottom;\n\t\t\tthis.width = this.right - this.left;\n\t\t\tthis.height = this.bottom - this.top;\n\t\t}\n\n\t\tthis.width -= scrollBarWidth;\n\n\t\tif ( direction === 'ltr' ) {\n\t\t\tthis.right -= scrollBarWidth;\n\t\t} else {\n\t\t\tthis.left += scrollBarWidth;\n\t\t}\n\n\t\tthis.height -= scrollBarHeight;\n\t\tthis.bottom -= scrollBarHeight;\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns an array of rects of the given native DOM Range.\n\t *\n\t * @param {Range} range A native DOM range.\n\t * @returns {Array.<module:utils/dom/rect~Rect>} DOM Range rects.\n\t */\n\tpublic static getDomRangeRects( range: Range ): Rect[] {\n\t\tconst rects: Rect[] = [];\n\t\t// Safari does not iterate over ClientRectList using for...of loop.\n\t\tconst clientRects = Array.from( range.getClientRects() );\n\n\t\tif ( clientRects.length ) {\n\t\t\tfor ( const rect of clientRects ) {\n\t\t\t\trects.push( new Rect( rect ) );\n\t\t\t}\n\t\t}\n\t\t// If there's no client rects for the Range, use parent container's bounding rect\n\t\t// instead and adjust rect's width to simulate the actual geometry of such range.\n\t\t// https://github.com/ckeditor/ckeditor5-utils/issues/153\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/317\n\t\telse {\n\t\t\tlet startContainer = range.startContainer;\n\n\t\t\tif ( isText( startContainer ) ) {\n\t\t\t\tstartContainer = startContainer.parentNode!;\n\t\t\t}\n\n\t\t\tconst rect = new Rect( ( startContainer as Element ).getBoundingClientRect() );\n\t\t\trect.right = rect.left;\n\t\t\trect.width = 0;\n\n\t\t\trects.push( rect );\n\t\t}\n\n\t\treturn rects;\n\t}\n\n\t/**\n\t * Returns a bounding rectangle that contains all the given `rects`.\n\t *\n\t * @param {Iterable.<module:utils/dom/rect~Rect>} rects A list of rectangles that should be contained in the result rectangle.\n\t * @returns {module:utils/dom/rect~Rect|null} Bounding rectangle or `null` if no `rects` were given.\n\t */\n\tpublic static getBoundingRect( rects: Iterable<Rect> ): Rect | null {\n\t\tconst boundingRectData = {\n\t\t\tleft: Number.POSITIVE_INFINITY,\n\t\t\ttop: Number.POSITIVE_INFINITY,\n\t\t\tright: Number.NEGATIVE_INFINITY,\n\t\t\tbottom: Number.NEGATIVE_INFINITY,\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t\tlet rectangleCount = 0;\n\n\t\tfor ( const rect of rects ) {\n\t\t\trectangleCount++;\n\n\t\t\tboundingRectData.left = Math.min( boundingRectData.left, rect.left );\n\t\t\tboundingRectData.top = Math.min( boundingRectData.top, rect.top );\n\t\t\tboundingRectData.right = Math.max( boundingRectData.right, rect.right );\n\t\t\tboundingRectData.bottom = Math.max( boundingRectData.bottom, rect.bottom );\n\t\t}\n\n\t\tif ( rectangleCount == 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tboundingRectData.width = boundingRectData.right - boundingRectData.left;\n\t\tboundingRectData.height = boundingRectData.bottom - boundingRectData.top;\n\n\t\treturn new Rect( boundingRectData );\n\t}\n}\n\n/**\n * A source of {@link module:utils/dom/rect~Rect}.\n *\n * @typedef {HTMLElement|Range|Window|module:utils/dom/rect~RectLike} module:utils/dom/rect~RectSource\n */\nexport type RectSource = HTMLElement | Range | Window | RectLike;\n\n/**\n * An object that describes properties of `ClientRect` object.\n *\n * @typedef {Object} module:utils/dom/rect~RectLike\n * @property {Number} top\n * @property {Number} right\n * @property {Number} bottom\n * @property {Number} left\n * @property {Number} width\n * @property {Number} height\n */\nexport interface RectLike {\n\treadonly top: number;\n\treadonly right: number;\n\treadonly bottom: number;\n\treadonly left: number;\n\treadonly width: number;\n\treadonly height: number;\n}\n\n// Acquires all the rect properties from the passed source.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} rect\n// @param {module:utils/dom/rect~RectLike} source\nfunction copyRectProperties( rect: Rect, source: RectLike ): void {\n\tfor ( const p of rectProperties ) {\n\t\trect[ p ] = source[ p ];\n\t}\n}\n\n// Checks if provided object is a <body> HTML element.\n//\n// @private\n// @param {*} value\n// @returns {Boolean}\nfunction isBody( value: unknown ): value is HTMLBodyElement {\n\tif ( !isDomElement( value ) ) {\n\t\treturn false;\n\t}\n\n\treturn value === value.ownerDocument.body;\n}\n\n// Checks if provided object \"looks like\" a DOM Element and has API required by `Rect` class.\n//\n// @private\n// @param {*} value\n// @returns {Boolean}\nfunction isDomElement( value: any ): value is Element {\n\t// Note: earlier we used `isElement()` from lodash library, however that function is less performant because\n\t// it makes complicated checks to make sure that given value is a DOM element.\n\treturn value !== null && typeof value === 'object' && value.nodeType === 1 && typeof value.getBoundingClientRect === 'function';\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/remove\n */\n\n/**\n * Removes given node from parent.\n *\n * @param {Node} node Node to remove.\n */\nexport default function remove( node: Node ): void {\n\tconst parent = node.parentNode;\n\n\tif ( parent ) {\n\t\tparent.removeChild( node );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/resizeobserver\n */\n\nimport global from './global';\n\n/**\n * A helper class which instances allow performing custom actions when native DOM elements are resized.\n *\n *\t\tconst editableElement = editor.editing.view.getDomRoot();\n *\n *\t\tconst observer = new ResizeObserver( editableElement, entry => {\n *\t\t\tconsole.log( 'The editable element has been resized in DOM.' );\n *\t\t\tconsole.log( entry.target ); // -> editableElement\n *\t\t\tconsole.log( entry.contentRect.width ); // -> e.g. '423px'\n *\t\t} );\n *\n * It uses the [native DOM resize observer](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)\n * under the hood.\n */\nexport default class ResizeObserver {\n\t/**\n\t * The element observer by this observer.\n\t *\n\t * @readonly\n\t * @private\n\t * @member {Element}\n\t */\n\tprivate readonly _element: Element;\n\n\t/**\n\t * The callback executed each time {@link #_element} is resized.\n\t *\n\t * @readonly\n\t * @private\n\t * @member {Function}\n\t */\n\tprivate readonly _callback: ( entry: ResizeObserverEntry ) => void;\n\n\t/**\n\t * The single native observer instance shared across all {@link module:utils/dom/resizeobserver~ResizeObserver} instances.\n\t *\n\t * @static\n\t * @private\n\t * @readonly\n\t * @property {Object|null}\n\t */\n\tprivate static _observerInstance: InstanceType<typeof global.window.ResizeObserver> | null = null;\n\n\t/**\n\t * A mapping of native DOM elements and their callbacks shared across all\n\t * {@link module:utils/dom/resizeobserver~ResizeObserver} instances.\n\t *\n\t * @static\n\t * @private\n\t * @property {Map.<Element,Set>|null}\n\t */\n\tprivate static _elementCallbacks: Map<Element, Set<( entry: ResizeObserverEntry ) => void>> | null = null;\n\n\t/**\n\t * Creates an instance of the `ResizeObserver` class.\n\t *\n\t * @param {Element} element A DOM element that is to be observed for resizing. Note that\n\t * the element must be visible (i.e. not detached from DOM) for the observer to work.\n\t * @param {Function} callback A function called when the observed element was resized. It passes\n\t * the [`ResizeObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry)\n\t * object with information about the resize event.\n\t */\n\tconstructor( element: Element, callback: ( entry: ResizeObserverEntry ) => void ) {\n\t\t// **Note**: For the maximum performance, this class ensures only a single instance of the native\n\t\t// observer is used no matter how many instances of this class were created.\n\t\tif ( !ResizeObserver._observerInstance ) {\n\t\t\tResizeObserver._createObserver();\n\t\t}\n\n\t\tthis._element = element;\n\t\tthis._callback = callback;\n\n\t\tResizeObserver._addElementCallback( element, callback );\n\t\tResizeObserver._observerInstance!.observe( element );\n\t}\n\n\t/**\n\t * Destroys the observer which disables the `callback` passed to the {@link #constructor}.\n\t */\n\tpublic destroy(): void {\n\t\tResizeObserver._deleteElementCallback( this._element, this._callback );\n\t}\n\n\t/**\n\t * Registers a new resize callback for the DOM element.\n\t *\n\t * @private\n\t * @static\n\t * @param {Element} element\n\t * @param {Function} callback\n\t */\n\tprivate static _addElementCallback( element: Element, callback: ( entry: ResizeObserverEntry ) => void ): void {\n\t\tif ( !ResizeObserver._elementCallbacks ) {\n\t\t\tResizeObserver._elementCallbacks = new Map();\n\t\t}\n\n\t\tlet callbacks = ResizeObserver._elementCallbacks.get( element );\n\n\t\tif ( !callbacks ) {\n\t\t\tcallbacks = new Set();\n\t\t\tResizeObserver._elementCallbacks.set( element, callbacks );\n\t\t}\n\n\t\tcallbacks.add( callback );\n\t}\n\n\t/**\n\t * Removes a resize callback from the DOM element. If no callbacks are left\n\t * for the element, it removes the element from the native observer.\n\t *\n\t * @private\n\t * @static\n\t * @param {Element} element\n\t * @param {Function} callback\n\t */\n\tprivate static _deleteElementCallback( element: Element, callback: ( entry: ResizeObserverEntry ) => void ): void {\n\t\tconst callbacks = ResizeObserver._getElementCallbacks( element );\n\n\t\t// Remove the element callback. Check if exist first in case someone\n\t\t// called destroy() twice.\n\t\tif ( callbacks ) {\n\t\t\tcallbacks.delete( callback );\n\n\t\t\t// If no callbacks left for the element, also remove the element.\n\t\t\tif ( !callbacks.size ) {\n\t\t\t\tResizeObserver._elementCallbacks!.delete( element );\n\t\t\t\tResizeObserver._observerInstance!.unobserve( element );\n\t\t\t}\n\t\t}\n\n\t\tif ( ResizeObserver._elementCallbacks && !ResizeObserver._elementCallbacks.size ) {\n\t\t\tResizeObserver._observerInstance = null;\n\t\t\tResizeObserver._elementCallbacks = null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns are registered resize callbacks for the DOM element.\n\t *\n\t * @private\n\t * @static\n\t * @param {Element} element\n\t * @returns {Set.<Function>|null|undefined}\n\t */\n\tprivate static _getElementCallbacks( element: Element ): Set<( entry: ResizeObserverEntry ) => void> | null | undefined {\n\t\tif ( !ResizeObserver._elementCallbacks ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn ResizeObserver._elementCallbacks.get( element );\n\t}\n\n\t/**\n\t * Creates the single native observer shared across all `ResizeObserver` instances.\n\t *\n\t * @private\n\t * @static\n\t */\n\tprivate static _createObserver(): void {\n\t\tResizeObserver._observerInstance = new global.window.ResizeObserver( entries => {\n\t\t\tfor ( const entry of entries ) {\n\t\t\t\tconst callbacks = ResizeObserver._getElementCallbacks( entry.target );\n\n\t\t\t\tif ( callbacks ) {\n\t\t\t\t\tfor ( const callback of callbacks ) {\n\t\t\t\t\t\tcallback( entry );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/scroll\n */\n\nimport isRange from './isrange';\nimport Rect from './rect';\nimport isText from './istext';\n\n/**\n * Makes any page `HTMLElement` or `Range` (`target`) visible inside the browser viewport.\n * This helper will scroll all `target` ancestors and the web browser viewport to reveal the target to\n * the user. If the `target` is already visible, nothing will happen.\n *\n * @param {Object} options\n * @param {HTMLElement|Range} options.target A target, which supposed to become visible to the user.\n * @param {Number} [options.viewportOffset] An offset from the edge of the viewport (in pixels)\n * the `target` will be moved by when the viewport is scrolled. It enhances the user experience\n * by keeping the `target` some distance from the edge of the viewport and thus making it easier to\n * read or edit by the user.\n */\nexport function scrollViewportToShowTarget(\n\t{ target, viewportOffset = 0 }: { readonly target: HTMLElement | Range; readonly viewportOffset?: number }\n): void {\n\tconst targetWindow = getWindow( target );\n\tlet currentWindow: Window | null = targetWindow;\n\tlet currentFrame: HTMLElement | null = null;\n\n\t// Iterate over all windows, starting from target's parent window up to window#top.\n\twhile ( currentWindow ) {\n\t\tlet firstAncestorToScroll: HTMLElement;\n\n\t\t// Let's scroll target's ancestors first to reveal it. Then, once the ancestor scrolls\n\t\t// settled down, the algorithm can eventually scroll the viewport of the current window.\n\t\t//\n\t\t// Note: If the current window is target's **original** window (e.g. the first one),\n\t\t// start scrolling the closest parent of the target. If not, scroll the closest parent\n\t\t// of an iframe that resides in the current window.\n\t\tif ( currentWindow == targetWindow ) {\n\t\t\tfirstAncestorToScroll = getParentElement( target );\n\t\t} else {\n\t\t\tfirstAncestorToScroll = getParentElement( currentFrame! );\n\t\t}\n\n\t\t// Scroll the target's ancestors first. Once done, scrolling the viewport is easy.\n\t\tscrollAncestorsToShowRect( firstAncestorToScroll, () => {\n\t\t\t// Note: If the target does not belong to the current window **directly**,\n\t\t\t// i.e. it resides in an iframe belonging to the window, obtain the target's rect\n\t\t\t// in the coordinates of the current window. By default, a Rect returns geometry\n\t\t\t// relative to the current window's viewport. To make it work in a parent window,\n\t\t\t// it must be shifted.\n\t\t\treturn getRectRelativeToWindow( target, currentWindow! );\n\t\t} );\n\n\t\t// Obtain the rect of the target after it has been scrolled within its ancestors.\n\t\t// It's time to scroll the viewport.\n\t\tconst targetRect = getRectRelativeToWindow( target, currentWindow );\n\n\t\tscrollWindowToShowRect( currentWindow, targetRect, viewportOffset );\n\n\t\tif ( currentWindow.parent != currentWindow ) {\n\t\t\t// Keep the reference to the <iframe> element the \"previous current window\" was\n\t\t\t// rendered within. It will be useful to re–calculate the rect of the target\n\t\t\t// in the parent window's relative geometry. The target's rect must be shifted\n\t\t\t// by it's iframe's position.\n\t\t\tcurrentFrame = currentWindow.frameElement as HTMLElement | null;\n\t\t\tcurrentWindow = currentWindow.parent;\n\n\t\t\t// If the current window has some parent but frameElement is inaccessible, then they have\n\t\t\t// different domains/ports and, due to security reasons, accessing and scrolling\n\t\t\t// the parent window won't be possible.\n\t\t\t// See https://github.com/ckeditor/ckeditor5/issues/930.\n\t\t\tif ( !currentFrame ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentWindow = null;\n\t\t}\n\t}\n}\n\n/**\n * Makes any page `HTMLElement` or `Range` (target) visible within its scrollable ancestors,\n * e.g. if they have `overflow: scroll` CSS style.\n *\n * @param {HTMLElement|Range} target A target, which supposed to become visible to the user.\n */\nexport function scrollAncestorsToShowTarget( target: HTMLElement | Range ): void {\n\tconst targetParent = getParentElement( target );\n\n\tscrollAncestorsToShowRect( targetParent, () => {\n\t\treturn new Rect( target );\n\t} );\n}\n\n// Makes a given rect visible within its parent window.\n//\n// Note: Avoid the situation where the caret is still in the viewport, but totally\n// at the edge of it. In such situation, if it moved beyond the viewport in the next\n// action e.g. after paste, the scrolling would move it to the viewportOffset level\n// and it all would look like the caret visually moved up/down:\n//\n// 1.\n//\t\t| foo[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// 2. *paste*\n// 3.\n//\t\t|\n//\t\t|\n//\t\t+-foo-----------------------------...\n//\t\t  bar[]                              <--- caret below viewport, scrolling...\n//\n// 4. *scrolling*\n// 5.\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]                              <--- caret precisely at the edge\n//\t\t+---------------------------------...\n//\n// To prevent this, this method checks the rects moved by the viewportOffset to cover\n// the upper/lower edge of the viewport. It makes sure if the action repeats, there's\n// no twitching – it's a purely visual improvement:\n//\n// 5. (after fix)\n//\t\t|\n//\t\t| foo\n//\t\t| bar[]\n//\t\t|                                    <--- N px of space below the caret\n//\t\t+---------------------------------...\n//\n// @private\n// @param {Window} window A window which is scrolled to reveal the rect.\n// @param {module:utils/dom/rect~Rect} rect A rect which is to be revealed.\n// @param {Number} viewportOffset See scrollViewportToShowTarget.\nfunction scrollWindowToShowRect( window: Window, rect: Rect, viewportOffset: number ): void {\n\tconst targetShiftedDownRect = rect.clone().moveBy( 0, viewportOffset );\n\tconst targetShiftedUpRect = rect.clone().moveBy( 0, -viewportOffset );\n\tconst viewportRect = new Rect( window ).excludeScrollbarsAndBorders();\n\n\tconst rects = [ targetShiftedUpRect, targetShiftedDownRect ];\n\n\tif ( !rects.every( rect => viewportRect.contains( rect ) ) ) {\n\t\tlet { scrollX, scrollY } = window;\n\n\t\tif ( isAbove( targetShiftedUpRect, viewportRect ) ) {\n\t\t\tscrollY -= viewportRect.top - rect.top + viewportOffset;\n\t\t} else if ( isBelow( targetShiftedDownRect, viewportRect ) ) {\n\t\t\tscrollY += rect.bottom - viewportRect.bottom + viewportOffset;\n\t\t}\n\n\t\t// TODO: Web browsers scroll natively to place the target in the middle\n\t\t// of the viewport. It's not a very popular case, though.\n\t\tif ( isLeftOf( rect, viewportRect ) ) {\n\t\t\tscrollX -= viewportRect.left - rect.left + viewportOffset;\n\t\t} else if ( isRightOf( rect, viewportRect ) ) {\n\t\t\tscrollX += rect.right - viewportRect.right + viewportOffset;\n\t\t}\n\n\t\twindow.scrollTo( scrollX, scrollY );\n\t}\n}\n\n// Recursively scrolls element ancestors to visually reveal a rect.\n//\n// @private\n// @param {HTMLElement} A parent The first ancestors to start scrolling.\n// @param {Function} getRect A function which returns the Rect, which is to be revealed.\nfunction scrollAncestorsToShowRect( parent: HTMLElement, getRect: () => Rect ): void {\n\tconst parentWindow = getWindow( parent );\n\tlet parentRect: Rect, targetRect: Rect;\n\n\twhile ( parent != parentWindow.document.body ) {\n\t\ttargetRect = getRect();\n\t\tparentRect = new Rect( parent ).excludeScrollbarsAndBorders();\n\n\t\tif ( !parentRect.contains( targetRect ) ) {\n\t\t\tif ( isAbove( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollTop -= parentRect.top - targetRect.top;\n\t\t\t} else if ( isBelow( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollTop += targetRect.bottom - parentRect.bottom;\n\t\t\t}\n\n\t\t\tif ( isLeftOf( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollLeft -= parentRect.left - targetRect.left;\n\t\t\t} else if ( isRightOf( targetRect, parentRect ) ) {\n\t\t\t\tparent.scrollLeft += targetRect.right - parentRect.right;\n\t\t\t}\n\t\t}\n\n\t\tparent = parent.parentNode as HTMLElement;\n\t}\n}\n\n// Determines if a given `Rect` extends beyond the bottom edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n// @returns {Boolean}\nfunction isBelow( firstRect: Rect, secondRect: Rect ): boolean {\n\treturn firstRect.bottom > secondRect.bottom;\n}\n\n// Determines if a given `Rect` extends beyond the top edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n// @returns {Boolean}\nfunction isAbove( firstRect: Rect, secondRect: Rect ): boolean {\n\treturn firstRect.top < secondRect.top;\n}\n\n// Determines if a given `Rect` extends beyond the left edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n// @returns {Boolean}\nfunction isLeftOf( firstRect: Rect, secondRect: Rect ): boolean {\n\treturn firstRect.left < secondRect.left;\n}\n\n// Determines if a given `Rect` extends beyond the right edge of the second `Rect`.\n//\n// @private\n// @param {module:utils/dom/rect~Rect} firstRect\n// @param {module:utils/dom/rect~Rect} secondRect\n// @returns {Boolean}\nfunction isRightOf( firstRect: Rect, secondRect: Rect ): boolean {\n\treturn firstRect.right > secondRect.right;\n}\n\n// Returns the closest window of an element or range.\n//\n// @private\n// @param {HTMLElement|Range} elementOrRange\n// @returns {Window}\nfunction getWindow( elementOrRange: HTMLElement | Range ): Window {\n\tif ( isRange( elementOrRange ) ) {\n\t\treturn elementOrRange.startContainer.ownerDocument!.defaultView!;\n\t} else {\n\t\treturn elementOrRange.ownerDocument.defaultView!;\n\t}\n}\n\n// Returns the closest parent of an element or DOM range.\n//\n// @private\n// @param {HTMLElement|Range} elementOrRange\n// @returns {HTMLelement}\nfunction getParentElement( elementOrRange: HTMLElement | Range ): HTMLElement {\n\tif ( isRange( elementOrRange ) ) {\n\t\tlet parent = elementOrRange.commonAncestorContainer as HTMLElement;\n\n\t\t// If a Range is attached to the Text, use the closest element ancestor.\n\t\tif ( isText( parent ) ) {\n\t\t\tparent = parent.parentNode as HTMLElement;\n\t\t}\n\n\t\treturn parent;\n\t} else {\n\t\treturn elementOrRange.parentNode as HTMLElement;\n\t}\n}\n\n// Returns the rect of an element or range residing in an iframe.\n// The result rect is relative to the geometry of the passed window instance.\n//\n// @private\n// @param {HTMLElement|Range} target Element or range which rect should be returned.\n// @param {Window} relativeWindow A window the rect should be relative to.\n// @returns {module:utils/dom/rect~Rect}\nfunction getRectRelativeToWindow( target: HTMLElement | Range, relativeWindow: Window ): Rect {\n\tconst targetWindow = getWindow( target );\n\tconst rect = new Rect( target );\n\n\tif ( targetWindow === relativeWindow ) {\n\t\treturn rect;\n\t} else {\n\t\tlet currentWindow = targetWindow;\n\n\t\twhile ( currentWindow != relativeWindow ) {\n\t\t\tconst frame = currentWindow.frameElement as HTMLElement;\n\t\t\tconst frameRect = new Rect( frame ).excludeScrollbarsAndBorders();\n\n\t\t\trect.moveBy( frameRect.left, frameRect.top );\n\n\t\t\tcurrentWindow = currentWindow.parent;\n\t\t}\n\t}\n\n\treturn rect;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/setdatainelement\n */\n\n/* globals HTMLTextAreaElement */\n\n/**\n * Sets data in a given element.\n *\n * @param {HTMLElement} el The element in which the data will be set.\n * @param {String} data The data string.\n */\nexport default function setDataInElement( el: HTMLElement, data: string ): void {\n\tif ( el instanceof HTMLTextAreaElement ) {\n\t\tel.value = data;\n\t}\n\n\tel.innerHTML = data;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/dom/tounit\n */\n\n/**\n * Returns a helper function, which adds a desired trailing\n * `unit` to the passed value.\n *\n * @param {String} unit An unit like \"px\" or \"em\".\n * @returns {module:utils/dom/tounit~helper}\n */\nexport default function toUnit( unit: string ): ( value: string | number ) => string {\n\t/**\n\t * A function, which adds a pre–defined trailing `unit`\n\t * to the passed `value`.\n\t *\n\t * @function helper\n \t * @param {String|Number} value A value to be given the unit.\n \t * @returns {String} A value with the trailing unit.\n\t */\n\treturn value => value + unit;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/elementreplacer\n */\n\n/**\n * Utility class allowing to hide existing HTML elements or replace them with given ones in a way that doesn't remove\n * the original elements from the DOM.\n */\nexport default class ElementReplacer {\n\t/**\n\t * The elements replaced by {@link #replace} and their replacements.\n\t *\n\t * @private\n\t * @member {Array.<Object>}\n\t */\n\tprivate _replacedElements: { element: HTMLElement; newElement?: HTMLElement }[];\n\n\tconstructor() {\n\t\tthis._replacedElements = [];\n\t}\n\n\t/**\n\t * Hides the `element` and, if specified, inserts the the given element next to it.\n\t *\n\t * The effect of this method can be reverted by {@link #restore}.\n\t *\n\t * @param {HTMLElement} element The element to replace.\n\t * @param {HTMLElement} [newElement] The replacement element. If not passed, then the `element` will just be hidden.\n\t */\n\tpublic replace( element: HTMLElement, newElement?: HTMLElement ): void {\n\t\tthis._replacedElements.push( { element, newElement } );\n\n\t\telement.style.display = 'none';\n\n\t\tif ( newElement ) {\n\t\t\telement.parentNode!.insertBefore( newElement, element.nextSibling );\n\t\t}\n\t}\n\n\t/**\n\t * Restores what {@link #replace} did.\n\t */\n\tpublic restore(): void {\n\t\tthis._replacedElements.forEach( ( { element, newElement } ) => {\n\t\t\telement.style.display = '';\n\n\t\t\tif ( newElement ) {\n\t\t\t\tnewElement.remove();\n\t\t\t}\n\t\t} );\n\n\t\tthis._replacedElements = [];\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/emittermixin\n */\n\n/* eslint-disable new-cap */\n\nimport EventInfo from './eventinfo';\nimport uid from './uid';\nimport priorities, { type PriorityString } from './priorities';\nimport insertToPriorityArray from './inserttopriorityarray';\n\n// To check if component is loaded more than once.\nimport './version';\nimport CKEditorError from './ckeditorerror';\n\nconst _listeningTo = Symbol( 'listeningTo' );\nconst _emitterId = Symbol( 'emitterId' );\nconst _delegations = Symbol( 'delegations' );\n\n/**\n * Mixin that injects the {@link ~Emitter events API} into its host.\n *\n * Read more about the concept of emitters in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables Event system and observables}\n * section of the {@glink framework/guides/architecture/core-editor-architecture Core editor architecture} guide.\n * * {@glink framework/guides/deep-dive/event-system Event system} deep dive guide.\n *\n * @mixin EmitterMixin\n * @implements module:utils/emittermixin~Emitter\n */\nexport default function EmitterMixin<Base extends abstract new( ...args: any ) => object>(\n\tbase: Base\n): {\n\tnew( ...args: ConstructorParameters<Base> ): InstanceType<Base> & Emitter;\n\tprototype: InstanceType<Base> & Emitter;\n} {\n\tabstract class Mixin extends base implements EmitterInternal {\n\t\tpublic on<TEvent extends BaseEvent>(\n\t\t\tevent: TEvent[ 'name' ],\n\t\t\tcallback: GetCallback<TEvent>,\n\t\t\toptions?: CallbackOptions\n\t\t): void {\n\t\t\tthis.listenTo( this, event, callback, options );\n\t\t}\n\n\t\tpublic once<TEvent extends BaseEvent>(\n\t\t\tevent: TEvent[ 'name' ],\n\t\t\tcallback: GetCallback<TEvent>,\n\t\t\toptions?: CallbackOptions\n\t\t): void {\n\t\t\tlet wasFired = false;\n\n\t\t\tconst onceCallback: typeof callback = ( event, ...args ) => {\n\t\t\t\t// Ensure the callback is called only once even if the callback itself leads to re-firing the event\n\t\t\t\t// (which would call the callback again).\n\t\t\t\tif ( !wasFired ) {\n\t\t\t\t\twasFired = true;\n\n\t\t\t\t\t// Go off() at the first call.\n\t\t\t\t\tevent.off();\n\n\t\t\t\t\t// Go with the original callback.\n\t\t\t\t\tcallback.call( this, event, ...args );\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Make a similar on() call, simply replacing the callback.\n\t\t\tthis.listenTo( this, event, onceCallback, options );\n\t\t}\n\n\t\tpublic off( event: string, callback: Function ): void {\n\t\t\tthis.stopListening( this, event, callback );\n\t\t}\n\n\t\tpublic listenTo<TEvent extends BaseEvent>(\n\t\t\temitter: Emitter,\n\t\t\tevent: TEvent[ 'name' ],\n\t\t\tcallback: GetCallback<TEvent>,\n\t\t\toptions: CallbackOptions = {}\n\t\t): void {\n\t\t\tlet emitterInfo, eventCallbacks;\n\n\t\t\t// _listeningTo contains a list of emitters that this object is listening to.\n\t\t\t// This list has the following format:\n\t\t\t//\n\t\t\t// _listeningTo: {\n\t\t\t//     emitterId: {\n\t\t\t//         emitter: emitter,\n\t\t\t//         callbacks: {\n\t\t\t//             event1: [ callback1, callback2, ... ]\n\t\t\t//             ....\n\t\t\t//         }\n\t\t\t//     },\n\t\t\t//     ...\n\t\t\t// }\n\n\t\t\tif ( !this[ _listeningTo ] ) {\n\t\t\t\tthis[ _listeningTo ] = {};\n\t\t\t}\n\n\t\t\tconst emitters = this[ _listeningTo ]!;\n\n\t\t\tif ( !_getEmitterId( emitter ) ) {\n\t\t\t\t_setEmitterId( emitter );\n\t\t\t}\n\n\t\t\tconst emitterId = _getEmitterId( emitter )!;\n\n\t\t\tif ( !( emitterInfo = emitters[ emitterId ] ) ) {\n\t\t\t\temitterInfo = emitters[ emitterId ] = {\n\t\t\t\t\temitter,\n\t\t\t\t\tcallbacks: {}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif ( !( eventCallbacks = emitterInfo.callbacks[ event ] ) ) {\n\t\t\t\teventCallbacks = emitterInfo.callbacks[ event ] = [];\n\t\t\t}\n\n\t\t\teventCallbacks.push( callback );\n\n\t\t\t// Finally register the callback to the event.\n\t\t\taddEventListener( this, emitter, event, callback, options );\n\t\t}\n\n\t\tpublic stopListening( emitter?: Emitter, event?: string, callback?: Function ): void {\n\t\t\tconst emitters = this[ _listeningTo ];\n\t\t\tlet emitterId = emitter && _getEmitterId( emitter );\n\t\t\tconst emitterInfo = ( emitters && emitterId ) ? emitters[ emitterId ] : undefined;\n\t\t\tconst eventCallbacks = ( emitterInfo && event ) ? emitterInfo.callbacks[ event ] : undefined;\n\n\t\t\t// Stop if nothing has been listened.\n\t\t\tif ( !emitters || ( emitter && !emitterInfo ) || ( event && !eventCallbacks ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// All params provided. off() that single callback.\n\t\t\tif ( callback ) {\n\t\t\t\tremoveEventListener( this, emitter!, event!, callback );\n\n\t\t\t\t// We must remove callbacks as well in order to prevent memory leaks.\n\t\t\t\t// See https://github.com/ckeditor/ckeditor5/pull/8480\n\t\t\t\tconst index = eventCallbacks!.indexOf( callback );\n\n\t\t\t\tif ( index !== -1 ) {\n\t\t\t\t\tif ( eventCallbacks!.length === 1 ) {\n\t\t\t\t\t\tdelete emitterInfo!.callbacks[ event! ];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tremoveEventListener( this, emitter!, event!, callback );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Only `emitter` and `event` provided. off() all callbacks for that event.\n\t\t\telse if ( eventCallbacks ) {\n\t\t\t\twhile ( ( callback = eventCallbacks.pop() ) ) {\n\t\t\t\t\tremoveEventListener( this, emitter!, event!, callback );\n\t\t\t\t}\n\n\t\t\t\tdelete emitterInfo!.callbacks[ event! ];\n\t\t\t}\n\t\t\t// Only `emitter` provided. off() all events for that emitter.\n\t\t\telse if ( emitterInfo ) {\n\t\t\t\tfor ( event in emitterInfo.callbacks ) {\n\t\t\t\t\tthis.stopListening( emitter!, event );\n\t\t\t\t}\n\t\t\t\tdelete emitters[ emitterId! ];\n\t\t\t}\n\t\t\t// No params provided. off() all emitters.\n\t\t\telse {\n\t\t\t\tfor ( emitterId in emitters ) {\n\t\t\t\t\tthis.stopListening( emitters[ emitterId ].emitter );\n\t\t\t\t}\n\t\t\t\tdelete this[ _listeningTo ];\n\t\t\t}\n\t\t}\n\n\t\tpublic fire<TEvent extends BaseEvent>(\n\t\t\teventOrInfo: GetNameOrEventInfo<TEvent>,\n\t\t\t...args: TEvent[ 'args' ]\n\t\t): GetEventInfo<TEvent>[ 'return' ] {\n\t\t\ttry {\n\t\t\t\tconst eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo( this, eventOrInfo );\n\t\t\t\tconst event = eventInfo.name;\n\t\t\t\tlet callbacks = getCallbacksForEvent( this, event );\n\n\t\t\t\t// Record that the event passed this emitter on its path.\n\t\t\t\teventInfo.path.push( this );\n\n\t\t\t\t// Handle event listener callbacks first.\n\t\t\t\tif ( callbacks ) {\n\t\t\t\t\t// Arguments passed to each callback.\n\t\t\t\t\tconst callbackArgs = [ eventInfo, ...args ];\n\n\t\t\t\t\t// Copying callbacks array is the easiest and most secure way of preventing infinite loops, when event callbacks\n\t\t\t\t\t// are added while processing other callbacks. Previous solution involved adding counters (unique ids) but\n\t\t\t\t\t// failed if callbacks were added to the queue before currently processed callback.\n\t\t\t\t\t// If this proves to be too inefficient, another method is to change `.on()` so callbacks are stored if same\n\t\t\t\t\t// event is currently processed. Then, `.fire()` at the end, would have to add all stored events.\n\t\t\t\t\tcallbacks = Array.from( callbacks );\n\n\t\t\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\t\t\t\tcallbacks[ i ].callback.apply( this, callbackArgs );\n\n\t\t\t\t\t\t// Remove the callback from future requests if off() has been called.\n\t\t\t\t\t\tif ( eventInfo.off.called ) {\n\t\t\t\t\t\t\t// Remove the called mark for the next calls.\n\t\t\t\t\t\t\tdelete eventInfo.off.called;\n\n\t\t\t\t\t\t\tthis._removeEventListener( event, callbacks[ i ].callback );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not execute next callbacks if stop() was called.\n\t\t\t\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Delegate event to other emitters if needed.\n\t\t\t\tconst delegations = this[ _delegations ];\n\n\t\t\t\tif ( delegations ) {\n\t\t\t\t\tconst destinations = delegations.get( event );\n\t\t\t\t\tconst passAllDestinations = delegations.get( '*' );\n\n\t\t\t\t\tif ( destinations ) {\n\t\t\t\t\t\tfireDelegatedEvents( destinations, eventInfo, args );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( passAllDestinations ) {\n\t\t\t\t\t\tfireDelegatedEvents( passAllDestinations, eventInfo, args );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn eventInfo.return;\n\t\t\t} catch ( err ) {\n\t\t\t\t// @if CK_DEBUG // throw err;\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tCKEditorError.rethrowUnexpectedError( err as Error, this );\n\t\t\t}\n\t\t}\n\n\t\tpublic delegate( ...events: string[] ): EmitterMixinDelegateChain {\n\t\t\treturn {\n\t\t\t\tto: ( emitter, nameOrFunction ) => {\n\t\t\t\t\tif ( !this[ _delegations ] ) {\n\t\t\t\t\t\tthis[ _delegations ] = new Map();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Originally there was a for..of loop which unfortunately caused an error in Babel that didn't allow\n\t\t\t\t\t// build an application. See: https://github.com/ckeditor/ckeditor5-react/issues/40.\n\t\t\t\t\tevents.forEach( eventName => {\n\t\t\t\t\t\tconst destinations = this[ _delegations ]!.get( eventName );\n\n\t\t\t\t\t\tif ( !destinations ) {\n\t\t\t\t\t\t\tthis[ _delegations ]!.set( eventName, new Map( [ [ emitter, nameOrFunction ] ] ) );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdestinations.set( emitter, nameOrFunction );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tpublic stopDelegating( event?: string, emitter?: Emitter ): void {\n\t\t\tif ( !this[ _delegations ] ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( !event ) {\n\t\t\t\tthis[ _delegations ]!.clear();\n\t\t\t} else if ( !emitter ) {\n\t\t\t\tthis[ _delegations ]!.delete( event );\n\t\t\t} else {\n\t\t\t\tconst destinations = this[ _delegations ]!.get( event );\n\n\t\t\t\tif ( destinations ) {\n\t\t\t\t\tdestinations.delete( emitter );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic _addEventListener<TEvent extends BaseEvent>(\n\t\t\tevent: TEvent[ 'name' ],\n\t\t\tcallback: GetCallback<TEvent>,\n\t\t\toptions: CallbackOptions\n\t\t): void {\n\t\t\tcreateEventNamespace( this, event );\n\n\t\t\tconst lists = getCallbacksListsForNamespace( this, event );\n\t\t\tconst priority = priorities.get( options.priority );\n\n\t\t\tconst callbackDefinition = {\n\t\t\t\tcallback,\n\t\t\t\tpriority\n\t\t\t};\n\n\t\t\t// Add the callback to all callbacks list.\n\t\t\tfor ( const callbacks of lists ) {\n\t\t\t\t// Add the callback to the list in the right priority position.\n\t\t\t\tinsertToPriorityArray( callbacks, callbackDefinition );\n\t\t\t}\n\t\t}\n\n\t\tpublic _removeEventListener( event: string, callback: Function ): void {\n\t\t\tconst lists = getCallbacksListsForNamespace( this, event );\n\n\t\t\tfor ( const callbacks of lists ) {\n\t\t\t\tfor ( let i = 0; i < callbacks.length; i++ ) {\n\t\t\t\t\tif ( callbacks[ i ].callback == callback ) {\n\t\t\t\t\t\t// Remove the callback from the list (fixing the next index).\n\t\t\t\t\t\tcallbacks.splice( i, 1 );\n\t\t\t\t\t\ti--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic _events?: { [ eventName: string ]: EventNode };\n\n\t\tpublic [ _emitterId ]?: string;\n\n\t\tpublic [ _listeningTo ]?: {\n\t\t\t[ emitterId: string ]: {\n\t\t\t\temitter: Emitter;\n\t\t\t\tcallbacks: { [ event: string]: Function[] };\n\t\t\t};\n\t\t};\n\n\t\tpublic [ _delegations ]?: Map<string, Map<Emitter, string | ( ( name: string ) => string ) | undefined>>;\n\t}\n\n\treturn Mixin as any;\n}\n\nexport const Emitter = EmitterMixin( Object );\n\n// Backward compatibility with `mix`\n( [\n\t'on', 'once', 'off', 'listenTo',\n\t'stopListening', 'fire', 'delegate', 'stopDelegating',\n\t'_addEventListener', '_removeEventListener'\n] ).forEach( key => {\n\t( EmitterMixin as any )[ key ] = ( Emitter.prototype as any )[ key ];\n} );\n\n/**\n * Emitter/listener interface.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/emittermixin~EmitterMixin} mixin.\n *\n * Read more about the usage of this interface in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables Event system and observables}\n * section of the {@glink framework/guides/architecture/core-editor-architecture Core editor architecture} guide.\n * * {@glink framework/guides/deep-dive/event-system Event system} deep dive guide.\n *\n * @interface\n */\nexport interface Emitter {\n\n\t/**\n\t * Registers a callback function to be executed when an event is fired.\n\t *\n\t * Shorthand for {@link #listenTo `this.listenTo( this, event, callback, options )`} (it makes the emitter\n\t * listen on itself).\n\t *\n\t * @method\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {module:utils/emittermixin~CallbackOptions} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t */\n\ton<TEvent extends BaseEvent>(\n\t\tevent: TEvent[ 'name' ],\n\t\tcallback: GetCallback<TEvent>,\n\t\toptions?: CallbackOptions\n\t): void;\n\n\t/**\n\t * Registers a callback function to be executed on the next time the event is fired only. This is similar to\n\t * calling {@link #on} followed by {@link #off} in the callback.\n\t *\n\t * @method\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {module:utils/emittermixin~CallbackOptions} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t */\n\tonce<TEvent extends BaseEvent>(\n\t\tevent: TEvent[ 'name' ],\n\t\tcallback: GetCallback<TEvent>,\n\t\toptions?: CallbackOptions\n\t): void;\n\n\t/**\n\t * Stops executing the callback on the given event.\n\t * Shorthand for {@link #stopListening `this.stopListening( this, event, callback )`}.\n\t *\n\t * @method\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to stop being called.\n\t */\n\toff( event: string, callback: Function ): void;\n\n\t/**\n\t * Registers a callback function to be executed when an event is fired in a specific (emitter) object.\n\t *\n\t * Events can be grouped in namespaces using `:`.\n\t * When namespaced event is fired, it additionally fires all callbacks for that namespace.\n\t *\n\t *\t\t// myEmitter.on( ... ) is a shorthand for myEmitter.listenTo( myEmitter, ... ).\n\t *\t\tmyEmitter.on( 'myGroup', genericCallback );\n\t *\t\tmyEmitter.on( 'myGroup:myEvent', specificCallback );\n\t *\n\t *\t\t// genericCallback is fired.\n\t *\t\tmyEmitter.fire( 'myGroup' );\n\t *\t\t// both genericCallback and specificCallback are fired.\n\t *\t\tmyEmitter.fire( 'myGroup:myEvent' );\n\t *\t\t// genericCallback is fired even though there are no callbacks for \"foo\".\n\t *\t\tmyEmitter.fire( 'myGroup:foo' );\n\t *\n\t * An event callback can {@link module:utils/eventinfo~EventInfo#stop stop the event} and\n\t * set the {@link module:utils/eventinfo~EventInfo#return return value} of the {@link #fire} method.\n\t *\n\t * @method\n\t * @param {module:utils/emittermixin~Emitter} emitter The object that fires the event.\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {module:utils/emittermixin~CallbackOptions} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t */\n\tlistenTo<TEvent extends BaseEvent>(\n\t\temitter: Emitter,\n\t\tevent: TEvent[ 'name' ],\n\t\tcallback: GetCallback<TEvent>,\n\t\toptions?: CallbackOptions\n\t): void;\n\n\t/**\n\t * Stops listening for events. It can be used at different levels:\n\t *\n\t * * To stop listening to a specific callback.\n\t * * To stop listening to a specific event.\n\t * * To stop listening to all events fired by a specific object.\n\t * * To stop listening to all events fired by all objects.\n\t *\n\t * @method\n\t * @param {module:utils/emittermixin~Emitter} [emitter] The object to stop listening to. If omitted, stops it for all objects.\n\t * @param {String} [event] (Requires the `emitter`) The name of the event to stop listening to. If omitted, stops it\n\t * for all events from `emitter`.\n\t * @param {Function} [callback] (Requires the `event`) The function to be removed from the call list for the given\n\t * `event`.\n\t */\n\tstopListening( emitter?: Emitter, event?: string, callback?: Function ): void;\n\n\t/**\n\t * Fires an event, executing all callbacks registered for it.\n\t *\n\t * The first parameter passed to callbacks is an {@link module:utils/eventinfo~EventInfo} object,\n\t * followed by the optional `args` provided in the `fire()` method call.\n\t *\n\t * @method\n\t * @param {String|module:utils/eventinfo~EventInfo} eventOrInfo The name of the event or `EventInfo` object if event is delegated.\n\t * @param {...*} [args] Additional arguments to be passed to the callbacks.\n\t * @returns {*} By default the method returns `undefined`. However, the return value can be changed by listeners\n\t * through modification of the {@link module:utils/eventinfo~EventInfo#return `evt.return`}'s property (the event info\n\t * is the first param of every callback).\n\t */\n\tfire<TEvent extends BaseEvent>(\n\t\teventOrInfo: GetNameOrEventInfo<TEvent>,\n\t\t...args: TEvent[ 'args' ]\n\t): GetEventInfo<TEvent>[ 'return' ];\n\n\t/**\n\t * Delegates selected events to another {@link module:utils/emittermixin~Emitter}. For instance:\n\t *\n\t *\t\temitterA.delegate( 'eventX' ).to( emitterB );\n\t *\t\temitterA.delegate( 'eventX', 'eventY' ).to( emitterC );\n\t *\n\t * then `eventX` is delegated (fired by) `emitterB` and `emitterC` along with `data`:\n\t *\n\t *\t\temitterA.fire( 'eventX', data );\n\t *\n\t * and `eventY` is delegated (fired by) `emitterC` along with `data`:\n\t *\n\t *\t\temitterA.fire( 'eventY', data );\n\t *\n\t * @method\n\t * @param {...String} events Event names that will be delegated to another emitter.\n\t * @returns {module:utils/emittermixin~EmitterMixinDelegateChain}\n\t */\n\tdelegate( ...events: string[] ): EmitterMixinDelegateChain;\n\n\t/**\n\t * Stops delegating events. It can be used at different levels:\n\t *\n\t * * To stop delegating all events.\n\t * * To stop delegating a specific event to all emitters.\n\t * * To stop delegating a specific event to a specific emitter.\n\t *\n\t * @method\n\t * @param {String} [event] The name of the event to stop delegating. If omitted, stops it all delegations.\n\t * @param {module:utils/emittermixin~Emitter} [emitter] (requires `event`) The object to stop delegating a particular event to.\n\t * If omitted, stops delegation of `event` to all emitters.\n\t */\n\tstopDelegating( event?: string, emitter?: Emitter ): void;\n}\n\ninterface EmitterInternal extends Emitter {\n\n\t/**\n\t * Adds callback to emitter for given event.\n\t *\n\t * @protected\n\t * @method #_addEventListener\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to be called on event.\n\t * @param {module:utils/emittermixin~CallbackOptions} options={} Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of this event callback. The higher\n\t * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n\t * order they were added.\n\t */\n\t_addEventListener?: <TEvent extends BaseEvent>(\n\t\tevent: TEvent[ 'name' ],\n\t\tcallback: GetCallback<TEvent>,\n\t\toptions: CallbackOptions\n\t) => void;\n\n\t/**\n\t * Removes callback from emitter for given event.\n\t *\n\t * @protected\n\t * @method #_removeEventListener\n\t * @param {String} event The name of the event.\n\t * @param {Function} callback The function to stop being called.\n\t */\n\t_removeEventListener?: ( event: string, callback: Function ) => void;\n\n\t_events?: { [ eventName: string ]: EventNode };\n\n\t[ _emitterId ]?: string;\n\n\t[ _listeningTo ]?: {\n\t\t[ emitterId: string ]: {\n\t\t\temitter: Emitter;\n\t\t\tcallbacks: { [ event: string]: Function[] };\n\t\t};\n\t};\n\n\t[ _delegations ]?: Map<string, Map<Emitter, string | ( ( name: string ) => string ) | undefined>>;\n}\n\nexport type BaseEvent = {\n\tname: string;\n\targs: any[];\n};\n\nexport type GetEventInfo<TEvent extends BaseEvent> = TEvent extends { eventInfo: EventInfo } ?\n\tTEvent[ 'eventInfo' ] :\n\tEventInfo<TEvent[ 'name' ], ( TEvent extends { return: infer TReturn } ? TReturn : unknown )>;\n\nexport type GetNameOrEventInfo<TEvent extends BaseEvent> = TEvent extends { eventInfo: EventInfo } ?\n\tTEvent[ 'eventInfo' ] :\n\tTEvent[ 'name' ] | EventInfo<TEvent[ 'name' ], ( TEvent extends { return: infer TReturn } ? TReturn : unknown )>;\n\nexport type GetCallback<TEvent extends BaseEvent> = ( this: Emitter, ev: GetEventInfo<TEvent>, ...args: TEvent[ 'args' ] ) => void;\n\n/**\n * Additional options for registering a callback.\n *\n * @typedef {Object} module:utils/emittermixin~CallbackOptions\n * @property {module:utils/priorities~PriorityString|Number} [priority] The priority of this event callback. The higher\n * the priority value the sooner the callback will be fired. Events having the same priority are called in the\n * order they were added.\n */\nexport interface CallbackOptions {\n\treadonly priority?: PriorityString | number;\n}\n\n/**\n * Checks if `listeningEmitter` listens to an emitter with given `listenedToEmitterId` and if so, returns that emitter.\n * If not, returns `null`.\n *\n * @internal\n * @protected\n * @param {module:utils/emittermixin~Emitter} listeningEmitter An emitter that listens.\n * @param {String} listenedToEmitterId Unique emitter id of emitter listened to.\n * @returns {module:utils/emittermixin~Emitter|null}\n */\nexport function _getEmitterListenedTo( listeningEmitter: Emitter, listenedToEmitterId: string ): Emitter | null {\n\tconst listeningTo = ( listeningEmitter as EmitterInternal )[ _listeningTo ];\n\tif ( listeningTo && listeningTo[ listenedToEmitterId ] ) {\n\t\treturn listeningTo[ listenedToEmitterId ].emitter;\n\t}\n\n\treturn null;\n}\n\n/**\n * Sets emitter's unique id.\n *\n * **Note:** `_emitterId` can be set only once.\n *\n * @internal\n * @protected\n * @param {module:utils/emittermixin~Emitter} emitter An emitter for which id will be set.\n * @param {String} [id] Unique id to set. If not passed, random unique id will be set.\n */\nexport function _setEmitterId( emitter: Emitter, id?: string ): void {\n\tif ( !( emitter as EmitterInternal )[ _emitterId ] ) {\n\t\t( emitter as EmitterInternal )[ _emitterId ] = id || uid();\n\t}\n}\n\n/**\n * Returns emitter's unique id.\n *\n * @internal\n * @protected\n * @param {module:utils/emittermixin~Emitter} emitter An emitter which id will be returned.\n * @returns {String|undefined}\n */\nexport function _getEmitterId( emitter: Emitter ): string | undefined {\n\treturn ( emitter as EmitterInternal )[ _emitterId ];\n}\n\ninterface EventNode {\n\tcallbacks: { callback: Function; priority: number }[];\n\tchildEvents: string[];\n}\n\n// Gets the internal `_events` property of the given object.\n// `_events` property store all lists with callbacks for registered event names.\n// If there were no events registered on the object, empty `_events` object is created.\nfunction getEvents( source: EmitterInternal ): { [ eventName: string ]: EventNode } {\n\tif ( !source._events ) {\n\t\tObject.defineProperty( source, '_events', {\n\t\t\tvalue: {}\n\t\t} );\n\t}\n\n\treturn source._events!;\n}\n\n// Creates event node for generic-specific events relation architecture.\nfunction makeEventNode(): EventNode {\n\treturn {\n\t\tcallbacks: [],\n\t\tchildEvents: []\n\t};\n}\n\n// Creates an architecture for generic-specific events relation.\n// If needed, creates all events for given eventName, i.e. if the first registered event\n// is foo:bar:abc, it will create foo:bar:abc, foo:bar and foo event and tie them together.\n// It also copies callbacks from more generic events to more specific events when\n// specific events are created.\nfunction createEventNamespace( source: EmitterInternal, eventName: string ): void {\n\tconst events = getEvents( source );\n\n\t// First, check if the event we want to add to the structure already exists.\n\tif ( events[ eventName ] ) {\n\t\t// If it exists, we don't have to do anything.\n\t\treturn;\n\t}\n\n\t// In other case, we have to create the structure for the event.\n\t// Note, that we might need to create intermediate events too.\n\t// I.e. if foo:bar:abc is being registered and we only have foo in the structure,\n\t// we need to also register foo:bar.\n\n\t// Currently processed event name.\n\tlet name = eventName;\n\t// Name of the event that is a child event for currently processed event.\n\tlet childEventName = null;\n\n\t// Array containing all newly created specific events.\n\tconst newEventNodes = [];\n\n\t// While loop can't check for ':' index because we have to handle generic events too.\n\t// In each loop, we truncate event name, going from the most specific name to the generic one.\n\t// I.e. foo:bar:abc -> foo:bar -> foo.\n\twhile ( name !== '' ) {\n\t\tif ( events[ name ] ) {\n\t\t\t// If the currently processed event name is already registered, we can be sure\n\t\t\t// that it already has all the structure created, so we can break the loop here\n\t\t\t// as no more events need to be registered.\n\t\t\tbreak;\n\t\t}\n\n\t\t// If this event is not yet registered, create a new object for it.\n\t\tevents[ name ] = makeEventNode();\n\t\t// Add it to the array with newly created events.\n\t\tnewEventNodes.push( events[ name ] );\n\n\t\t// Add previously processed event name as a child of this event.\n\t\tif ( childEventName ) {\n\t\t\tevents[ name ].childEvents.push( childEventName );\n\t\t}\n\n\t\tchildEventName = name;\n\t\t// If `.lastIndexOf()` returns -1, `.substr()` will return '' which will break the loop.\n\t\tname = name.substr( 0, name.lastIndexOf( ':' ) );\n\t}\n\n\tif ( name !== '' ) {\n\t\t// If name is not empty, we found an already registered event that was a parent of the\n\t\t// event we wanted to register.\n\n\t\t// Copy that event's callbacks to newly registered events.\n\t\tfor ( const node of newEventNodes ) {\n\t\t\tnode.callbacks = events[ name ].callbacks.slice();\n\t\t}\n\n\t\t// Add last newly created event to the already registered event.\n\t\tevents[ name ].childEvents.push( childEventName! );\n\t}\n}\n\n// Gets an array containing callbacks list for a given event and it's more specific events.\n// I.e. if given event is foo:bar and there is also foo:bar:abc event registered, this will\n// return callback list of foo:bar and foo:bar:abc (but not foo).\nfunction getCallbacksListsForNamespace( source: EmitterInternal, eventName: string ): EventNode[ 'callbacks' ][] {\n\tconst eventNode = getEvents( source )[ eventName ];\n\n\tif ( !eventNode ) {\n\t\treturn [];\n\t}\n\n\tlet callbacksLists = [ eventNode.callbacks ];\n\n\tfor ( let i = 0; i < eventNode.childEvents.length; i++ ) {\n\t\tconst childCallbacksLists = getCallbacksListsForNamespace( source, eventNode.childEvents[ i ] );\n\n\t\tcallbacksLists = callbacksLists.concat( childCallbacksLists );\n\t}\n\n\treturn callbacksLists;\n}\n\n// Get the list of callbacks for a given event, but only if there any callbacks have been registered.\n// If there are no callbacks registered for given event, it checks if this is a specific event and looks\n// for callbacks for it's more generic version.\nfunction getCallbacksForEvent( source: EmitterInternal, eventName: string ): EventNode[ 'callbacks' ] | null {\n\tlet event;\n\n\tif ( !source._events || !( event = source._events[ eventName ] ) || !event.callbacks.length ) {\n\t\t// There are no callbacks registered for specified eventName.\n\t\t// But this could be a specific-type event that is in a namespace.\n\t\tif ( eventName.indexOf( ':' ) > -1 ) {\n\t\t\t// If the eventName is specific, try to find callback lists for more generic event.\n\t\t\treturn getCallbacksForEvent( source, eventName.substr( 0, eventName.lastIndexOf( ':' ) ) );\n\t\t} else {\n\t\t\t// If this is a top-level generic event, return null;\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn event.callbacks;\n}\n\n// Fires delegated events for given map of destinations.\n//\n// @private\n// * @param {Map.<utils.Emitter>} destinations A map containing\n// `[ {@link module:utils/emittermixin~Emitter}, \"event name\" ]` pair destinations.\n// * @param {utils.EventInfo} eventInfo The original event info object.\n// * @param {Array.<*>} fireArgs Arguments the original event was fired with.\nfunction fireDelegatedEvents(\n\tdestinations: Map<Emitter, string | ( ( name: string ) => string ) | undefined>,\n\teventInfo: EventInfo,\n\tfireArgs: any[]\n) {\n\tfor ( let [ emitter, name ] of destinations ) {\n\t\tif ( !name ) {\n\t\t\tname = eventInfo.name;\n\t\t} else if ( typeof name == 'function' ) {\n\t\t\tname = name( eventInfo.name );\n\t\t}\n\n\t\tconst delegatedInfo = new EventInfo( eventInfo.source, name );\n\n\t\tdelegatedInfo.path = [ ...eventInfo.path ];\n\n\t\temitter.fire( delegatedInfo, ...fireArgs );\n\t}\n}\n\n// Helper for registering event callback on the emitter.\nfunction addEventListener<TEvent extends BaseEvent>(\n\tlistener: EmitterInternal,\n\temitter: EmitterInternal,\n\tevent: TEvent[ 'name' ],\n\tcallback: GetCallback<TEvent>,\n\toptions: CallbackOptions\n) {\n\tif ( emitter._addEventListener ) {\n\t\temitter._addEventListener( event, callback, options );\n\t} else {\n\t\t// Allow listening on objects that do not implement Emitter interface.\n\t\t// This is needed in some tests that are using mocks instead of the real objects with EmitterMixin mixed.\n\t\t( listener._addEventListener!<TEvent> ).call( emitter, event, callback, options );\n\t}\n}\n\n// Helper for removing event callback from the emitter.\nfunction removeEventListener( listener: EmitterInternal, emitter: EmitterInternal, event: string, callback: Function ): void {\n\tif ( emitter._removeEventListener ) {\n\t\temitter._removeEventListener( event, callback );\n\t} else {\n\t\t// Allow listening on objects that do not implement Emitter interface.\n\t\t// This is needed in some tests that are using mocks instead of the real objects with EmitterMixin mixed.\n\t\tlistener._removeEventListener!.call( emitter, event, callback );\n\t}\n}\n\n/**\n * The return value of {@link ~Emitter#delegate}.\n *\n * @interface\n */\nexport interface EmitterMixinDelegateChain {\n\n\t/**\n\t * Selects destination for {@link module:utils/emittermixin~EmitterMixin#delegate} events.\n\t *\n\t * @method\n\t * @param {module:utils/emittermixin~Emitter} emitter An `EmitterMixin` instance which is the destination for delegated events.\n\t * @param {String|Function} [nameOrFunction] A custom event name or function which converts the original name string.\n\t */\n\tto( emitter: Emitter, nameOrFunction?: string | ( ( name: string ) => string ) ): void;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals navigator:false */\n\n/**\n * @module utils/env\n */\n\n/**\n * Safely returns `userAgent` from browser's navigator API in a lower case.\n * If navigator API is not available it will return an empty string.\n *\n * @returns {String}\n */\nexport function getUserAgent( ): string {\n\t// In some environments navigator API might not be available.\n\ttry {\n\t\treturn navigator.userAgent.toLowerCase();\n\t} catch ( e ) {\n\t\treturn '';\n\t}\n}\n\nconst userAgent = getUserAgent();\n\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\nconst env = {\n\t/**\n\t * Indicates that the application is running on Macintosh.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisMac: isMac( userAgent ),\n\n\t/**\n\t * Indicates that the application is running on Windows.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisWindows: isWindows( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in Firefox (Gecko).\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisGecko: isGecko( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in Safari.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisSafari: isSafari( userAgent ),\n\n\t/**\n\t * Indicates the the application is running in iOS.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisiOS: isiOS( userAgent ),\n\n\t/**\n\t * Indicates that the application is running on Android mobile device.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisAndroid: isAndroid( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in a browser using the Blink engine.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisBlink: isBlink( userAgent ),\n\n\t/**\n\t * Environment features information.\n\t *\n\t * @memberOf module:utils/env~env\n\t * @namespace\n\t */\n\tfeatures: {\n\t\t/**\n\t\t * Indicates that the environment supports ES2018 Unicode property escapes — like `\\p{P}` or `\\p{L}`.\n\t\t * More information about unicode properties might be found\n\t\t * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n\t\t *\n\t\t * @type {Boolean}\n\t\t */\n\t\tisRegExpUnicodePropertySupported: isRegExpUnicodePropertySupported()\n\t} as const\n} as const;\n\nexport default env;\n\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\nexport function isMac( userAgent: string ): boolean {\n\treturn userAgent.indexOf( 'macintosh' ) > -1;\n}\n\n/**\n * Checks if User Agent represented by the string is running on Windows.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Windows or not.\n */\nexport function isWindows( userAgent: string ): boolean {\n\treturn userAgent.indexOf( 'windows' ) > -1;\n}\n\n/**\n * Checks if User Agent represented by the string is Firefox (Gecko).\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Firefox or not.\n */\nexport function isGecko( userAgent: string ): boolean {\n\treturn !!userAgent.match( /gecko\\/\\d+/ );\n}\n\n/**\n * Checks if User Agent represented by the string is Safari.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isSafari( userAgent: string ): boolean {\n\treturn userAgent.indexOf( ' applewebkit/' ) > -1 && userAgent.indexOf( 'chrome' ) === -1;\n}\n\n/**\n * Checks if User Agent represented by the string is running in iOS.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running in iOS or not.\n */\nexport function isiOS( userAgent: string ): boolean {\n\t// \"Request mobile site\" || \"Request desktop site\".\n\treturn !!userAgent.match( /iphone|ipad/i ) || ( isMac( userAgent ) && navigator.maxTouchPoints > 0 );\n}\n\n/**\n * Checks if User Agent represented by the string is Android mobile device.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isAndroid( userAgent: string ): boolean {\n\treturn userAgent.indexOf( 'android' ) > -1;\n}\n\n/**\n * Checks if User Agent represented by the string is Blink engine.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Blink engine or not.\n */\nexport function isBlink( userAgent: string ): boolean {\n\t// The Edge browser before switching to the Blink engine used to report itself as Chrome (and \"Edge/\")\n\t// but after switching to the Blink it replaced \"Edge/\" with \"Edg/\".\n\treturn userAgent.indexOf( 'chrome/' ) > -1 && userAgent.indexOf( 'edge/' ) < 0;\n}\n\n/**\n * Checks if the current environment supports ES2018 Unicode properties like `\\p{P}` or `\\p{L}`.\n * More information about unicode properties might be found\n * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n *\n * @returns {Boolean}\n */\nexport function isRegExpUnicodePropertySupported(): boolean {\n\tlet isSupported = false;\n\n\t// Feature detection for Unicode properties. Added in ES2018. Currently Firefox does not support it.\n\t// See https://github.com/ckeditor/ckeditor5-mention/issues/44#issuecomment-487002174.\n\n\ttry {\n\t\t// Usage of regular expression literal cause error during build (ckeditor/ckeditor5-dev#534).\n\t\tisSupported = 'ć'.search( new RegExp( '[\\\\p{L}]', 'u' ) ) === 0;\n\t} catch ( error ) {\n\t\t// Firefox throws a SyntaxError when the group is unsupported.\n\t}\n\n\treturn isSupported;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/eventinfo\n */\n\nimport spy from './spy';\n\n/**\n * The event object passed to event callbacks. It is used to provide information about the event as well as a tool to\n * manipulate it.\n */\nexport default class EventInfo<TName extends string = string, TReturn = unknown> {\n\t/**\n\t * The object that fired the event.\n\t *\n\t * @readonly\n\t * @member {Object}\n\t */\n\tpublic readonly source: object;\n\n\t/**\n\t * The event name.\n\t *\n\t * @readonly\n\t * @member {String}\n\t */\n\tpublic readonly name: TName;\n\n\t/**\n\t * Path this event has followed. See {@link module:utils/emittermixin~EmitterMixin#delegate}.\n\t *\n\t * @readonly\n\t * @member {Array.<Object>}\n\t */\n\tpublic path: object[];\n\n\t/**\n\t * Stops the event emitter to call further callbacks for this event interaction.\n\t *\n\t * @method #stop\n\t */\n\tpublic readonly stop: { (): void; called?: boolean };\n\n\t/**\n\t * Removes the current callback from future interactions of this event.\n\t *\n\t * @method #off\n\t */\n\tpublic readonly off: { (): void; called?: boolean };\n\n\t/**\n\t * The value which will be returned by {@link module:utils/emittermixin~EmitterMixin#fire}.\n\t *\n\t * It's `undefined` by default and can be changed by an event listener:\n\t *\n\t *\t\tdataController.fire( 'getSelectedContent', ( evt ) => {\n\t *\t\t\t// This listener will make `dataController.fire( 'getSelectedContent' )`\n\t *\t\t\t// always return an empty DocumentFragment.\n\t *\t\t\tevt.return = new DocumentFragment();\n\t *\n\t *\t\t\t// Make sure no other listeners are executed.\n\t *\t\t\tevt.stop();\n\t *\t\t} );\n\t *\n\t * @member #return\n\t */\n\tpublic return: TReturn | undefined;\n\n\t/**\n\t * @param {Object} source The emitter.\n\t * @param {String} name The event name.\n\t */\n\tconstructor( source: object, name: TName ) {\n\t\tthis.source = source;\n\t\tthis.name = name;\n\t\tthis.path = [];\n\n\t\t// The following methods are defined in the constructor because they must be re-created per instance.\n\t\tthis.stop = spy();\n\t\tthis.off = spy();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport type { DiffResult } from './diff';\nimport type { Change } from './difftochanges';\n\n/**\n * @module utils/fastdiff\n */\n\nexport default function fastDiff<T>(\n\ta: ArrayLike<T>,\n\tb: ArrayLike<T>,\n\tcmp?: ( a: T, b: T ) => boolean,\n\tatomicChanges?: false\n): Change<T>[];\nexport default function fastDiff<T>(\n\ta: ArrayLike<T>,\n\tb: ArrayLike<T>,\n\tcmp: ( ( a: T, b: T ) => boolean ) | undefined,\n\tatomicChanges: true\n): DiffResult[];\n\n/**\n * Finds positions of the first and last change in the given string/array and generates a set of changes:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ { index: 2, type: 'insert', values: [ 'x', 'y', 'z' ] } ]\n *\n *\t\tfastDiff( '12a', '12aa' );\n *\t\t// [ { index: 3, type: 'insert', values: [ 'a' ] } ]\n *\n *\t\tfastDiff( '12xyza', '12a' );\n *\t\t// [ { index: 2, type: 'delete', howMany: 3 } ]\n *\n *\t\tfastDiff( [ '1', '2', 'a', 'a' ], [ '1', '2', 'a' ] );\n *\t\t// [ { index: 3, type: 'delete', howMany: 1 } ]\n *\n *\t\tfastDiff( [ '1', '2', 'a', 'b', 'c', '3' ], [ '2', 'a', 'b' ] );\n *\t\t// [ { index: 0, type: 'insert', values: [ '2', 'a', 'b' ] }, { index: 3, type: 'delete', howMany: 6 } ]\n *\n * Passed arrays can contain any type of data, however to compare them correctly custom comparator function\n * should be passed as a third parameter:\n *\n *\t\tfastDiff( [ { value: 1 }, { value: 2 } ], [ { value: 1 }, { value: 3 } ], ( a, b ) => {\n *\t\t\treturn a.value === b.value;\n *\t\t} );\n *\t\t// [ { index: 1, type: 'insert', values: [ { value: 3 } ] }, { index: 2, type: 'delete', howMany: 1 } ]\n *\n * The resulted set of changes can be applied to the input in order to transform it into the output, for example:\n *\n *\t\tlet input = '12abc3';\n *\t\tconst output = '2ab';\n *\t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + change.values.join( '' ) + input.substring( change.index );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.substring( 0, change.index ) + input.substring( change.index + change.howMany );\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// input equals output now\n *\n * or in case of arrays:\n *\n *\t\tlet input = [ '1', '2', 'a', 'b', 'c', '3' ];\n *\t\tconst output = [ '2', 'a', 'b' ];\n *\t\tconst changes = fastDiff( input, output );\n *\n *\t\tchanges.forEach( change => {\n *\t\t\tif ( change.type == 'insert' ) {\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( change.values, input.slice( change.index ) );\n *\t\t\t} else if ( change.type == 'delete' ) {\n *\t\t\t\tinput = input.slice( 0, change.index ).concat( input.slice( change.index + change.howMany ) );\n *\t\t\t}\n *\t\t} );\n *\n *\t\t// input equals output now\n *\n * By passing `true` as the fourth parameter (`atomicChanges`) the output of this function will become compatible with\n * the {@link module:utils/diff~diff `diff()`} function:\n *\n *\t\tfastDiff( '12a', '12xyza' );\n *\t\t// [ 'equal', 'equal', 'insert', 'insert', 'insert', 'equal' ]\n *\n * The default output format of this function is compatible with the output format of\n * {@link module:utils/difftochanges~diffToChanges `diffToChanges()`}. The `diffToChanges()` input format is, in turn,\n * compatible with the output of {@link module:utils/diff~diff `diff()`}:\n *\n *\t\tconst a = '1234';\n *\t\tconst b = '12xyz34';\n *\n *\t\t// Both calls will return the same results (grouped changes format).\n *\t\tfastDiff( a, b );\n *\t\tdiffToChanges( diff( a, b ) );\n *\n *\t\t// Again, both calls will return the same results (atomic changes format).\n *\t\tfastDiff( a, b, null, true );\n *\t\tdiff( a, b );\n *\n *\n * @param {Array|String} a Input array or string.\n * @param {Array|String} b Input array or string.\n * @param {Function} [cmp] Optional function used to compare array values, by default `===` (strict equal operator) is used.\n * @param {Boolean} [atomicChanges=false] Whether an array of `inset|delete|equal` operations should\n * be returned instead of changes set. This makes this function compatible with {@link module:utils/diff~diff `diff()`}.\n * @returns {Array} Array of changes.\n */\nexport default function fastDiff<T>(\n\ta: ArrayLike<T>,\n\tb: ArrayLike<T>,\n\tcmp?: ( a: T, b: T ) => boolean,\n\tatomicChanges: boolean = false\n): Change<T>[] | DiffResult[] {\n\t// Set the comparator function.\n\tcmp = cmp || function( a, b ) {\n\t\treturn a === b;\n\t};\n\n\t// Convert the string (or any array-like object - eg. NodeList) to an array by using the slice() method because,\n\t// unlike Array.from(), it returns array of UTF-16 code units instead of the code points of a string.\n\t// One code point might be a surrogate pair of two code units. All text offsets are expected to be in code units.\n\t// See ckeditor/ckeditor5#3147.\n\t//\n\t// We need to make sure here that fastDiff() works identical to diff().\n\tconst arrayA: T[] = Array.isArray( a ) ? a : Array.prototype.slice.call( a );\n\tconst arrayB: T[] = Array.isArray( b ) ? b : Array.prototype.slice.call( b );\n\n\t// Find first and last change.\n\tconst changeIndexes = findChangeBoundaryIndexes( arrayA, arrayB, cmp );\n\n\t// Transform into changes array.\n\treturn atomicChanges ? changeIndexesToAtomicChanges( changeIndexes, arrayB.length ) : changeIndexesToChanges( arrayB, changeIndexes );\n}\n\n// Finds position of the first and last change in the given arrays. For example:\n//\n//\t\tconst indexes = findChangeBoundaryIndexes( [ '1', '2', '3', '4' ], [ '1', '3', '4', '2', '4' ] );\n//\t\tconsole.log( indexes ); // { firstIndex: 1, lastIndexOld: 3, lastIndexNew: 4 }\n//\n// The above indexes means that in the first array the modified part is `1[23]4` and in the second array it is `1[342]4`.\n// Based on such indexes, array with `insert`/`delete` operations which allows transforming first value into the second one\n// can be generated.\n//\n// @param {Array} arr1\n// @param {Array} arr2\n// @param {Function} cmp Comparator function.\n// @returns {Object}\n// @returns {Number} return.firstIndex Index of the first change in both values (always the same for both).\n// @returns {Number} result.lastIndexOld Index of the last common value in `arr1`.\n// @returns {Number} result.lastIndexNew Index of the last common value in `arr2`.\nfunction findChangeBoundaryIndexes<T>( arr1: readonly T[], arr2: readonly T[], cmp: ( a: T, b: T ) => boolean ): ChangeIndexes {\n\t// Find the first difference between passed values.\n\tconst firstIndex = findFirstDifferenceIndex( arr1, arr2, cmp );\n\n\t// If arrays are equal return -1 indexes object.\n\tif ( firstIndex === -1 ) {\n\t\treturn { firstIndex: -1, lastIndexOld: -1, lastIndexNew: -1 };\n\t}\n\n\t// Remove the common part of each value and reverse them to make it simpler to find the last difference between them.\n\tconst oldArrayReversed = cutAndReverse( arr1, firstIndex );\n\tconst newArrayReversed = cutAndReverse( arr2, firstIndex );\n\n\t// Find the first difference between reversed values.\n\t// It should be treated as \"how many elements from the end the last difference occurred\".\n\t//\n\t// For example:\n\t//\n\t// \t\t\t\tinitial\t->\tafter cut\t-> reversed:\n\t// oldValue:\t'321ba'\t->\t'21ba'\t\t-> 'ab12'\n\t// newValue:\t'31xba'\t->\t'1xba'\t\t-> 'abx1'\n\t// lastIndex:\t\t\t\t\t\t\t-> 2\n\t//\n\t// So the last change occurred two characters from the end of the arrays.\n\tconst lastIndex = findFirstDifferenceIndex( oldArrayReversed, newArrayReversed, cmp );\n\n\t// Use `lastIndex` to calculate proper offset, starting from the beginning (`lastIndex` kind of starts from the end).\n\tconst lastIndexOld = arr1.length - lastIndex;\n\tconst lastIndexNew = arr2.length - lastIndex;\n\n\treturn { firstIndex, lastIndexOld, lastIndexNew };\n}\n\n// Returns a first index on which given arrays differ. If both arrays are the same, -1 is returned.\n//\n// @param {Array} arr1\n// @param {Array} arr2\n// @param {Function} cmp Comparator function.\n// @returns {Number}\nfunction findFirstDifferenceIndex<T>( arr1: readonly T[], arr2: readonly T[], cmp: ( a: T, b: T ) => boolean ): number {\n\tfor ( let i = 0; i < Math.max( arr1.length, arr2.length ); i++ ) {\n\t\tif ( arr1[ i ] === undefined || arr2[ i ] === undefined || !cmp( arr1[ i ], arr2[ i ] ) ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1; // Return -1 if arrays are equal.\n}\n\n// Returns a copy of the given array with `howMany` elements removed starting from the beginning and in reversed order.\n//\n// @param {Array} arr Array to be processed.\n// @param {Number} howMany How many elements from array beginning to remove.\n// @returns {Array} Shortened and reversed array.\nfunction cutAndReverse<T>( arr: readonly T[], howMany: number ): T[] {\n\treturn arr.slice( howMany ).reverse();\n}\n\n// Generates changes array based on change indexes from `findChangeBoundaryIndexes` function. This function will\n// generate array with 0 (no changes), 1 (deletion or insertion) or 2 records (insertion and deletion).\n//\n// @param {Array} newArray New array for which change indexes were calculated.\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @returns {Array.<module:utils/difftochanges~Change>} Array of changes compatible with\n// {@link module:utils/difftochanges~diffToChanges} format.\nfunction changeIndexesToChanges<T>( newArray: readonly T[], changeIndexes: ChangeIndexes ): Change<T>[] {\n\tconst result: Change<T>[] = [];\n\tconst { firstIndex, lastIndexOld, lastIndexNew } = changeIndexes;\n\n\t// Order operations as 'insert', 'delete' array to keep compatibility with {@link module:utils/difftochanges~diffToChanges}\n\t// in most cases. However, 'diffToChanges' does not stick to any order so in some cases\n\t// (for example replacing '12345' with 'abcd') it will generate 'delete', 'insert' order.\n\tif ( lastIndexNew - firstIndex > 0 ) {\n\t\tresult.push( {\n\t\t\tindex: firstIndex,\n\t\t\ttype: 'insert',\n\t\t\tvalues: newArray.slice( firstIndex, lastIndexNew )\n\t\t} );\n\t}\n\n\tif ( lastIndexOld - firstIndex > 0 ) {\n\t\tresult.push( {\n\t\t\tindex: firstIndex + ( lastIndexNew - firstIndex ), // Increase index of what was inserted.\n\t\t\ttype: 'delete',\n\t\t\thowMany: lastIndexOld - firstIndex\n\t\t} );\n\t}\n\n\treturn result;\n}\n\n// Generates array with set `equal|insert|delete` operations based on change indexes from `findChangeBoundaryIndexes` function.\n//\n// @param {Object} changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n// @param {Number} newLength Length of the new array on which `findChangeBoundaryIndexes` calculated change indexes.\n// @returns {Array.<module:utils/diff~DiffResult>} Array of changes compatible with {@link module:utils/diff~diff} format.\nfunction changeIndexesToAtomicChanges( changeIndexes: ChangeIndexes, newLength: number ): DiffResult[] {\n\tconst { firstIndex, lastIndexOld, lastIndexNew } = changeIndexes;\n\n\t// No changes.\n\tif ( firstIndex === -1 ) {\n\t\treturn Array( newLength ).fill( 'equal' );\n\t}\n\n\tlet result: DiffResult[] = [];\n\n\tif ( firstIndex > 0 ) {\n\t\tresult = result.concat( Array( firstIndex ).fill( 'equal' ) );\n\t}\n\n\tif ( lastIndexNew - firstIndex > 0 ) {\n\t\tresult = result.concat( Array( lastIndexNew - firstIndex ).fill( 'insert' ) );\n\t}\n\n\tif ( lastIndexOld - firstIndex > 0 ) {\n\t\tresult = result.concat( Array( lastIndexOld - firstIndex ).fill( 'delete' ) );\n\t}\n\n\tif ( lastIndexNew < newLength ) {\n\t\tresult = result.concat( Array( newLength - lastIndexNew ).fill( 'equal' ) );\n\t}\n\n\treturn result;\n}\n\n// Indexes of the first and the last change in the given arrays.\ninterface ChangeIndexes {\n\tfirstIndex: number;\n\tlastIndexOld: number;\n\tlastIndexNew: number;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/first\n */\n\n/**\n * Returns first item of the given `iterator`.\n *\n * @param {Iterator.<*>} iterator\n * @returns {*}\n */\nexport default function first<T>( iterator: Iterator<T> ): T | null {\n\tconst iteratorItem = iterator.next();\n\n\tif ( iteratorItem.done ) {\n\t\treturn null;\n\t}\n\n\treturn iteratorItem.value;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* global setTimeout, clearTimeout */\n\n/* eslint-disable new-cap */\n\n/**\n * @module utils/focustracker\n */\n\nimport DomEmitterMixin from './dom/emittermixin';\nimport { Observable } from './observablemixin';\nimport CKEditorError from './ckeditorerror';\n\n/**\n * Allows observing a group of `Element`s whether at least one of them is focused.\n *\n * Used by the {@link module:core/editor/editor~Editor} in order to track whether the focus is still within the application,\n * or were used outside of its UI.\n *\n * **Note** `focus` and `blur` listeners use event capturing, so it is only needed to register wrapper `Element`\n * which contain other `focusable` elements. But note that this wrapper element has to be focusable too\n * (have e.g. `tabindex=\"-1\"`).\n *\n * Check out the {@glink framework/guides/deep-dive/ui/focus-tracking \"Deep dive into focus tracking\" guide} to learn more.\n *\n * @mixes module:utils/dom/emittermixin~EmitterMixin\n * @mixes module:utils/observablemixin~ObservableMixin\n */\nexport default class FocusTracker extends DomEmitterMixin( Observable ) {\n\t/**\n\t * True when one of the registered elements is focused.\n\t *\n\t * @readonly\n\t * @observable\n\t * @member {Boolean}\n\t */\n\tdeclare public isFocused: boolean;\n\n\t/**\n\t * The currently focused element.\n\t *\n\t * While {@link #isFocused `isFocused`} remains `true`, the focus can\n\t * move between different UI elements. This property tracks those\n\t * elements and tells which one is currently focused.\n\t *\n\t * @readonly\n\t * @observable\n\t * @member {Element|null}\n\t */\n\tdeclare public focusedElement: Element | null;\n\n\t/**\n\t * List of registered elements.\n\t *\n\t * @private\n\t * @member {Set.<Element>}\n\t */\n\tprivate _elements: Set<Element>;\n\n\t/**\n\t * Event loop timeout.\n\t *\n\t * @private\n\t * @member {Number}\n\t */\n\tprivate _nextEventLoopTimeout: ReturnType<typeof setTimeout> | null;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.set( 'isFocused', false );\n\t\tthis.set( 'focusedElement', null );\n\n\t\tthis._elements = new Set();\n\t\tthis._nextEventLoopTimeout = null;\n\t}\n\n\t/**\n\t * Starts tracking the specified element.\n\t *\n\t * @param {Element} element\n\t */\n\tpublic add( element: Element ): void {\n\t\tif ( this._elements.has( element ) ) {\n\t\t\t/**\n\t\t\t * This element is already tracked by {@link module:utils/focustracker~FocusTracker}.\n\t\t\t *\n\t\t\t * @error focustracker-add-element-already-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'focustracker-add-element-already-exist', this );\n\t\t}\n\n\t\tthis.listenTo( element, 'focus', () => this._focus( element ), { useCapture: true } );\n\t\tthis.listenTo( element, 'blur', () => this._blur(), { useCapture: true } );\n\t\tthis._elements.add( element );\n\t}\n\n\t/**\n\t * Stops tracking the specified element and stops listening on this element.\n\t *\n\t * @param {Element} element\n\t */\n\tpublic remove( element: Element ): void {\n\t\tif ( element === this.focusedElement ) {\n\t\t\tthis._blur();\n\t\t}\n\n\t\tif ( this._elements.has( element ) ) {\n\t\t\tthis.stopListening( element );\n\t\t\tthis._elements.delete( element );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys the focus tracker by:\n\t * - Disabling all event listeners attached to tracked elements.\n\t * - Removing all tracked elements that were previously added.\n\t */\n\tpublic destroy(): void {\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Stores currently focused element and set {#isFocused} as `true`.\n\t *\n\t * @private\n\t * @param {Element} element Element which has been focused.\n\t */\n\tprivate _focus( element: Element ): void {\n\t\tclearTimeout( this._nextEventLoopTimeout! );\n\n\t\tthis.focusedElement = element;\n\t\tthis.isFocused = true;\n\t}\n\n\t/**\n\t * Clears currently focused element and set {@link #isFocused} as `false`.\n\t * This method uses `setTimeout` to change order of fires `blur` and `focus` events.\n\t *\n\t * @private\n\t * @fires blur\n\t */\n\tprivate _blur(): void {\n\t\tclearTimeout( this._nextEventLoopTimeout! );\n\n\t\tthis._nextEventLoopTimeout = setTimeout( () => {\n\t\t\tthis.focusedElement = null;\n\t\t\tthis.isFocused = false;\n\t\t}, 0 );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils\n */\n\nexport { default as env } from './env';\nexport { default as diff } from './diff';\n\nexport { default as mix } from './mix';\nexport { default as EmitterMixin } from './emittermixin';\nexport { default as ObservableMixin } from './observablemixin';\n\nexport { default as CKEditorError, logError, logWarning } from './ckeditorerror';\n\nexport { default as ElementReplacer } from './elementreplacer';\n\nexport { default as createElement } from './dom/createelement';\nexport { default as DomEmitterMixin } from './dom/emittermixin';\nexport { default as global } from './dom/global';\nexport { default as getDataFromElement } from './dom/getdatafromelement';\nexport { default as Rect } from './dom/rect';\nexport { default as ResizeObserver } from './dom/resizeobserver';\nexport { default as setDataInElement } from './dom/setdatainelement';\nexport { default as toUnit } from './dom/tounit';\nexport { default as isVisible } from './dom/isvisible';\nexport * from './dom/scroll';\n\nexport * from './keyboard';\nexport * from './language';\nexport { default as Locale } from './locale';\nexport { default as Collection } from './collection';\nexport { default as first } from './first';\nexport { default as FocusTracker } from './focustracker';\nexport { default as KeystrokeHandler } from './keystrokehandler';\nexport { default as toArray } from './toarray';\nexport { default as toMap } from './tomap';\nexport { default as priorities } from './priorities';\n\nexport { default as uid } from './uid';\n\nexport { default as version } from './version';\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport priorities, { type PriorityString } from './priorities';\n\n/**\n * @module utils/inserttopriorityarray\n */\n\n/**\n * The priority object descriptor.\n *\n *\t\tconst objectWithPriority = {\n *\t\t\tpriority: 'high'\n *\t\t}\n *\n * @typedef {Object} module:utils/inserttopriorityarray~ObjectWithPriority\n *\n * @property {module:utils/priorities~PriorityString|Number} priority Priority of the object.\n */\nexport interface ObjectWithPriority {\n\tpriority: PriorityString | number;\n}\n\n/**\n * Inserts any object with priority at correct index by priority so registered objects are always sorted from highest to lowest priority.\n *\n * @param {Array.<module:utils/inserttopriorityarray~ObjectWithPriority>} objects Array of objects with priority to insert object to.\n * @param {module:utils/inserttopriorityarray~ObjectWithPriority} objectToInsert Object with `priority` property.\n */\nexport default function insertToPriorityArray<T extends ObjectWithPriority>( objects: T[], objectToInsert: T ): void {\n\tconst priority = priorities.get( objectToInsert.priority );\n\n\tfor ( let i = 0; i < objects.length; i++ ) {\n\t\tif ( priorities.get( objects[ i ].priority ) < priority ) {\n\t\t\tobjects.splice( i, 0, objectToInsert );\n\n\t\t\treturn;\n\t\t}\n\t}\n\n\tobjects.push( objectToInsert );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/isiterable\n */\n\n/**\n * Checks if value implements iterator interface.\n *\n * @param {*} value The value to check.\n * @returns {Boolean} True if value implements iterator interface.\n */\nexport default function isIterable( value: any ): value is Iterable<any> {\n\treturn !!( value && value[ Symbol.iterator ] );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * A set of utilities related to keyboard support.\n *\n * @module utils/keyboard\n */\n\nimport type { LanguageDirection } from './language';\nimport CKEditorError from './ckeditorerror';\nimport env from './env';\n\nconst modifiersToGlyphsMac = {\n\tctrl: '⌃',\n\tcmd: '⌘',\n\talt: '⌥',\n\tshift: '⇧'\n} as const;\n\nconst modifiersToGlyphsNonMac = {\n\tctrl: 'Ctrl+',\n\talt: 'Alt+',\n\tshift: 'Shift+'\n} as const;\n\n/**\n * An object with `keyName => keyCode` pairs for a set of known keys.\n *\n * Contains:\n *\n * * `a-z`,\n * * `0-9`,\n * * `f1-f12`,\n * * `` ` ``, `-`, `=`, `[`, `]`, `;`, `'`, `,`, `.`, `/`, `\\`,\n * * `arrow(left|up|right|bottom)`,\n * * `backspace`, `delete`, `enter`, `esc`, `tab`,\n * * `ctrl`, `cmd`, `shift`, `alt`.\n */\nexport const keyCodes = generateKnownKeyCodes();\n\nconst keyCodeNames = Object.fromEntries(\n\tObject.entries( keyCodes ).map( ( [ name, code ] ) => [ code, name.charAt( 0 ).toUpperCase() + name.slice( 1 ) ] )\n);\n\n/**\n * Converts a key name or {@link module:utils/keyboard~KeystrokeInfo keystroke info} into a key code.\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * @param {String|module:utils/keyboard~KeystrokeInfo} A key name (see {@link module:utils/keyboard~keyCodes})\n * or a keystroke data object.\n * @returns {Number} Key or keystroke code.\n */\nexport function getCode( key: string | Readonly<KeystrokeInfo> ): number {\n\tlet keyCode: number | undefined;\n\n\tif ( typeof key == 'string' ) {\n\t\tkeyCode = keyCodes[ key.toLowerCase() ];\n\n\t\tif ( !keyCode ) {\n\t\t\t/**\n\t\t\t * Unknown key name. Only key names included in the {@link module:utils/keyboard~keyCodes} can be used.\n\t\t\t *\n\t\t\t * @error keyboard-unknown-key\n\t\t\t * @param {String} key\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'keyboard-unknown-key', null, { key } );\n\t\t}\n\t} else {\n\t\tkeyCode = key.keyCode +\n\t\t\t( key.altKey ? keyCodes.alt : 0 ) +\n\t\t\t( key.ctrlKey ? keyCodes.ctrl : 0 ) +\n\t\t\t( key.shiftKey ? keyCodes.shift : 0 ) +\n\t\t\t( key.metaKey ? keyCodes.cmd : 0 );\n\t}\n\n\treturn keyCode;\n}\n\n/**\n * Parses the keystroke and returns a keystroke code that will match the code returned by\n * {@link module:utils/keyboard~getCode} for the corresponding {@link module:utils/keyboard~KeystrokeInfo keystroke info}.\n *\n * The keystroke can be passed in two formats:\n *\n * * as a single string – e.g. `ctrl + A`,\n * * as an array of {@link module:utils/keyboard~keyCodes known key names} and key codes – e.g.:\n *   * `[ 'ctrl', 32 ]` (ctrl + space),\n *   * `[ 'ctrl', 'a' ]` (ctrl + A).\n *\n * Note: Key names are matched with {@link module:utils/keyboard~keyCodes} in a case-insensitive way.\n *\n * Note: Only keystrokes with a single non-modifier key are supported (e.g. `ctrl+A` is OK, but `ctrl+A+B` is not).\n *\n * Note: On macOS, keystroke handling is translating the `Ctrl` key to the `Cmd` key and handling only that keystroke.\n * For example, a registered keystroke `Ctrl+A` will be translated to `Cmd+A` on macOS. To disable the translation of some keystroke,\n * use the forced modifier: `Ctrl!+A` (note the exclamation mark).\n *\n * @param {String|Array.<Number|String>} keystroke The keystroke definition.\n * @returns {Number} Keystroke code.\n */\nexport function parseKeystroke( keystroke: string | readonly ( number | string )[] ): number {\n\tif ( typeof keystroke == 'string' ) {\n\t\tkeystroke = splitKeystrokeText( keystroke );\n\t}\n\n\treturn keystroke\n\t\t.map( key => ( typeof key == 'string' ) ? getEnvKeyCode( key ) : key )\n\t\t.reduce( ( key, sum ) => sum + key, 0 );\n}\n\n/**\n * Translates any keystroke string text like `\"Ctrl+A\"` to an\n * environment–specific keystroke, i.e. `\"⌘A\"` on macOS.\n *\n * @param {String} keystroke The keystroke text.\n * @returns {String} The keystroke text specific for the environment.\n */\nexport function getEnvKeystrokeText( keystroke: string ): string {\n\tlet keystrokeCode = parseKeystroke( keystroke );\n\n\tconst modifiersToGlyphs = Object.entries( env.isMac ? modifiersToGlyphsMac : modifiersToGlyphsNonMac );\n\n\tconst modifiers = modifiersToGlyphs.reduce( ( modifiers, [ name, glyph ] ) => {\n\t\t// Modifier keys are stored as a bit mask so extract those from the keystroke code.\n\t\tif ( ( keystrokeCode & keyCodes[ name ] ) != 0 ) {\n\t\t\tkeystrokeCode &= ~keyCodes[ name ];\n\t\t\tmodifiers += glyph;\n\t\t}\n\n\t\treturn modifiers;\n\t}, '' );\n\n\treturn modifiers + ( keystrokeCode ? keyCodeNames[ keystrokeCode ] : '' );\n}\n\n/**\n * Returns `true` if the provided key code represents one of the arrow keys.\n *\n * @param {Number} keyCode A key code as in {@link module:utils/keyboard~KeystrokeInfo#keyCode}.\n * @returns {Boolean}\n */\nexport function isArrowKeyCode( keyCode: number ): boolean {\n\treturn keyCode == keyCodes.arrowright ||\n\t\tkeyCode == keyCodes.arrowleft ||\n\t\tkeyCode == keyCodes.arrowup ||\n\t\tkeyCode == keyCodes.arrowdown;\n}\n\n/**\n * String representing a direction of an arrow key kode.\n *\n * @typedef {'left'|'up'|'right'|'down'} module:utils/keyboard~ArrowKeyCodeDirection\n */\nexport type ArrowKeyCodeDirection = 'left' | 'up' | 'right' | 'down';\n\n/**\n * Returns the direction in which the {@link module:engine/model/documentselection~DocumentSelection selection}\n * will move when the provided arrow key code is pressed considering the language direction of the editor content.\n *\n * For instance, in right–to–left (RTL) content languages, pressing the left arrow means moving the selection right (forward)\n * in the model structure. Similarly, pressing the right arrow moves the selection left (backward).\n *\n * @param {Number} keyCode A key code as in {@link module:utils/keyboard~KeystrokeInfo#keyCode}.\n * @param {module:utils/language~LanguageDirection} contentLanguageDirection The content language direction, corresponding to\n * {@link module:utils/locale~Locale#contentLanguageDirection}.\n * @returns {module:utils/keyboard~ArrowKeyCodeDirection|undefined} Localized arrow direction or `undefined` for non-arrow key codes.\n */\nexport function getLocalizedArrowKeyCodeDirection(\n\tkeyCode: number,\n\tcontentLanguageDirection: LanguageDirection\n): ArrowKeyCodeDirection | undefined {\n\tconst isLtrContent = contentLanguageDirection === 'ltr';\n\n\tswitch ( keyCode ) {\n\t\tcase keyCodes.arrowleft:\n\t\t\treturn isLtrContent ? 'left' : 'right';\n\n\t\tcase keyCodes.arrowright:\n\t\t\treturn isLtrContent ? 'right' : 'left';\n\n\t\tcase keyCodes.arrowup:\n\t\t\treturn 'up';\n\n\t\tcase keyCodes.arrowdown:\n\t\t\treturn 'down';\n\t}\n}\n\n// Converts a key name to the key code with mapping based on the env.\n//\n// See: {@link module:utils/keyboard~getCode}.\n//\n// @param {String} key The key name (see {@link module:utils/keyboard~keyCodes}).\n// @returns {Number} Key code.\nfunction getEnvKeyCode( key: string ): number {\n\t// Don't remap modifier key for forced modifiers.\n\tif ( key.endsWith( '!' ) ) {\n\t\treturn getCode( key.slice( 0, -1 ) );\n\t}\n\n\tconst code = getCode( key );\n\n\treturn env.isMac && code == keyCodes.ctrl ? keyCodes.cmd : code;\n}\n\n/**\n * Determines if the provided key code moves the {@link module:engine/model/documentselection~DocumentSelection selection}\n * forward or backward considering the language direction of the editor content.\n *\n * For instance, in right–to–left (RTL) languages, pressing the left arrow means moving forward\n * in the model structure. Similarly, pressing the right arrow moves the selection backward.\n *\n * @param {Number} keyCode A key code as in {@link module:utils/keyboard~KeystrokeInfo#keyCode}.\n * @param {module:utils/language~LanguageDirection} contentLanguageDirection The content language direction, corresponding to\n * {@link module:utils/locale~Locale#contentLanguageDirection}.\n * @returns {Boolean}\n */\nexport function isForwardArrowKeyCode(\n\tkeyCode: number,\n\tcontentLanguageDirection: LanguageDirection\n): boolean {\n\tconst localizedKeyCodeDirection = getLocalizedArrowKeyCodeDirection( keyCode, contentLanguageDirection );\n\n\treturn localizedKeyCodeDirection === 'down' || localizedKeyCodeDirection === 'right';\n}\n\nfunction generateKnownKeyCodes(): { readonly [ keyCode: string ]: number } {\n\tconst keyCodes: { [keyCode: string]: number } = {\n\t\tarrowleft: 37,\n\t\tarrowup: 38,\n\t\tarrowright: 39,\n\t\tarrowdown: 40,\n\t\tbackspace: 8,\n\t\tdelete: 46,\n\t\tenter: 13,\n\t\tspace: 32,\n\t\tesc: 27,\n\t\ttab: 9,\n\n\t\t// The idea about these numbers is that they do not collide with any real key codes, so we can use them\n\t\t// like bit masks.\n\t\tctrl: 0x110000,\n\t\tshift: 0x220000,\n\t\talt: 0x440000,\n\t\tcmd: 0x880000\n\t};\n\n\t// a-z\n\tfor ( let code = 65; code <= 90; code++ ) {\n\t\tconst letter = String.fromCharCode( code );\n\n\t\tkeyCodes[ letter.toLowerCase() ] = code;\n\t}\n\n\t// 0-9\n\tfor ( let code = 48; code <= 57; code++ ) {\n\t\tkeyCodes[ code - 48 ] = code;\n\t}\n\n\t// F1-F12\n\tfor ( let code = 112; code <= 123; code++ ) {\n\t\tkeyCodes[ 'f' + ( code - 111 ) ] = code;\n\t}\n\n\t// other characters\n\tfor ( const char of '`-=[];\\',./\\\\' ) {\n\t\tkeyCodes[ char ] = char.charCodeAt( 0 );\n\t}\n\n\treturn keyCodes;\n}\n\nfunction splitKeystrokeText( keystroke: string ): string[] {\n\treturn keystroke.split( '+' ).map( key => key.trim() );\n}\n\n/**\n * Information about the keystroke.\n *\n * @interface\n */\nexport interface KeystrokeInfo {\n\n\t/**\n\t * The [key code](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode).\n\t *\n\t * @member {Number}\n\t */\n\tkeyCode: number;\n\n\t/**\n\t * Whether the <kbd>Alt</kbd> modifier was pressed.\n\t *\n\t * @member {Boolean}\n\t */\n\taltKey: boolean;\n\n\t/**\n\t * Whether the <kbd>Cmd</kbd> modifier was pressed.\n\t *\n\t * @member {Boolean} module:utils/keyboard~KeystrokeInfo#metaKey\n\t */\n\tmetaKey: boolean;\n\n\t/**\n\t * Whether the <kbd>Ctrl</kbd> modifier was pressed.\n\t *\n\t * @member {Boolean}\n\t */\n\tctrlKey: boolean;\n\n\t/**\n\t * Whether the <kbd>Shift</kbd> modifier was pressed.\n\t *\n\t * @member {Boolean}\n\t */\n\tshiftKey: boolean;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/keystrokehandler\n */\n\nimport DomEmitterMixin, { type Emitter as DomEmitter } from './dom/emittermixin';\nimport type { Emitter } from './emittermixin';\nimport { getCode, parseKeystroke, type KeystrokeInfo } from './keyboard';\nimport type { PriorityString } from './priorities';\n\n/**\n * Keystroke handler allows registering callbacks for given keystrokes.\n *\n * The most frequent use of this class is through the {@link module:core/editor/editor~Editor#keystrokes `editor.keystrokes`}\n * property. It allows listening to keystrokes executed in the editing view:\n *\n *\t\teditor.keystrokes.set( 'Ctrl+A', ( keyEvtData, cancel ) => {\n *\t\t\tconsole.log( 'Ctrl+A has been pressed' );\n *\t\t\tcancel();\n *\t\t} );\n *\n * However, this utility class can be used in various part of the UI. For instance, a certain {@link module:ui/view~View}\n * can use it like this:\n *\n *\t\tclass MyView extends View {\n *\t\t\tconstructor() {\n *\t\t\t\tthis.keystrokes = new KeystrokeHandler();\n *\n * \t\t\t\tthis.keystrokes.set( 'tab', handleTabKey );\n *\t\t\t}\n *\n *\t\t\trender() {\n *\t\t\t\tsuper.render();\n *\n *\t\t\t\tthis.keystrokes.listenTo( this.element );\n *\t\t\t}\n *\t\t}\n *\n * That keystroke handler will listen to `keydown` events fired in this view's main element.\n *\n */\nexport default class KeystrokeHandler {\n\t/**\n\t * Listener used to listen to events for easier keystroke handler destruction.\n\t *\n\t * @protected\n\t * @readonly\n\t * @member {module:utils/dom/emittermixin~Emitter}\n\t */\n\tprivate readonly _listener: DomEmitter;\n\n\t/**\n\t * Creates an instance of the keystroke handler.\n\t */\n\tconstructor() {\n\t\tthis._listener = Object.create( DomEmitterMixin );\n\t}\n\n\t/**\n\t * Starts listening for `keydown` events from a given emitter.\n\t *\n\t * @param {module:utils/emittermixin~Emitter|HTMLElement|Window} emitter\n\t */\n\tpublic listenTo( emitter: Emitter | HTMLElement | Window ): void {\n\t\t// The #_listener works here as a kind of dispatcher. It groups the events coming from the same\n\t\t// keystroke so the listeners can be attached to them with different priorities.\n\t\t//\n\t\t// E.g. all the keystrokes with the `keyCode` of 42 coming from the `emitter` are propagated\n\t\t// as a `_keydown:42` event by the `_listener`. If there's a callback created by the `set`\n\t\t// method for this 42 keystroke, it listens to the `_listener#_keydown:42` event only and interacts\n\t\t// only with other listeners of this particular event, thus making it possible to prioritize\n\t\t// the listeners and safely cancel execution, when needed. Instead of duplicating the Emitter logic,\n\t\t// the KeystrokeHandler re–uses it to do its job.\n\t\tthis._listener.listenTo( emitter as HTMLElement | Window, 'keydown', ( evt, keyEvtData ) => {\n\t\t\tthis._listener.fire( '_keydown:' + getCode( keyEvtData ), keyEvtData );\n\t\t} );\n\t}\n\n\t/**\n\t * Registers a handler for the specified keystroke.\n\t *\n\t * @param {String|Array.<String|Number>} keystroke Keystroke defined in a format accepted by\n\t * the {@link module:utils/keyboard~parseKeystroke} function.\n\t * @param {Function} callback A function called with the\n\t * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n\t * a helper function to call both `preventDefault()` and `stopPropagation()` on the underlying event.\n\t * @param {Object} [options={}] Additional options.\n\t * @param {module:utils/priorities~PriorityString|Number} [options.priority='normal'] The priority of the keystroke\n\t * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n\t * are called in the order they were added.\n\t */\n\tpublic set(\n\t\tkeystroke: string | readonly ( string | number )[],\n\t\tcallback: ( ev: KeyboardEvent, cancel: () => void ) => void,\n\t\toptions: { readonly priority?: PriorityString | number } = {}\n\t): void {\n\t\tconst keyCode = parseKeystroke( keystroke );\n\t\tconst priority = options.priority;\n\n\t\t// Execute the passed callback on KeystrokeHandler#_keydown.\n\t\t// TODO: https://github.com/ckeditor/ckeditor5-utils/issues/144\n\t\tthis._listener.listenTo( this._listener, '_keydown:' + keyCode, ( evt, keyEvtData: KeyboardEvent ) => {\n\t\t\tcallback( keyEvtData, () => {\n\t\t\t\t// Stop the event in the DOM: no listener in the web page\n\t\t\t\t// will be triggered by this event.\n\t\t\t\tkeyEvtData.preventDefault();\n\t\t\t\tkeyEvtData.stopPropagation();\n\n\t\t\t\t// Stop the event in the KeystrokeHandler: no more callbacks\n\t\t\t\t// will be executed for this keystroke.\n\t\t\t\tevt.stop();\n\t\t\t} );\n\n\t\t\t// Mark this keystroke as handled by the callback. See: #press.\n\t\t\tevt.return = true;\n\t\t}, { priority } );\n\t}\n\n\t/**\n\t * Triggers a keystroke handler for a specified key combination, if such a keystroke was {@link #set defined}.\n\t *\n\t * @param {module:engine/view/observer/keyobserver~KeyEventData} keyEvtData Key event data.\n\t * @returns {Boolean} Whether the keystroke was handled.\n\t */\n\tpublic press( keyEvtData: Readonly<KeystrokeInfo> ): boolean {\n\t\treturn !!this._listener.fire( '_keydown:' + getCode( keyEvtData ), keyEvtData );\n\t}\n\n\t/**\n\t * Destroys the keystroke handler.\n\t */\n\tpublic destroy(): void {\n\t\tthis._listener.stopListening();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/language\n */\n\n/**\n * String representing a language direction.\n *\n * @typedef {'ltr'|'rtl'} module:utils/language~LanguageDirection\n */\nexport type LanguageDirection = 'ltr' | 'rtl';\n\nconst RTL_LANGUAGE_CODES = [\n\t'ar', 'ara', // Arabic\n\t'fa', 'per', 'fas', // Persian\n\t'he', 'heb', // Hebrew\n\t'ku', 'kur', // Kurdish\n\t'ug', 'uig' // Uighur, Uyghur\n];\n\n/**\n * Helps determine whether a language text direction is LTR or RTL.\n *\n * @param {String} languageCode The ISO 639-1 or ISO 639-2 language code.\n * @returns {module:utils/language~LanguageDirection}\n */\nexport function getLanguageDirection( languageCode: string ): LanguageDirection {\n\treturn RTL_LANGUAGE_CODES.includes( languageCode ) ? 'rtl' : 'ltr';\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/locale\n */\n\n/* globals console */\n\nimport toArray from './toarray';\nimport { _translate, type Message } from './translation-service';\nimport { getLanguageDirection, type LanguageDirection } from './language';\n\n/**\n * Represents the localization services.\n */\nexport default class Locale {\n\t/**\n\t * The editor UI language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t *\n\t * If the {@link #contentLanguage content language} was not specified in the `Locale` constructor,\n\t * it also defines the language of the content.\n\t *\n\t * @readonly\n\t * @member {String}\n\t */\n\tpublic readonly uiLanguage: string;\n\n\t/**\n\t * Text direction of the {@link #uiLanguage editor UI language}. Either `'ltr'` or `'rtl'`.\n\t *\n\t * @readonly\n\t * @member {String}\n\t */\n\tpublic readonly uiLanguageDirection: LanguageDirection;\n\n\t/**\n\t * The editor content language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t *\n\t * Usually the same as the {@link #uiLanguage editor language}, it can be customized by passing an optional\n\t * argument to the `Locale` constructor.\n\t *\n\t * @readonly\n\t * @member {String}\n\t */\n\tpublic readonly contentLanguage: string;\n\n\t/**\n\t * Text direction of the {@link #contentLanguage editor content language}.\n\t *\n\t * If the content language was passed directly to the `Locale` constructor, this property represents the\n\t * direction of that language.\n\t *\n\t * If the {@link #contentLanguage editor content language} was derived from the {@link #uiLanguage editor language},\n\t * the content language direction is the same as the {@link #uiLanguageDirection UI language direction}.\n\t *\n\t * The value is either `'ltr'` or `'rtl'`.\n\t *\n\t * @readonly\n\t * @member {String}\n\t */\n\tpublic readonly contentLanguageDirection: LanguageDirection;\n\n\t/**\n\t * Translates the given message to the {@link #uiLanguage}. This method is also available in\n\t * {@link module:core/editor/editor~Editor#t `Editor`} and {@link module:ui/view~View#t `View`}.\n\t *\n\t * This method's context is statically bound to the `Locale` instance and **should always be called as a function**:\n\t *\n\t *\t\tconst t = locale.t;\n\t *\t\tt( 'Label' );\n\t *\n\t * The message can be either a string or an object implementing the {@link module:utils/translation-service~Message} interface.\n\t *\n\t * The message may contain placeholders (`%<index>`) for value(s) that are passed as a `values` parameter.\n\t * For an array of values, the `%<index>` will be changed to an element of that array at the given index.\n\t * For a single value passed as the second argument, only the `%0` placeholders will be changed to the provided value.\n\t *\n\t *\t\tt( 'Created file \"%0\" in %1ms.', [ fileName, timeTaken ] );\n\t * \t\tt( 'Created file \"%0\", fileName );\n\t *\n\t * The message supports plural forms. To specify the plural form, use the `plural` property. Singular or plural form\n\t * will be chosen depending on the first value from the passed `values`. The value of the `plural` property is used\n\t * as a default plural translation when the translation for the target language is missing.\n\t *\n\t *\t\tt( { string: 'Add a space', plural: 'Add %0 spaces' }, 1 ); // 'Add a space' for the English language.\n\t *\t\tt( { string: 'Add a space', plural: 'Add %0 spaces' }, 5 ); // 'Add 5 spaces' for the English language.\n\t *\t\tt( { string: '%1 a space', plural: '%1 %0 spaces' }, [ 2, 'Add' ] ); // 'Add 2 spaces' for the English language.\n\t *\n\t * \t\tt( { string: 'Add a space', plural: 'Add %0 spaces' }, 1 ); // 'Dodaj spację' for the Polish language.\n\t *\t\tt( { string: 'Add a space', plural: 'Add %0 spaces' }, 5 ); // 'Dodaj 5 spacji' for the Polish language.\n\t *\t\tt( { string: '%1 a space', plural: '%1 %0 spaces' }, [ 2, 'Add' ] ); // 'Dodaj 2 spacje' for the Polish language.\n\t *\n\t *  * The message should provide an ID using the `id` property when the message strings are not unique and their\n\t * translations should be different.\n\t *\n\t *\t\ttranslate( 'en', { string: 'image', id: 'ADD_IMAGE' } );\n\t *\t\ttranslate( 'en', { string: 'image', id: 'AN_IMAGE' } );\n\t *\n\t * @method\n\t * @param {String|module:utils/translation-service~Message} message A message that will be localized (translated).\n\t * @param {String|Number|Array.<String|Number>} [values] A value or an array of values that will fill message placeholders.\n\t * For messages supporting plural forms the first value will determine the plural form.\n\t * @returns {String}\n\t */\n\tpublic readonly t: ( message: string | Message, values?: number | string | readonly ( number | string )[] ) => string;\n\n\t/**\n\t * Creates a new instance of the locale class. Learn more about\n\t * {@glink features/ui-language configuring the language of the editor}.\n\t *\n\t * @param {Object} [options] Locale configuration.\n\t * @param {String} [options.uiLanguage='en'] The editor UI language code in the\n\t * [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. See {@link #uiLanguage}.\n\t * @param {String} [options.contentLanguage] The editor content language code in the\n\t * [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format. If not specified, the same as `options.language`.\n\t * See {@link #contentLanguage}.\n\t */\n\tconstructor( options: { readonly uiLanguage?: string; readonly contentLanguage?: string } = {} ) {\n\t\tthis.uiLanguage = options.uiLanguage || 'en';\n\t\tthis.contentLanguage = options.contentLanguage || this.uiLanguage;\n\t\tthis.uiLanguageDirection = getLanguageDirection( this.uiLanguage );\n\t\tthis.contentLanguageDirection = getLanguageDirection( this.contentLanguage );\n\n\t\tthis.t = ( message, values ) => this._t( message, values );\n\t}\n\n\t/**\n\t * The editor UI language code in the [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format.\n\t *\n\t * **Note**: This property was deprecated. Please use {@link #uiLanguage} and {@link #contentLanguage}\n\t * properties instead.\n\t *\n\t * @deprecated\n\t * @member {String}\n\t */\n\tpublic get language(): string {\n\t\t/**\n\t\t * The {@link module:utils/locale~Locale#language `Locale#language`} property was deprecated and will\n\t\t * be removed in the near future. Please use the {@link #uiLanguage} and {@link #contentLanguage} properties instead.\n\t\t *\n\t\t * @error locale-deprecated-language-property\n\t\t */\n\t\tconsole.warn(\n\t\t\t'locale-deprecated-language-property: ' +\n\t\t\t'The Locale#language property has been deprecated and will be removed in the near future. ' +\n\t\t\t'Please use #uiLanguage and #contentLanguage properties instead.' );\n\n\t\treturn this.uiLanguage;\n\t}\n\n\t/**\n\t * An unbound version of the {@link #t} method.\n\t *\n\t * @private\n\t * @param {String|module:utils/translation-service~Message} message\n\t * @param {Number|String|Array.<Number|String>} [values]\n\t * @returns {String}\n\t */\n\tprivate _t( message: string | Message, values: number | string | readonly ( number | string )[] = [] ): string {\n\t\tvalues = toArray( values );\n\n\t\tif ( typeof message === 'string' ) {\n\t\t\tmessage = { string: message };\n\t\t}\n\n\t\tconst hasPluralForm = !!message.plural;\n\t\tconst quantity = hasPluralForm ? values[ 0 ] as number : 1;\n\n\t\tconst translatedString = _translate( this.uiLanguage, message, quantity );\n\n\t\treturn interpolateString( translatedString, values );\n\t}\n}\n\n// Fills the `%0, %1, ...` string placeholders with values.\nfunction interpolateString( string: string, values: readonly any[] ): string {\n\treturn string.replace( /%(\\d+)/g, ( match, index ) => {\n\t\treturn ( index < values.length ) ? values[ index ] : match;\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/mix\n */\n\n/**\n * Copies enumerable properties and symbols from the objects given as 2nd+ parameters to the\n * prototype of first object (a constructor).\n *\n *\t\tclass Editor {\n *\t\t\t...\n *\t\t}\n *\n *\t\tconst SomeMixin = {\n *\t\t\ta() {\n *\t\t\t\treturn 'a';\n *\t\t\t}\n *\t\t};\n *\n *\t\tmix( Editor, SomeMixin, ... );\n *\n *\t\tnew Editor().a(); // -> 'a'\n *\n * Note: Properties which already exist in the base class will not be overriden.\n *\n * @depreciated Use mixin pattern, see: https://www.typescriptlang.org/docs/handbook/mixins.html.\n * @param {Function} [baseClass] Class which prototype will be extended.\n * @param {Object} [...mixins] Objects from which to get properties.\n */\nexport default function mix( baseClass: Function, ...mixins: object[] ): void {\n\tmixins.forEach( mixin => {\n\t\tconst propertyNames: ( string | symbol )[] = Object.getOwnPropertyNames( mixin );\n\t\tconst propertySymbols = Object.getOwnPropertySymbols( mixin );\n\n\t\tpropertyNames.concat( propertySymbols ).forEach( key => {\n\t\t\tif ( key in baseClass.prototype ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( typeof mixin == 'function' && ( key == 'length' || key == 'name' || key == 'prototype' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst sourceDescriptor = Object.getOwnPropertyDescriptor( mixin, key )!;\n\t\t\tsourceDescriptor.enumerable = false;\n\n\t\t\tObject.defineProperty( baseClass.prototype, key, sourceDescriptor );\n\t\t} );\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/objecttomap\n */\n\n/**\n * Transforms object to map.\n *\n *\t\tconst map = objectToMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap.get( 'foo' ); // 1\n *\n * **Note**: For mixed data (`Object` or `Iterable`) there's a dedicated {@link module:utils/tomap~toMap} function.\n *\n * @param {Object|null} obj Object to transform.\n * @returns {Map} Map created from object.\n */\nexport default function objectToMap<T>( obj: { readonly [ key: string ]: T } | null | undefined ): Map<string, T> {\n\tconst map = new Map<string, T>();\n\n\tfor ( const key in obj ) {\n\t\tmap.set( key, obj[ key ] );\n\t}\n\n\treturn map;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* eslint-disable @typescript-eslint/unified-signatures, new-cap */\n\n/**\n * @module utils/observablemixin\n */\n\nimport { Emitter } from './emittermixin';\nimport CKEditorError from './ckeditorerror';\nimport { isObject } from 'lodash-es';\n\nconst observablePropertiesSymbol = Symbol( 'observableProperties' );\nconst boundObservablesSymbol = Symbol( 'boundObservables' );\nconst boundPropertiesSymbol = Symbol( 'boundProperties' );\n\nconst decoratedMethods = Symbol( 'decoratedMethods' );\nconst decoratedOriginal = Symbol( 'decoratedOriginal' );\n\n/**\n * A mixin that injects the \"observable properties\" and data binding functionality described in the\n * {@link ~Observable} interface.\n *\n * Read more about the concept of observables in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables Event system and observables}\n * section of the {@glink framework/guides/architecture/core-editor-architecture Core editor architecture} guide,\n * * {@glink framework/guides/deep-dive/observables Observables deep dive} guide.\n *\n * @mixin ObservableMixin\n * @mixes module:utils/emittermixin~EmitterMixin\n * @implements module:utils/observablemixin~Observable\n */\nexport default function ObservableMixin<Base extends abstract new( ...args: any[] ) => Emitter>(\n\tbase: Base\n): {\n\tnew( ...args: ConstructorParameters<Base> ): InstanceType<Base> & Observable;\n\tprototype: InstanceType<Base> & Observable;\n} {\n\tabstract class Mixin extends base implements ObservableInternal {\n\t\tpublic set( name: string | { [ name: string ]: unknown }, value?: unknown ): void {\n\t\t\t// If the first parameter is an Object, iterate over its properties.\n\t\t\tif ( isObject( name ) ) {\n\t\t\t\tObject.keys( name ).forEach( property => {\n\t\t\t\t\tthis.set( property as any, name[ property ] );\n\t\t\t\t}, this );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tinitObservable( this );\n\n\t\t\tconst properties = this[ observablePropertiesSymbol ];\n\n\t\t\tif ( ( name in this ) && !properties!.has( name ) ) {\n\t\t\t\t/**\n\t\t\t\t * Cannot override an existing property.\n\t\t\t\t *\n\t\t\t\t * This error is thrown when trying to {@link ~Observable#set set} a property with\n\t\t\t\t * a name of an already existing property. For example:\n\t\t\t\t *\n\t\t\t\t *\t\tlet observable = new Model();\n\t\t\t\t *\t\tobservable.property = 1;\n\t\t\t\t *\t\tobservable.set( 'property', 2 );\t\t\t// throws\n\t\t\t\t *\n\t\t\t\t *\t\tobservable.set( 'property', 1 );\n\t\t\t\t *\t\tobservable.set( 'property', 2 );\t\t\t// ok, because this is an existing property.\n\t\t\t\t *\n\t\t\t\t * @error observable-set-cannot-override\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'observable-set-cannot-override', this );\n\t\t\t}\n\n\t\t\tObject.defineProperty( this, name, {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\n\t\t\t\tget() {\n\t\t\t\t\treturn properties!.get( name );\n\t\t\t\t},\n\n\t\t\t\tset( this: Observable, value ) {\n\t\t\t\t\tconst oldValue = properties!.get( name );\n\n\t\t\t\t\t// Fire `set` event before the new value will be set to make it possible\n\t\t\t\t\t// to override observable property without affecting `change` event.\n\t\t\t\t\t// See https://github.com/ckeditor/ckeditor5-utils/issues/171.\n\t\t\t\t\tlet newValue = this.fire<SetEvent>( `set:${ name }`, name, value, oldValue );\n\n\t\t\t\t\tif ( newValue === undefined ) {\n\t\t\t\t\t\tnewValue = value;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Allow undefined as an initial value like A.define( 'x', undefined ) (#132).\n\t\t\t\t\t// Note: When properties map has no such own property, then its value is undefined.\n\t\t\t\t\tif ( oldValue !== newValue || !properties!.has( name ) ) {\n\t\t\t\t\t\tproperties!.set( name, newValue );\n\t\t\t\t\t\tthis.fire<ChangeEvent>( `change:${ name }`, name, newValue, oldValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t( this as any )[ name ] = value;\n\t\t}\n\n\t\tpublic bind( ...bindProperties: string[] ): any {\n\t\t\tif ( !bindProperties.length || !isStringArray( bindProperties ) ) {\n\t\t\t\t/**\n\t\t\t\t * All properties must be strings.\n\t\t\t\t *\n\t\t\t\t * @error observable-bind-wrong-properties\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'observable-bind-wrong-properties', this );\n\t\t\t}\n\n\t\t\tif ( ( new Set( bindProperties ) ).size !== bindProperties.length ) {\n\t\t\t\t/**\n\t\t\t\t * Properties must be unique.\n\t\t\t\t *\n\t\t\t\t * @error observable-bind-duplicate-properties\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'observable-bind-duplicate-properties', this );\n\t\t\t}\n\n\t\t\tinitObservable( this );\n\n\t\t\tconst boundProperties = this[ boundPropertiesSymbol ];\n\n\t\t\tbindProperties.forEach( propertyName => {\n\t\t\t\tif ( boundProperties!.has( propertyName ) ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Cannot bind the same property more than once.\n\t\t\t\t\t *\n\t\t\t\t\t * @error observable-bind-rebind\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError( 'observable-bind-rebind', this );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tconst bindings = new Map<string, Binding>();\n\n\t\t\t// @typedef {Object} Binding\n\t\t\t// @property {Array} property Property which is bound.\n\t\t\t// @property {Array} to Array of observable–property components of the binding (`{ observable: ..., property: .. }`).\n\t\t\t// @property {Array} callback A function which processes `to` components.\n\t\t\tbindProperties.forEach( a => {\n\t\t\t\tconst binding = { property: a, to: [] };\n\n\t\t\t\tboundProperties!.set( a, binding );\n\t\t\t\tbindings.set( a, binding );\n\t\t\t} );\n\n\t\t\t// @typedef {Object} BindChain\n\t\t\t// @property {Function} to See {@link ~ObservableMixin#_bindTo}.\n\t\t\t// @property {Function} toMany See {@link ~ObservableMixin#_bindToMany}.\n\t\t\t// @property {module:utils/observablemixin~Observable} _observable The observable which initializes the binding.\n\t\t\t// @property {Array} _bindProperties Array of `_observable` properties to be bound.\n\t\t\t// @property {Array} _to Array of `to()` observable–properties (`{ observable: toObservable, properties: ...toProperties }`).\n\t\t\t// @property {Map} _bindings Stores bindings to be kept in\n\t\t\t// {@link ~ObservableMixin#_boundProperties}/{@link ~ObservableMixin#_boundObservables}\n\t\t\t// initiated in this binding chain.\n\t\t\treturn {\n\t\t\t\tto: bindTo,\n\t\t\t\ttoMany: bindToMany,\n\n\t\t\t\t_observable: this,\n\t\t\t\t_bindProperties: bindProperties,\n\t\t\t\t_to: [],\n\t\t\t\t_bindings: bindings\n\t\t\t};\n\t\t}\n\n\t\tpublic unbind( ...unbindProperties: ( keyof this & string )[] ): void {\n\t\t\t// Nothing to do here if not inited yet.\n\t\t\tif ( !( this[ observablePropertiesSymbol ] ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst boundProperties = this[ boundPropertiesSymbol ]!;\n\t\t\tconst boundObservables = this[ boundObservablesSymbol ]!;\n\n\t\t\tif ( unbindProperties.length ) {\n\t\t\t\tif ( !isStringArray( unbindProperties ) ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * Properties must be strings.\n\t\t\t\t\t *\n\t\t\t\t\t * @error observable-unbind-wrong-properties\n\t\t\t\t\t */\n\t\t\t\t\tthrow new CKEditorError( 'observable-unbind-wrong-properties', this );\n\t\t\t\t}\n\n\t\t\t\tunbindProperties.forEach( propertyName => {\n\t\t\t\t\tconst binding = boundProperties.get( propertyName );\n\n\t\t\t\t\t// Nothing to do if the binding is not defined\n\t\t\t\t\tif ( !binding ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tbinding.to.forEach( ( [ toObservable, toProperty ] ) => {\n\t\t\t\t\t\tconst toProperties = boundObservables.get( toObservable )!;\n\t\t\t\t\t\tconst toPropertyBindings = toProperties[ toProperty ];\n\n\t\t\t\t\t\ttoPropertyBindings.delete( binding );\n\n\t\t\t\t\t\tif ( !toPropertyBindings.size ) {\n\t\t\t\t\t\t\tdelete toProperties[ toProperty ];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( !Object.keys( toProperties ).length ) {\n\t\t\t\t\t\t\tboundObservables.delete( toObservable );\n\t\t\t\t\t\t\tthis.stopListening( toObservable, 'change' );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tboundProperties.delete( propertyName );\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tboundObservables.forEach( ( bindings, boundObservable ) => {\n\t\t\t\t\tthis.stopListening( boundObservable, 'change' );\n\t\t\t\t} );\n\n\t\t\t\tboundObservables.clear();\n\t\t\t\tboundProperties.clear();\n\t\t\t}\n\t\t}\n\n\t\tpublic decorate( this: this & { [ x: string ]: any }, methodName: keyof this & string ): void {\n\t\t\tinitObservable( this );\n\n\t\t\tconst originalMethod = this[ methodName ];\n\n\t\t\tif ( !originalMethod ) {\n\t\t\t\t/**\n\t\t\t\t * Cannot decorate an undefined method.\n\t\t\t\t *\n\t\t\t\t * @error observablemixin-cannot-decorate-undefined\n\t\t\t\t * @param {Object} object The object which method should be decorated.\n\t\t\t\t * @param {String} methodName Name of the method which does not exist.\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError(\n\t\t\t\t\t'observablemixin-cannot-decorate-undefined',\n\t\t\t\t\tthis,\n\t\t\t\t\t{ object: this, methodName }\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.on( methodName, ( evt, args ) => {\n\t\t\t\tevt.return = originalMethod.apply( this, args );\n\t\t\t} );\n\n\t\t\tthis[ methodName ] = function( ...args: unknown[] ) {\n\t\t\t\treturn this.fire( methodName, args );\n\t\t\t};\n\n\t\t\tthis[ methodName ][ decoratedOriginal ] = originalMethod;\n\n\t\t\tif ( !this[ decoratedMethods ] ) {\n\t\t\t\tthis[ decoratedMethods ] = [];\n\t\t\t}\n\n\t\t\tthis[ decoratedMethods ]!.push( methodName );\n\t\t}\n\n\t\t// Override the EmitterMixin stopListening method to be able to clean (and restore) decorated methods.\n\t\t// This is needed in case of:\n\t\t//  1. Have x.foo() decorated.\n\t\t//  2. Call x.stopListening()\n\t\t//  3. Call x.foo(). Problem: nothing happens (the original foo() method is not executed)\n\t\tpublic override stopListening(\n\t\t\tthis: ObservableInternal & { [ x: string ]: any },\n\t\t\temitter?: Emitter,\n\t\t\tevent?: string,\n\t\t\tcallback?: Function\n\t\t): void {\n\t\t\t// Removing all listeners so let's clean the decorated methods to the original state.\n\t\t\tif ( !emitter && this[ decoratedMethods ] ) {\n\t\t\t\tfor ( const methodName of this[ decoratedMethods ]! ) {\n\t\t\t\t\tthis[ methodName ] = this[ methodName ][ decoratedOriginal ];\n\t\t\t\t}\n\n\t\t\t\tdelete this[ decoratedMethods ];\n\t\t\t}\n\n\t\t\tEmitter.prototype.stopListening.call( this, emitter, event, callback );\n\t\t}\n\n\t\tpublic [ observablePropertiesSymbol ]?: Map<string, unknown>;\n\n\t\tpublic [ decoratedMethods ]?: string[];\n\n\t\tpublic [ boundPropertiesSymbol ]?: Map<string, Binding>;\n\n\t\tpublic [ boundObservablesSymbol]?: Map<Observable, Record<string, Set<Binding>>>;\n\t}\n\n\treturn Mixin as any;\n}\n\nexport const Observable = ObservableMixin( Emitter );\n\n// Backward compatibility with `mix`\n( [\n\t'set', 'bind', 'unbind', 'decorate',\n\t'on', 'once', 'off', 'listenTo',\n\t'stopListening', 'fire', 'delegate', 'stopDelegating',\n\t'_addEventListener', '_removeEventListener'\n] ).forEach( key => {\n\t( ObservableMixin as any )[ key ] = ( Observable.prototype as any )[ key ];\n} );\n\ninterface Binding {\n\tproperty: string;\n\tto: [ Observable, string ][];\n\tcallback?: Function;\n}\n\ninterface BindChainInternal {\n\tto: Function;\n\t_observable: Observable;\n\t_bindings: Map<string, Binding>;\n\t_bindProperties: string[];\n\t_to: {\n\t\tobservable: Observable;\n\t\tproperties: string[];\n\t}[];\n}\n\n// Init symbol properties needed for the observable mechanism to work.\n//\n// @private\n// @param {module:utils/observablemixin~ObservableMixin} observable\nfunction initObservable( observable: ObservableInternal ): void {\n\t// Do nothing if already inited.\n\tif ( observable[ observablePropertiesSymbol ] ) {\n\t\treturn;\n\t}\n\n\t// The internal hash containing the observable's state.\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, observablePropertiesSymbol, {\n\t\tvalue: new Map()\n\t} );\n\n\t// Map containing bindings to external observables. It shares the binding objects\n\t// (`{ observable: A, property: 'a', to: ... }`) with {@link module:utils/observablemixin~ObservableMixin#_boundProperties} and\n\t// it is used to observe external observables to update own properties accordingly.\n\t// See {@link module:utils/observablemixin~ObservableMixin#bind}.\n\t//\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n\t//\t\tconsole.log( A._boundObservables );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\tB: {\n\t//\t\t\t\t\tx: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\ty: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t}\n\t//\t\t\t} )\n\t//\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n\t//\t\tconsole.log( A._boundObservables );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\tB: {\n\t//\t\t\t\t\tx: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\ty: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\t\t] ),\n\t//\t\t\t\t\tz: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t},\n\t//\t\t\t\tC: {\n\t//\t\t\t\t\tw: Set( [\n\t//\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t\t\t] )\n\t//\t\t\t\t}\n\t//\t\t\t} )\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, boundObservablesSymbol, {\n\t\tvalue: new Map()\n\t} );\n\n\t// Object that stores which properties of this observable are bound and how. It shares\n\t// the binding objects (`{ observable: A, property: 'a', to: ... }`) with\n\t// {@link module:utils/observablemixin~ObservableMixin#_boundObservables}. This data structure is\n\t// a reverse of {@link module:utils/observablemixin~ObservableMixin#_boundObservables} and it is helpful for\n\t// {@link module:utils/observablemixin~ObservableMixin#unbind}.\n\t//\n\t// See {@link module:utils/observablemixin~ObservableMixin#bind}.\n\t//\n\t//\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n\t//\t\tconsole.log( A._boundProperties );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n\t//\t\t\t} )\n\t//\n\t//\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n\t//\t\tconsole.log( A._boundProperties );\n\t//\n\t//\t\t\tMap( {\n\t//\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n\t//\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] },\n\t//\t\t\t\td: { observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n\t//\t\t\t} )\n\t//\n\t// @private\n\t// @type {Map}\n\tObject.defineProperty( observable, boundPropertiesSymbol, {\n\t\tvalue: new Map()\n\t} );\n}\n\n// A chaining for {@link module:utils/observablemixin~ObservableMixin#bind} providing `.to()` interface.\n//\n// @private\n// @param {...[Observable|String|Function]} args Arguments of the `.to( args )` binding.\nfunction bindTo( this: BindChainInternal, ...args: ( Observable | string | Function )[] ): void {\n\tconst parsedArgs = parseBindToArgs( ...args );\n\tconst bindingsKeys = Array.from( this._bindings.keys() );\n\tconst numberOfBindings = bindingsKeys.length;\n\n\t// Eliminate A.bind( 'x' ).to( B, C )\n\tif ( !parsedArgs.callback && parsedArgs.to.length > 1 ) {\n\t\t/**\n\t\t * Binding multiple observables only possible with callback.\n\t\t *\n\t\t * @error observable-bind-to-no-callback\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-no-callback', this );\n\t}\n\n\t// Eliminate A.bind( 'x', 'y' ).to( B, callback )\n\tif ( numberOfBindings > 1 && parsedArgs.callback ) {\n\t\t/**\n\t\t * Cannot bind multiple properties and use a callback in one binding.\n\t\t *\n\t\t * @error observable-bind-to-extra-callback\n\t\t */\n\t\tthrow new CKEditorError(\n\t\t\t'observable-bind-to-extra-callback',\n\t\t\tthis\n\t\t);\n\t}\n\n\tparsedArgs.to.forEach( to => {\n\t\t// Eliminate A.bind( 'x', 'y' ).to( B, 'a' )\n\t\tif ( to.properties.length && to.properties.length !== numberOfBindings ) {\n\t\t\t/**\n\t\t\t * The number of properties must match.\n\t\t\t *\n\t\t\t * @error observable-bind-to-properties-length\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'observable-bind-to-properties-length', this );\n\t\t}\n\n\t\t// When no to.properties specified, observing source properties instead i.e.\n\t\t// A.bind( 'x', 'y' ).to( B ) -> Observe B.x and B.y\n\t\tif ( !to.properties.length ) {\n\t\t\tto.properties = this._bindProperties;\n\t\t}\n\t} );\n\n\tthis._to = parsedArgs.to;\n\n\t// Fill {@link BindChain#_bindings} with callback. When the callback is set there's only one binding.\n\tif ( parsedArgs.callback ) {\n\t\tthis._bindings.get( bindingsKeys[ 0 ] )!.callback = parsedArgs.callback;\n\t}\n\n\tattachBindToListeners( this._observable, this._to );\n\n\t// Update observable._boundProperties and observable._boundObservables.\n\tupdateBindToBound( this );\n\n\t// Set initial values of bound properties.\n\tthis._bindProperties.forEach( propertyName => {\n\t\tupdateBoundObservableProperty( this._observable, propertyName );\n\t} );\n}\n\n// Binds to an attribute in a set of iterable observables.\n//\n// @private\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @param {Function} callback\nfunction bindToMany( this: BindChainInternal, observables: Observable[], attribute: string, callback: Function ): void {\n\tif ( this._bindings.size > 1 ) {\n\t\t/**\n\t\t * Binding one attribute to many observables only possible with one attribute.\n\t\t *\n\t\t * @error observable-bind-to-many-not-one-binding\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-many-not-one-binding', this );\n\t}\n\n\tthis.to(\n\t\t// Bind to #attribute of each observable...\n\t\t...getBindingTargets( observables, attribute ),\n\t\t// ...using given callback to parse attribute values.\n\t\tcallback\n\t);\n}\n\n// Returns an array of binding components for\n// {@link Observable#bind} from a set of iterable observables.\n//\n// @param {Array.<Observable>} observables\n// @param {String} attribute\n// @returns {Array.<String|Observable>}\nfunction getBindingTargets( observables: Observable[], attribute: string ): ( Observable | string )[] {\n\tconst observableAndAttributePairs = observables.map( observable => [ observable, attribute ] );\n\n\t// Merge pairs to one-dimension array of observables and attributes.\n\treturn Array.prototype.concat.apply( [], observableAndAttributePairs );\n}\n\n// Check if all entries of the array are of `String` type.\n//\n// @private\n// @param {Array} arr An array to be checked.\n// @returns {Boolean}\nfunction isStringArray( arr: unknown[] ): arr is string[] {\n\treturn arr.every( a => typeof a == 'string' );\n}\n\n// Parses and validates {@link Observable#bind}`.to( args )` arguments and returns\n// an object with a parsed structure. For example\n//\n//\t\tA.bind( 'x' ).to( B, 'a', C, 'b', call );\n//\n// becomes\n//\n//\t\t{\n//\t\t\tto: [\n//\t\t\t\t{ observable: B, properties: [ 'a' ] },\n//\t\t\t\t{ observable: C, properties: [ 'b' ] },\n//\t\t\t],\n//\t\t\tcallback: call\n// \t\t}\n//\n// @private\n// @param {...*} args Arguments of {@link Observable#bind}`.to( args )`.\n// @returns {Object}\nfunction parseBindToArgs( ...args: ( Observable | string | Function )[] ) {\n\t// Eliminate A.bind( 'x' ).to()\n\tif ( !args.length ) {\n\t\t/**\n\t\t * Invalid argument syntax in `to()`.\n\t\t *\n\t\t * @error observable-bind-to-parse-error\n\t\t */\n\t\tthrow new CKEditorError( 'observable-bind-to-parse-error', null );\n\t}\n\n\tconst parsed: { to: BindChainInternal[ '_to' ]; callback?: Function } = { to: [] };\n\tlet lastObservable: { observable: Observable; properties: string[] };\n\n\tif ( typeof args[ args.length - 1 ] == 'function' ) {\n\t\tparsed.callback = args.pop() as Function;\n\t}\n\n\targs.forEach( a => {\n\t\tif ( typeof a == 'string' ) {\n\t\t\tlastObservable.properties.push( a );\n\t\t} else if ( typeof a == 'object' ) {\n\t\t\tlastObservable = { observable: a, properties: [] };\n\t\t\tparsed.to.push( lastObservable );\n\t\t} else {\n\t\t\tthrow new CKEditorError( 'observable-bind-to-parse-error', null );\n\t\t}\n\t} );\n\n\treturn parsed;\n}\n\n// Synchronizes {@link module:utils/observablemixin#_boundObservables} with {@link Binding}.\n//\n// @private\n// @param {Binding} binding A binding to store in {@link Observable#_boundObservables}.\n// @param {Observable} toObservable A observable, which is a new component of `binding`.\n// @param {String} toPropertyName A name of `toObservable`'s property, a new component of the `binding`.\nfunction updateBoundObservables(\n\tobservable: ObservableInternal,\n\tbinding: Binding,\n\ttoObservable: Observable,\n\ttoPropertyName: string\n): void {\n\tconst boundObservables = observable[ boundObservablesSymbol ]!;\n\tconst bindingsToObservable = boundObservables.get( toObservable );\n\tconst bindings = bindingsToObservable || {};\n\n\tif ( !bindings[ toPropertyName ] ) {\n\t\tbindings[ toPropertyName ] = new Set();\n\t}\n\n\t// Pass the binding to a corresponding Set in `observable._boundObservables`.\n\tbindings[ toPropertyName ].add( binding );\n\n\tif ( !bindingsToObservable ) {\n\t\tboundObservables.set( toObservable, bindings );\n\t}\n}\n\n// Synchronizes {@link Observable#_boundProperties} and {@link Observable#_boundObservables}\n// with {@link BindChain}.\n//\n// Assuming the following binding being created\n//\n// \t\tA.bind( 'a', 'b' ).to( B, 'x', 'y' );\n//\n// the following bindings were initialized by {@link Observable#bind} in {@link BindChain#_bindings}:\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [] },\n// \t\t\tb: { observable: A, property: 'b', to: [] },\n// \t\t}\n//\n// Iterate over all bindings in this chain and fill their `to` properties with\n// corresponding to( ... ) arguments (components of the binding), so\n//\n// \t\t{\n// \t\t\ta: { observable: A, property: 'a', to: [ B, 'x' ] },\n// \t\t\tb: { observable: A, property: 'b', to: [ B, 'y' ] },\n// \t\t}\n//\n// Then update the structure of {@link Observable#_boundObservables} with updated\n// binding, so it becomes:\n//\n// \t\tMap( {\n// \t\t\tB: {\n// \t\t\t\tx: Set( [\n// \t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] }\n// \t\t\t\t] ),\n// \t\t\t\ty: Set( [\n// \t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n// \t\t\t\t] )\n//\t\t\t}\n// \t\t} )\n//\n// @private\n// @param {BindChain} chain The binding initialized by {@link Observable#bind}.\nfunction updateBindToBound( chain: BindChainInternal ): void {\n\tlet toProperty;\n\n\tchain._bindings.forEach( ( binding, propertyName ) => {\n\t\t// Note: For a binding without a callback, this will run only once\n\t\t// like in A.bind( 'x', 'y' ).to( B, 'a', 'b' )\n\t\t// TODO: ES6 destructuring.\n\t\tchain._to.forEach( to => {\n\t\t\ttoProperty = to.properties[ binding.callback ? 0 : chain._bindProperties.indexOf( propertyName ) ];\n\n\t\t\tbinding.to.push( [ to.observable, toProperty ] );\n\t\t\tupdateBoundObservables( chain._observable, binding, to.observable, toProperty );\n\t\t} );\n\t} );\n}\n\n// Updates an property of a {@link Observable} with a value\n// determined by an entry in {@link Observable#_boundProperties}.\n//\n// @private\n// @param {Observable} observable A observable which property is to be updated.\n// @param {String} propertyName An property to be updated.\nfunction updateBoundObservableProperty( observable: ObservableInternal, propertyName: string ): void {\n\tconst boundProperties = observable[ boundPropertiesSymbol ]!;\n\tconst binding = boundProperties.get( propertyName )!;\n\tlet propertyValue;\n\n\t// When a binding with callback is created like\n\t//\n\t// \t\tA.bind( 'a' ).to( B, 'b', C, 'c', callback );\n\t//\n\t// collect B.b and C.c, then pass them to callback to set A.a.\n\tif ( binding.callback ) {\n\t\tpropertyValue = binding.callback.apply( observable, binding.to.map( to => ( to[ 0 ] as any )[ to[ 1 ] ] ) );\n\t} else {\n\t\tpropertyValue = binding.to[ 0 ];\n\t\tpropertyValue = ( propertyValue[ 0 ] as any )[ propertyValue[ 1 ] ];\n\t}\n\n\tif ( Object.prototype.hasOwnProperty.call( observable, propertyName ) ) {\n\t\t( observable as any )[ propertyName ] = propertyValue;\n\t} else {\n\t\tobservable.set( propertyName as any, propertyValue );\n\t}\n}\n\n// Starts listening to changes in {@link BindChain._to} observables to update\n// {@link BindChain._observable} {@link BindChain._bindProperties}. Also sets the\n// initial state of {@link BindChain._observable}.\n//\n// @private\n// @param {Observable} observable\n// @param {BindChain} chain The chain initialized by {@link Observable#bind}.\nfunction attachBindToListeners( observable: ObservableInternal, toBindings: BindChainInternal[ '_to' ] ): void {\n\ttoBindings.forEach( to => {\n\t\tconst boundObservables = observable[ boundObservablesSymbol ]!;\n\t\tlet bindings;\n\n\t\t// If there's already a chain between the observables (`observable` listens to\n\t\t// `to.observable`), there's no need to create another `change` event listener.\n\t\tif ( !boundObservables.get( to.observable ) ) {\n\t\t\tobservable.listenTo<ChangeEvent>( to.observable, 'change', ( evt, propertyName ) => {\n\t\t\t\tbindings = boundObservables.get( to.observable )![ propertyName ];\n\n\t\t\t\t// Note: to.observable will fire for any property change, react\n\t\t\t\t// to changes of properties which are bound only.\n\t\t\t\tif ( bindings ) {\n\t\t\t\t\tbindings.forEach( binding => {\n\t\t\t\t\t\tupdateBoundObservableProperty( observable, binding.property );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t} );\n}\n\n/**\n * An interface which adds \"observable properties\" and data binding functionality.\n *\n * Can be easily implemented by a class by mixing the {@link module:utils/observablemixin~ObservableMixin} mixin.\n *\n * Read more about the usage of this interface in the:\n * * {@glink framework/guides/architecture/core-editor-architecture#event-system-and-observables Event system and observables}\n * section of the {@glink framework/guides/architecture/core-editor-architecture Core editor architecture} guide,\n * * {@glink framework/guides/deep-dive/observables Observables deep dive} guide.\n *\n * @interface Observable\n * @extends module:utils/emittermixin~Emitter\n */\nexport interface Observable extends Emitter {\n\n\t/**\n\t * Creates and sets the value of an observable property of this object. Such a property becomes a part\n\t * of the state and is observable.\n\t *\n\t * It accepts also a single object literal containing key/value pairs with properties to be set.\n\t *\n\t * This method throws the `observable-set-cannot-override` error if the observable instance already\n\t * has a property with the given property name. This prevents from mistakenly overriding existing\n\t * properties and methods, but means that `foo.set( 'bar', 1 )` may be slightly slower than `foo.bar = 1`.\n\t *\n\t * In TypeScript, those properties should be declared in class using `declare` keyword. In example:\n\t *\n\t *\t\tpublic declare myProp: number;\n\t *\t\tconstructor() {\n\t *\t\t\tthis.set( 'myProp', 2 );\n\t *\t\t}\n\t *\n\t * @method #set\n\t * @param {String|Object} name The property's name or object with `name=>value` pairs.\n\t * @param {*} [value] The property's value (if `name` was passed in the first parameter).\n\t */\n\tset<K extends keyof this & string>( name: K, value: this[ K ] ): void;\n\tset( values: { readonly [ K in keyof this ]?: unknown } ): void;\n\n\tbind<K extends keyof this & string>(\n\t\tbindProperty: K\n\t): SingleBindChain<K, this[ K ]>;\n\tbind<K1 extends keyof this & string, K2 extends keyof this & string>(\n\t\tbindProperty1: K1,\n\t\tbindProperty2: K2\n\t): DualBindChain<this[ K1 ], this[ K2 ]>;\n\n\t/**\n\t * Binds {@link #set observable properties} to other objects implementing the\n\t * {@link module:utils/observablemixin~Observable} interface.\n\t *\n\t * Read more in the {@glink framework/guides/deep-dive/observables#property-bindings dedicated guide}\n\t * covering the topic of property bindings with some additional examples.\n\t *\n\t * Consider two objects: a `button` and an associated `command` (both `Observable`).\n\t *\n\t * A simple property binding could be as follows:\n\t *\n\t *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\t *\n\t * or even shorter:\n\t *\n\t *\t\tbutton.bind( 'isEnabled' ).to( command );\n\t *\n\t * which works in the following way:\n\t *\n\t * * `button.isEnabled` **instantly equals** `command.isEnabled`,\n\t * * whenever `command.isEnabled` changes, `button.isEnabled` will immediately reflect its value.\n\t *\n\t * **Note**: To release the binding, use {@link module:utils/observablemixin~Observable#unbind}.\n\t *\n\t * You can also \"rename\" the property in the binding by specifying the new name in the `to()` chain:\n\t *\n\t *\t\tbutton.bind( 'isEnabled' ).to( command, 'isWorking' );\n\t *\n\t * It is possible to bind more than one property at a time to shorten the code:\n\t *\n\t *\t\tbutton.bind( 'isEnabled', 'value' ).to( command );\n\t *\n\t * which corresponds to:\n\t *\n\t *\t\tbutton.bind( 'isEnabled' ).to( command );\n\t *\t\tbutton.bind( 'value' ).to( command );\n\t *\n\t * The binding can include more than one observable, combining multiple data sources in a custom callback:\n\t *\n\t *\t\tbutton.bind( 'isEnabled' ).to( command, 'isEnabled', ui, 'isVisible',\n\t *\t\t\t( isCommandEnabled, isUIVisible ) => isCommandEnabled && isUIVisible );\n\t *\n\t * Using a custom callback allows processing the value before passing it to the target property:\n\t *\n\t *\t\tbutton.bind( 'isEnabled' ).to( command, 'value', value => value === 'heading1' );\n\t *\n\t * It is also possible to bind to the same property in an array of observables.\n\t * To bind a `button` to multiple commands (also `Observables`) so that each and every one of them\n\t * must be enabled for the button to become enabled, use the following code:\n\t *\n\t *\t\tbutton.bind( 'isEnabled' ).toMany( [ commandA, commandB, commandC ], 'isEnabled',\n\t *\t\t\t( isAEnabled, isBEnabled, isCEnabled ) => isAEnabled && isBEnabled && isCEnabled );\n\t *\n\t * @method #bind\n\t * @param {...String} bindProperties Observable properties that will be bound to other observable(s).\n\t * @returns {Object} The bind chain with the `to()` and `toMany()` methods.\n\t */\n\tbind( ...bindProperties: ( keyof this & string )[] ): MultiBindChain;\n\n\t/**\n\t * Removes the binding created with {@link #bind}.\n\t *\n\t *\t\t// Removes the binding for the 'a' property.\n\t *\t\tA.unbind( 'a' );\n\t *\n\t *\t\t// Removes bindings for all properties.\n\t *\t\tA.unbind();\n\t *\n\t * @method\n\t * @param {...String} [unbindProperties] Observable properties to be unbound. All the bindings will\n\t * be released if no properties are provided.\n\t */\n\tunbind( ...unbindProperties: ( keyof this & string )[] ): void;\n\n\t/**\n\t * Turns the given methods of this object into event-based ones. This means that the new method will fire an event\n\t * (named after the method) and the original action will be plugged as a listener to that event.\n\t *\n\t * Read more in the {@glink framework/guides/deep-dive/observables#decorating-object-methods dedicated guide}\n\t * covering the topic of decorating methods with some additional examples.\n\t *\n\t * Decorating the method does not change its behavior (it only adds an event),\n\t * but it allows to modify it later on by listening to the method's event.\n\t *\n\t * For example, to cancel the method execution the event can be {@link module:utils/eventinfo~EventInfo#stop stopped}:\n\t *\n\t *\t\tclass Foo {\n\t *\t\t\tconstructor() {\n\t *\t\t\t\tthis.decorate( 'method' );\n\t *\t\t\t}\n\t *\n\t *\t\t\tmethod() {\n\t *\t\t\t\tconsole.log( 'called!' );\n\t *\t\t\t}\n\t *\t\t}\n\t *\n\t *\t\tconst foo = new Foo();\n\t *\t\tfoo.on( 'method', ( evt ) => {\n\t *\t\t\tevt.stop();\n\t *\t\t}, { priority: 'high' } );\n\t *\n\t *\t\tfoo.method(); // Nothing is logged.\n\t *\n\t *\n\t * **Note**: The high {@link module:utils/priorities~PriorityString priority} listener\n\t * has been used to execute this particular callback before the one which calls the original method\n\t * (which uses the \"normal\" priority).\n\t *\n\t * It is also possible to change the returned value:\n\t *\n\t *\t\tfoo.on( 'method', ( evt ) => {\n\t *\t\t\tevt.return = 'Foo!';\n\t *\t\t} );\n\t *\n\t *\t\tfoo.method(); // -> 'Foo'\n\t *\n\t * Finally, it is possible to access and modify the arguments the method is called with:\n\t *\n\t *\t\tmethod( a, b ) {\n\t *\t\t\tconsole.log( `${ a }, ${ b }`  );\n\t *\t\t}\n\t *\n\t *\t\t// ...\n\t *\n\t *\t\tfoo.on( 'method', ( evt, args ) => {\n\t *\t\t\targs[ 0 ] = 3;\n\t *\n\t *\t\t\tconsole.log( args[ 1 ] ); // -> 2\n\t *\t\t}, { priority: 'high' } );\n\t *\n\t *\t\tfoo.method( 1, 2 ); // -> '3, 2'\n\t *\n\t * @method #decorate\n\t * @param {String} methodName Name of the method to decorate.\n\t */\n\tdecorate( methodName: keyof this & string ): void;\n\n\t/**\n\t * Fired when a property changed value.\n\t *\n\t *\t\tobservable.set( 'prop', 1 );\n\t *\n\t *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n\t *\t\t\tconsole.log( `${ propertyName } has changed from ${ oldValue } to ${ newValue }` );\n\t *\t\t} );\n\t *\n\t *\t\tobservable.prop = 2; // -> 'prop has changed from 1 to 2'\n\t *\n\t * @event change:{property}\n\t * @param {String} name The property name.\n\t * @param {*} value The new property value.\n\t * @param {*} oldValue The previous property value.\n\t */\n\n\t/**\n\t * Fired when a property value is going to be set but is not set yet (before the `change` event is fired).\n\t *\n\t * You can control the final value of the property by using\n\t * the {@link module:utils/eventinfo~EventInfo#return event's `return` property}.\n\t *\n\t *\t\tobservable.set( 'prop', 1 );\n\t *\n\t *\t\tobservable.on( 'set:prop', ( evt, propertyName, newValue, oldValue ) => {\n\t *\t\t\tconsole.log( `Value is going to be changed from ${ oldValue } to ${ newValue }` );\n\t *\t\t\tconsole.log( `Current property value is ${ observable[ propertyName ] }` );\n\t *\n\t *\t\t\t// Let's override the value.\n\t *\t\t\tevt.return = 3;\n\t *\t\t} );\n\t *\n\t *\t\tobservable.on( 'change:prop', ( evt, propertyName, newValue, oldValue ) => {\n\t *\t\t\tconsole.log( `Value has changed from ${ oldValue } to ${ newValue }` );\n\t *\t\t} );\n\t *\n\t *\t\tobservable.prop = 2; // -> 'Value is going to be changed from 1 to 2'\n\t *\t\t                     // -> 'Current property value is 1'\n\t *\t\t                     // -> 'Value has changed from 1 to 3'\n\t *\n\t * **Note:** The event is fired even when the new value is the same as the old value.\n\t *\n\t * @event set:{property}\n\t * @param {String} name The property name.\n\t * @param {*} value The new property value.\n\t * @param {*} oldValue The previous property value.\n\t */\n}\n\ninterface ObservableInternal extends Observable {\n\t[ observablePropertiesSymbol ]?: Map<string, unknown>;\n\n\t[ decoratedMethods ]?: string[];\n\n\t[ boundPropertiesSymbol ]?: Map<string, Binding>;\n\n\t[ boundObservablesSymbol]?: Map<Observable, Record<string, Set<Binding>>>;\n}\n\nexport type ChangeEvent<TValue = any> = {\n\tname: 'change' | `change:${ string }`;\n\targs: [ name: string, value: TValue, oldValue: TValue ];\n};\n\nexport type SetEvent<TValue = any> = {\n\tname: 'set' | `set:${ string }`;\n\targs: [ name: string, value: TValue, oldValue: TValue ];\n\treturn: TValue;\n};\n\nexport type DecoratedMethodEvent<\n\tTObservable extends Observable & { [ N in TName ]: ( ...args: any[] ) => any },\n\tTName extends keyof TObservable & string\n> = {\n\tname: TName;\n\targs: [ Parameters<TObservable[ TName ]> ];\n\treturn: ReturnType<TObservable[ TName ]>;\n};\n\ninterface SingleBindChain<TKey extends string, TVal> {\n\ttoMany<O extends Observable, K extends keyof O>(\n\t\tobservables: readonly O[],\n\t\tkey: K,\n\t\tcallback: ( ...values: O[ K ][] ) => TVal\n\t): void;\n\n\tto<O extends Observable & { [ P in TKey ]: TVal }>(\n\t\tobservable: O\n\t): void;\n\tto<O extends Observable & { [ P in TKey ]: any }>(\n\t\tobservable: O,\n\t\tcallback: ( value: O[ TKey ] ) => TVal\n\t): void;\n\tto<O extends Observable & { [ P in K ]: TVal }, K extends keyof O>(\n\t\tobservable: O,\n\t\tkey: K\n\t): void;\n\tto<O extends Observable, K extends keyof O>(\n\t\tobservable: O,\n\t\tkey: K,\n\t\tcallback: ( value: O[ K ] ) => TVal,\n\t): void;\n\tto<\n\t\tO1 extends Observable & { [ P in TKey ]: any },\n\t\tO2 extends Observable & { [ P in TKey ]: any }\n\t>(\n\t\tobservable1: O1,\n\t\tobservable2: O2,\n\t\tcallback: ( value1: O1[ TKey ], value2: O2[ TKey ] ) => TVal\n\t): void;\n\tto<\n\t\tO1 extends Observable,\n\t\tK1 extends keyof O1,\n\t\tO2 extends Observable,\n\t\tK2 extends keyof O2\n\t>(\n\t\tobservable1: O1,\n\t\tkey1: K1,\n\t\tobservable2: O2,\n\t\tkey2: K2,\n\t\tcallback: ( value1: O1[ K1 ], value2: O2[ K2 ] ) => TVal\n\t): void;\n\tto<\n\t\tO1 extends Observable & { [ P in TKey ]: any },\n\t\tO2 extends Observable & { [ P in TKey ]: any },\n\t\tO3 extends Observable & { [ P in TKey ]: any }\n\t>(\n\t\tobservable1: O1,\n\t\tobservable2: O2,\n\t\tobservable3: O3,\n\t\tcallback: ( value1: O1[ TKey ], value2: O2[ TKey ], value3: O3[ TKey ] ) => TVal\n\t): void;\n\tto<\n\t\tO1 extends Observable,\n\t\tK1 extends keyof O1,\n\t\tO2 extends Observable,\n\t\tK2 extends keyof O2,\n\t\tO3 extends Observable,\n\t\tK3 extends keyof O3\n\t>(\n\t\tobservable1: O1,\n\t\tkey1: K1,\n\t\tobservable2: O2,\n\t\tkey2: K2,\n\t\tobservable3: O3,\n\t\tkey3: K3,\n\t\tcallback: ( value1: O1[ K1 ], value2: O2[ K2 ], value3: O3[ K3 ] ) => TVal\n\t): void;\n\tto<\n\t\tO1 extends Observable & { [ P in TKey ]: any },\n\t\tO2 extends Observable & { [ P in TKey ]: any },\n\t\tO3 extends Observable & { [ P in TKey ]: any },\n\t\tO4 extends Observable & { [ P in TKey ]: any }\n\t>(\n\t\tobservable1: O1,\n\t\tobservable2: O2,\n\t\tobservable3: O3,\n\t\tobservable4: O4,\n\t\tcallback: ( value1: O1[ TKey ], value2: O2[ TKey ], value3: O3[ TKey ], value4: O4[ TKey ] ) => TVal\n\t): void;\n\tto<\n\t\tO1 extends Observable,\n\t\tK1 extends keyof O1,\n\t\tO2 extends Observable,\n\t\tK2 extends keyof O2,\n\t\tO3 extends Observable,\n\t\tK3 extends keyof O3,\n\t\tO4 extends Observable,\n\t\tK4 extends keyof O4\n\t>(\n\t\tobservable1: O1,\n\t\tkey1: K1,\n\t\tobservable2: O2,\n\t\tkey2: K2,\n\t\tobservable3: O3,\n\t\tkey3: K3,\n\t\tobservable4: O4,\n\t\tkey4: K4,\n\t\tcallback: ( value1: O1[ K1 ], value2: O2[ K2 ], value3: O3[ K3 ], value4: O4[ K4 ] ) => TVal\n\t): void;\n}\n\ninterface DualBindChain<TVal1, TVal2> {\n\tto<\n\t\tO extends Observable & { [ P in K1 ]: TVal1 } & { [ P in K2 ]: TVal2 },\n\t\tK1 extends keyof O,\n\t\tK2 extends keyof O\n\t>(\n\t\tobservable: O,\n\t\tkey1: K1,\n\t\tkey2: K2\n\t): void;\n}\n\ninterface MultiBindChain {\n\tto<O extends Observable>( observable: O, ...properties: ( keyof O )[] ): void;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/priorities\n */\n\n/**\n * String representing a priority value.\n *\n * @typedef {'highest'|'high'|'normal'|'low'|'lowest'} module:utils/priorities~PriorityString\n */\nexport type PriorityString = 'highest' | 'high' | 'normal' | 'low' | 'lowest';\n\n/**\n * Provides group of constants to use instead of hardcoding numeric priority values.\n *\n * @namespace\n */\nconst priorities = {\n\t/**\n\t * Converts a string with priority name to it's numeric value. If `Number` is given, it just returns it.\n\t *\n\t * @static\n\t * @param {module:utils/priorities~PriorityString|Number} [priority] Priority to convert.\n\t * @returns {Number} Converted priority.\n\t */\n\tget( priority: PriorityString | number = 'normal' ): number {\n\t\tif ( typeof priority != 'number' ) {\n\t\t\treturn this[ priority ] || this.normal;\n\t\t} else {\n\t\t\treturn priority;\n\t\t}\n\t},\n\n\thighest: 100000,\n\thigh: 1000,\n\tnormal: 0,\n\tlow: -1000,\n\tlowest: -100000\n} as const;\n\nexport default priorities;\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/spy\n */\n\n/**\n * Creates a spy function (ala Sinon.js) that can be used to inspect call to it.\n *\n * The following are the present features:\n *\n * * spy.called: property set to `true` if the function has been called at least once.\n *\n * @returns {Function} The spy function.\n */\nfunction spy(): { (): void; called?: boolean } {\n\treturn function spy() {\n\t\t( spy as any ).called = true;\n\t};\n}\n\nexport default spy;\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/toarray\n */\n\n/**\n * Transforms any value to an array. If the provided value is already an array, it is returned unchanged.\n *\n * @param {*} data The value to transform to an array.\n * @returns {Array} An array created from data.\n */\nexport default function toArray<T>( data: ArrayOrItem<T> ): T[];\nexport default function toArray<T>( data: ReadonlyArrayOrItem<T> ): readonly T[];\nexport default function toArray<T>( data: ArrayOrItem<T> ): T[] {\n\treturn Array.isArray( data ) ? data : [ data ];\n}\n\nexport type ArrayOrItem<T> = T | T[];\nexport type ReadonlyArrayOrItem<T> = T | readonly T[];\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/tomap\n */\n\nimport objectToMap from './objecttomap';\nimport isIterable from './isiterable';\n\n/**\n * Transforms object or iterable to map. Iterable needs to be in the format acceptable by the `Map` constructor.\n *\n *\t\tmap = toMap( { 'foo': 1, 'bar': 2 } );\n *\t\tmap = toMap( [ [ 'foo', 1 ], [ 'bar', 2 ] ] );\n *\t\tmap = toMap( anotherMap );\n *\n * @param {Object|Iterable|null} data Object or iterable to transform.\n * @returns {Map} Map created from data.\n */\nexport default function toMap<T>( data: { readonly [ key: string ]: T } | Iterable<readonly [ string, T ]> | null | undefined ):\n\tMap<string, T>\n{\n\tif ( isIterable( data ) ) {\n\t\treturn new Map( data );\n\t} else {\n\t\treturn objectToMap( data );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* eslint-disable no-var */\n\n/**\n * @module utils/translation-service\n */\n\nimport CKEditorError from './ckeditorerror';\nimport global from './dom/global';\n\ndeclare global {\n\tvar CKEDITOR_TRANSLATIONS: {\n\t\t[ language: string ]: {\n\t\t\tdictionary: { [ messageId: string ]: string | readonly string[] };\n\t\t\tgetPluralForm?: ( n: number ) => number;\n\t\t};\n\t};\n}\n\n/* istanbul ignore else */\nif ( !global.window.CKEDITOR_TRANSLATIONS ) {\n\tglobal.window.CKEDITOR_TRANSLATIONS = {};\n}\n\n/**\n * Adds translations to existing ones or overrides the existing translations. These translations will later\n * be available for the {@link module:utils/locale~Locale#t `t()`} function.\n *\n * The `translations` is an object which consists of `messageId: translation` pairs. Note that the message ID can be\n * either constructed from the message string or from the message ID if it was passed\n * (this happens rarely and mostly for short messages or messages with placeholders).\n * Since the editor displays only the message string, the message ID can be found either in the source code or in the\n * built translations for another language.\n *\n *\t\tadd( 'pl', {\n *\t\t\t'Cancel': 'Anuluj',\n *\t\t\t'IMAGE': 'obraz', // Note that the `IMAGE` comes from the message ID, while the string can be `image`.\n *\t\t} );\n *\n * If the message is supposed to support various plural forms, make sure to provide an array with the singular form and all plural forms:\n *\n *\t\tadd( 'pl', {\n *\t \t\t'Add space': [ 'Dodaj spację', 'Dodaj %0 spacje', 'Dodaj %0 spacji' ]\n * \t\t} );\n *\n * You should also specify the third argument (the `getPluralForm()` function) that will be used to determine the plural form if no\n * language file was loaded for that language. All language files coming from CKEditor 5 sources will have this option set, so\n * these plural form rules will be reused by other translations added to the registered languages. The `getPluralForm()` function\n * can return either a Boolean or a number.\n *\n * \t\tadd( 'en', {\n *\t \t\t// ... Translations.\n * \t\t}, n => n !== 1 );\n * \t\tadd( 'pl', {\n *\t \t\t// ... Translations.\n * \t\t}, n => n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && ( n % 100 < 10 || n % 100 >= 20 ) ? 1 : 2 );\n *\n * All translations extend the global `window.CKEDITOR_TRANSLATIONS` object. An example of this object can be found below:\n *\n * \t\t{\n * \t\t\tpl: {\n *\t\t\t\tdictionary: {\n *\t\t\t\t\t'Cancel': 'Anuluj',\n *\t\t\t\t\t'Add space': [ 'Dodaj spację', 'Dodaj %0 spacje', 'Dodaj %0 spacji' ]\n *\t\t\t\t},\n *\t\t\t\t// A function that returns the plural form index.\n *\t\t\t\tgetPluralForm: n => n !==1\n *\t\t\t}\n *\t\t\t// Other languages.\n *\t\t}\n *\n * If you cannot import this function from this module (e.g. because you use a CKEditor 5 build), you can\n * still add translations by extending the global `window.CKEDITOR_TRANSLATIONS` object by using a function like\n * the one below:\n *\n *\t\tfunction addTranslations( language, translations, getPluralForm ) {\n *\t\t\tif ( !global.window.CKEDITOR_TRANSLATIONS ) {\n *\t\t\t\tglobal.window.CKEDITOR_TRANSLATIONS = {};\n *\t\t\t}\n\n *\t\t\tif ( !global.window.CKEDITOR_TRANSLATIONS[ language ] ) {\n *\t\t\t\tglobal.window.CKEDITOR_TRANSLATIONS[ language ] = {};\n *\t\t\t}\n *\n *\t\t\tconst languageTranslations = global.window.CKEDITOR_TRANSLATIONS[ language ];\n *\n * \t\t\tlanguageTranslations.dictionary = languageTranslations.dictionary || {};\n * \t\t\tlanguageTranslations.getPluralForm = getPluralForm || languageTranslations.getPluralForm;\n *\n *\t\t\t// Extend the dictionary for the given language.\n *\t\t\tObject.assign( languageTranslations.dictionary, translations );\n *\t\t}\n *\n * @param {String} language Target language.\n * @param {Object.<String,*>} translations An object with translations which will be added to the dictionary.\n * For each message ID the value should be either a translation or an array of translations if the message\n * should support plural forms.\n * @param {Function} [getPluralForm] A function that returns the plural form index (a number).\n */\nexport function add(\n\tlanguage: string,\n\ttranslations: { readonly [ messageId: string ]: string | readonly string[] },\n\tgetPluralForm?: ( n: number ) => number\n): void {\n\tif ( !global.window.CKEDITOR_TRANSLATIONS[ language ] ) {\n\t\tglobal.window.CKEDITOR_TRANSLATIONS[ language ] = {} as any;\n\t}\n\n\tconst languageTranslations = global.window.CKEDITOR_TRANSLATIONS[ language ];\n\n\tlanguageTranslations.dictionary = languageTranslations.dictionary || {};\n\tlanguageTranslations.getPluralForm = getPluralForm || languageTranslations.getPluralForm;\n\n\tObject.assign( languageTranslations.dictionary, translations );\n}\n\n/**\n * **Note:** This method is internal, use {@link module:utils/locale~Locale#t the `t()` function} instead to translate\n * the editor UI parts.\n *\n * This function is responsible for translating messages to the specified language. It uses translations added perviously\n * by {@link module:utils/translation-service~add} (a translations dictionary and the `getPluralForm()` function\n * to provide accurate translations of plural forms).\n *\n * When no translation is defined in the dictionary or the dictionary does not exist, this function returns\n * the original message string or the message plural depending on the number of elements.\n *\n *\t\ttranslate( 'pl', { string: 'Cancel' } ); // 'Cancel'\n *\n * The third optional argument is the number of elements, based on which the single form or one of the plural forms\n * should be picked when the message is supposed to support various plural forms.\n *\n * \t\ttranslate( 'en', { string: 'Add a space', plural: 'Add %0 spaces' }, 1 ); // 'Add a space'\n * \t\ttranslate( 'en', { string: 'Add a space', plural: 'Add %0 spaces' }, 3 ); // 'Add %0 spaces'\n *\n * The message should provide an ID using the `id` property when the message strings are not unique and their\n * translations should be different.\n *\n *\t\ttranslate( 'en', { string: 'image', id: 'ADD_IMAGE' } );\n *\t\ttranslate( 'en', { string: 'image', id: 'AN_IMAGE' } );\n *\n * @protected\n * @param {String} language Target language.\n * @param {module:utils/translation-service~Message} message A message that will be translated.\n * @param {Number} [quantity] The number of elements for which a plural form should be picked from the target language dictionary.\n * @returns {String} Translated sentence.\n */\nexport function _translate( language: string, message: Message, quantity: number = 1 ): string {\n\tif ( typeof quantity !== 'number' ) {\n\t\t/**\n\t\t * An incorrect value was passed to the translation function. This was probably caused\n\t\t * by an incorrect message interpolation of a plural form. Note that for messages supporting plural forms\n\t\t * the second argument of the `t()` function should always be a number or an array with a number as the first element.\n\t\t *\n\t\t * @error translation-service-quantity-not-a-number\n\t\t */\n\t\tthrow new CKEditorError( 'translation-service-quantity-not-a-number', null, { quantity } );\n\t}\n\n\tconst numberOfLanguages = getNumberOfLanguages();\n\n\tif ( numberOfLanguages === 1 ) {\n\t\t// Override the language to the only supported one.\n\t\t// This can't be done in the `Locale` class, because the translations comes after the `Locale` class initialization.\n\t\tlanguage = Object.keys( global.window.CKEDITOR_TRANSLATIONS )[ 0 ];\n\t}\n\n\tconst messageId = message.id || message.string;\n\n\tif ( numberOfLanguages === 0 || !hasTranslation( language, messageId ) ) {\n\t\tif ( quantity !== 1 ) {\n\t\t\t// Return the default plural form that was passed in the `message.plural` parameter.\n\t\t\treturn message.plural!;\n\t\t}\n\n\t\treturn message.string;\n\t}\n\n\tconst dictionary = global.window.CKEDITOR_TRANSLATIONS[ language ].dictionary;\n\tconst getPluralForm = global.window.CKEDITOR_TRANSLATIONS[ language ].getPluralForm || ( n => n === 1 ? 0 : 1 );\n\tconst translation = dictionary[ messageId ];\n\n\tif ( typeof translation === 'string' ) {\n\t\treturn translation;\n\t}\n\n\tconst pluralFormIndex = Number( getPluralForm( quantity ) );\n\n\t// Note: The `translate` function is not responsible for replacing `%0, %1, ...` with values.\n\treturn translation[ pluralFormIndex ];\n}\n\n/**\n * Clears dictionaries for test purposes.\n *\n * @protected\n */\nexport function _clear(): void {\n\tglobal.window.CKEDITOR_TRANSLATIONS = {};\n}\n\n// Checks whether the dictionary exists and translation in that dictionary exists.\nfunction hasTranslation( language: string, messageId: string ): boolean {\n\treturn (\n\t\t!!global.window.CKEDITOR_TRANSLATIONS[ language ] &&\n\t\t!!global.window.CKEDITOR_TRANSLATIONS[ language ].dictionary[ messageId ]\n\t);\n}\n\nfunction getNumberOfLanguages(): number {\n\treturn Object.keys( global.window.CKEDITOR_TRANSLATIONS ).length;\n}\n\n/**\n * The internationalization message interface. A message that implements this interface can be passed to the `t()` function\n * to be translated to the target UI language.\n *\n * @typedef {Object} module:utils/translation-service~Message\n *\n * @property {String} string The message string to translate. Acts as a default translation if the translation for a given language\n * is not defined. When the message is supposed to support plural forms, the string should be the English singular form of the message.\n * @property {String} [id] The message ID. If passed, the message ID is taken from this property instead of the `message.string`.\n * This property is useful when various messages share the same message string, for example, the `editor` string in `in the editor`\n * and `my editor` sentences.\n * @property {String} [plural] The plural form of the message. This property should be skipped when a message is not supposed\n * to support plural forms. Otherwise it should always be set to a string with the English plural form of the message.\n */\nexport interface Message {\n\treadonly string: string;\n\treadonly id?: string;\n\treadonly plural?: string;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/uid\n */\n\n// A hash table of hex numbers to avoid using toString() in uid() which is costly.\n// [ '00', '01', '02', ..., 'fe', 'ff' ]\nconst HEX_NUMBERS = new Array( 256 ).fill( '' )\n\t.map( ( _, index ) => ( '0' + ( index ).toString( 16 ) ).slice( -2 ) );\n\n/**\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\n * 32 alphanumeric characters.\n *\n * **Note**: The characters the unique id is built from correspond to the hex number notation\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\n * by 16 8-bit numbers next to each other.\n *\n * @returns {String} An unique id string.\n */\nexport default function uid(): string {\n\t// Let's create some positive random 32bit integers first.\n\t//\n\t// 1. Math.random() is a float between 0 and 1.\n\t// 2. 0x100000000 is 2^32 = 4294967296.\n\t// 3. >>> 0 enforces integer (in JS all numbers are floating point).\n\t//\n\t// For instance:\n\t//\t\tMath.random() * 0x100000000 = 3366450031.853859\n\t// but\n\t//\t\tMath.random() * 0x100000000 >>> 0 = 3366450031.\n\tconst r1 = Math.random() * 0x100000000 >>> 0;\n\tconst r2 = Math.random() * 0x100000000 >>> 0;\n\tconst r3 = Math.random() * 0x100000000 >>> 0;\n\tconst r4 = Math.random() * 0x100000000 >>> 0;\n\n\t// Make sure that id does not start with number.\n\treturn 'e' +\n\t\tHEX_NUMBERS[ r1 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r1 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r2 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r3 >> 24 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 0 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 8 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 16 & 0xFF ] +\n\t\tHEX_NUMBERS[ r4 >> 24 & 0xFF ];\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module utils/version\n */\n\n/* globals window, global */\n\nimport CKEditorError from './ckeditorerror';\n\nconst version = '35.1.0';\n\nexport default version;\n\n/* istanbul ignore next */\nconst windowOrGlobal = typeof window === 'object' ? window : global;\n\ndeclare global {\n\t// eslint-disable-next-line no-var\n\tvar CKEDITOR_VERSION: string;\n}\n\n/* istanbul ignore next */\nif ( windowOrGlobal.CKEDITOR_VERSION ) {\n\t/**\n\t * This error is thrown when due to a mistake in how CKEditor 5 was installed or initialized, some\n\t * of its modules were duplicated (evaluated and executed twice). Module duplication leads to inevitable runtime\n\t * errors.\n\t *\n\t * There are many situations in which some modules can be loaded twice. In the worst case scenario,\n\t * you may need to check your project for each of these issues and fix them all.\n\t *\n\t * # Trying to add a plugin to an existing build\n\t *\n\t * If you import an existing CKEditor 5 build and a plugin like this:\n\t *\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\t *\t\timport Highlight from '@ckeditor/ckeditor5-highlight/src/highlight';\n\t *\n\t * Then your project loads some CKEditor 5 packages twice. How does it happen?\n\t *\n\t * The build package contains a file which is already compiled with webpack. This means\n\t * that it contains all the necessary code from e.g. `@ckeditor/ckeditor5-engine` and `@ckeditor/ckeditor5-utils`.\n\t *\n\t * However, the `Highlight` plugin imports some of the modules from these packages, too. If you ask webpack to\n\t * build such a project, you will end up with the modules being included (and run) twice &mdash; first, because they are\n\t * included inside the build package, and second, because they are required by the `Highlight` plugin.\n\t *\n\t * Therefore, **you must never add plugins to an existing build** unless your plugin has no dependencies.\n\t *\n\t * Adding plugins to a build is done by taking the source version of this build (so, before it was built with webpack)\n\t * and adding plugins there. In this situation, webpack will know that it only needs to load each plugin once.\n\t *\n\t * Read more in the {@glink installation/getting-started/installing-plugins \"Installing plugins\"} guide.\n\t *\n\t * # Confused an editor build with an editor implementation\n\t *\n\t * This scenario is very similar to the previous one, but has a different origin.\n\t *\n\t * Let's assume that you wanted to use CKEditor 5 from source, as explained in the\n\t * {@glink installation/advanced/alternative-setups/integrating-from-source \"Building from source\"} section\n\t * or in the {@glink framework/guides/quick-start \"Quick start\"} guide of CKEditor 5 Framework.\n\t *\n\t * The correct way to do so is to import an editor and plugins and run them together like this:\n\t *\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n\t *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n\t *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\t *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n\t *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n\t *\n\t *\t\tClassicEditor\n\t *\t\t\t.create( document.querySelector( '#editor' ), {\n\t *\t\t\t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n\t *\t\t\t\ttoolbar: [ 'bold', 'italic' ]\n\t *\t\t\t} )\n\t *\t\t\t.then( editor => {\n\t *\t\t\t\tconsole.log( 'Editor was initialized', editor );\n\t *\t\t\t} )\n\t *\t\t\t.catch( error => {\n\t *\t\t\t\tconsole.error( error.stack );\n\t *\t\t\t} );\n\t *\n\t * However, you might have mistakenly imported a build instead of the source `ClassicEditor`. In this case\n\t * your imports will look like this:\n\t *\n\t *\t\timport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\t *\t\timport Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n\t *\t\timport Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n\t *\t\timport Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n\t *\t\timport Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n\t *\n\t * This creates the same situation as in the previous section because you use a build together with source plugins.\n\t *\n\t * Remember: `@ckeditor/ckeditor5-build-*` packages contain editor builds and `@ckeditor/ckeditor5-editor-*` contain source editors.\n\t *\n\t * # Loading two or more builds on one page\n\t *\n\t * If you use CKEditor 5 builds, you might have loaded two (or more) `ckeditor.js` files on one web page.\n\t * Check your web page for duplicated `<script>` elements or make sure your page builder/bundler includes CKEditor only once.\n\t *\n\t * If you want to use two different types of editors at once, see the\n\t * {@glink installation/advanced/using-two-editors \"Using two different editors\"}\n\t * section.\n\t *\n\t * # Using outdated packages\n\t *\n\t * Building CKEditor 5 from source requires using multiple npm packages. These packages have their dependencies\n\t * to other packages. If you use the latest version of, for example, `@ckeditor/ckeditor5-editor-classic` with\n\t * an outdated version of `@ckeditor/ckeditor5-image`, npm or yarn will need to install two different versions of\n\t * `@ckeditor/ckeditor5-core` because `@ckeditor/ckeditor5-editor-classic` and `@ckeditor/ckeditor5-image` may require\n\t * different versions of the core package.\n\t *\n\t * The solution to this issue is to update all packages to their latest version. We recommend\n\t * using tools like [`npm-check-updates`](https://www.npmjs.com/package/npm-check-updates) which simplify this process.\n\t *\n\t * # Conflicting version of dependencies\n\t *\n\t * This is a special case of the previous scenario. If you use CKEditor 5 with some third-party plugins,\n\t * it may happen that even if you use the latest versions of the official packages and the latest version of\n\t * these third-party packages, there will be a conflict between some of their dependencies.\n\t *\n\t * Such a problem can be resolved by either downgrading CKEditor 5 packages (which we do not recommend) or\n\t * asking the author of the third-party package to upgrade its depdendencies (or forking their project and doing this yourself).\n\t *\n\t * **Note:** All official CKEditor 5 packages (excluding integrations and `ckeditor5-dev-*` packages) are released in the\n\t * same major version. This is &mdash; in the `x.y.z`, the `x` is the same for all packages. This is the simplest way to check\n\t * whether you use packages coming from the same CKEditor 5 version. You can read more about versioning in the\n\t * {@glink support/versioning-policy Versioning policy} guide.\n\t *\n\t * # Packages were duplicated in `node_modules`\n\t *\n\t * In some situations, especially when calling `npm install` multiple times, it may happen\n\t * that npm will not correctly \"deduplicate\" packages.\n\t *\n\t * Normally, npm deduplicates all packages so, for example, `@ckeditor/ckeditor5-core` is installed only once in `node_modules/`.\n\t * However, it is known to fail to do so from time to time.\n\t *\n\t * We recommend checking if any of the steps listed below help:\n\t *\n\t * * `rm -rf node_modules && npm install` to make sure you have a clean `node_modules/` directory. This step\n\t * is known to help in most cases.\n\t * * If you use `yarn.lock` or `package-lock.json`, remove it before `npm install`.\n\t * * Check whether all CKEditor 5 packages are up to date and reinstall them\n\t * if you changed anything (`rm -rf node_modules && npm install`).\n\t *\n\t * If all packages are correct and compatible with each other, the steps above are known to help. If not, you may\n\t * try to check with `npm ls` how many times packages like `@ckeditor/ckeditor5-core`, `@ckeditor/ckeditor5-engine` and\n\t *`@ckeditor/ckeditor5-utils` are installed. If more than once, verify which package causes that.\n\t *\n\t * @error ckeditor-duplicated-modules\n\t */\n\tthrow new CKEditorError(\n\t\t'ckeditor-duplicated-modules',\n\t\tnull\n\t);\n} else {\n\twindowOrGlobal.CKEDITOR_VERSION = version;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/insertcolumncommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\n/**\n * The insert column command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'insertTableColumnLeft'` and\n * `'insertTableColumnRight'` editor commands.\n *\n * To insert a column to the left of the selected cell, execute the following command:\n *\n *\t\teditor.execute( 'insertTableColumnLeft' );\n *\n * To insert a column to the right of the selected cell, execute the following command:\n *\n *\t\teditor.execute( 'insertTableColumnRight' );\n *\n * @extends module:core/command~Command\n */\nexport default class InsertColumnCommand extends Command {\n\t/**\n\t * Creates a new `InsertColumnCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor on which this command will be used.\n\t * @param {Object} options\n\t * @param {String} [options.order=\"right\"] The order of insertion relative to the column in which the caret is located.\n\t * Possible values: `\"left\"` and `\"right\"`.\n\t */\n\tconstructor( editor, options = {} ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The order of insertion relative to the column in which the caret is located.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:table/commands/insertcolumncommand~InsertColumnCommand#order\n\t\t */\n\t\tthis.order = options.order || 'right';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst selection = this.editor.model.document.selection;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst isAnyCellSelected = !!tableUtils.getSelectionAffectedTableCells( selection ).length;\n\n\t\tthis.isEnabled = isAnyCellSelected;\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * Depending on the command's {@link #order} value, it inserts a column to the `'left'` or `'right'` of the column\n\t * in which the selection is set.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\t\tconst tableUtils = editor.plugins.get( 'TableUtils' );\n\t\tconst insertBefore = this.order === 'left';\n\n\t\tconst affectedTableCells = tableUtils.getSelectionAffectedTableCells( selection );\n\t\tconst columnIndexes = tableUtils.getColumnIndexes( affectedTableCells );\n\n\t\tconst column = insertBefore ? columnIndexes.first : columnIndexes.last;\n\t\tconst table = affectedTableCells[ 0 ].findAncestor( 'table' );\n\n\t\ttableUtils.insertColumns( table, { columns: 1, at: insertBefore ? column : column + 1 } );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/insertrowcommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\n/**\n * The insert row command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'insertTableRowBelow'` and\n * `'insertTableRowAbove'` editor commands.\n *\n * To insert a row below the selected cell, execute the following command:\n *\n *\t\teditor.execute( 'insertTableRowBelow' );\n *\n * To insert a row above the selected cell, execute the following command:\n *\n *\t\teditor.execute( 'insertTableRowAbove' );\n *\n * @extends module:core/command~Command\n */\nexport default class InsertRowCommand extends Command {\n\t/**\n\t * Creates a new `InsertRowCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor on which this command will be used.\n\t * @param {Object} options\n\t * @param {String} [options.order=\"below\"] The order of insertion relative to the row in which the caret is located.\n\t * Possible values: `\"above\"` and `\"below\"`.\n\t */\n\tconstructor( editor, options = {} ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The order of insertion relative to the row in which the caret is located.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} module:table/commands/insertrowcommand~InsertRowCommand#order\n\t\t */\n\t\tthis.order = options.order || 'below';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst selection = this.editor.model.document.selection;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst isAnyCellSelected = !!tableUtils.getSelectionAffectedTableCells( selection ).length;\n\n\t\tthis.isEnabled = isAnyCellSelected;\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * Depending on the command's {@link #order} value, it inserts a row `'below'` or `'above'` the row in which selection is set.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\t\tconst tableUtils = editor.plugins.get( 'TableUtils' );\n\t\tconst insertAbove = this.order === 'above';\n\n\t\tconst affectedTableCells = tableUtils.getSelectionAffectedTableCells( selection );\n\t\tconst rowIndexes = tableUtils.getRowIndexes( affectedTableCells );\n\n\t\tconst row = insertAbove ? rowIndexes.first : rowIndexes.last;\n\t\tconst table = affectedTableCells[ 0 ].findAncestor( 'table' );\n\n\t\ttableUtils.insertRows( table, { at: insertAbove ? row : row + 1, copyStructureFromAbove: !insertAbove } );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/inserttablecommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\n/**\n * The insert table command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'insertTable'` editor command.\n *\n * To insert a table at the current selection, execute the command and specify the dimensions:\n *\n *\t\teditor.execute( 'insertTable', { rows: 20, columns: 5 } );\n *\n * @extends module:core/command~Command\n */\nexport default class InsertTableCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst schema = model.schema;\n\n\t\tthis.isEnabled = isAllowedInParent( selection, schema );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * Inserts a table with the given number of rows and columns into the editor.\n\t *\n\t * @param {Object} options\n\t * @param {Number} [options.rows=2] The number of rows to create in the inserted table.\n\t * @param {Number} [options.columns=2] The number of columns to create in the inserted table.\n\t * @param {Number} [options.headingRows] The number of heading rows.\n\t * If not provided it will default to {@link module:table/table~TableConfig#defaultHeadings `config.table.defaultHeadings.rows`}\n\t * table config.\n\t * @param {Number} [options.headingColumns] The number of heading columns.\n\t * If not provided it will default to {@link module:table/table~TableConfig#defaultHeadings `config.table.defaultHeadings.columns`}\n\t * table config.\n\t * @fires execute\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst config = this.editor.config.get( 'table' );\n\n\t\tconst defaultRows = config.defaultHeadings.rows;\n\t\tconst defaultColumns = config.defaultHeadings.columns;\n\n\t\tif ( options.headingRows === undefined && defaultRows ) {\n\t\t\toptions.headingRows = defaultRows;\n\t\t}\n\n\t\tif ( options.headingColumns === undefined && defaultColumns ) {\n\t\t\toptions.headingColumns = defaultColumns;\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\tconst table = tableUtils.createTable( writer, options );\n\n\t\t\tmodel.insertObject( table, null, null, { findOptimalPosition: 'auto' } );\n\n\t\t\twriter.setSelection( writer.createPositionAt( table.getNodeByPath( [ 0, 0, 0 ] ), 0 ) );\n\t\t} );\n\t}\n}\n\n// Checks if the table is allowed in the parent.\n//\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction isAllowedInParent( selection, schema ) {\n\tconst positionParent = selection.getFirstPosition().parent;\n\tconst validParent = positionParent === positionParent.root ? positionParent : positionParent.parent;\n\n\treturn schema.checkChild( validParent, 'table' );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/mergecellcommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\nimport TableWalker from '../tablewalker';\nimport { isHeadingColumnCell } from '../utils/common';\nimport { removeEmptyRowsColumns } from '../utils/structure';\n\n/**\n * The merge cell command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'mergeTableCellRight'`, `'mergeTableCellLeft'`,\n * `'mergeTableCellUp'` and `'mergeTableCellDown'` editor commands.\n *\n * To merge a table cell at the current selection with another cell, execute the command corresponding with the preferred direction.\n *\n * For example, to merge with a cell to the right:\n *\n *\t\teditor.execute( 'mergeTableCellRight' );\n *\n * **Note**: If a table cell has a different [`rowspan`](https://www.w3.org/TR/html50/tabular-data.html#attr-tdth-rowspan)\n * (for `'mergeTableCellRight'` and `'mergeTableCellLeft'`) or [`colspan`](https://www.w3.org/TR/html50/tabular-data.html#attr-tdth-colspan)\n * (for `'mergeTableCellUp'` and `'mergeTableCellDown'`), the command will be disabled.\n *\n * @extends module:core/command~Command\n */\nexport default class MergeCellCommand extends Command {\n\t/**\n\t * Creates a new `MergeCellCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor on which this command will be used.\n\t * @param {Object} options\n\t * @param {String} options.direction Indicates which cell to merge with the currently selected one.\n\t * Possible values are: `'left'`, `'right'`, `'up'` and `'down'`.\n\t */\n\tconstructor( editor, options ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The direction that indicates which cell will be merged with the currently selected one.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #direction\n\t\t */\n\t\tthis.direction = options.direction;\n\n\t\t/**\n\t\t * Whether the merge is horizontal (left/right) or vertical (up/down).\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean} #isHorizontal\n\t\t */\n\t\tthis.isHorizontal = this.direction == 'right' || this.direction == 'left';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst cellToMerge = this._getMergeableCell();\n\n\t\tthis.value = cellToMerge;\n\t\tthis.isEnabled = !!cellToMerge;\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * Depending on the command's {@link #direction} value, it will merge the cell that is to the `'left'`, `'right'`, `'up'` or `'down'`.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst tableCell = tableUtils.getTableCellsContainingSelection( doc.selection )[ 0 ];\n\n\t\tconst cellToMerge = this.value;\n\t\tconst direction = this.direction;\n\n\t\tmodel.change( writer => {\n\t\t\tconst isMergeNext = direction == 'right' || direction == 'down';\n\n\t\t\t// The merge mechanism is always the same so sort cells to be merged.\n\t\t\tconst cellToExpand = isMergeNext ? tableCell : cellToMerge;\n\t\t\tconst cellToRemove = isMergeNext ? cellToMerge : tableCell;\n\n\t\t\t// Cache the parent of cell to remove for later check.\n\t\t\tconst removedTableCellRow = cellToRemove.parent;\n\n\t\t\tmergeTableCells( cellToRemove, cellToExpand, writer );\n\n\t\t\tconst spanAttribute = this.isHorizontal ? 'colspan' : 'rowspan';\n\t\t\tconst cellSpan = parseInt( tableCell.getAttribute( spanAttribute ) || 1 );\n\t\t\tconst cellToMergeSpan = parseInt( cellToMerge.getAttribute( spanAttribute ) || 1 );\n\n\t\t\t// Update table cell span attribute and merge set selection on merged contents.\n\t\t\twriter.setAttribute( spanAttribute, cellSpan + cellToMergeSpan, cellToExpand );\n\t\t\twriter.setSelection( writer.createRangeIn( cellToExpand ) );\n\n\t\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\t\tconst table = removedTableCellRow.findAncestor( 'table' );\n\n\t\t\t// Remove empty rows and columns after merging.\n\t\t\tremoveEmptyRowsColumns( table, tableUtils );\n\t\t} );\n\t}\n\n\t/**\n\t * Returns a cell that can be merged with the current cell depending on the command's direction.\n\t *\n\t * @returns {module:engine/model/element~Element|undefined}\n\t * @private\n\t */\n\t_getMergeableCell() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst tableCell = tableUtils.getTableCellsContainingSelection( doc.selection )[ 0 ];\n\n\t\tif ( !tableCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// First get the cell on proper direction.\n\t\tconst cellToMerge = this.isHorizontal ?\n\t\t\tgetHorizontalCell( tableCell, this.direction, tableUtils ) :\n\t\t\tgetVerticalCell( tableCell, this.direction, tableUtils );\n\n\t\tif ( !cellToMerge ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If found check if the span perpendicular to merge direction is equal on both cells.\n\t\tconst spanAttribute = this.isHorizontal ? 'rowspan' : 'colspan';\n\t\tconst span = parseInt( tableCell.getAttribute( spanAttribute ) || 1 );\n\n\t\tconst cellToMergeSpan = parseInt( cellToMerge.getAttribute( spanAttribute ) || 1 );\n\n\t\tif ( cellToMergeSpan === span ) {\n\t\t\treturn cellToMerge;\n\t\t}\n\t}\n}\n\n// Returns the cell that can be merged horizontally.\n//\n// @param {module:engine/model/element~Element} tableCell\n// @param {String} direction\n// @param {module:table/tableutils~TableUtils} tableUtils\n// @returns {module:engine/model/node~Node|null}\nfunction getHorizontalCell( tableCell, direction, tableUtils ) {\n\tconst tableRow = tableCell.parent;\n\tconst table = tableRow.parent;\n\tconst horizontalCell = direction == 'right' ? tableCell.nextSibling : tableCell.previousSibling;\n\tconst hasHeadingColumns = ( table.getAttribute( 'headingColumns' ) || 0 ) > 0;\n\n\tif ( !horizontalCell ) {\n\t\treturn;\n\t}\n\n\t// Sort cells:\n\tconst cellOnLeft = direction == 'right' ? tableCell : horizontalCell;\n\tconst cellOnRight = direction == 'right' ? horizontalCell : tableCell;\n\n\t// Get their column indexes:\n\tconst { column: leftCellColumn } = tableUtils.getCellLocation( cellOnLeft );\n\tconst { column: rightCellColumn } = tableUtils.getCellLocation( cellOnRight );\n\n\tconst leftCellSpan = parseInt( cellOnLeft.getAttribute( 'colspan' ) || 1 );\n\n\tconst isCellOnLeftInHeadingColumn = isHeadingColumnCell( tableUtils, cellOnLeft, table );\n\tconst isCellOnRightInHeadingColumn = isHeadingColumnCell( tableUtils, cellOnRight, table );\n\n\t// We cannot merge heading columns cells with regular cells.\n\tif ( hasHeadingColumns && isCellOnLeftInHeadingColumn != isCellOnRightInHeadingColumn ) {\n\t\treturn;\n\t}\n\n\t// The cell on the right must have index that is distant to the cell on the left by the left cell's width (colspan).\n\tconst cellsAreTouching = leftCellColumn + leftCellSpan === rightCellColumn;\n\n\t// If the right cell's column index is different it means that there are rowspanned cells between them.\n\treturn cellsAreTouching ? horizontalCell : undefined;\n}\n\n// Returns the cell that can be merged vertically.\n//\n// @param {module:engine/model/element~Element} tableCell\n// @param {String} direction\n// @param {module:table/tableutils~TableUtils} tableUtils\n// @returns {module:engine/model/node~Node|null}\nfunction getVerticalCell( tableCell, direction, tableUtils ) {\n\tconst tableRow = tableCell.parent;\n\tconst table = tableRow.parent;\n\n\tconst rowIndex = table.getChildIndex( tableRow );\n\n\t// Don't search for mergeable cell if direction points out of the table.\n\tif ( ( direction == 'down' && rowIndex === tableUtils.getRows( table ) - 1 ) || ( direction == 'up' && rowIndex === 0 ) ) {\n\t\treturn;\n\t}\n\n\tconst rowspan = parseInt( tableCell.getAttribute( 'rowspan' ) || 1 );\n\tconst headingRows = table.getAttribute( 'headingRows' ) || 0;\n\n\tconst isMergeWithBodyCell = direction == 'down' && ( rowIndex + rowspan ) === headingRows;\n\tconst isMergeWithHeadCell = direction == 'up' && rowIndex === headingRows;\n\n\t// Don't search for mergeable cell if direction points out of the current table section.\n\tif ( headingRows && ( isMergeWithBodyCell || isMergeWithHeadCell ) ) {\n\t\treturn;\n\t}\n\n\tconst currentCellRowSpan = parseInt( tableCell.getAttribute( 'rowspan' ) || 1 );\n\tconst rowOfCellToMerge = direction == 'down' ? rowIndex + currentCellRowSpan : rowIndex;\n\n\tconst tableMap = [ ...new TableWalker( table, { endRow: rowOfCellToMerge } ) ];\n\n\tconst currentCellData = tableMap.find( value => value.cell === tableCell );\n\tconst mergeColumn = currentCellData.column;\n\n\tconst cellToMergeData = tableMap.find( ( { row, cellHeight, column } ) => {\n\t\tif ( column !== mergeColumn ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( direction == 'down' ) {\n\t\t\t// If merging a cell below the mergeRow is already calculated.\n\t\t\treturn row === rowOfCellToMerge;\n\t\t} else {\n\t\t\t// If merging a cell above calculate if it spans to mergeRow.\n\t\t\treturn rowOfCellToMerge === row + cellHeight;\n\t\t}\n\t} );\n\n\treturn cellToMergeData && cellToMergeData.cell;\n}\n\n// Merges two table cells. It will ensure that after merging cells with an empty paragraph, the resulting table cell will only have one\n// paragraph. If one of the merged table cells is empty, the merged table cell will have the contents of the non-empty table cell.\n// If both are empty, the merged table cell will have only one empty paragraph.\n//\n// @param {module:engine/model/element~Element} cellToRemove\n// @param {module:engine/model/element~Element} cellToExpand\n// @param {module:engine/model/writer~Writer} writer\nfunction mergeTableCells( cellToRemove, cellToExpand, writer ) {\n\tif ( !isEmpty( cellToRemove ) ) {\n\t\tif ( isEmpty( cellToExpand ) ) {\n\t\t\twriter.remove( writer.createRangeIn( cellToExpand ) );\n\t\t}\n\n\t\twriter.move( writer.createRangeIn( cellToRemove ), writer.createPositionAt( cellToExpand, 'end' ) );\n\t}\n\n\t// Remove merged table cell.\n\twriter.remove( cellToRemove );\n}\n\n// Checks if the passed table cell contains an empty paragraph.\n//\n// @param {module:engine/model/element~Element} tableCell\n// @returns {Boolean}\nfunction isEmpty( tableCell ) {\n\treturn tableCell.childCount == 1 && tableCell.getChild( 0 ).is( 'element', 'paragraph' ) && tableCell.getChild( 0 ).isEmpty;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/mergecellscommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\nimport TableUtils from '../tableutils';\nimport { updateNumericAttribute } from '../utils/common';\nimport { removeEmptyRowsColumns } from '../utils/structure';\n\n/**\n * The merge cells command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'mergeTableCells'` editor command.\n *\n * For example, to merge selected table cells:\n *\n *\t\teditor.execute( 'mergeTableCells' );\n *\n * @extends module:core/command~Command\n */\nexport default class MergeCellsCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst tableUtils = this.editor.plugins.get( TableUtils );\n\n\t\tconst selectedTableCells = tableUtils.getSelectedTableCells( this.editor.model.document.selection );\n\t\tthis.isEnabled = tableUtils.isSelectionRectangular( selectedTableCells, this.editor.plugins.get( TableUtils ) );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst tableUtils = this.editor.plugins.get( TableUtils );\n\n\t\tmodel.change( writer => {\n\t\t\tconst selectedTableCells = tableUtils.getSelectedTableCells( model.document.selection );\n\n\t\t\t// All cells will be merged into the first one.\n\t\t\tconst firstTableCell = selectedTableCells.shift();\n\n\t\t\t// Update target cell dimensions.\n\t\t\tconst { mergeWidth, mergeHeight } = getMergeDimensions( firstTableCell, selectedTableCells, tableUtils );\n\t\t\tupdateNumericAttribute( 'colspan', mergeWidth, firstTableCell, writer );\n\t\t\tupdateNumericAttribute( 'rowspan', mergeHeight, firstTableCell, writer );\n\n\t\t\tfor ( const tableCell of selectedTableCells ) {\n\t\t\t\tmergeTableCells( tableCell, firstTableCell, writer );\n\t\t\t}\n\n\t\t\tconst table = firstTableCell.findAncestor( 'table' );\n\n\t\t\t// Remove rows and columns that become empty (have no anchored cells).\n\t\t\tremoveEmptyRowsColumns( table, tableUtils );\n\n\t\t\twriter.setSelection( firstTableCell, 'in' );\n\t\t} );\n\t}\n}\n\n// Merges two table cells. It will ensure that after merging cells with empty paragraphs the resulting table cell will only have one\n// paragraph. If one of the merged table cells is empty, the merged table cell will have contents of the non-empty table cell.\n// If both are empty, the merged table cell will have only one empty paragraph.\n//\n// @param {module:engine/model/element~Element} cellBeingMerged\n// @param {module:engine/model/element~Element} targetCell\n// @param {module:engine/model/writer~Writer} writer\nfunction mergeTableCells( cellBeingMerged, targetCell, writer ) {\n\tif ( !isEmpty( cellBeingMerged ) ) {\n\t\tif ( isEmpty( targetCell ) ) {\n\t\t\twriter.remove( writer.createRangeIn( targetCell ) );\n\t\t}\n\n\t\twriter.move( writer.createRangeIn( cellBeingMerged ), writer.createPositionAt( targetCell, 'end' ) );\n\t}\n\n\t// Remove merged table cell.\n\twriter.remove( cellBeingMerged );\n}\n\n// Checks if the passed table cell contains an empty paragraph.\n//\n// @param {module:engine/model/element~Element} tableCell\n// @returns {Boolean}\nfunction isEmpty( tableCell ) {\n\treturn tableCell.childCount == 1 && tableCell.getChild( 0 ).is( 'element', 'paragraph' ) && tableCell.getChild( 0 ).isEmpty;\n}\n\nfunction getMergeDimensions( firstTableCell, selectedTableCells, tableUtils ) {\n\tlet maxWidthOffset = 0;\n\tlet maxHeightOffset = 0;\n\n\tfor ( const tableCell of selectedTableCells ) {\n\t\tconst { row, column } = tableUtils.getCellLocation( tableCell );\n\n\t\tmaxWidthOffset = getMaxOffset( tableCell, column, maxWidthOffset, 'colspan' );\n\t\tmaxHeightOffset = getMaxOffset( tableCell, row, maxHeightOffset, 'rowspan' );\n\t}\n\n\t// Update table cell span attribute and merge set selection on a merged contents.\n\tconst { row: firstCellRow, column: firstCellColumn } = tableUtils.getCellLocation( firstTableCell );\n\n\tconst mergeWidth = maxWidthOffset - firstCellColumn;\n\tconst mergeHeight = maxHeightOffset - firstCellRow;\n\n\treturn { mergeWidth, mergeHeight };\n}\n\nfunction getMaxOffset( tableCell, start, currentMaxOffset, which ) {\n\tconst dimensionValue = parseInt( tableCell.getAttribute( which ) || 1 );\n\n\treturn Math.max( currentMaxOffset, start + dimensionValue );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/removecolumncommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\nimport TableWalker from '../tablewalker';\n\n/**\n * The remove column command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'removeTableColumn'` editor command.\n *\n * To remove the column containing the selected cell, execute the command:\n *\n *\t\teditor.execute( 'removeTableColumn' );\n *\n * @extends module:core/command~Command\n */\nexport default class RemoveColumnCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst selectedCells = tableUtils.getSelectionAffectedTableCells( this.editor.model.document.selection );\n\t\tconst firstCell = selectedCells[ 0 ];\n\n\t\tif ( firstCell ) {\n\t\t\tconst table = firstCell.findAncestor( 'table' );\n\t\t\tconst tableColumnCount = tableUtils.getColumns( table );\n\n\t\t\tconst { first, last } = tableUtils.getColumnIndexes( selectedCells );\n\n\t\t\tthis.isEnabled = last - first < ( tableColumnCount - 1 );\n\t\t} else {\n\t\t\tthis.isEnabled = false;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst [ firstCell, lastCell ] = getBoundaryCells( this.editor.model.document.selection, tableUtils );\n\t\tconst table = firstCell.parent.parent;\n\n\t\t// Cache the table before removing or updating colspans.\n\t\tconst tableMap = [ ...new TableWalker( table ) ];\n\n\t\t// Store column indexes of removed columns.\n\t\tconst removedColumnIndexes = {\n\t\t\tfirst: tableMap.find( value => value.cell === firstCell ).column,\n\t\t\tlast: tableMap.find( value => value.cell === lastCell ).column\n\t\t};\n\n\t\tconst cellToFocus = getCellToFocus( tableMap, firstCell, lastCell, removedColumnIndexes );\n\n\t\tthis.editor.model.change( writer => {\n\t\t\tconst columnsToRemove = removedColumnIndexes.last - removedColumnIndexes.first + 1;\n\n\t\t\tthis.editor.plugins.get( 'TableUtils' ).removeColumns( table, {\n\t\t\t\tat: removedColumnIndexes.first,\n\t\t\t\tcolumns: columnsToRemove\n\t\t\t} );\n\n\t\t\twriter.setSelection( writer.createPositionAt( cellToFocus, 0 ) );\n\t\t} );\n\t}\n}\n\n// Returns a proper table cell to focus after removing a column.\n// - selection is on last table cell it will return previous cell.\nfunction getCellToFocus( tableMap, firstCell, lastCell, removedColumnIndexes ) {\n\tconst colspan = parseInt( lastCell.getAttribute( 'colspan' ) || 1 );\n\n\t// If the table cell is spanned over 2+ columns - it will be truncated so the selection should\n\t// stay in that cell.\n\tif ( colspan > 1 ) {\n\t\treturn lastCell;\n\t}\n\t// Normally, look for the cell in the same row that precedes the first cell to put selection there (\"column on the left\").\n\t// If the deleted column is the first column of the table, there will be no predecessor: use the cell\n\t// from the column that follows then (also in the same row).\n\telse if ( firstCell.previousSibling || lastCell.nextSibling ) {\n\t\treturn lastCell.nextSibling || firstCell.previousSibling;\n\t}\n\t// It can happen that table cells have no siblings in a row, for instance, when there are row spans\n\t// in the table (in the previous row). Then just look for the closest cell that is in a column\n\t// that will not be removed to put the selection there.\n\telse {\n\t\t// Look for any cell in a column that precedes the first removed column.\n\t\tif ( removedColumnIndexes.first ) {\n\t\t\treturn tableMap.reverse().find( ( { column } ) => {\n\t\t\t\treturn column < removedColumnIndexes.first;\n\t\t\t} ).cell;\n\t\t}\n\t\t// If the first removed column is the first column of the table, then\n\t\t// look for any cell that is in a column that follows the last removed column.\n\t\telse {\n\t\t\treturn tableMap.reverse().find( ( { column } ) => {\n\t\t\t\treturn column > removedColumnIndexes.last;\n\t\t\t} ).cell;\n\t\t}\n\t}\n}\n\n// Returns helper object returning the first and the last cell contained in given selection, based on DOM order.\nfunction getBoundaryCells( selection, tableUtils ) {\n\tconst referenceCells = tableUtils.getSelectionAffectedTableCells( selection );\n\tconst firstCell = referenceCells[ 0 ];\n\tconst lastCell = referenceCells.pop();\n\n\tconst returnValue = [ firstCell, lastCell ];\n\n\treturn firstCell.isBefore( lastCell ) ? returnValue : returnValue.reverse();\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/removerowcommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\n/**\n * The remove row command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'removeTableRow'` editor command.\n *\n * To remove the row containing the selected cell, execute the command:\n *\n *\t\teditor.execute( 'removeTableRow' );\n *\n * @extends module:core/command~Command\n */\nexport default class RemoveRowCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst selectedCells = tableUtils.getSelectionAffectedTableCells( this.editor.model.document.selection );\n\t\tconst firstCell = selectedCells[ 0 ];\n\n\t\tif ( firstCell ) {\n\t\t\tconst table = firstCell.findAncestor( 'table' );\n\t\t\tconst tableRowCount = this.editor.plugins.get( 'TableUtils' ).getRows( table );\n\t\t\tconst lastRowIndex = tableRowCount - 1;\n\n\t\t\tconst selectedRowIndexes = tableUtils.getRowIndexes( selectedCells );\n\n\t\t\tconst areAllRowsSelected = selectedRowIndexes.first === 0 && selectedRowIndexes.last === lastRowIndex;\n\n\t\t\t// Disallow selecting whole table -> delete whole table should be used instead.\n\t\t\tthis.isEnabled = !areAllRowsSelected;\n\t\t} else {\n\t\t\tthis.isEnabled = false;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\n\t\tconst referenceCells = tableUtils.getSelectionAffectedTableCells( model.document.selection );\n\t\tconst removedRowIndexes = tableUtils.getRowIndexes( referenceCells );\n\n\t\tconst firstCell = referenceCells[ 0 ];\n\t\tconst table = firstCell.findAncestor( 'table' );\n\n\t\tconst columnIndexToFocus = tableUtils.getCellLocation( firstCell ).column;\n\n\t\tmodel.change( writer => {\n\t\t\tconst rowsToRemove = removedRowIndexes.last - removedRowIndexes.first + 1;\n\n\t\t\ttableUtils.removeRows( table, {\n\t\t\t\tat: removedRowIndexes.first,\n\t\t\t\trows: rowsToRemove\n\t\t\t} );\n\n\t\t\tconst cellToFocus = getCellToFocus( table, removedRowIndexes.first, columnIndexToFocus, tableUtils.getRows( table ) );\n\n\t\t\twriter.setSelection( writer.createPositionAt( cellToFocus, 0 ) );\n\t\t} );\n\t}\n}\n\n// Returns a cell that should be focused before removing the row, belonging to the same column as the currently focused cell.\n// * If the row was not the last one, the cell to focus will be in the row that followed it (before removal).\n// * If the row was the last one, the cell to focus will be in the row that preceded it (before removal).\nfunction getCellToFocus( table, removedRowIndex, columnToFocus, tableRowCount ) {\n\t// Don't go beyond last row's index.\n\tconst row = table.getChild( Math.min( removedRowIndex, tableRowCount - 1 ) );\n\n\t// Default to first table cell.\n\tlet cellToFocus = row.getChild( 0 );\n\tlet column = 0;\n\n\tfor ( const tableCell of row.getChildren() ) {\n\t\tif ( column > columnToFocus ) {\n\t\t\treturn cellToFocus;\n\t\t}\n\n\t\tcellToFocus = tableCell;\n\t\tcolumn += parseInt( tableCell.getAttribute( 'colspan' ) || 1 );\n\t}\n\n\treturn cellToFocus;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/selectcolumncommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\nimport TableWalker from '../tablewalker';\n\n/**\n * The select column command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'selectTableColumn'` editor command.\n *\n * To select the columns containing the selected cells, execute the command:\n *\n *\t\teditor.execute( 'selectTableColumn' );\n *\n * @extends module:core/command~Command\n */\nexport default class SelectColumnCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t// It does not affect data so should be enabled in read-only mode.\n\t\tthis.affectsData = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst selectedCells = tableUtils.getSelectionAffectedTableCells( this.editor.model.document.selection );\n\n\t\tthis.isEnabled = selectedCells.length > 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst model = this.editor.model;\n\t\tconst referenceCells = tableUtils.getSelectionAffectedTableCells( model.document.selection );\n\t\tconst firstCell = referenceCells[ 0 ];\n\t\tconst lastCell = referenceCells.pop();\n\t\tconst table = firstCell.findAncestor( 'table' );\n\n\t\tconst startLocation = tableUtils.getCellLocation( firstCell );\n\t\tconst endLocation = tableUtils.getCellLocation( lastCell );\n\n\t\tconst startColumn = Math.min( startLocation.column, endLocation.column );\n\t\tconst endColumn = Math.max( startLocation.column, endLocation.column );\n\n\t\tconst rangesToSelect = [];\n\n\t\tfor ( const cellInfo of new TableWalker( table, { startColumn, endColumn } ) ) {\n\t\t\trangesToSelect.push( model.createRangeOn( cellInfo.cell ) );\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\twriter.setSelection( rangesToSelect );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/selectrowcommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\n/**\n * The select row command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'selectTableRow'` editor command.\n *\n * To select the rows containing the selected cells, execute the command:\n *\n *\t\teditor.execute( 'selectTableRow' );\n *\n * @extends module:core/command~Command\n */\nexport default class SelectRowCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t// It does not affect data so should be enabled in read-only mode.\n\t\tthis.affectsData = false;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst selectedCells = tableUtils.getSelectionAffectedTableCells( this.editor.model.document.selection );\n\n\t\tthis.isEnabled = selectedCells.length > 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst referenceCells = tableUtils.getSelectionAffectedTableCells( model.document.selection );\n\t\tconst rowIndexes = tableUtils.getRowIndexes( referenceCells );\n\n\t\tconst table = referenceCells[ 0 ].findAncestor( 'table' );\n\t\tconst rangesToSelect = [];\n\n\t\tfor ( let rowIndex = rowIndexes.first; rowIndex <= rowIndexes.last; rowIndex++ ) {\n\t\t\tfor ( const cell of table.getChild( rowIndex ).getChildren() ) {\n\t\t\t\trangesToSelect.push( model.createRangeOn( cell ) );\n\t\t\t}\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\twriter.setSelection( rangesToSelect );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/setheadercolumncommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\nimport {\n\tisHeadingColumnCell,\n\tupdateNumericAttribute\n} from '../utils/common';\nimport { getHorizontallyOverlappingCells, splitVertically } from '../utils/structure';\n\n/**\n * The header column command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'setTableColumnHeader'` editor command.\n *\n * You can make the column containing the selected cell a [header](https://www.w3.org/TR/html50/tabular-data.html#the-th-element)\n * by executing:\n *\n *\t\teditor.execute( 'setTableColumnHeader' );\n *\n * **Note:** All preceding columns will also become headers. If the current column is already a header, executing this command\n * will make it a regular column back again (including the following columns).\n *\n * @extends module:core/command~Command\n */\nexport default class SetHeaderColumnCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\n\t\tconst selectedCells = tableUtils.getSelectionAffectedTableCells( model.document.selection );\n\t\tconst isInTable = selectedCells.length > 0;\n\n\t\tthis.isEnabled = isInTable;\n\n\t\t/**\n\t\t * Flag indicating whether the command is active. The command is active when the\n\t\t * {@link module:engine/model/selection~Selection} is in a header column.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #value\n\t\t */\n\t\tthis.value = isInTable && selectedCells.every( cell => isHeadingColumnCell( tableUtils, cell ) );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When the selection is in a non-header column, the command will set the `headingColumns` table attribute to cover that column.\n\t *\n\t * When the selection is already in a header column, it will set `headingColumns` so the heading section will end before that column.\n\t *\n\t * @fires execute\n\t * @param {Object} [options]\n\t * @param {Boolean} [options.forceValue] If set, the command will set (`true`) or unset (`false`) the header columns according to\n\t * the `forceValue` parameter instead of the current model state.\n\t */\n\texecute( options = {} ) {\n\t\tif ( options.forceValue === this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst model = this.editor.model;\n\t\tconst selectedCells = tableUtils.getSelectionAffectedTableCells( model.document.selection );\n\t\tconst table = selectedCells[ 0 ].findAncestor( 'table' );\n\n\t\tconst { first, last } = tableUtils.getColumnIndexes( selectedCells );\n\t\tconst headingColumnsToSet = this.value ? first : last + 1;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( headingColumnsToSet ) {\n\t\t\t\t// Changing heading columns requires to check if any of a heading cell is overlapping horizontally the table head.\n\t\t\t\t// Any table cell that has a colspan attribute > 1 will not exceed the table head so we need to fix it in columns before.\n\t\t\t\tconst overlappingCells = getHorizontallyOverlappingCells( table, headingColumnsToSet );\n\n\t\t\t\tfor ( const { cell, column } of overlappingCells ) {\n\t\t\t\t\tsplitVertically( cell, column, headingColumnsToSet, writer );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tupdateNumericAttribute( 'headingColumns', headingColumnsToSet, table, writer, 0 );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/setheaderrowcommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\nimport { updateNumericAttribute } from '../utils/common';\nimport { getVerticallyOverlappingCells, splitHorizontally } from '../utils/structure';\n\n/**\n * The header row command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'setTableColumnHeader'` editor command.\n *\n * You can make the row containing the selected cell a [header](https://www.w3.org/TR/html50/tabular-data.html#the-th-element) by executing:\n *\n *\t\teditor.execute( 'setTableRowHeader' );\n *\n * **Note:** All preceding rows will also become headers. If the current row is already a header, executing this command\n * will make it a regular row back again (including the following rows).\n *\n * @extends module:core/command~Command\n */\nexport default class SetHeaderRowCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst model = this.editor.model;\n\t\tconst selectedCells = tableUtils.getSelectionAffectedTableCells( model.document.selection );\n\t\tconst isInTable = selectedCells.length > 0;\n\n\t\tthis.isEnabled = isInTable;\n\n\t\t/**\n\t\t * Flag indicating whether the command is active. The command is active when the\n\t\t * {@link module:engine/model/selection~Selection} is in a header row.\n\t\t *\n\t\t * @observable\n\t\t * @readonly\n\t\t * @member {Boolean} #value\n\t\t */\n\t\tthis.value = isInTable && selectedCells.every( cell => this._isInHeading( cell, cell.parent.parent ) );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When the selection is in a non-header row, the command will set the `headingRows` table attribute to cover that row.\n\t *\n\t * When the selection is already in a header row, it will set `headingRows` so the heading section will end before that row.\n\t *\n\t * @fires execute\n\t * @param {Object} options\n\t * @param {Boolean} [options.forceValue] If set, the command will set (`true`) or unset (`false`) the header rows according to\n\t * the `forceValue` parameter instead of the current model state.\n\t */\n\texecute( options = {} ) {\n\t\tif ( options.forceValue === this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst model = this.editor.model;\n\n\t\tconst selectedCells = tableUtils.getSelectionAffectedTableCells( model.document.selection );\n\t\tconst table = selectedCells[ 0 ].findAncestor( 'table' );\n\n\t\tconst { first, last } = tableUtils.getRowIndexes( selectedCells );\n\t\tconst headingRowsToSet = this.value ? first : last + 1;\n\t\tconst currentHeadingRows = table.getAttribute( 'headingRows' ) || 0;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( headingRowsToSet ) {\n\t\t\t\t// Changing heading rows requires to check if any of a heading cell is overlapping vertically the table head.\n\t\t\t\t// Any table cell that has a rowspan attribute > 1 will not exceed the table head so we need to fix it in rows below.\n\t\t\t\tconst startRow = headingRowsToSet > currentHeadingRows ? currentHeadingRows : 0;\n\t\t\t\tconst overlappingCells = getVerticallyOverlappingCells( table, headingRowsToSet, startRow );\n\n\t\t\t\tfor ( const { cell } of overlappingCells ) {\n\t\t\t\t\tsplitHorizontally( cell, headingRowsToSet, writer );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tupdateNumericAttribute( 'headingRows', headingRowsToSet, table, writer, 0 );\n\t\t} );\n\t}\n\n\t/**\n\t * Checks if a table cell is in the heading section.\n\t *\n\t * @param {module:engine/model/element~Element} tableCell\n\t * @param {module:engine/model/element~Element} table\n\t * @returns {Boolean}\n\t * @private\n\t */\n\t_isInHeading( tableCell, table ) {\n\t\tconst headingRows = parseInt( table.getAttribute( 'headingRows' ) || 0 );\n\n\t\treturn !!headingRows && tableCell.parent.index < headingRows;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/splitcellcommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\n/**\n * The split cell command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'splitTableCellVertically'`\n * and `'splitTableCellHorizontally'`  editor commands.\n *\n * You can split any cell vertically or horizontally by executing this command. For example, to split the selected table cell vertically:\n *\n *\t\teditor.execute( 'splitTableCellVertically' );\n *\n * @extends module:core/command~Command\n */\nexport default class SplitCellCommand extends Command {\n\t/**\n\t * Creates a new `SplitCellCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor on which this command will be used.\n\t * @param {Object} options\n\t * @param {String} options.direction Indicates whether the command should split cells `'horizontally'` or `'vertically'`.\n\t */\n\tconstructor( editor, options = {} ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The direction that indicates which cell will be split.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #direction\n\t\t */\n\t\tthis.direction = options.direction || 'horizontally';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst selectedCells = tableUtils.getSelectionAffectedTableCells( this.editor.model.document.selection );\n\n\t\tthis.isEnabled = selectedCells.length === 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst tableCell = tableUtils.getSelectionAffectedTableCells( this.editor.model.document.selection )[ 0 ];\n\t\tconst isHorizontal = this.direction === 'horizontally';\n\n\t\tif ( isHorizontal ) {\n\t\t\ttableUtils.splitCellHorizontally( tableCell, 2 );\n\t\t} else {\n\t\t\ttableUtils.splitCellVertically( tableCell, 2 );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/downcast\n */\n\nimport TableWalker from './../tablewalker';\nimport { toWidget, toWidgetEditable } from 'ckeditor5/src/widget';\n\n/**\n * Model table element to view table element conversion helper.\n *\n * @param {module:table/tableutils~TableUtils} tableUtils The `TableUtils` plugin instance.\n * @param {Object} [options]\n * @param {Boolean} [options.asWidget] If set to `true`, the downcast conversion will produce a widget.\n * @returns {Function} Element creator.\n */\nexport function downcastTable( tableUtils, options = {} ) {\n\treturn ( table, { writer } ) => {\n\t\tconst headingRows = table.getAttribute( 'headingRows' ) || 0;\n\t\tconst tableSections = [];\n\n\t\t// Table head slot.\n\t\tif ( headingRows > 0 ) {\n\t\t\ttableSections.push(\n\t\t\t\twriter.createContainerElement( 'thead', null,\n\t\t\t\t\twriter.createSlot( element => element.is( 'element', 'tableRow' ) && element.index < headingRows )\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t// Table body slot.\n\t\tif ( headingRows < tableUtils.getRows( table ) ) {\n\t\t\ttableSections.push(\n\t\t\t\twriter.createContainerElement( 'tbody', null,\n\t\t\t\t\twriter.createSlot( element => element.is( 'element', 'tableRow' ) && element.index >= headingRows )\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tconst figureElement = writer.createContainerElement( 'figure', { class: 'table' }, [\n\t\t\t// Table with proper sections (thead, tbody).\n\t\t\twriter.createContainerElement( 'table', null, tableSections ),\n\n\t\t\t// Slot for the rest (for example caption).\n\t\t\twriter.createSlot( element => !element.is( 'element', 'tableRow' ) )\n\t\t] );\n\n\t\treturn options.asWidget ? toTableWidget( figureElement, writer ) : figureElement;\n\t};\n}\n\n/**\n * Model table row element to view `<tr>` element conversion helper.\n *\n * @returns {Function} Element creator.\n */\nexport function downcastRow() {\n\treturn ( tableRow, { writer } ) => {\n\t\treturn tableRow.isEmpty ?\n\t\t\twriter.createEmptyElement( 'tr' ) :\n\t\t\twriter.createContainerElement( 'tr' );\n\t};\n}\n\n/**\n * Model table cell element to view `<td>` or `<th>` element conversion helper.\n *\n * This conversion helper will create proper `<th>` elements for table cells that are in the heading section (heading row or column)\n * and `<td>` otherwise.\n *\n * @param {Object} [options]\n * @param {Boolean} [options.asWidget] If set to `true`, the downcast conversion will produce a widget.\n * @returns {Function} Element creator.\n */\nexport function downcastCell( options = {} ) {\n\treturn ( tableCell, { writer } ) => {\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\t\tconst rowIndex = table.getChildIndex( tableRow );\n\n\t\tconst tableWalker = new TableWalker( table, { row: rowIndex } );\n\t\tconst headingRows = table.getAttribute( 'headingRows' ) || 0;\n\t\tconst headingColumns = table.getAttribute( 'headingColumns' ) || 0;\n\n\t\t// We need to iterate over a table in order to get proper row & column values from a walker.\n\t\tfor ( const tableSlot of tableWalker ) {\n\t\t\tif ( tableSlot.cell == tableCell ) {\n\t\t\t\tconst isHeading = tableSlot.row < headingRows || tableSlot.column < headingColumns;\n\t\t\t\tconst cellElementName = isHeading ? 'th' : 'td';\n\n\t\t\t\treturn options.asWidget ?\n\t\t\t\t\ttoWidgetEditable( writer.createEditableElement( cellElementName ), writer ) :\n\t\t\t\t\twriter.createContainerElement( cellElementName );\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * Overrides paragraph inside table cell conversion.\n *\n * This converter:\n * * should be used to override default paragraph conversion.\n * * It will only convert `<paragraph>` placed directly inside `<tableCell>`.\n * * For a single paragraph without attributes it returns `<span>` to simulate data table.\n * * For all other cases it returns `<p>` element.\n *\n * @param {Object} [options]\n * @param {Boolean} [options.asWidget] If set to `true`, the downcast conversion will produce a widget.\n * @returns {Function} Element creator.\n */\nexport function convertParagraphInTableCell( options = {} ) {\n\treturn ( modelElement, { writer, consumable, mapper } ) => {\n\t\tif ( !modelElement.parent.is( 'element', 'tableCell' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !isSingleParagraphWithoutAttributes( modelElement ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( options.asWidget ) {\n\t\t\treturn writer.createContainerElement( 'span', { class: 'ck-table-bogus-paragraph' } );\n\t\t} else {\n\t\t\t// Additional requirement for data pipeline to have backward compatible data tables.\n\t\t\tconsumable.consume( modelElement, 'insert' );\n\t\t\tmapper.bindElements( modelElement, mapper.toViewElement( modelElement.parent ) );\n\t\t}\n\t};\n}\n\n/**\n * Checks if given model `<paragraph>` is an only child of a parent (`<tableCell>`) and if it has any attribute set.\n *\n * The paragraph should be converted in the editing view to:\n *\n * * If returned `true` - to a `<span class=\"ck-table-bogus-paragraph\">`\n * * If returned `false` - to a `<p>`\n *\n * @param {module:engine/model/element~Element} modelElement\n * @returns {Boolean}\n */\nexport function isSingleParagraphWithoutAttributes( modelElement ) {\n\tconst tableCell = modelElement.parent;\n\n\tconst isSingleParagraph = tableCell.childCount == 1;\n\n\treturn isSingleParagraph && !hasAnyAttribute( modelElement );\n}\n\n// Converts a given {@link module:engine/view/element~Element} to a table widget:\n// * Adds a {@link module:engine/view/element~Element#_setCustomProperty custom property} allowing to recognize the table widget element.\n// * Calls the {@link module:widget/utils~toWidget} function with the proper element's label creator.\n//\n// @param {module:engine/view/element~Element} viewElement\n// @param {module:engine/view/downcastwriter~DowncastWriter} writer An instance of the view writer.\n// @param {String} label The element's label. It will be concatenated with the table `alt` attribute if one is present.\n// @returns {module:engine/view/element~Element}\nfunction toTableWidget( viewElement, writer ) {\n\twriter.setCustomProperty( 'table', true, viewElement );\n\n\treturn toWidget( viewElement, writer, { hasSelectionHandle: true } );\n}\n\n// Checks if an element has any attributes set.\n//\n// @param {module:engine/model/element~Element element\n// @returns {Boolean}\nfunction hasAnyAttribute( element ) {\n\treturn !![ ...element.getAttributeKeys() ].length;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/table-caption-post-fixer\n */\n\n/**\n * Injects a table caption post-fixer into the model.\n *\n * The role of the table caption post-fixer is to ensure that the table with caption have the correct structure\n * after a {@link module:engine/model/model~Model#change `change()`} block was executed.\n *\n * The correct structure means that:\n *\n * * If there are many caption model element, they are merged into one model.\n * * A final, merged caption model is placed at the end of the table.\n *\n * @param {module:engine/model/model~Model} model\n */\nexport default function injectTableCaptionPostFixer( model ) {\n\tmodel.document.registerPostFixer( writer => tableCaptionPostFixer( writer, model ) );\n}\n\n// The table caption post-fixer.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/model~Model} model\nfunction tableCaptionPostFixer( writer, model ) {\n\tconst changes = model.document.differ.getChanges();\n\tlet wasFixed = false;\n\n\tfor ( const entry of changes ) {\n\t\tif ( entry.type != 'insert' ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst positionParent = entry.position.parent;\n\n\t\tif ( positionParent.is( 'element', 'table' ) || entry.name == 'table' ) {\n\t\t\tconst table = entry.name == 'table' ? entry.position.nodeAfter : entry.position.parent;\n\t\t\tconst captionsToMerge = Array.from( table.getChildren() ).filter( child => child.is( 'element', 'caption' ) );\n\t\t\tconst firstCaption = captionsToMerge.shift();\n\n\t\t\tif ( !firstCaption ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Move all the contents of the captions to the first one.\n\t\t\tfor ( const caption of captionsToMerge ) {\n\t\t\t\twriter.move( writer.createRangeIn( caption ), firstCaption, 'end' );\n\t\t\t\twriter.remove( caption );\n\t\t\t}\n\n\t\t\t// Make sure the final caption is at the end of the table.\n\t\t\tif ( firstCaption.nextSibling ) {\n\t\t\t\twriter.move( writer.createRangeOn( firstCaption ), table, 'end' );\n\t\t\t\twasFixed = true;\n\t\t\t}\n\n\t\t\t// Do we merged captions and/or moved the single caption to the end of the table?\n\t\t\twasFixed = !!captionsToMerge.length || wasFixed;\n\t\t}\n\t}\n\n\treturn wasFixed;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/table-cell-paragraph-post-fixer\n */\n\n/**\n * Injects a table cell post-fixer into the model which inserts a `paragraph` element into empty table cells.\n *\n * A table cell must contain at least one block element as a child. An empty table cell will have an empty `paragraph` as a child.\n *\n *\t\t<table>\n *\t\t\t<tableRow>\n *\t\t\t\t<tableCell></tableCell>\n *\t\t\t</tableRow>\n *\t\t</table>\n *\n * Will be fixed to:\n *\n *\t\t<table>\n *\t\t\t<tableRow>\n *\t\t\t\t<tableCell><paragraph></paragraph></tableCell>\n *\t\t\t</tableRow>\n *\t\t</table>\n *\n * @param {module:engine/model/model~Model} model\n */\nexport default function injectTableCellParagraphPostFixer( model ) {\n\tmodel.document.registerPostFixer( writer => tableCellContentsPostFixer( writer, model ) );\n}\n\n// The table cell contents post-fixer.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/model~Model} model\nfunction tableCellContentsPostFixer( writer, model ) {\n\tconst changes = model.document.differ.getChanges();\n\n\tlet wasFixed = false;\n\n\tfor ( const entry of changes ) {\n\t\tif ( entry.type == 'insert' && entry.name == 'table' ) {\n\t\t\twasFixed = fixTable( entry.position.nodeAfter, writer ) || wasFixed;\n\t\t}\n\n\t\tif ( entry.type == 'insert' && entry.name == 'tableRow' ) {\n\t\t\twasFixed = fixTableRow( entry.position.nodeAfter, writer ) || wasFixed;\n\t\t}\n\n\t\tif ( entry.type == 'insert' && entry.name == 'tableCell' ) {\n\t\t\twasFixed = fixTableCellContent( entry.position.nodeAfter, writer ) || wasFixed;\n\t\t}\n\n\t\tif ( checkTableCellChange( entry ) ) {\n\t\t\twasFixed = fixTableCellContent( entry.position.parent, writer ) || wasFixed;\n\t\t}\n\t}\n\n\treturn wasFixed;\n}\n\n// Fixes all table cells in a table.\n//\n// @param {module:engine/model/element~Element} table\n// @param {module:engine/model/writer~Writer} writer\nfunction fixTable( table, writer ) {\n\tlet wasFixed = false;\n\n\tfor ( const row of table.getChildren() ) {\n\t\tif ( row.is( 'element', 'tableRow' ) ) {\n\t\t\twasFixed = fixTableRow( row, writer ) || wasFixed;\n\t\t}\n\t}\n\n\treturn wasFixed;\n}\n\n// Fixes all table cells in a table row.\n//\n// @param {module:engine/model/element~Element} tableRow\n// @param {module:engine/model/writer~Writer} writer\nfunction fixTableRow( tableRow, writer ) {\n\tlet wasFixed = false;\n\n\tfor ( const tableCell of tableRow.getChildren() ) {\n\t\twasFixed = fixTableCellContent( tableCell, writer ) || wasFixed;\n\t}\n\n\treturn wasFixed;\n}\n\n// Fixes all table cell content by:\n// - Adding a paragraph to a table cell without any child.\n// - Wrapping direct $text in a `<paragraph>`.\n//\n// @param {module:engine/model/element~Element} table\n// @param {module:engine/model/writer~Writer} writer\n// @returns {Boolean}\nfunction fixTableCellContent( tableCell, writer ) {\n\t// Insert paragraph to an empty table cell.\n\tif ( tableCell.childCount == 0 ) {\n\t\t// @if CK_DEBUG_TABLE // console.log( 'Post-fixing table: insert paragraph in empty cell.' );\n\n\t\twriter.insertElement( 'paragraph', tableCell );\n\n\t\treturn true;\n\t}\n\n\t// Check table cell children for directly placed text nodes.\n\t// Temporary solution. See https://github.com/ckeditor/ckeditor5/issues/1464.\n\tconst textNodes = Array.from( tableCell.getChildren() ).filter( child => child.is( '$text' ) );\n\n\t// @if CK_DEBUG_TABLE // textNodes.length && console.log( 'Post-fixing table: wrap cell content with paragraph.' );\n\n\tfor ( const child of textNodes ) {\n\t\twriter.wrap( writer.createRangeOn( child ), 'paragraph' );\n\t}\n\n\t// Return true when there were text nodes to fix.\n\treturn !!textNodes.length;\n}\n\n// Checks if a differ change should fix the table cell. This happens on:\n// - Removing content from the table cell (i.e. `tableCell` can be left empty).\n// - Adding a text node directly into a table cell.\n//\n// @param {Object} differ change entry\n// @returns {Boolean}\nfunction checkTableCellChange( entry ) {\n\tif ( !entry.position || !entry.position.parent.is( 'element', 'tableCell' ) ) {\n\t\treturn false;\n\t}\n\n\treturn entry.type == 'insert' && entry.name == '$text' || entry.type == 'remove';\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/table-cell-refresh-post-fixer\n */\n\nimport { isSingleParagraphWithoutAttributes } from './downcast';\n\n/**\n * A table cell refresh handler which marks the table cell in the differ to have it re-rendered.\n *\n * Model `paragraph` inside a table cell can be rendered as `<span>` or `<p>`. It is rendered as `<span>` if this is the only block\n * element in that table cell and it does not have any attributes. It is rendered as `<p>` otherwise.\n *\n * When table cell content changes, for example a second `paragraph` element is added, we need to ensure that the first `paragraph` is\n * re-rendered so it changes from `<span>` to `<p>`. The easiest way to do it is to re-render the entire table cell.\n *\n * @param {module:engine/model/model~Model} model\n * @param {module:engine/controller/editingcontroller~EditingController} editing\n */\nexport default function tableCellRefreshHandler( model, editing ) {\n\tconst differ = model.document.differ;\n\n\t// Stores cells to be refreshed, so the table cell will be refreshed once for multiple changes.\n\tconst cellsToCheck = new Set();\n\n\tfor ( const change of differ.getChanges() ) {\n\t\tconst parent = change.type == 'attribute' ? change.range.start.parent : change.position.parent;\n\n\t\tif ( parent.is( 'element', 'tableCell' ) ) {\n\t\t\tcellsToCheck.add( parent );\n\t\t}\n\t}\n\n\tfor ( const tableCell of cellsToCheck.values() ) {\n\t\tconst paragraphsToRefresh = Array.from( tableCell.getChildren() ).filter( child => shouldRefresh( child, editing.mapper ) );\n\n\t\tfor ( const paragraph of paragraphsToRefresh ) {\n\t\t\tediting.reconvertItem( paragraph );\n\t\t}\n\t}\n}\n\n// Check if given model element needs refreshing.\n//\n// @param {module:engine/model/element~Element} modelElement\n// @param {module:engine/conversion/mapper~Mapper} mapper\n// @returns {Boolean}\nfunction shouldRefresh( child, mapper ) {\n\tif ( !child.is( 'element', 'paragraph' ) ) {\n\t\treturn false;\n\t}\n\n\tconst viewElement = mapper.toViewElement( child );\n\n\tif ( !viewElement ) {\n\t\treturn false;\n\t}\n\n\treturn isSingleParagraphWithoutAttributes( child ) !== viewElement.is( 'element', 'span' );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/table-heading-rows-refresh-post-fixer\n */\n\nimport TableWalker from '../tablewalker';\n\n/**\n * A table headings refresh handler which marks the table cells or rows in the differ to have it re-rendered\n * if the headings attribute changed.\n *\n * Table heading rows and heading columns are represented in the model by a `headingRows` and `headingColumns` attributes.\n *\n * When table headings attribute changes, all the cells/rows are marked to re-render to change between `<td>` and `<th>`.\n *\n * @param {module:engine/model/model~Model} model\n * @param {module:engine/controller/editingcontroller~EditingController} editing\n */\nexport default function tableHeadingsRefreshHandler( model, editing ) {\n\tconst differ = model.document.differ;\n\n\tfor ( const change of differ.getChanges() ) {\n\t\tlet table;\n\t\tlet isRowChange = false;\n\n\t\tif ( change.type == 'attribute' ) {\n\t\t\tconst element = change.range.start.nodeAfter;\n\n\t\t\tif ( !element || !element.is( 'element', 'table' ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( change.attributeKey != 'headingRows' && change.attributeKey != 'headingColumns' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttable = element;\n\t\t\tisRowChange = change.attributeKey == 'headingRows';\n\t\t} else if ( change.name == 'tableRow' || change.name == 'tableCell' ) {\n\t\t\ttable = change.position.findAncestor( 'table' );\n\t\t\tisRowChange = change.name == 'tableRow';\n\t\t}\n\n\t\tif ( !table ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst headingRows = table.getAttribute( 'headingRows' ) || 0;\n\t\tconst headingColumns = table.getAttribute( 'headingColumns' ) || 0;\n\n\t\tconst tableWalker = new TableWalker( table );\n\n\t\tfor ( const tableSlot of tableWalker ) {\n\t\t\tconst isHeading = tableSlot.row < headingRows || tableSlot.column < headingColumns;\n\t\t\tconst expectedElementName = isHeading ? 'th' : 'td';\n\n\t\t\tconst viewElement = editing.mapper.toViewElement( tableSlot.cell );\n\n\t\t\tif ( viewElement && viewElement.is( 'element' ) && viewElement.name != expectedElementName ) {\n\t\t\t\tediting.reconvertItem( isRowChange ? tableSlot.cell.parent : tableSlot.cell );\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/table-layout-post-fixer\n */\n\nimport TableWalker from './../tablewalker';\nimport { createEmptyTableCell, updateNumericAttribute } from '../utils/common';\n\n/**\n * Injects a table layout post-fixer into the model.\n *\n * The role of the table layout post-fixer is to ensure that the table rows have the correct structure\n * after a {@link module:engine/model/model~Model#change `change()`} block was executed.\n *\n * The correct structure means that:\n *\n * * All table rows have the same size.\n * * None of the table cells extend vertically beyond their section (either header or body).\n * * A table cell has always at least one element as a child.\n *\n * If the table structure is not correct, the post-fixer will automatically correct it in two steps:\n *\n * 1. It will clip table cells that extend beyond their section.\n * 2. It will add empty table cells to the rows that are narrower than the widest table row.\n *\n * ## Clipping overlapping table cells\n *\n * Such situation may occur when pasting a table (or a part of a table) to the editor from external sources.\n *\n * For example, see the following table which has a cell (FOO) with the rowspan attribute (2):\n *\n *\t\t<table headingRows=\"1\">\n *\t\t\t<tableRow>\n *\t\t\t\t<tableCell rowspan=\"2\"><paragraph>FOO</paragraph></tableCell>\n *\t\t\t\t<tableCell colspan=\"2\"><paragraph>BAR</paragraph></tableCell>\n *\t\t\t</tableRow>\n *\t\t\t<tableRow>\n *\t\t\t\t<tableCell><paragraph>BAZ</paragraph></tableCell>\n *\t\t\t\t<tableCell><paragraph>XYZ</paragraph></tableCell>\n *\t\t\t</tableRow>\n *\t\t</table>\n *\n * It will be rendered in the view as:\n *\n *\t\t<table>\n *\t\t\t<thead>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td rowspan=\"2\">FOO</td>\n *\t\t\t\t\t<td colspan=\"2\">BAR</td>\n *\t\t\t\t</tr>\n *\t\t\t</thead>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>BAZ</td>\n *\t\t\t\t\t<td>XYZ</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n *\n * In the above example the table will be rendered as a table with two rows: one in the header and second one in the body.\n * The table cell (FOO) cannot span over multiple rows as it would extend from the header to the body section.\n * The `rowspan` attribute must be changed to (1). The value (1) is the default value of the `rowspan` attribute\n * so the `rowspan` attribute will be removed from the model.\n *\n * The table cell with BAZ in the content will be in the first column of the table.\n *\n * ## Adding missing table cells\n *\n * The table post-fixer will insert empty table cells to equalize table row sizes (the number of columns).\n * The size of a table row is calculated by counting column spans of table cells, both horizontal (from the same row) and\n * vertical (from the rows above).\n *\n * In the above example, the table row in the body section of the table is narrower then the row from the header: it has two cells\n * with the default colspan (1). The header row has one cell with colspan (1) and the second with colspan (2).\n * The table cell (FOO) does not extend beyond the head section (and as such will be fixed in the first step of this post-fixer).\n * The post-fixer will add a missing table cell to the row in the body section of the table.\n *\n * The table from the above example will be fixed and rendered to the view as below:\n *\n *\t\t<table>\n *\t\t\t<thead>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td rowspan=\"2\">FOO</td>\n *\t\t\t\t\t<td colspan=\"2\">BAR</td>\n *\t\t\t\t</tr>\n *\t\t\t</thead>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>BAZ</td>\n *\t\t\t\t\t<td>XYZ</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n *\n * ## Collaboration and undo - Expectations vs post-fixer results\n *\n * The table post-fixer only ensures proper structure without a deeper analysis of the nature of the change. As such, it might lead\n * to a structure which was not intended by the user. In particular, it will also fix undo steps (in conjunction with collaboration)\n * in which the editor content might not return to the original state.\n *\n * This will usually happen when one or more users change the size of the table.\n *\n * As an example see the table below:\n *\n *\t\t<table>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>11</td>\n *\t\t\t\t\t<td>12</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>21</td>\n *\t\t\t\t\t<td>22</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n *\n * and the user actions:\n *\n * 1. Both users have a table with two rows and two columns.\n * 2. User A adds a column at the end of the table. This will insert empty table cells to two rows.\n * 3. User B adds a row at the end of the table. This will insert a row with two empty table cells.\n * 4. Both users will have a table as below:\n *\n *\n *\t\t<table>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>11</td>\n *\t\t\t\t\t<td>12</td>\n *\t\t\t\t\t<td>(empty, inserted by A)</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>21</td>\n *\t\t\t\t\t<td>22</td>\n *\t\t\t\t\t<td>(empty, inserted by A)</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n *\n * The last row is shorter then others so the table post-fixer will add an empty row to the last row:\n *\n *\t\t<table>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>11</td>\n *\t\t\t\t\t<td>12</td>\n *\t\t\t\t\t<td>(empty, inserted by A)</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>21</td>\n *\t\t\t\t\t<td>22</td>\n *\t\t\t\t\t<td>(empty, inserted by A)</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by the post-fixer)</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n *\n * Unfortunately undo does not know the nature of the changes and depending on which user applies the post-fixer changes, undoing them\n * might lead to a broken table. If User B undoes inserting the column to the table, the undo engine will undo only the operations of\n * inserting empty cells to rows from the initial table state (row 1 and 2) but the cell in the post-fixed row will remain:\n *\n *\t\t<table>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>11</td>\n *\t\t\t\t\t<td>12</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>21</td>\n *\t\t\t\t\t<td>22</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by a post-fixer)</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n *\n * After undo, the table post-fixer will detect that two rows are shorter than others and will fix the table to:\n *\n *\t\t<table>\n *\t\t\t<tbody>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>11</td>\n *\t\t\t\t\t<td>12</td>\n *\t\t\t\t\t<td>(empty, inserted by a post-fixer after undo)</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>21</td>\n *\t\t\t\t\t<td>22</td>\n *\t\t\t\t\t<td>(empty, inserted by a post-fixer after undo)</td>\n *\t\t\t\t</tr>\n *\t\t\t\t<tr>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by B)</td>\n *\t\t\t\t\t<td>(empty, inserted by a post-fixer)</td>\n *\t\t\t\t</tr>\n *\t\t\t</tbody>\n *\t\t</table>\n * @param {module:engine/model/model~Model} model\n */\nexport default function injectTableLayoutPostFixer( model ) {\n\tmodel.document.registerPostFixer( writer => tableLayoutPostFixer( writer, model ) );\n}\n\n// The table layout post-fixer.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/model~Model} model\nfunction tableLayoutPostFixer( writer, model ) {\n\tconst changes = model.document.differ.getChanges();\n\n\tlet wasFixed = false;\n\n\t// Do not analyze the same table more then once - may happen for multiple changes in the same table.\n\tconst analyzedTables = new Set();\n\n\tfor ( const entry of changes ) {\n\t\tlet table;\n\n\t\tif ( entry.name == 'table' && entry.type == 'insert' ) {\n\t\t\ttable = entry.position.nodeAfter;\n\t\t}\n\n\t\t// Fix table on adding/removing table cells and rows.\n\t\tif ( entry.name == 'tableRow' || entry.name == 'tableCell' ) {\n\t\t\ttable = entry.position.findAncestor( 'table' );\n\t\t}\n\n\t\t// Fix table on any table's attribute change - including attributes of table cells.\n\t\tif ( isTableAttributeEntry( entry ) ) {\n\t\t\ttable = entry.range.start.findAncestor( 'table' );\n\t\t}\n\n\t\tif ( table && !analyzedTables.has( table ) ) {\n\t\t\t// Step 1: correct rowspans of table cells if necessary.\n\t\t\t// The wasFixed flag should be true if any of tables in batch was fixed - might be more then one.\n\t\t\twasFixed = fixTableCellsRowspan( table, writer ) || wasFixed;\n\t\t\t// Step 2: fix table rows sizes.\n\t\t\twasFixed = fixTableRowsSizes( table, writer ) || wasFixed;\n\n\t\t\tanalyzedTables.add( table );\n\t\t}\n\t}\n\n\treturn wasFixed;\n}\n\n// Fixes the invalid value of the `rowspan` attribute because a table cell cannot vertically extend beyond the table section it belongs to.\n//\n// @param {module:engine/model/element~Element} table\n// @param {module:engine/model/writer~Writer} writer\n// @returns {Boolean} Returns `true` if the table was fixed.\nfunction fixTableCellsRowspan( table, writer ) {\n\tlet wasFixed = false;\n\n\tconst cellsToTrim = findCellsToTrim( table );\n\n\tif ( cellsToTrim.length ) {\n\t\t// @if CK_DEBUG_TABLE // console.log( `Post-fixing table: trimming cells row-spans (${ cellsToTrim.length }).` );\n\n\t\twasFixed = true;\n\n\t\tfor ( const data of cellsToTrim ) {\n\t\t\tupdateNumericAttribute( 'rowspan', data.rowspan, data.cell, writer, 1 );\n\t\t}\n\t}\n\n\treturn wasFixed;\n}\n\n// Makes all table rows in a table the same size.\n//\n// @param {module:engine/model/element~Element} table\n// @param {module:engine/model/writer~Writer} writer\n// @returns {Boolean} Returns `true` if the table was fixed.\nfunction fixTableRowsSizes( table, writer ) {\n\tlet wasFixed = false;\n\n\tconst childrenLengths = getChildrenLengths( table );\n\tconst rowsToRemove = [];\n\n\t// Find empty rows.\n\tfor ( const [ rowIndex, size ] of childrenLengths.entries() ) {\n\t\t// Ignore all non-row models.\n\t\tif ( !size && table.getChild( rowIndex ).is( 'element', 'tableRow' ) ) {\n\t\t\trowsToRemove.push( rowIndex );\n\t\t}\n\t}\n\n\t// Remove empty rows.\n\tif ( rowsToRemove.length ) {\n\t\t// @if CK_DEBUG_TABLE // console.log( `Post-fixing table: remove empty rows (${ rowsToRemove.length }).` );\n\n\t\twasFixed = true;\n\n\t\tfor ( const rowIndex of rowsToRemove.reverse() ) {\n\t\t\twriter.remove( table.getChild( rowIndex ) );\n\t\t\tchildrenLengths.splice( rowIndex, 1 );\n\t\t}\n\t}\n\n\t// Filter out everything that's not a table row.\n\tconst rowsLengths = childrenLengths.filter( ( row, rowIndex ) => table.getChild( rowIndex ).is( 'element', 'tableRow' ) );\n\n\t// Verify if all the rows have the same number of columns.\n\tconst tableSize = rowsLengths[ 0 ];\n\tconst isValid = rowsLengths.every( length => length === tableSize );\n\n\tif ( !isValid ) {\n\t\t// @if CK_DEBUG_TABLE // console.log( 'Post-fixing table: adding missing cells.' );\n\n\t\t// Find the maximum number of columns.\n\t\tconst maxColumns = rowsLengths.reduce( ( prev, current ) => current > prev ? current : prev, 0 );\n\n\t\tfor ( const [ rowIndex, size ] of rowsLengths.entries() ) {\n\t\t\tconst columnsToInsert = maxColumns - size;\n\n\t\t\tif ( columnsToInsert ) {\n\t\t\t\tfor ( let i = 0; i < columnsToInsert; i++ ) {\n\t\t\t\t\tcreateEmptyTableCell( writer, writer.createPositionAt( table.getChild( rowIndex ), 'end' ) );\n\t\t\t\t}\n\n\t\t\t\twasFixed = true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn wasFixed;\n}\n\n// Searches for table cells that extend beyond the table section to which they belong to. It will return an array of objects\n// that stores table cells to be trimmed and the correct value of the `rowspan` attribute to set.\n//\n// @param {module:engine/model/element~Element} table\n// @returns {Array.<{{cell, rowspan}}>}\nfunction findCellsToTrim( table ) {\n\tconst headingRows = parseInt( table.getAttribute( 'headingRows' ) || 0 );\n\tconst maxRows = Array.from( table.getChildren() )\n\t\t.reduce( ( count, row ) => row.is( 'element', 'tableRow' ) ? count + 1 : count, 0 );\n\n\tconst cellsToTrim = [];\n\n\tfor ( const { row, cell, cellHeight } of new TableWalker( table ) ) {\n\t\t// Skip cells that do not expand over its row.\n\t\tif ( cellHeight < 2 ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst isInHeader = row < headingRows;\n\n\t\t// Row limit is either end of header section or whole table as table body is after the header.\n\t\tconst rowLimit = isInHeader ? headingRows : maxRows;\n\n\t\t// If table cell expands over its limit reduce it height to proper value.\n\t\tif ( row + cellHeight > rowLimit ) {\n\t\t\tconst newRowspan = rowLimit - row;\n\n\t\t\tcellsToTrim.push( { cell, rowspan: newRowspan } );\n\t\t}\n\t}\n\n\treturn cellsToTrim;\n}\n\n// Returns an array with lengths of rows assigned to the corresponding row index.\n//\n// @param {module:engine/model/element~Element} table\n// @returns {Array.<Number>}\nfunction getChildrenLengths( table ) {\n\t// TableWalker will not provide items for the empty rows, we need to pre-fill this array.\n\tconst lengths = new Array( table.childCount ).fill( 0 );\n\n\tfor ( const { rowIndex } of new TableWalker( table, { includeAllSlots: true } ) ) {\n\t\tlengths[ rowIndex ]++;\n\t}\n\n\treturn lengths;\n}\n\n// Checks if the differ entry for an attribute change is one of the table's attributes.\n//\n// @param entry\n// @returns {Boolean}\nfunction isTableAttributeEntry( entry ) {\n\tconst isAttributeType = entry.type === 'attribute';\n\tconst key = entry.attributeKey;\n\n\treturn isAttributeType && ( key === 'headingRows' || key === 'colspan' || key === 'rowspan' );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/tableproperites\n */\n\n/**\n * Conversion helper for upcasting attributes using normalized styles.\n *\n * @param {module:engine/conversion/conversion~Conversion} conversion\n * @param {Object} options\n * @param {String} options.modelAttribute The attribute to set.\n * @param {String} options.styleName The style name to convert.\n * @param {String} options.viewElement The view element name that should be converted.\n * @param {String} options.defaultValue The default value for the specified `modelAttribute`.\n * @param {Boolean} [options.reduceBoxSides=false]\n */\nexport function upcastStyleToAttribute( conversion, options ) {\n\tconst { viewElement, defaultValue, modelAttribute, styleName, reduceBoxSides = false } = options;\n\n\tconversion.for( 'upcast' ).attributeToAttribute( {\n\t\tview: {\n\t\t\tname: viewElement,\n\t\t\tstyles: {\n\t\t\t\t[ styleName ]: /[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\tmodel: {\n\t\t\tkey: modelAttribute,\n\t\t\tvalue: viewElement => {\n\t\t\t\tconst normalized = viewElement.getNormalizedStyle( styleName );\n\t\t\t\tconst value = reduceBoxSides ? reduceBoxSidesValue( normalized ) : normalized;\n\n\t\t\t\tif ( defaultValue !== value ) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n}\n\n/**\n * Conversion helper for upcasting border styles for view elements.\n *\n * @param {module:engine/conversion/conversion~Conversion} conversion\n * @param {String} viewElementName\n * @param {Object} modelAttributes\n * @param {Object} defaultBorder The default border values.\n * @param {String} defaultBorder.color The default `borderColor` value.\n * @param {String} defaultBorder.style The default `borderStyle` value.\n * @param {String} defaultBorder.width The default `borderWidth` value.\n */\nexport function upcastBorderStyles( conversion, viewElementName, modelAttributes, defaultBorder ) {\n\tconversion.for( 'upcast' ).add( dispatcher => dispatcher.on( 'element:' + viewElementName, ( evt, data, conversionApi ) => {\n\t\t// If the element was not converted by element-to-element converter,\n\t\t// we should not try to convert the style. See #8393.\n\t\tif ( !data.modelRange ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check the most detailed properties. These will be always set directly or\n\t\t// when using the \"group\" properties like: `border-(top|right|bottom|left)` or `border`.\n\t\tconst stylesToConsume = [\n\t\t\t'border-top-width',\n\t\t\t'border-top-color',\n\t\t\t'border-top-style',\n\t\t\t'border-bottom-width',\n\t\t\t'border-bottom-color',\n\t\t\t'border-bottom-style',\n\t\t\t'border-right-width',\n\t\t\t'border-right-color',\n\t\t\t'border-right-style',\n\t\t\t'border-left-width',\n\t\t\t'border-left-color',\n\t\t\t'border-left-style'\n\t\t].filter( styleName => data.viewItem.hasStyle( styleName ) );\n\n\t\tif ( !stylesToConsume.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst matcherPattern = {\n\t\t\tstyles: stylesToConsume\n\t\t};\n\n\t\t// Try to consume appropriate values from consumable values list.\n\t\tif ( !conversionApi.consumable.test( data.viewItem, matcherPattern ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelElement = [ ...data.modelRange.getItems( { shallow: true } ) ].pop();\n\n\t\tconversionApi.consumable.consume( data.viewItem, matcherPattern );\n\n\t\tconst normalizedBorder = {\n\t\t\tstyle: data.viewItem.getNormalizedStyle( 'border-style' ),\n\t\t\tcolor: data.viewItem.getNormalizedStyle( 'border-color' ),\n\t\t\twidth: data.viewItem.getNormalizedStyle( 'border-width' )\n\t\t};\n\n\t\tconst reducedBorder = {\n\t\t\tstyle: reduceBoxSidesValue( normalizedBorder.style ),\n\t\t\tcolor: reduceBoxSidesValue( normalizedBorder.color ),\n\t\t\twidth: reduceBoxSidesValue( normalizedBorder.width )\n\t\t};\n\n\t\tif ( reducedBorder.style !== defaultBorder.style ) {\n\t\t\tconversionApi.writer.setAttribute( modelAttributes.style, reducedBorder.style, modelElement );\n\t\t}\n\n\t\tif ( reducedBorder.color !== defaultBorder.color ) {\n\t\t\tconversionApi.writer.setAttribute( modelAttributes.color, reducedBorder.color, modelElement );\n\t\t}\n\n\t\tif ( reducedBorder.width !== defaultBorder.width ) {\n\t\t\tconversionApi.writer.setAttribute( modelAttributes.width, reducedBorder.width, modelElement );\n\t\t}\n\t} ) );\n}\n\n/**\n * Conversion helper for downcasting an attribute to a style.\n *\n * @param {module:engine/conversion/conversion~Conversion} conversion\n * @param {Object} options\n * @param {String} options.modelElement\n * @param {String} options.modelAttribute\n * @param {String} options.styleName\n */\nexport function downcastAttributeToStyle( conversion, { modelElement, modelAttribute, styleName } ) {\n\tconversion.for( 'downcast' ).attributeToAttribute( {\n\t\tmodel: {\n\t\t\tname: modelElement,\n\t\t\tkey: modelAttribute\n\t\t},\n\t\tview: modelAttributeValue => ( {\n\t\t\tkey: 'style',\n\t\t\tvalue: {\n\t\t\t\t[ styleName ]: modelAttributeValue\n\t\t\t}\n\t\t} )\n\t} );\n}\n\n/**\n * Conversion helper for downcasting attributes from the model table to a view table (not to `<figure>`).\n *\n * @param {module:engine/conversion/conversion~Conversion} conversion\n * @param {Object} options\n * @param {String} options.modelAttribute\n * @param {String} options.styleName\n */\nexport function downcastTableAttribute( conversion, { modelAttribute, styleName } ) {\n\tconversion.for( 'downcast' ).add( dispatcher => dispatcher.on( `attribute:${ modelAttribute }:table`, ( evt, data, conversionApi ) => {\n\t\tconst { item, attributeNewValue } = data;\n\t\tconst { mapper, writer } = conversionApi;\n\n\t\tif ( !conversionApi.consumable.consume( data.item, evt.name ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst table = [ ...mapper.toViewElement( item ).getChildren() ].find( child => child.is( 'element', 'table' ) );\n\n\t\tif ( attributeNewValue ) {\n\t\t\twriter.setStyle( styleName, attributeNewValue, table );\n\t\t} else {\n\t\t\twriter.removeStyle( styleName, table );\n\t\t}\n\t} ) );\n}\n\n// Reduces the full top, right, bottom, left object to a single string if all sides are equal.\nfunction reduceBoxSidesValue( style ) {\n\tif ( !style ) {\n\t\treturn;\n\t}\n\n\tconst commonValue = [ 'top', 'right', 'bottom', 'left' ]\n\t\t.map( side => style[ side ] )\n\t\t.reduce( ( result, side ) => result == side ? result : null );\n\n\treturn commonValue || style;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/converters/upcasttable\n */\n\nimport { createEmptyTableCell } from '../utils/common';\nimport { first } from 'ckeditor5/src/utils';\n\n/**\n * Returns a function that converts the table view representation:\n *\n *\t\t<figure class=\"table\"><table>...</table></figure>\n *\n * to the model representation:\n *\n *\t\t<table></table>\n *\n * @returns {Function}\n */\nexport function upcastTableFigure() {\n\treturn dispatcher => {\n\t\tdispatcher.on( 'element:figure', ( evt, data, conversionApi ) => {\n\t\t\t// Do not convert if this is not a \"table figure\".\n\t\t\tif ( !conversionApi.consumable.test( data.viewItem, { name: true, classes: 'table' } ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Find an table element inside the figure element.\n\t\t\tconst viewTable = getViewTableFromFigure( data.viewItem );\n\n\t\t\t// Do not convert if table element is absent or was already converted.\n\t\t\tif ( !viewTable || !conversionApi.consumable.test( viewTable, { name: true } ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Consume the figure to prevent other converters from processing it again.\n\t\t\tconversionApi.consumable.consume( data.viewItem, { name: true, classes: 'table' } );\n\n\t\t\t// Convert view table to model table.\n\t\t\tconst conversionResult = conversionApi.convertItem( viewTable, data.modelCursor );\n\n\t\t\t// Get table element from conversion result.\n\t\t\tconst modelTable = first( conversionResult.modelRange.getItems() );\n\n\t\t\t// When table wasn't successfully converted then finish conversion.\n\t\t\tif ( !modelTable ) {\n\t\t\t\t// Revert consumed figure so other features can convert it.\n\t\t\t\tconversionApi.consumable.revert( data.viewItem, { name: true, classes: 'table' } );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconversionApi.convertChildren( data.viewItem, conversionApi.writer.createPositionAt( modelTable, 'end' ) );\n\t\t\tconversionApi.updateConversionResult( modelTable, data );\n\t\t} );\n\t};\n}\n\n/**\n * View table element to model table element conversion helper.\n *\n * This conversion helper converts the table element as well as table rows.\n *\n * @returns {Function} Conversion helper.\n */\nexport default function upcastTable() {\n\treturn dispatcher => {\n\t\tdispatcher.on( 'element:table', ( evt, data, conversionApi ) => {\n\t\t\tconst viewTable = data.viewItem;\n\n\t\t\t// When element was already consumed then skip it.\n\t\t\tif ( !conversionApi.consumable.test( viewTable, { name: true } ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { rows, headingRows, headingColumns } = scanTable( viewTable );\n\n\t\t\t// Only set attributes if values is greater then 0.\n\t\t\tconst attributes = {};\n\n\t\t\tif ( headingColumns ) {\n\t\t\t\tattributes.headingColumns = headingColumns;\n\t\t\t}\n\n\t\t\tif ( headingRows ) {\n\t\t\t\tattributes.headingRows = headingRows;\n\t\t\t}\n\n\t\t\tconst table = conversionApi.writer.createElement( 'table', attributes );\n\n\t\t\tif ( !conversionApi.safeInsert( table, data.modelCursor ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconversionApi.consumable.consume( viewTable, { name: true } );\n\n\t\t\t// Upcast table rows in proper order (heading rows first).\n\t\t\trows.forEach( row => conversionApi.convertItem( row, conversionApi.writer.createPositionAt( table, 'end' ) ) );\n\n\t\t\t// Convert everything else.\n\t\t\tconversionApi.convertChildren( viewTable, conversionApi.writer.createPositionAt( table, 'end' ) );\n\n\t\t\t// Create one row and one table cell for empty table.\n\t\t\tif ( table.isEmpty ) {\n\t\t\t\tconst row = conversionApi.writer.createElement( 'tableRow' );\n\t\t\t\tconversionApi.writer.insert( row, conversionApi.writer.createPositionAt( table, 'end' ) );\n\n\t\t\t\tcreateEmptyTableCell( conversionApi.writer, conversionApi.writer.createPositionAt( row, 'end' ) );\n\t\t\t}\n\n\t\t\tconversionApi.updateConversionResult( table, data );\n\t\t} );\n\t};\n}\n\n/**\n * A conversion helper that skips empty <tr> elements from upcasting at the beginning of the table.\n *\n * An empty row is considered a table model error but when handling clipboard data there could be rows that contain only row-spanned cells\n * and empty TR-s are used to maintain the table structure (also {@link module:table/tablewalker~TableWalker} assumes that there are only\n * rows that have related `tableRow` elements).\n *\n * *Note:* Only the first empty rows are removed because they have no meaning and it solves the issue\n * of an improper table with all empty rows.\n *\n * @returns {Function} Conversion helper.\n */\nexport function skipEmptyTableRow() {\n\treturn dispatcher => {\n\t\tdispatcher.on( 'element:tr', ( evt, data ) => {\n\t\t\tif ( data.viewItem.isEmpty && data.modelCursor.index == 0 ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t};\n}\n\n/**\n * A converter that ensures an empty paragraph is inserted in a table cell if no other content was converted.\n *\n * @returns {Function} Conversion helper.\n */\nexport function ensureParagraphInTableCell( elementName ) {\n\treturn dispatcher => {\n\t\tdispatcher.on( `element:${ elementName }`, ( evt, data, conversionApi ) => {\n\t\t\t// The default converter will create a model range on converted table cell.\n\t\t\tif ( !data.modelRange ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ensure a paragraph in the model for empty table cells for converted table cells.\n\t\t\tif ( data.viewItem.isEmpty ) {\n\t\t\t\tconst tableCell = data.modelRange.start.nodeAfter;\n\t\t\t\tconst modelCursor = conversionApi.writer.createPositionAt( tableCell, 0 );\n\n\t\t\t\tconversionApi.writer.insertElement( 'paragraph', modelCursor );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\t};\n}\n\n// Get view `<table>` element from the view widget (`<figure>`).\n//\n// @private\n// @param {module:engine/view/element~Element} figureView\n// @returns {module:engine/view/element~Element}\nfunction getViewTableFromFigure( figureView ) {\n\tfor ( const figureChild of figureView.getChildren() ) {\n\t\tif ( figureChild.is( 'element', 'table' ) ) {\n\t\t\treturn figureChild;\n\t\t}\n\t}\n}\n\n// Scans table rows and extracts required metadata from the table:\n//\n// headingRows    - The number of rows that go as table headers.\n// headingColumns - The maximum number of row headings.\n// rows           - Sorted `<tr>` elements as they should go into the model - ie. if `<thead>` is inserted after `<tbody>` in the view.\n//\n// @private\n// @param {module:engine/view/element~Element} viewTable\n// @returns {{headingRows, headingColumns, rows}}\nfunction scanTable( viewTable ) {\n\tconst tableMeta = {\n\t\theadingRows: 0,\n\t\theadingColumns: 0\n\t};\n\n\t// The `<tbody>` and `<thead>` sections in the DOM do not have to be in order `<thead>` -> `<tbody>` and there might be more than one\n\t// of them.\n\t// As the model does not have these sections, rows from different sections must be sorted.\n\t// For example, below is a valid HTML table:\n\t//\n\t//\t\t<table>\n\t//\t\t\t<tbody><tr><td>2</td></tr></tbody>\n\t//\t\t\t<thead><tr><td>1</td></tr></thead>\n\t//\t\t\t<tbody><tr><td>3</td></tr></tbody>\n\t//\t\t</table>\n\t//\n\t// But browsers will render rows in order as: 1 as the heading and 2 and 3 as the body.\n\tconst headRows = [];\n\tconst bodyRows = [];\n\n\t// Currently the editor does not support more then one <thead> section.\n\t// Only the first <thead> from the view will be used as a heading row and the others will be converted to body rows.\n\tlet firstTheadElement;\n\n\tfor ( const tableChild of Array.from( viewTable.getChildren() ) ) {\n\t\t// Only `<thead>`, `<tbody>` & `<tfoot>` from allowed table children can have `<tr>`s.\n\t\t// The else is for future purposes (mainly `<caption>`).\n\t\tif ( tableChild.name === 'tbody' || tableChild.name === 'thead' || tableChild.name === 'tfoot' ) {\n\t\t\t// Save the first `<thead>` in the table as table header - all other ones will be converted to table body rows.\n\t\t\tif ( tableChild.name === 'thead' && !firstTheadElement ) {\n\t\t\t\tfirstTheadElement = tableChild;\n\t\t\t}\n\n\t\t\t// There might be some extra empty text nodes between the `<tr>`s.\n\t\t\t// Make sure further code operates on `tr`s only. (#145)\n\t\t\tconst trs = Array.from( tableChild.getChildren() ).filter( el => el.is( 'element', 'tr' ) );\n\n\t\t\tfor ( const tr of trs ) {\n\t\t\t\t// This <tr> is a child of a first <thead> element.\n\t\t\t\tif ( tr.parent.name === 'thead' && tr.parent === firstTheadElement ) {\n\t\t\t\t\ttableMeta.headingRows++;\n\t\t\t\t\theadRows.push( tr );\n\t\t\t\t} else {\n\t\t\t\t\tbodyRows.push( tr );\n\t\t\t\t\t// For other rows check how many column headings this row has.\n\n\t\t\t\t\tconst headingCols = scanRowForHeadingColumns( tr, tableMeta, firstTheadElement );\n\n\t\t\t\t\tif ( headingCols > tableMeta.headingColumns ) {\n\t\t\t\t\t\ttableMeta.headingColumns = headingCols;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\ttableMeta.rows = [ ...headRows, ...bodyRows ];\n\n\treturn tableMeta;\n}\n\n// Scans a `<tr>` element and its children for metadata:\n// - For heading row:\n//     - Adds this row to either the heading or the body rows.\n//     - Updates the number of heading rows.\n// - For body rows:\n//     - Calculates the number of column headings.\n//\n// @private\n// @param {module:engine/view/element~Element} tr\n// @returns {Number}\nfunction scanRowForHeadingColumns( tr ) {\n\tlet headingColumns = 0;\n\tlet index = 0;\n\n\t// Filter out empty text nodes from tr children.\n\tconst children = Array.from( tr.getChildren() )\n\t\t.filter( child => child.name === 'th' || child.name === 'td' );\n\n\t// Count starting adjacent <th> elements of a <tr>.\n\twhile ( index < children.length && children[ index ].name === 'th' ) {\n\t\tconst th = children[ index ];\n\n\t\t// Adjust columns calculation by the number of spanned columns.\n\t\tconst colspan = parseInt( th.getAttribute( 'colspan' ) || 1 );\n\n\t\theadingColumns = headingColumns + colspan;\n\t\tindex++;\n\t}\n\n\treturn headingColumns;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/plaintableoutput\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport Table from './table';\n\n/**\n * The plain table output feature.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class PlainTableOutput extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'PlainTableOutput';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ Table ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Override default table data downcast converter.\n\t\teditor.conversion.for( 'dataDowncast' ).elementToStructure( {\n\t\t\tmodel: 'table',\n\t\t\tview: downcastTableElement,\n\t\t\tconverterPriority: 'high'\n\t\t} );\n\n\t\t// Make sure table <caption> is downcasted into <caption> in the data pipeline when necessary.\n\t\tif ( editor.plugins.has( 'TableCaption' ) ) {\n\t\t\teditor.conversion.for( 'dataDowncast' ).elementToElement( {\n\t\t\t\tmodel: 'caption',\n\t\t\t\tview: ( modelElement, { writer } ) => {\n\t\t\t\t\tif ( modelElement.parent.name === 'table' ) {\n\t\t\t\t\t\treturn writer.createContainerElement( 'caption' );\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tconverterPriority: 'high'\n\t\t\t} );\n\t\t}\n\n\t\t// Handle border-style, border-color, border-width and background-color table attributes.\n\t\tif ( editor.plugins.has( 'TableProperties' ) ) {\n\t\t\tdowncastTableBorderAndBackgroundAttributes( editor );\n\t\t}\n\t}\n}\n\n// The plain table downcast converter callback.\n//\n// @private\n// @param {module:engine/model/element~Element} Table model element.\n// @param {module:engine/conversion/downcastdispatcher~DowncastConversionApi} conversionApi The conversion API object.\n// @returns {module:engine/view/containerelement~ContainerElement} Created element.\nfunction downcastTableElement( table, { writer } ) {\n\tconst headingRows = table.getAttribute( 'headingRows' ) || 0;\n\n\t// Table head rows slot.\n\tconst headRowsSlot = writer.createSlot( element =>\n\t\telement.is( 'element', 'tableRow' ) && element.index < headingRows\n\t);\n\n\t// Table body rows slot.\n\tconst bodyRowsSlot = writer.createSlot( element =>\n\t\telement.is( 'element', 'tableRow' ) && element.index >= headingRows\n\t);\n\n\t// Table children slot.\n\tconst childrenSlot = writer.createSlot( element => !element.is( 'element', 'tableRow' ) );\n\n\t// Table <thead> element with all the heading rows.\n\tconst theadElement = writer.createContainerElement( 'thead', null, headRowsSlot );\n\n\t// Table <tbody> element with all the body rows.\n\tconst tbodyElement = writer.createContainerElement( 'tbody', null, bodyRowsSlot );\n\n\t// Table contents element containing <thead> and <tbody> when necessary.\n\tconst tableContentElements = [];\n\n\tif ( headingRows ) {\n\t\ttableContentElements.push( theadElement );\n\t}\n\n\tif ( headingRows < table.childCount ) {\n\t\ttableContentElements.push( tbodyElement );\n\t}\n\n\t// Create table structure.\n\t//\n\t// <table>\n\t//    {children-slot-like-caption}\n\t//    <thead>\n\t//        {table-head-rows-slot}\n\t//    </thead>\n\t//    <tbody>\n\t//        {table-body-rows-slot}\n\t//    </tbody>\n\t// </table>\n\treturn writer.createContainerElement( 'table', null, [ childrenSlot, ...tableContentElements ] );\n}\n\n// Register table border and background attributes converters.\n//\n// @private\n// @param {module:core/editor/editor~Editor} editor\nfunction downcastTableBorderAndBackgroundAttributes( editor ) {\n\tconst modelAttributes = {\n\t\t'border-width': 'tableBorderWidth',\n\t\t'border-color': 'tableBorderColor',\n\t\t'border-style': 'tableBorderStyle',\n\t\t'background-color': 'tableBackgroundColor'\n\t};\n\n\tfor ( const [ styleName, modelAttribute ] of Object.entries( modelAttributes ) ) {\n\t\teditor.conversion.for( 'dataDowncast' ).add( dispatcher => {\n\t\t\treturn dispatcher.on( `attribute:${ modelAttribute }:table`, ( evt, data, conversionApi ) => {\n\t\t\t\tconst { item, attributeNewValue } = data;\n\t\t\t\tconst { mapper, writer } = conversionApi;\n\n\t\t\t\tif ( !conversionApi.consumable.consume( item, evt.name ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst table = mapper.toViewElement( item );\n\n\t\t\t\tif ( attributeNewValue ) {\n\t\t\t\t\twriter.setStyle( styleName, attributeNewValue, table );\n\t\t\t\t} else {\n\t\t\t\t\twriter.removeStyle( styleName, table );\n\t\t\t\t}\n\t\t\t}, { priority: 'high' } );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/table\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { Widget } from 'ckeditor5/src/widget';\n\nimport TableEditing from './tableediting';\nimport TableUI from './tableui';\nimport TableSelection from './tableselection';\nimport TableClipboard from './tableclipboard';\nimport TableKeyboard from './tablekeyboard';\nimport TableMouse from './tablemouse';\n\nimport '../theme/table.css';\n\n/**\n * The table plugin.\n *\n * For a detailed overview, check the {@glink features/table Table feature documentation}.\n *\n * This is a \"glue\" plugin that loads the following table features:\n *\n * * {@link module:table/tableediting~TableEditing editing feature},\n * * {@link module:table/tableselection~TableSelection selection feature},\n * * {@link module:table/tablekeyboard~TableKeyboard keyboard navigation feature},\n * * {@link module:table/tablemouse~TableMouse mouse selection feature},\n * * {@link module:table/tableclipboard~TableClipboard clipboard feature},\n * * {@link module:table/tableui~TableUI UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class Table extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableEditing, TableUI, TableSelection, TableMouse, TableKeyboard, TableClipboard, Widget ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'Table';\n\t}\n}\n\n/**\n * The configuration of the table feature. Used by the table feature in the `@ckeditor/ckeditor5-table` package.\n *\n *\t\tClassicEditor\n *\t\t\t.create( editorElement, {\n * \t\t\t\ttable: ... // Table feature options.\n *\t\t\t} )\n *\t\t\t.then( ... )\n *\t\t\t.catch( ... );\n *\n * See {@link module:core/editor/editorconfig~EditorConfig all editor options}.\n *\n * @interface TableConfig\n */\n\n/**\n * The configuration of the {@link module:table/table~Table} feature.\n *\n * Read more in {@link module:table/table~TableConfig}.\n *\n * @member {module:table/table~TableConfig} module:core/editor/editorconfig~EditorConfig#table\n */\n\n/**\n * Number of rows and columns to render by default as table heading when inserting new tables.\n *\n * You can configure it like this:\n *\n *\t\tconst tableConfig = {\n *\t\t\tdefaultHeadings: {\n *\t\t\t\trows: 1,\n *\t\t\t\tcolumns: 1\n *\t\t\t}\n *\t\t};\n *\n * Both rows and columns properties are optional defaulting to 0 (no heading).\n *\n * @member {Object} module:table/table~TableConfig#defaultHeadings\n */\n\n/**\n * An array of color definitions (either strings or objects).\n *\n *\t\tconst colors = [\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(0, 0%, 60%)',\n *\t\t\t\tlabel: 'Grey'\n *\t\t\t},\n *\t\t\t'hsl(0, 0%, 80%)',\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n *\t\t\t\tlabel: 'Light grey'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(0, 0%, 100%)',\n *\t\t\t\tlabel: 'White',\n *\t\t\t\thasBorder: true\n *\t\t\t},\n *\t\t\t'#FF0000'\n *\t\t]\n *\n * Usually used as a configuration parameter, for instance in\n * {@link module:table/table~TableConfig#tableProperties `config.table.tableProperties`}\n * or {@link module:table/table~TableConfig#tableCellProperties `config.table.tableCellProperties`}.\n *\n * @typedef {Array.<String|Object>} module:table/table~TableColorConfig\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecaption\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport TableCaptionEditing from './tablecaption/tablecaptionediting';\nimport TableCaptionUI from './tablecaption/tablecaptionui';\n\nimport '../theme/tablecaption.css';\n\n/**\n * The table caption plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableCaption extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableCaption';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableCaptionEditing, TableCaptionUI ];\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecaption/tablecaptionediting\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { Element, enablePlaceholder } from 'ckeditor5/src/engine';\nimport { toWidgetEditable } from 'ckeditor5/src/widget';\n\nimport injectTableCaptionPostFixer from '../converters/table-caption-post-fixer';\nimport ToggleTableCaptionCommand from './toggletablecaptioncommand';\nimport { isTable, matchTableCaptionViewElement } from './utils';\n\n/**\n * The table caption editing plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableCaptionEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableCaptionEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * A map that keeps saved JSONified table captions and table model elements they are\n\t\t * associated with.\n\t\t *\n\t\t * To learn more about this system, see {@link #_saveCaption}.\n\t\t *\n\t\t * @member {WeakMap.<module:engine/model/element~Element,Object>}\n\t\t */\n\t\tthis._savedCaptionsMap = new WeakMap();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst view = editor.editing.view;\n\t\tconst t = editor.t;\n\n\t\tif ( !schema.isRegistered( 'caption' ) ) {\n\t\t\tschema.register( 'caption', {\n\t\t\t\tallowIn: 'table',\n\t\t\t\tallowContentOf: '$block',\n\t\t\t\tisLimit: true\n\t\t\t} );\n\t\t} else {\n\t\t\tschema.extend( 'caption', {\n\t\t\t\tallowIn: 'table'\n\t\t\t} );\n\t\t}\n\n\t\teditor.commands.add( 'toggleTableCaption', new ToggleTableCaptionCommand( this.editor ) );\n\n\t\t// View -> model converter for the data pipeline.\n\t\teditor.conversion.for( 'upcast' ).elementToElement( {\n\t\t\tview: matchTableCaptionViewElement,\n\t\t\tmodel: 'caption'\n\t\t} );\n\n\t\t// Model -> view converter for the data pipeline.\n\t\teditor.conversion.for( 'dataDowncast' ).elementToElement( {\n\t\t\tmodel: 'caption',\n\t\t\tview: ( modelElement, { writer } ) => {\n\t\t\t\tif ( !isTable( modelElement.parent ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn writer.createContainerElement( 'figcaption' );\n\t\t\t}\n\t\t} );\n\n\t\t// Model -> view converter for the editing pipeline.\n\t\teditor.conversion.for( 'editingDowncast' ).elementToElement( {\n\t\t\tmodel: 'caption',\n\t\t\tview: ( modelElement, { writer } ) => {\n\t\t\t\tif ( !isTable( modelElement.parent ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst figcaptionElement = writer.createEditableElement( 'figcaption' );\n\t\t\t\twriter.setCustomProperty( 'tableCaption', true, figcaptionElement );\n\n\t\t\t\tenablePlaceholder( {\n\t\t\t\t\tview,\n\t\t\t\t\telement: figcaptionElement,\n\t\t\t\t\ttext: t( 'Enter table caption' ),\n\t\t\t\t\tkeepOnFocus: true\n\t\t\t\t} );\n\n\t\t\t\treturn toWidgetEditable( figcaptionElement, writer );\n\t\t\t}\n\t\t} );\n\n\t\tinjectTableCaptionPostFixer( editor.model );\n\t}\n\n\t/**\n\t * Returns the saved {@link module:engine/model/element~Element#toJSON JSONified} caption\n\t * of a table model element.\n\t *\n\t * See {@link #_saveCaption}.\n\t *\n\t * @protected\n\t * @param {module:engine/model/element~Element} tableModelElement The model element the\n\t * caption should be returned for.\n\t * @returns {module:engine/model/element~Element|null} The model caption element or `null` if there is none.\n\t */\n\t_getSavedCaption( tableModelElement ) {\n\t\tconst jsonObject = this._savedCaptionsMap.get( tableModelElement );\n\n\t\treturn jsonObject ? Element.fromJSON( jsonObject ) : null;\n\t}\n\n\t/**\n\t * Saves a {@link module:engine/model/element~Element#toJSON JSONified} caption for\n\t * a table element to allow restoring it in the future.\n\t *\n\t * A caption is saved every time it gets hidden. The\n\t * user should be able to restore it on demand.\n\t *\n\t * **Note**: The caption cannot be stored in the table model element attribute because,\n\t * for instance, when the model state propagates to collaborators, the attribute would get\n\t * lost (mainly because it does not convert to anything when the caption is hidden) and\n\t * the states of collaborators' models would de-synchronize causing numerous issues.\n\t *\n\t * See {@link #_getSavedCaption}.\n\t *\n\t * @protected\n\t * @param {module:engine/model/element~Element} tableModelElement The model element the\n\t * caption is saved for.\n\t * @param {module:engine/model/element~Element} caption The caption model element to be saved.\n\t */\n\t_saveCaption( tableModelElement, caption ) {\n\t\tthis._savedCaptionsMap.set( tableModelElement, caption.toJSON() );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n* @module table/tablecaption/tablecaptionui\n*/\n\nimport { Plugin, icons } from 'ckeditor5/src/core';\nimport { ButtonView } from 'ckeditor5/src/ui';\n\nimport { getCaptionFromModelSelection } from './utils';\n\n/**\n  * The table caption UI plugin. It introduces the `'toggleTableCaption'` UI button.\n  *\n  * @extends module:core/plugin~Plugin\n  */\nexport default class TableCaptionUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableCaptionUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\t\tconst t = editor.t;\n\n\t\teditor.ui.componentFactory.add( 'toggleTableCaption', locale => {\n\t\t\tconst command = editor.commands.get( 'toggleTableCaption' );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\ticon: icons.caption,\n\t\t\t\ttooltip: true,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\t\t\tview.bind( 'label' ).to( command, 'value', value => value ? t( 'Toggle caption off' ) : t( 'Toggle caption on' ) );\n\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( 'toggleTableCaption', { focusCaptionOnShow: true } );\n\n\t\t\t\t// Scroll to the selection and highlight the caption if the caption showed up.\n\t\t\t\tif ( command.value ) {\n\t\t\t\t\tconst modelCaptionElement = getCaptionFromModelSelection( editor.model.document.selection );\n\t\t\t\t\tconst figcaptionElement = editor.editing.mapper.toViewElement( modelCaptionElement );\n\n\t\t\t\t\tif ( !figcaptionElement ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\teditingView.scrollToTheSelection();\n\t\t\t\t\teditingView.change( writer => {\n\t\t\t\t\t\twriter.addClass( 'table__caption_highlighted', figcaptionElement );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n* @module table/tablecaption/toggletablecaptioncommand\n*/\n\nimport { Command } from 'ckeditor5/src/core';\n\nimport { getCaptionFromTableModelElement, getSelectionAffectedTable } from './utils';\n\n/**\n * The toggle table caption command.\n *\n * This command is registered by {@link module:table/tablecaption/tablecaptionediting~TableCaptionEditing} as the\n * `'toggleTableCaption'` editor command.\n *\n * Executing this command:\n *\n * * either adds or removes the table caption of a selected table (depending on whether the caption is present or not),\n * * removes the table caption if the selection is anchored in one.\n *\n *\t\t// Toggle the presence of the caption.\n *\t\teditor.execute( 'toggleTableCaption' );\n *\n * **Note**: You can move the selection to the caption right away as it shows up upon executing this command by using\n * the `focusCaptionOnShow` option:\n *\n *\t\teditor.execute( 'toggleTableCaption', { focusCaptionOnShow: true } );\n *\n * @extends module:core/command~Command\n */\nexport default class ToggleTableCaptionCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst editor = this.editor;\n\t\tconst tableElement = getSelectionAffectedTable( editor.model.document.selection );\n\n\t\tthis.isEnabled = !!tableElement;\n\n\t\tif ( !this.isEnabled ) {\n\t\t\tthis.value = false;\n\t\t} else {\n\t\t\tthis.value = !!getCaptionFromTableModelElement( tableElement );\n\t\t}\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t *\t\teditor.execute( 'toggleTableCaption' );\n\t *\n\t * @param {Object} [options] Options for the executed command.\n\t * @param {String} [options.focusCaptionOnShow] When true and the caption shows up, the selection will be moved into it straight away.\n\t * @fires execute\n\t */\n\texecute( options = {} ) {\n\t\tconst { focusCaptionOnShow } = options;\n\n\t\tthis.editor.model.change( writer => {\n\t\t\tif ( this.value ) {\n\t\t\t\tthis._hideTableCaption( writer );\n\t\t\t} else {\n\t\t\t\tthis._showTableCaption( writer, focusCaptionOnShow );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Shows the table caption. Also:\n\t *\n\t * * it attempts to restore the caption content from the `TableCaptionEditing` caption registry,\n\t * * it moves the selection to the caption right away, it the `focusCaptionOnShow` option was set.\n\t *\n\t * @private\n\t * @param {module:engine/model/writer~Writer} writer\n\t * @param {Boolean} focusCaptionOnShow Default focus behavior when showing the caption.\n\t */\n\t_showTableCaption( writer, focusCaptionOnShow ) {\n\t\tconst model = this.editor.model;\n\t\tconst tableElement = getSelectionAffectedTable( model.document.selection );\n\t\tconst tableCaptionEditing = this.editor.plugins.get( 'TableCaptionEditing' );\n\t\tconst savedCaptionElement = tableCaptionEditing._getSavedCaption( tableElement );\n\n\t\t// Try restoring the caption from the TableCaptionEditing plugin storage.\n\t\tconst newCaptionElement = savedCaptionElement || writer.createElement( 'caption' );\n\n\t\twriter.append( newCaptionElement, tableElement );\n\n\t\tif ( focusCaptionOnShow ) {\n\t\t\twriter.setSelection( newCaptionElement, 'in' );\n\t\t}\n\t}\n\n\t/**\n\t * Hides the caption of a selected table (or an table caption the selection is anchored to).\n\t *\n\t * The content of the caption is stored in the `TableCaptionEditing` caption registry to make this\n\t * a reversible action.\n\t *\n\t * @private\n\t * @param {module:engine/model/writer~Writer} writer\n\t */\n\t_hideTableCaption( writer ) {\n\t\tconst model = this.editor.model;\n\t\tconst tableElement = getSelectionAffectedTable( model.document.selection );\n\t\tconst tableCaptionEditing = this.editor.plugins.get( 'TableCaptionEditing' );\n\t\tconst captionElement = getCaptionFromTableModelElement( tableElement );\n\n\t\t// Store the caption content so it can be restored quickly if the user changes their mind.\n\t\ttableCaptionEditing._saveCaption( tableElement, captionElement );\n\n\t\twriter.setSelection( writer.createRangeIn( tableElement.getChild( 0 ).getChild( 0 ) ) );\n\t\twriter.remove( captionElement );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecaption/utils\n */\n\n/**\n * Checks if the provided model element is a `table`.\n *\n * @param {module:engine/model/element~Element} modelElement Element to check if it is a table.\n * @returns {Boolean}\n */\nexport function isTable( modelElement ) {\n\treturn !!modelElement && modelElement.is( 'element', 'table' );\n}\n\n/**\n * Returns the caption model element from a given table element. Returns `null` if no caption is found.\n *\n * @param {module:engine/model/element~Element} tableModelElement Table element in which we will try to find a caption element.\n * @returns {module:engine/model/element~Element|null}\n */\nexport function getCaptionFromTableModelElement( tableModelElement ) {\n\tfor ( const node of tableModelElement.getChildren() ) {\n\t\tif ( node.is( 'element', 'caption' ) ) {\n\t\t\treturn node;\n\t\t}\n\t}\n\n\treturn null;\n}\n\n/**\n * Returns the caption model element for a model selection. Returns `null` if the selection has no caption element ancestor.\n *\n * @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n * The selection checked for caption presence.\n * @returns {module:engine/model/element~Element|null}\n */\nexport function getCaptionFromModelSelection( selection ) {\n\tconst tableElement = getSelectionAffectedTable( selection );\n\n\tif ( !tableElement ) {\n\t\treturn null;\n\t}\n\n\treturn getCaptionFromTableModelElement( tableElement );\n}\n\n/**\n * {@link module:engine/view/matcher~Matcher} pattern. Checks if a given element is a caption.\n *\n * There are two possible forms of the valid caption:\n *  - A `<figcaption>` element inside a `<figure class=\"table\">` element.\n *  - A `<caption>` inside a <table>.\n *\n * @param {module:engine/view/element~Element} element\n * @returns {Object|null} Returns the object accepted by {@link module:engine/view/matcher~Matcher} or `null` if the element\n * cannot be matched.\n */\nexport function matchTableCaptionViewElement( element ) {\n\tconst parent = element.parent;\n\n\tif ( element.name == 'figcaption' && parent && parent.name == 'figure' && parent.hasClass( 'table' ) ) {\n\t\treturn { name: true };\n\t}\n\n\tif ( element.name == 'caption' && parent && parent.name == 'table' ) {\n\t\treturn { name: true };\n\t}\n\n\treturn null;\n}\n\n/**\n * Depending on the position of the selection we either return the table under cursor or look for the table higher in the hierarchy.\n *\n * @param {module:engine/model/position~Position} position\n * @returns {module:engine/model/element~Element}\n */\nexport function getSelectionAffectedTable( selection ) {\n\tconst selectedElement = selection.getSelectedElement();\n\n\t// Is the command triggered from the `tableToolbar`?\n\tif ( selectedElement && selectedElement.is( 'element', 'table' ) ) {\n\t\treturn selectedElement;\n\t}\n\n\treturn selection.getFirstPosition().findAncestor( 'table' );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport TableCellPropertiesUI from './tablecellproperties/tablecellpropertiesui';\nimport TableCellPropertiesEditing from './tablecellproperties/tablecellpropertiesediting';\n\n/**\n * The table cell properties feature. Enables support for setting properties of table cells (size, border, background, etc.).\n *\n * Read more in the {@glink features/table#table-and-cell-styling-tools Table and cell styling tools} section.\n * See also the {@link module:table/tableproperties~TableProperties} plugin.\n *\n * This is a \"glue\" plugin that loads the\n * {@link module:table/tablecellproperties/tablecellpropertiesediting~TableCellPropertiesEditing table cell properties editing feature} and\n * the {@link module:table/tablecellproperties/tablecellpropertiesui~TableCellPropertiesUI table cell properties UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableCellProperties extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableCellProperties';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableCellPropertiesEditing, TableCellPropertiesUI ];\n\t}\n}\n\n/**\n * The configuration of the table cell properties user interface (balloon). It allows to define:\n *\n * * The color palette for the cell border color style field (`tableCellProperties.borderColors`),\n * * The color palette for the cell background style field (`tableCellProperties.backgroundColors`).\n *\n *\t\tconst tableConfig = {\n *\t\t\ttableCellProperties: {\n *\t\t\t\tborderColors: [\n *\t\t\t\t\t{\n *\t\t\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n *\t\t\t\t\t\tlabel: 'Light grey'\n *\t\t\t\t\t},\n *\t\t\t\t\t// ...\n *\t\t\t\t],\n *\t\t\t\tbackgroundColors: [\n *\t\t\t\t\t{\n *\t\t\t\t\t\tcolor: 'hsl(120, 75%, 60%)',\n *\t\t\t\t\t\tlabel: 'Green'\n *\t\t\t\t\t},\n *\t\t\t\t\t// ...\n *\t\t\t\t]\n *\t\t\t}\n *\t\t};\n *\n * * The default styles for table cells (`tableCellProperties.defaultProperties`):\n *\n *\t\tconst tableConfig = {\n *\t\t\ttableCellProperties: {\n *\t\t\t\tdefaultProperties: {\n *\t\t\t\t\thorizontalAlignment: 'right',\n *\t\t\t\t\tverticalAlignment: 'bottom',\n *\t\t\t\t\tpadding: '5px'\n *\t\t\t\t}\n *\t\t\t}\n *\t\t}\n *\n * \t {@link module:table/tableproperties~TablePropertiesOptions Read more about the supported properties.}\n *\n * **Note**: The `borderColors` and `backgroundColors` options do not impact the data loaded into the editor,\n * i.e. they do not limit or filter the colors in the data. They are used only in the user interface\n * allowing users to pick colors in a more convenient way. The `defaultProperties` option does impact the data.\n * Default values will not be kept in the editor model.\n *\n * The default color palettes for the cell background and the cell border are the same\n * ({@link module:table/utils/ui/table-properties~defaultColors check out their content}).\n *\n * Both color palette configurations must follow the\n * {@link module:table/table~TableColorConfig table color configuration format}.\n *\n * Read more about configuring the table feature in {@link module:table/table~TableConfig}.\n *\n * @member {Object} module:table/table~TableConfig#tableCellProperties\n */\n\n/**\n * The configuration of the table cell default properties feature.\n *\n * @typedef {Object} module:table/tablecellproperties~TableCellPropertiesOptions\n *\n * @property {String} width The default `width` of the table cell.\n *\n * @property {String} height The default `height` of the table cell.\n *\n * @property {String} padding The default `padding` of the table cell.\n *\n * @property {String} backgroundColor The default `background-color` of the table cell.\n *\n * @property {String} borderColor The default `border-color` of the table cell.\n *\n * @property {String} borderWidth The default `border-width` of the table cell.\n *\n * @property {String} [borderStyle='none'] The default `border-style` of the table cell.\n *\n * @property {String} [horizontalAlignment='center'] The default `horizontalAlignment` of the table cell.\n *\n * @property {String} [verticalAlignment='middle'] The default `verticalAlignment` of the table cell.\n */\n\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/commands/tablecellbackgroundcolorcommand\n */\n\nimport TableCellPropertyCommand from './tablecellpropertycommand';\n\n/**\n * The table cell background color command.\n *\n * The command is registered by the {@link module:table/tablecellproperties/tablecellpropertiesediting~TableCellPropertiesEditing} as\n * the `'tableCellBackgroundColor'` editor command.\n *\n * To change the background color of selected cells, execute the command:\n *\n *\t\teditor.execute( 'tableCellBackgroundColor', {\n *\t\t\tvalue: '#f00'\n *\t\t} );\n *\n * @extends module:table/tablecellproperties/commands/tablecellpropertycommand~TableCellPropertyCommand\n */\nexport default class TableCellBackgroundColorCommand extends TableCellPropertyCommand {\n\t/**\n\t * Creates a new `TableCellBackgroundColorCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableCellBackgroundColor', defaultValue );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/commands/tablecellbordercolorcommand\n */\n\nimport TableCellPropertyCommand from './tablecellpropertycommand';\nimport { getSingleValue } from '../../utils/table-properties';\n\n/**\n * The table cell border color command.\n *\n * The command is registered by the {@link module:table/tablecellproperties/tablecellpropertiesediting~TableCellPropertiesEditing} as\n * the `'tableCellBorderColor'` editor command.\n *\n * To change the border color of selected cells, execute the command:\n *\n *\t\teditor.execute( 'tableCellBorderColor', {\n *\t\t\tvalue: '#f00'\n *\t\t} );\n *\n * @extends module:table/tablecellproperties/commands/tablecellpropertycommand~TableCellPropertyCommand\n */\nexport default class TableCellBorderColorCommand extends TableCellPropertyCommand {\n\t/**\n\t * Creates a new `TableCellBorderColorCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableCellBorderColor', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getAttribute( tableCell ) {\n\t\tif ( !tableCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = getSingleValue( tableCell.getAttribute( this.attributeName ) );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/commands/tablecellborderstylecommand\n */\n\nimport TableCellPropertyCommand from './tablecellpropertycommand';\nimport { getSingleValue } from '../../utils/table-properties';\n\n/**\n * The table cell border style command.\n *\n * The command is registered by the {@link module:table/tablecellproperties/tablecellpropertiesediting~TableCellPropertiesEditing} as\n * the `'tableCellBorderStyle'` editor command.\n *\n * To change the border style of selected cells, execute the command:\n *\n *\t\teditor.execute( 'tableCellBorderStyle', {\n *\t\t\tvalue: 'dashed'\n *\t\t} );\n *\n * @extends module:table/tablecellproperties/commands/tablecellpropertycommand~TableCellPropertyCommand\n */\nexport default class TableCellBorderStyleCommand extends TableCellPropertyCommand {\n\t/**\n\t * Creates a new `TableCellBorderStyleCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableCellBorderStyle', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getAttribute( tableCell ) {\n\t\tif ( !tableCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = getSingleValue( tableCell.getAttribute( this.attributeName ) );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/commands/tablecellborderwidthcommand\n */\n\nimport TableCellPropertyCommand from './tablecellpropertycommand';\nimport { addDefaultUnitToNumericValue, getSingleValue } from '../../utils/table-properties';\n\n/**\n * The table cell border width command.\n *\n * The command is registered by the {@link module:table/tablecellproperties/tablecellpropertiesediting~TableCellPropertiesEditing} as\n * the `'tableCellBorderWidth'` editor command.\n *\n * To change the border width of selected cells, execute the command:\n *\n *\t\teditor.execute( 'tableCellBorderWidth', {\n *\t\t\tvalue: '5px'\n *\t\t} );\n *\n * **Note**: This command adds the default `'px'` unit to numeric values. Executing:\n *\n *\t\teditor.execute( 'tableCellBorderWidth', {\n *\t\t\tvalue: '5'\n *\t\t} );\n *\n * will set the `borderWidth` attribute to `'5px'` in the model.\n *\n * @extends module:table/tablecellproperties/commands/tablecellpropertycommand~TableCellPropertyCommand\n */\nexport default class TableCellBorderWidthCommand extends TableCellPropertyCommand {\n\t/**\n\t * Creates a new `TableCellBorderWidthCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableCellBorderWidth', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getAttribute( tableCell ) {\n\t\tif ( !tableCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = getSingleValue( tableCell.getAttribute( this.attributeName ) );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getValueToSet( value ) {\n\t\tvalue = addDefaultUnitToNumericValue( value, 'px' );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/commands/tablecellheightcommand\n */\n\nimport TableCellPropertyCommand from './tablecellpropertycommand';\nimport { addDefaultUnitToNumericValue } from '../../utils/table-properties';\n\n/**\n * The table cell height command.\n *\n * The command is registered by the {@link module:table/tablecellproperties/tablecellpropertiesediting~TableCellPropertiesEditing} as\n * the `'tableCellHeight'` editor command.\n *\n * To change the height of selected cells, execute the command:\n *\n *\t\teditor.execute( 'tableCellHeight', {\n *\t\t\tvalue: '50px'\n *\t\t} );\n *\n * **Note**: This command adds the default `'px'` unit to numeric values. Executing:\n *\n *\t\teditor.execute( 'tableCellHeight', {\n *\t\t\tvalue: '50'\n *\t\t} );\n *\n * will set the `height` attribute to `'50px'` in the model.\n *\n * @extends module:table/tablecellproperties/commands/tablecellpropertycommand~TableCellPropertyCommand\n */\nexport default class TableCellHeightCommand extends TableCellPropertyCommand {\n\t/**\n\t * Creates a new `TableCellHeightCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableCellHeight', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getValueToSet( value ) {\n\t\tvalue = addDefaultUnitToNumericValue( value, 'px' );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/commands/tablecellhorizontalalignmentcommand\n */\n\nimport TableCellPropertyCommand from './tablecellpropertycommand';\n\n/**\n * The table cell horizontal alignment command.\n *\n * The command is registered by the {@link module:table/tablecellproperties/tablecellpropertiesediting~TableCellPropertiesEditing} as\n * the `'tableCellHorizontalAlignment'` editor command.\n *\n * To change the horizontal text alignment of selected cells, execute the command:\n *\n *\t\teditor.execute( 'tableCellHorizontalAlignment', {\n *\t\t\tvalue: 'right'\n *\t\t} );\n *\n * @extends module:table/tablecellproperties/commands/tablecellpropertycommand~TableCellPropertyCommand\n */\nexport default class TableCellHorizontalAlignmentCommand extends TableCellPropertyCommand {\n\t/**\n\t * Creates a new `TableCellHorizontalAlignmentCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value for the \"alignment\" attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableCellHorizontalAlignment', defaultValue );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/commands/tablecellpaddingcommand\n */\n\nimport TableCellPropertyCommand from './tablecellpropertycommand';\nimport { addDefaultUnitToNumericValue, getSingleValue } from '../../utils/table-properties';\n\n/**\n * The table cell padding command.\n *\n * The command is registered by the {@link module:table/tablecellproperties/tablecellpropertiesediting~TableCellPropertiesEditing} as\n * the `'tableCellPadding'` editor command.\n *\n * To change the padding of selected cells, execute the command:\n *\n *\t\teditor.execute( 'tableCellPadding', {\n *\t\t\tvalue: '5px'\n *\t\t} );\n *\n * **Note**: This command adds the default `'px'` unit to numeric values. Executing:\n *\n *\t\teditor.execute( 'tableCellPadding', {\n *\t\t\tvalue: '5'\n *\t\t} );\n *\n * will set the `padding` attribute to `'5px'` in the model.\n *\n * @extends module:table/tablecellproperties/commands/tablecellpropertycommand~TableCellPropertyCommand\n */\nexport default class TableCellPaddingCommand extends TableCellPropertyCommand {\n\t/**\n\t * Creates a new `TableCellPaddingCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableCellPadding', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getAttribute( tableCell ) {\n\t\tif ( !tableCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = getSingleValue( tableCell.getAttribute( this.attributeName ) );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getValueToSet( value ) {\n\t\tvalue = addDefaultUnitToNumericValue( value, 'px' );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/commands/tablecellpropertycommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\n/**\n * The table cell attribute command.\n *\n * The command is a base command for other table cell property commands.\n *\n * @extends module:core/command~Command\n */\nexport default class TableCellPropertyCommand extends Command {\n\t/**\n\t * Creates a new `TableCellPropertyCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} attributeName Table cell attribute name.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, attributeName, defaultValue ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The attribute that will be set by the command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.attributeName = attributeName;\n\n\t\t/**\n\t\t * The default value for the attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {String}\n\t\t */\n\t\tthis._defaultValue = defaultValue;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst editor = this.editor;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst selectedTableCells = tableUtils.getSelectionAffectedTableCells( editor.model.document.selection );\n\n\t\tthis.isEnabled = !!selectedTableCells.length;\n\t\tthis.value = this._getSingleValue( selectedTableCells );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @fires execute\n\t * @param {Object} [options]\n\t * @param {*} [options.value] If set, the command will set the attribute on selected table cells.\n\t * If it is not set, the command will remove the attribute from the selected table cells.\n\t * @param {module:engine/model/batch~Batch} [options.batch] Pass the model batch instance to the command to aggregate changes,\n\t * for example to allow a single undo step for multiple executions.\n\t */\n\texecute( options = {} ) {\n\t\tconst { value, batch } = options;\n\t\tconst model = this.editor.model;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst tableCells = tableUtils.getSelectionAffectedTableCells( model.document.selection );\n\t\tconst valueToSet = this._getValueToSet( value );\n\n\t\tmodel.enqueueChange( batch, writer => {\n\t\t\tif ( valueToSet ) {\n\t\t\t\ttableCells.forEach( tableCell => writer.setAttribute( this.attributeName, valueToSet, tableCell ) );\n\t\t\t} else {\n\t\t\t\ttableCells.forEach( tableCell => writer.removeAttribute( this.attributeName, tableCell ) );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns the attribute value for a table cell.\n\t *\n\t * @param {module:engine/model/element~Element} tableCell\n\t * @returns {String|undefined}\n\t * @private\n\t */\n\t_getAttribute( tableCell ) {\n\t\tif ( !tableCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = tableCell.getAttribute( this.attributeName );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Returns the proper model value. It can be used to add a default unit to numeric values.\n\t *\n\t * @private\n\t * @param {*} value\n\t * @returns {*}\n\t */\n\t_getValueToSet( value ) {\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Returns a single value for all selected table cells. If the value is the same for all cells,\n\t * it will be returned (`undefined` otherwise).\n\t *\n\t * @param {Array.<module:engine/model/element~Element>} tableCell\n\t * @returns {*}\n\t * @private\n\t */\n\t_getSingleValue( tableCell ) {\n\t\tconst firstCellValue = this._getAttribute( tableCell[ 0 ] );\n\n\t\tconst everyCellHasAttribute = tableCell.every( tableCell => this._getAttribute( tableCell ) === firstCellValue );\n\n\t\treturn everyCellHasAttribute ? firstCellValue : undefined;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/commands/tablecellverticalalignmentcommand\n */\n\nimport TableCellPropertyCommand from './tablecellpropertycommand';\n\n/**\n * The table cell vertical alignment command.\n *\n * The command is registered by the {@link module:table/tablecellproperties/tablecellpropertiesediting~TableCellPropertiesEditing} as\n * the `'tableCellVerticalAlignment'` editor command.\n *\n * To change the vertical text alignment of selected cells, execute the command:\n *\n *\t\teditor.execute( 'tableCellVerticalAlignment', {\n *\t\t\tvalue: 'top'\n *\t\t} );\n *\n * The following values, corresponding to the\n * [`vertical-align` CSS attribute](https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align), are allowed:\n *\n * * `'top'`\n * * `'bottom'`\n *\n * The `'middle'` value is the default one so there is no need to set it.\n *\n * @extends module:table/tablecellproperties/commands/tablecellpropertycommand~TableCellPropertyCommand\n */\nexport default class TableCellVerticalAlignmentCommand extends TableCellPropertyCommand {\n\t/**\n\t * Creates a new `TableCellVerticalAlignmentCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value for the \"alignment\" attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableCellVerticalAlignment', defaultValue );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/tablecellpropertiesediting\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { addBorderRules, addPaddingRules, addBackgroundRules } from 'ckeditor5/src/engine';\n\nimport { downcastAttributeToStyle, upcastBorderStyles } from './../converters/tableproperties';\nimport TableEditing from './../tableediting';\nimport TableCellWidthEditing from '../tablecellwidth/tablecellwidthediting';\nimport TableCellPaddingCommand from './commands/tablecellpaddingcommand';\nimport TableCellHeightCommand from './commands/tablecellheightcommand';\nimport TableCellBackgroundColorCommand from './commands/tablecellbackgroundcolorcommand';\nimport TableCellVerticalAlignmentCommand from './commands/tablecellverticalalignmentcommand';\nimport TableCellHorizontalAlignmentCommand from './commands/tablecellhorizontalalignmentcommand';\nimport TableCellBorderStyleCommand from './commands/tablecellborderstylecommand';\nimport TableCellBorderColorCommand from './commands/tablecellbordercolorcommand';\nimport TableCellBorderWidthCommand from './commands/tablecellborderwidthcommand';\nimport { getNormalizedDefaultProperties } from '../utils/table-properties';\nimport { enableProperty } from '../utils/common';\n\nconst VALIGN_VALUES_REG_EXP = /^(top|middle|bottom)$/;\nconst ALIGN_VALUES_REG_EXP = /^(left|center|right|justify)$/;\n\n/**\n * The table cell properties editing feature.\n *\n * Introduces table cell model attributes and their conversion:\n *\n * - border: `tableCellBorderStyle`, `tableCellBorderColor` and `tableCellBorderWidth`\n * - background color: `tableCellBackgroundColor`\n * - cell padding: `tableCellPadding`\n * - horizontal and vertical alignment: `tableCellHorizontalAlignment`, `tableCellVerticalAlignment`\n * - cell width and height: `tableCellWidth`, `tableCellHeight`\n *\n * It also registers commands used to manipulate the above attributes:\n *\n * - border: the `'tableCellBorderStyle'`, `'tableCellBorderColor'` and `'tableCellBorderWidth'` commands\n * - background color: the `'tableCellBackgroundColor'` command\n * - cell padding: the `'tableCellPadding'` command\n * - horizontal and vertical alignment: the `'tableCellHorizontalAlignment'` and `'tableCellVerticalAlignment'` commands\n * - width and height: the `'tableCellWidth'` and `'tableCellHeight'` commands\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableCellPropertiesEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableCellPropertiesEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableEditing, TableCellWidthEditing ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst conversion = editor.conversion;\n\n\t\teditor.config.define( 'table.tableCellProperties.defaultProperties', {} );\n\n\t\tconst defaultTableCellProperties = getNormalizedDefaultProperties(\n\t\t\teditor.config.get( 'table.tableCellProperties.defaultProperties' ),\n\t\t\t{\n\t\t\t\tincludeVerticalAlignmentProperty: true,\n\t\t\t\tincludeHorizontalAlignmentProperty: true,\n\t\t\t\tincludePaddingProperty: true,\n\t\t\t\tisRightToLeftContent: editor.locale.contentLanguageDirection === 'rtl'\n\t\t\t}\n\t\t);\n\n\t\teditor.data.addStyleProcessorRules( addBorderRules );\n\t\tenableBorderProperties( schema, conversion, {\n\t\t\tcolor: defaultTableCellProperties.borderColor,\n\t\t\tstyle: defaultTableCellProperties.borderStyle,\n\t\t\twidth: defaultTableCellProperties.borderWidth\n\t\t} );\n\t\teditor.commands.add( 'tableCellBorderStyle', new TableCellBorderStyleCommand( editor, defaultTableCellProperties.borderStyle ) );\n\t\teditor.commands.add( 'tableCellBorderColor', new TableCellBorderColorCommand( editor, defaultTableCellProperties.borderColor ) );\n\t\teditor.commands.add( 'tableCellBorderWidth', new TableCellBorderWidthCommand( editor, defaultTableCellProperties.borderWidth ) );\n\n\t\tenableProperty( schema, conversion, {\n\t\t\tmodelAttribute: 'tableCellHeight',\n\t\t\tstyleName: 'height',\n\t\t\tdefaultValue: defaultTableCellProperties.height\n\t\t} );\n\t\teditor.commands.add( 'tableCellHeight', new TableCellHeightCommand( editor, defaultTableCellProperties.height ) );\n\n\t\teditor.data.addStyleProcessorRules( addPaddingRules );\n\t\tenableProperty( schema, conversion, {\n\t\t\tmodelAttribute: 'tableCellPadding',\n\t\t\tstyleName: 'padding',\n\t\t\treduceBoxSides: true,\n\t\t\tdefaultValue: defaultTableCellProperties.padding\n\t\t} );\n\t\teditor.commands.add( 'tableCellPadding', new TableCellPaddingCommand( editor, defaultTableCellProperties.padding ) );\n\n\t\teditor.data.addStyleProcessorRules( addBackgroundRules );\n\t\tenableProperty( schema, conversion, {\n\t\t\tmodelAttribute: 'tableCellBackgroundColor',\n\t\t\tstyleName: 'background-color',\n\t\t\tdefaultValue: defaultTableCellProperties.backgroundColor\n\t\t} );\n\t\teditor.commands.add(\n\t\t\t'tableCellBackgroundColor',\n\t\t\tnew TableCellBackgroundColorCommand( editor, defaultTableCellProperties.backgroundColor )\n\t\t);\n\n\t\tenableHorizontalAlignmentProperty( schema, conversion, defaultTableCellProperties.horizontalAlignment );\n\t\teditor.commands.add(\n\t\t\t'tableCellHorizontalAlignment',\n\t\t\tnew TableCellHorizontalAlignmentCommand( editor, defaultTableCellProperties.horizontalAlignment )\n\t\t);\n\n\t\tenableVerticalAlignmentProperty( schema, conversion, defaultTableCellProperties.verticalAlignment );\n\t\teditor.commands.add(\n\t\t\t'tableCellVerticalAlignment',\n\t\t\tnew TableCellVerticalAlignmentCommand( editor, defaultTableCellProperties.verticalAlignment )\n\t\t);\n\t}\n}\n\n// Enables the `'tableCellBorderStyle'`, `'tableCellBorderColor'` and `'tableCellBorderWidth'` attributes for table cells.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/conversion/conversion~Conversion} conversion\n// @param {Object} defaultBorder The default border values.\n// @param {String} defaultBorder.color The default `tableCellBorderColor` value.\n// @param {String} defaultBorder.style The default `tableCellBorderStyle` value.\n// @param {String} defaultBorder.width The default `tableCellBorderWidth` value.\nfunction enableBorderProperties( schema, conversion, defaultBorder ) {\n\tconst modelAttributes = {\n\t\twidth: 'tableCellBorderWidth',\n\t\tcolor: 'tableCellBorderColor',\n\t\tstyle: 'tableCellBorderStyle'\n\t};\n\n\tschema.extend( 'tableCell', {\n\t\tallowAttributes: Object.values( modelAttributes )\n\t} );\n\n\tupcastBorderStyles( conversion, 'td', modelAttributes, defaultBorder );\n\tupcastBorderStyles( conversion, 'th', modelAttributes, defaultBorder );\n\tdowncastAttributeToStyle( conversion, { modelElement: 'tableCell', modelAttribute: modelAttributes.style, styleName: 'border-style' } );\n\tdowncastAttributeToStyle( conversion, { modelElement: 'tableCell', modelAttribute: modelAttributes.color, styleName: 'border-color' } );\n\tdowncastAttributeToStyle( conversion, { modelElement: 'tableCell', modelAttribute: modelAttributes.width, styleName: 'border-width' } );\n}\n\n// Enables the `'tableCellHorizontalAlignment'` attribute for table cells.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/conversion/conversion~Conversion} conversion\n// @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n// @param {String} defaultValue The default horizontal alignment value.\nfunction enableHorizontalAlignmentProperty( schema, conversion, defaultValue ) {\n\tschema.extend( 'tableCell', {\n\t\tallowAttributes: [ 'tableCellHorizontalAlignment' ]\n\t} );\n\n\tconversion.for( 'downcast' )\n\t\t.attributeToAttribute( {\n\t\t\tmodel: {\n\t\t\t\tname: 'tableCell',\n\t\t\t\tkey: 'tableCellHorizontalAlignment'\n\t\t\t},\n\t\t\tview: alignment => ( {\n\t\t\t\tkey: 'style',\n\t\t\t\tvalue: {\n\t\t\t\t\t'text-align': alignment\n\t\t\t\t}\n\t\t\t} )\n\t\t} );\n\n\tconversion.for( 'upcast' )\n\t\t// Support for the `text-align:*;` CSS definition for the table cell alignment.\n\t\t.attributeToAttribute( {\n\t\t\tview: {\n\t\t\t\tname: /^(td|th)$/,\n\t\t\t\tstyles: {\n\t\t\t\t\t'text-align': ALIGN_VALUES_REG_EXP\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tkey: 'tableCellHorizontalAlignment',\n\t\t\t\tvalue: viewElement => {\n\t\t\t\t\tconst align = viewElement.getStyle( 'text-align' );\n\n\t\t\t\t\treturn align === defaultValue ? null : align;\n\t\t\t\t}\n\t\t\t}\n\t\t} )\n\t\t// Support for the `align` attribute as the backward compatibility while pasting from other sources.\n\t\t.attributeToAttribute( {\n\t\t\tview: {\n\t\t\t\tname: /^(td|th)$/,\n\t\t\t\tattributes: {\n\t\t\t\t\talign: ALIGN_VALUES_REG_EXP\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tkey: 'tableCellHorizontalAlignment',\n\t\t\t\tvalue: viewElement => {\n\t\t\t\t\tconst align = viewElement.getAttribute( 'align' );\n\n\t\t\t\t\treturn align === defaultValue ? null : align;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n}\n\n// Enables the `'verticalAlignment'` attribute for table cells.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/conversion/conversion~Conversion} conversion\n// @param {String} defaultValue The default vertical alignment value.\nfunction enableVerticalAlignmentProperty( schema, conversion, defaultValue ) {\n\tschema.extend( 'tableCell', {\n\t\tallowAttributes: [ 'tableCellVerticalAlignment' ]\n\t} );\n\n\tconversion.for( 'downcast' )\n\t\t.attributeToAttribute( {\n\t\t\tmodel: {\n\t\t\t\tname: 'tableCell',\n\t\t\t\tkey: 'tableCellVerticalAlignment'\n\t\t\t},\n\t\t\tview: alignment => ( {\n\t\t\t\tkey: 'style',\n\t\t\t\tvalue: {\n\t\t\t\t\t'vertical-align': alignment\n\t\t\t\t}\n\t\t\t} )\n\t\t} );\n\n\tconversion.for( 'upcast' )\n\t\t// Support for the `vertical-align:*;` CSS definition for the table cell alignment.\n\t\t.attributeToAttribute( {\n\t\t\tview: {\n\t\t\t\tname: /^(td|th)$/,\n\t\t\t\tstyles: {\n\t\t\t\t\t'vertical-align': VALIGN_VALUES_REG_EXP\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tkey: 'tableCellVerticalAlignment',\n\t\t\t\tvalue: viewElement => {\n\t\t\t\t\tconst align = viewElement.getStyle( 'vertical-align' );\n\n\t\t\t\t\treturn align === defaultValue ? null : align;\n\t\t\t\t}\n\t\t\t}\n\t\t} )\n\t\t// Support for the `align` attribute as the backward compatibility while pasting from other sources.\n\t\t.attributeToAttribute( {\n\t\t\tview: {\n\t\t\t\tname: /^(td|th)$/,\n\t\t\t\tattributes: {\n\t\t\t\t\tvalign: VALIGN_VALUES_REG_EXP\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tkey: 'tableCellVerticalAlignment',\n\t\t\t\tvalue: viewElement => {\n\t\t\t\t\tconst valign = viewElement.getAttribute( 'valign' );\n\n\t\t\t\t\treturn valign === defaultValue ? null : valign;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/tablecellpropertiesui\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { ButtonView, clickOutsideHandler, ContextualBalloon, getLocalizedColorOptions, normalizeColorOptions } from 'ckeditor5/src/ui';\n\nimport TableCellPropertiesView from './ui/tablecellpropertiesview';\nimport {\n\tcolorFieldValidator,\n\tgetLocalizedColorErrorText,\n\tgetLocalizedLengthErrorText,\n\tdefaultColors,\n\tlengthFieldValidator,\n\tlineWidthFieldValidator\n} from '../utils/ui/table-properties';\nimport { debounce } from 'lodash-es';\nimport { getTableWidgetAncestor } from '../utils/ui/widget';\nimport { getBalloonCellPositionData, repositionContextualBalloon } from '../utils/ui/contextualballoon';\n\nimport tableCellProperties from './../../theme/icons/table-cell-properties.svg';\nimport { getNormalizedDefaultProperties } from '../utils/table-properties';\n\nconst ERROR_TEXT_TIMEOUT = 500;\n\n// Map of view properties and related commands.\nconst propertyToCommandMap = {\n\tborderStyle: 'tableCellBorderStyle',\n\tborderColor: 'tableCellBorderColor',\n\tborderWidth: 'tableCellBorderWidth',\n\theight: 'tableCellHeight',\n\twidth: 'tableCellWidth',\n\tpadding: 'tableCellPadding',\n\tbackgroundColor: 'tableCellBackgroundColor',\n\thorizontalAlignment: 'tableCellHorizontalAlignment',\n\tverticalAlignment: 'tableCellVerticalAlignment'\n};\n\n/**\n * The table cell properties UI plugin. It introduces the `'tableCellProperties'` button\n * that opens a form allowing to specify the visual styling of a table cell.\n *\n * It uses the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableCellPropertiesUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ContextualBalloon ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableCellPropertiesUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'table.tableCellProperties', {\n\t\t\tborderColors: defaultColors,\n\t\t\tbackgroundColors: defaultColors\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\t/**\n\t\t * The default table cell properties.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:table/tablecellproperties~TableCellPropertiesOptions}\n\t\t */\n\t\tthis._defaultTableCellProperties = getNormalizedDefaultProperties(\n\t\t\teditor.config.get( 'table.tableCellProperties.defaultProperties' ),\n\t\t\t{\n\t\t\t\tincludeVerticalAlignmentProperty: true,\n\t\t\t\tincludeHorizontalAlignmentProperty: true,\n\t\t\t\tincludePaddingProperty: true,\n\t\t\t\tisRightToLeftContent: editor.locale.contentLanguageDirection === 'rtl'\n\t\t\t}\n\t\t);\n\n\t\t/**\n\t\t * The contextual balloon plugin instance.\n\t\t *\n\t\t * @private\n\t\t * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n\t\t */\n\t\tthis._balloon = editor.plugins.get( ContextualBalloon );\n\n\t\t/**\n\t\t * The cell properties form view displayed inside the balloon.\n\t\t *\n\t\t * @member {module:table/tablecellproperties/ui/tablecellpropertiesview~TableCellPropertiesView}\n\t\t */\n\t\tthis.view = this._createPropertiesView();\n\n\t\t/**\n\t\t * The batch used to undo all changes made by the form (which are live, as the user types)\n\t\t * when \"Cancel\" was pressed. Each time the view is shown, a new batch is created.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/model/batch~Batch}\n\t\t */\n\t\tthis._undoStepBatch = null;\n\n\t\teditor.ui.componentFactory.add( 'tableCellProperties', locale => {\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Cell properties' ),\n\t\t\t\ticon: tableCellProperties,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tthis.listenTo( view, 'execute', () => this._showView() );\n\n\t\t\tconst commands = Object.values( propertyToCommandMap )\n\t\t\t\t.map( commandName => editor.commands.get( commandName ) );\n\n\t\t\tview.bind( 'isEnabled' ).toMany( commands, 'isEnabled', ( ...areEnabled ) => (\n\t\t\t\tareEnabled.some( isCommandEnabled => isCommandEnabled )\n\t\t\t) );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\t// Destroy created UI components as they are not automatically destroyed.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/1341.\n\t\tthis.view.destroy();\n\t}\n\n\t/**\n\t * Creates the {@link module:table/tablecellproperties/ui/tablecellpropertiesview~TableCellPropertiesView} instance.\n\t *\n\t * @private\n\t * @returns {module:table/tablecellproperties/ui/tablecellpropertiesview~TableCellPropertiesView} The cell\n\t * properties form view instance.\n\t */\n\t_createPropertiesView() {\n\t\tconst editor = this.editor;\n\t\tconst viewDocument = editor.editing.view.document;\n\t\tconst config = editor.config.get( 'table.tableCellProperties' );\n\t\tconst borderColorsConfig = normalizeColorOptions( config.borderColors );\n\t\tconst localizedBorderColors = getLocalizedColorOptions( editor.locale, borderColorsConfig );\n\t\tconst backgroundColorsConfig = normalizeColorOptions( config.backgroundColors );\n\t\tconst localizedBackgroundColors = getLocalizedColorOptions( editor.locale, backgroundColorsConfig );\n\t\tconst view = new TableCellPropertiesView( editor.locale, {\n\t\t\tborderColors: localizedBorderColors,\n\t\t\tbackgroundColors: localizedBackgroundColors,\n\t\t\tdefaultTableCellProperties: this._defaultTableCellProperties\n\t\t} );\n\t\tconst t = editor.t;\n\n\t\t// Render the view so its #element is available for the clickOutsideHandler.\n\t\tview.render();\n\n\t\tthis.listenTo( view, 'submit', () => {\n\t\t\tthis._hideView();\n\t\t} );\n\n\t\tthis.listenTo( view, 'cancel', () => {\n\t\t\t// https://github.com/ckeditor/ckeditor5/issues/6180\n\t\t\tif ( this._undoStepBatch.operations.length ) {\n\t\t\t\teditor.execute( 'undo', this._undoStepBatch );\n\t\t\t}\n\n\t\t\tthis._hideView();\n\t\t} );\n\n\t\t// Close the balloon on Esc key press.\n\t\tview.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tthis._hideView();\n\t\t\tcancel();\n\t\t} );\n\n\t\t// Reposition the balloon or hide the form if a table cell is no longer selected.\n\t\tthis.listenTo( editor.ui, 'update', () => {\n\t\t\tif ( !getTableWidgetAncestor( viewDocument.selection ) ) {\n\t\t\t\tthis._hideView();\n\t\t\t} else if ( this._isViewVisible ) {\n\t\t\t\trepositionContextualBalloon( editor, 'cell' );\n\t\t\t}\n\t\t} );\n\n\t\t// Close on click outside of balloon panel element.\n\t\tclickOutsideHandler( {\n\t\t\temitter: view,\n\t\t\tactivator: () => this._isViewInBalloon,\n\t\t\tcontextElements: [ this._balloon.view.element ],\n\t\t\tcallback: () => this._hideView()\n\t\t} );\n\n\t\tconst colorErrorText = getLocalizedColorErrorText( t );\n\t\tconst lengthErrorText = getLocalizedLengthErrorText( t );\n\n\t\t// Create the \"UI -> editor data\" binding.\n\t\t// These listeners update the editor data (via table commands) when any observable\n\t\t// property of the view has changed. They also validate the value and display errors in the UI\n\t\t// when necessary. This makes the view live, which means the changes are\n\t\t// visible in the editing as soon as the user types or changes fields' values.\n\t\tview.on(\n\t\t\t'change:borderStyle',\n\t\t\tthis._getPropertyChangeCallback( 'tableCellBorderStyle', this._defaultTableCellProperties.borderStyle )\n\t\t);\n\n\t\tview.on( 'change:borderColor', this._getValidatedPropertyChangeCallback( {\n\t\t\tviewField: view.borderColorInput,\n\t\t\tcommandName: 'tableCellBorderColor',\n\t\t\terrorText: colorErrorText,\n\t\t\tvalidator: colorFieldValidator,\n\t\t\tdefaultValue: this._defaultTableCellProperties.borderColor\n\t\t} ) );\n\n\t\tview.on( 'change:borderWidth', this._getValidatedPropertyChangeCallback( {\n\t\t\tviewField: view.borderWidthInput,\n\t\t\tcommandName: 'tableCellBorderWidth',\n\t\t\terrorText: lengthErrorText,\n\t\t\tvalidator: lineWidthFieldValidator,\n\t\t\tdefaultValue: this._defaultTableCellProperties.borderWidth\n\t\t} ) );\n\n\t\tview.on( 'change:padding', this._getValidatedPropertyChangeCallback( {\n\t\t\tviewField: view.paddingInput,\n\t\t\tcommandName: 'tableCellPadding',\n\t\t\terrorText: lengthErrorText,\n\t\t\tvalidator: lengthFieldValidator,\n\t\t\tdefaultValue: this._defaultTableCellProperties.padding\n\t\t} ) );\n\n\t\tview.on( 'change:width', this._getValidatedPropertyChangeCallback( {\n\t\t\tviewField: view.widthInput,\n\t\t\tcommandName: 'tableCellWidth',\n\t\t\terrorText: lengthErrorText,\n\t\t\tvalidator: lengthFieldValidator,\n\t\t\tdefaultValue: this._defaultTableCellProperties.width\n\t\t} ) );\n\n\t\tview.on( 'change:height', this._getValidatedPropertyChangeCallback( {\n\t\t\tviewField: view.heightInput,\n\t\t\tcommandName: 'tableCellHeight',\n\t\t\terrorText: lengthErrorText,\n\t\t\tvalidator: lengthFieldValidator,\n\t\t\tdefaultValue: this._defaultTableCellProperties.height\n\t\t} ) );\n\n\t\tview.on( 'change:backgroundColor', this._getValidatedPropertyChangeCallback( {\n\t\t\tviewField: view.backgroundInput,\n\t\t\tcommandName: 'tableCellBackgroundColor',\n\t\t\terrorText: colorErrorText,\n\t\t\tvalidator: colorFieldValidator,\n\t\t\tdefaultValue: this._defaultTableCellProperties.backgroundColor\n\t\t} ) );\n\n\t\tview.on(\n\t\t\t'change:horizontalAlignment',\n\t\t\tthis._getPropertyChangeCallback( 'tableCellHorizontalAlignment', this._defaultTableCellProperties.horizontalAlignment )\n\t\t);\n\t\tview.on(\n\t\t\t'change:verticalAlignment',\n\t\t\tthis._getPropertyChangeCallback( 'tableCellVerticalAlignment', this._defaultTableCellProperties.verticalAlignment )\n\t\t);\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * In this method the \"editor data -> UI\" binding is happening.\n\t *\n\t * When executed, this method obtains selected cell property values from various table commands\n\t * and passes them to the {@link #view}.\n\t *\n\t * This way, the UI stays up–to–date with the editor data.\n\t *\n\t * @private\n\t */\n\t_fillViewFormFromCommandValues() {\n\t\tconst commands = this.editor.commands;\n\t\tconst borderStyleCommand = commands.get( 'tableCellBorderStyle' );\n\n\t\tObject.entries( propertyToCommandMap )\n\t\t\t.map( ( [ property, commandName ] ) => {\n\t\t\t\tconst defaultValue = this._defaultTableCellProperties[ property ] || '';\n\n\t\t\t\treturn [ property, commands.get( commandName ).value || defaultValue ];\n\t\t\t} )\n\t\t\t.forEach( ( [ property, value ] ) => {\n\t\t\t\t// Do not set the `border-color` and `border-width` fields if `border-style:none`.\n\t\t\t\tif ( ( property === 'borderColor' || property === 'borderWidth' ) && borderStyleCommand.value === 'none' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.view.set( property, value );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Shows the {@link #view} in the {@link #_balloon}.\n\t *\n\t * **Note**: Each time a view is shown, a new {@link #_undoStepBatch} is created. It contains\n\t * all changes made to the document when the view is visible, allowing a single undo step\n\t * for all of them.\n\t *\n\t * @protected\n\t */\n\t_showView() {\n\t\tconst editor = this.editor;\n\n\t\t// Update the view with the model values.\n\t\tthis._fillViewFormFromCommandValues();\n\n\t\tthis._balloon.add( {\n\t\t\tview: this.view,\n\t\t\tposition: getBalloonCellPositionData( editor )\n\t\t} );\n\n\t\t// Create a new batch. Clicking \"Cancel\" will undo this batch.\n\t\tthis._undoStepBatch = editor.model.createBatch();\n\n\t\t// Basic a11y.\n\t\tthis.view.focus();\n\t}\n\n\t/**\n\t * Removes the {@link #view} from the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n\t_hideView() {\n\t\tif ( !this._isViewInBalloon ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\n\t\tthis.stopListening( editor.ui, 'update' );\n\n\t\t// Blur any input element before removing it from DOM to prevent issues in some browsers.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/1501.\n\t\tthis.view.saveButtonView.focus();\n\n\t\tthis._balloon.remove( this.view );\n\n\t\t// Make sure the focus is not lost in the process by putting it directly\n\t\t// into the editing view.\n\t\tthis.editor.editing.view.focus();\n\t}\n\n\t/**\n\t * Returns `true` when the {@link #view} is visible in the {@link #_balloon}.\n\t *\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _isViewVisible() {\n\t\treturn this._balloon.visibleView === this.view;\n\t}\n\n\t/**\n\t * Returns `true` when the {@link #view} is in the {@link #_balloon}.\n\t *\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _isViewInBalloon() {\n\t\treturn this._balloon.hasView( this.view );\n\t}\n\n\t/**\n\t * Creates a callback that when executed upon the {@link #view view's} property change\n\t * executes a related editor command with the new property value.\n\t *\n\t * @private\n\t * @param {String} commandName\n\t * @param {String} defaultValue The default value of the command.\n\t * @returns {Function}\n\t */\n\t_getPropertyChangeCallback( commandName, defaultValue ) {\n\t\treturn ( evt, propertyName, newValue, oldValue ) => {\n\t\t\t// If the \"oldValue\" is missing and \"newValue\" is set to the default value, do not execute the command.\n\t\t\t// It is an initial call (when opening the table properties view).\n\t\t\tif ( !oldValue && defaultValue === newValue ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.editor.execute( commandName, {\n\t\t\t\tvalue: newValue,\n\t\t\t\tbatch: this._undoStepBatch\n\t\t\t} );\n\t\t};\n\t}\n\n\t/**\n\t * Creates a callback that when executed upon the {@link #view view's} property change:\n\t * * Executes a related editor command with the new property value if the value is valid,\n\t * * Or sets the error text next to the invalid field, if the value did not pass the validation.\n\t *\n\t * @private\n\t * @param {Object} options\n\t * @param {String} options.commandName\n\t * @param {module:ui/view~View} options.viewField\n\t * @param {Function} options.validator\n\t * @param {String} options.errorText\n\t * @param {String} options.defaultValue\n\t * @returns {Function}\n\t */\n\t_getValidatedPropertyChangeCallback( options ) {\n\t\tconst { commandName, viewField, validator, errorText, defaultValue } = options;\n\t\tconst setErrorTextDebounced = debounce( () => {\n\t\t\tviewField.errorText = errorText;\n\t\t}, ERROR_TEXT_TIMEOUT );\n\n\t\treturn ( evt, propertyName, newValue, oldValue ) => {\n\t\t\tsetErrorTextDebounced.cancel();\n\n\t\t\t// If the \"oldValue\" is missing and \"newValue\" is set to the default value, do not execute the command.\n\t\t\t// It is an initial call (when opening the table properties view).\n\t\t\tif ( !oldValue && defaultValue === newValue ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( validator( newValue ) ) {\n\t\t\t\tthis.editor.execute( commandName, {\n\t\t\t\t\tvalue: newValue,\n\t\t\t\t\tbatch: this._undoStepBatch\n\t\t\t\t} );\n\n\t\t\t\tviewField.errorText = null;\n\t\t\t} else {\n\t\t\t\tsetErrorTextDebounced();\n\t\t\t}\n\t\t};\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/ui/tablecellpropertiesview\n */\n\nimport {\n\tLabeledFieldView,\n\tcreateLabeledDropdown,\n\tcreateLabeledInputText,\n\tLabelView,\n\taddListToDropdown,\n\tToolbarView,\n\tButtonView,\n\tFocusCycler,\n\tView,\n\tViewCollection,\n\tFormHeaderView,\n\tsubmitHandler\n} from 'ckeditor5/src/ui';\nimport { KeystrokeHandler, FocusTracker } from 'ckeditor5/src/utils';\nimport { icons } from 'ckeditor5/src/core';\n\nimport {\n\tfillToolbar,\n\tgetBorderStyleDefinitions,\n\tgetBorderStyleLabels,\n\tgetLabeledColorInputCreator\n} from '../../utils/ui/table-properties';\nimport FormRowView from '../../ui/formrowview';\n\nimport '../../../theme/form.css';\nimport '../../../theme/tableform.css';\nimport '../../../theme/tablecellproperties.css';\n\nconst ALIGNMENT_ICONS = {\n\tleft: icons.alignLeft,\n\tcenter: icons.alignCenter,\n\tright: icons.alignRight,\n\tjustify: icons.alignJustify,\n\ttop: icons.alignTop,\n\tmiddle: icons.alignMiddle,\n\tbottom: icons.alignBottom\n};\n\n/**\n * The class representing a table cell properties form, allowing users to customize\n * certain style aspects of a table cell, for instance, border, padding, text alignment, etc..\n *\n * @extends module:ui/view~View\n */\nexport default class TableCellPropertiesView extends View {\n\t/**\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param {Object} options Additional configuration of the view.\n\t * @param {module:table/table~TableColorConfig} options.borderColors A configuration of the border\n\t * color palette used by the\n\t * {@link module:table/tablecellproperties/ui/tablecellpropertiesview~TableCellPropertiesView#borderColorInput}.\n\t * @param {module:table/table~TableColorConfig} options.backgroundColors A configuration of the background\n\t * color palette used by the\n\t * {@link module:table/tablecellproperties/ui/tablecellpropertiesview~TableCellPropertiesView#backgroundInput}.\n\t * @param {module:table/tablecellproperties~TableCellPropertiesOptions} options.defaultTableCellProperties The default\n\t * table cell properties.\n\t */\n\tconstructor( locale, options ) {\n\t\tsuper( locale );\n\n\t\tthis.set( {\n\t\t\t/**\n\t\t\t * The value of the cell border style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #borderStyle\n\t\t\t */\n\t\t\tborderStyle: '',\n\n\t\t\t/**\n\t\t\t * The value of the cell border width style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #borderWidth\n\t\t\t */\n\t\t\tborderWidth: '',\n\n\t\t\t/**\n\t\t\t * The value of the cell border color style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #borderColor\n\t\t\t */\n\t\t\tborderColor: '',\n\n\t\t\t/**\n\t\t\t * The value of the cell padding style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #padding\n\t\t\t */\n\t\t\tpadding: '',\n\n\t\t\t/**\n\t\t\t * The value of the cell background color style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #backgroundColor\n\t\t\t */\n\t\t\tbackgroundColor: '',\n\n\t\t\t/**\n\t\t\t * The value of the table cell width style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #width\n\t\t\t */\n\t\t\twidth: '',\n\n\t\t\t/**\n\t\t\t * The value of the table cell height style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #height\n\t\t\t */\n\t\t\theight: '',\n\n\t\t\t/**\n\t\t\t * The value of the horizontal text alignment style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #horizontalAlignment\n\t\t\t */\n\t\t\thorizontalAlignment: '',\n\n\t\t\t/**\n\t\t\t * The value of the vertical text alignment style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #verticalAlignment\n\t\t\t */\n\t\t\tverticalAlignment: ''\n\t\t} );\n\n\t\t/**\n\t\t * Options passed to the view. See {@link #constructor} to learn more.\n\t\t *\n\t\t * @member {Object}\n\t\t */\n\t\tthis.options = options;\n\n\t\tconst { borderStyleDropdown, borderWidthInput, borderColorInput, borderRowLabel } = this._createBorderFields();\n\t\tconst { backgroundRowLabel, backgroundInput } = this._createBackgroundFields();\n\t\tconst { widthInput, operatorLabel, heightInput, dimensionsLabel } = this._createDimensionFields();\n\t\tconst { horizontalAlignmentToolbar, verticalAlignmentToolbar, alignmentLabel } = this._createAlignmentFields();\n\n\t\t/**\n\t\t * Tracks information about the DOM focus in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * A collection of child views in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\t/**\n\t\t * A dropdown that allows selecting the style of the table cell border.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/dropdown/dropdownview~DropdownView}\n\t\t */\n\t\tthis.borderStyleDropdown = borderStyleDropdown;\n\n\t\t/**\n\t\t * An input that allows specifying the width of the table cell border.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/inputtext/inputtextview~InputTextView}\n\t\t */\n\t\tthis.borderWidthInput = borderWidthInput;\n\n\t\t/**\n\t\t * An input that allows specifying the color of the table cell border.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:table/ui/colorinputview~ColorInputView}\n\t\t */\n\t\tthis.borderColorInput = borderColorInput;\n\n\t\t/**\n\t\t * An input that allows specifying the table cell background color.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:table/ui/colorinputview~ColorInputView}\n\t\t */\n\t\tthis.backgroundInput = backgroundInput;\n\n\t\t/**\n\t\t * An input that allows specifying the table cell padding.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/inputtext/inputtextview~InputTextView}\n\t\t */\n\t\tthis.paddingInput = this._createPaddingField();\n\n\t\t/**\n\t\t * An input that allows specifying the table cell width.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/inputtext/inputtextview~InputTextView}\n\t\t */\n\t\tthis.widthInput = widthInput;\n\n\t\t/**\n\t\t * An input that allows specifying the table cell height.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/inputtext/inputtextview~InputTextView}\n\t\t */\n\t\tthis.heightInput = heightInput;\n\n\t\t/**\n\t\t * A toolbar with buttons that allow changing the horizontal text alignment in a table cell.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView}\n\t\t */\n\t\tthis.horizontalAlignmentToolbar = horizontalAlignmentToolbar;\n\n\t\t/**\n\t\t * A toolbar with buttons that allow changing the vertical text alignment in a table cell.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView}\n\t\t */\n\t\tthis.verticalAlignmentToolbar = verticalAlignmentToolbar;\n\n\t\t// Defer creating to make sure other fields are present and the Save button can\n\t\t// bind its #isEnabled to their error messages so there's no way to save unless all\n\t\t// fields are valid.\n\t\tconst { saveButtonView, cancelButtonView } = this._createActionButtons();\n\n\t\t/**\n\t\t * The \"Save\" button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.saveButtonView = saveButtonView;\n\n\t\t/**\n\t\t * The \"Cancel\" button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.cancelButtonView = cancelButtonView;\n\n\t\t/**\n\t\t * A collection of views that can be focused in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._focusables = new ViewCollection();\n\n\t\t/**\n\t\t * Helps cycling over {@link #_focusables} in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backwards using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\t// Form header.\n\t\tthis.children.add( new FormHeaderView( locale, {\n\t\t\tlabel: this.t( 'Cell properties' )\n\t\t} ) );\n\n\t\t// Border row.\n\t\tthis.children.add( new FormRowView( locale, {\n\t\t\tlabelView: borderRowLabel,\n\t\t\tchildren: [\n\t\t\t\tborderRowLabel,\n\t\t\t\tborderStyleDropdown,\n\t\t\t\tborderColorInput,\n\t\t\t\tborderWidthInput\n\t\t\t],\n\t\t\tclass: 'ck-table-form__border-row'\n\t\t} ) );\n\n\t\t// Background.\n\t\tthis.children.add( new FormRowView( locale, {\n\t\t\tlabelView: backgroundRowLabel,\n\t\t\tchildren: [\n\t\t\t\tbackgroundRowLabel,\n\t\t\t\tbackgroundInput\n\t\t\t],\n\t\t\tclass: 'ck-table-form__background-row'\n\t\t} ) );\n\n\t\t// Dimensions row and padding.\n\t\tthis.children.add( new FormRowView( locale, {\n\t\t\tchildren: [\n\t\t\t\t// Dimensions row.\n\t\t\t\tnew FormRowView( locale, {\n\t\t\t\t\tlabelView: dimensionsLabel,\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tdimensionsLabel,\n\t\t\t\t\t\twidthInput,\n\t\t\t\t\t\toperatorLabel,\n\t\t\t\t\t\theightInput\n\t\t\t\t\t],\n\t\t\t\t\tclass: 'ck-table-form__dimensions-row'\n\t\t\t\t} ),\n\t\t\t\t// Padding row.\n\t\t\t\tnew FormRowView( locale, {\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tthis.paddingInput\n\t\t\t\t\t],\n\t\t\t\t\tclass: 'ck-table-cell-properties-form__padding-row'\n\t\t\t\t} )\n\t\t\t]\n\t\t} ) );\n\n\t\t// Text alignment row.\n\t\tthis.children.add( new FormRowView( locale, {\n\t\t\tlabelView: alignmentLabel,\n\t\t\tchildren: [\n\t\t\t\talignmentLabel,\n\t\t\t\thorizontalAlignmentToolbar,\n\t\t\t\tverticalAlignmentToolbar\n\t\t\t],\n\t\t\tclass: 'ck-table-cell-properties-form__alignment-row'\n\t\t} ) );\n\n\t\t// Action row.\n\t\tthis.children.add( new FormRowView( locale, {\n\t\t\tchildren: [\n\t\t\t\tthis.saveButtonView,\n\t\t\t\tthis.cancelButtonView\n\t\t\t],\n\t\t\tclass: 'ck-table-form__action-row'\n\t\t} ) );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'form',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-form',\n\t\t\t\t\t'ck-table-form',\n\t\t\t\t\t'ck-table-cell-properties-form'\n\t\t\t\t],\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-link/issues/90\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Enable the \"submit\" event for this view. It can be triggered by the #saveButtonView\n\t\t// which is of the \"submit\" DOM \"type\".\n\t\tsubmitHandler( {\n\t\t\tview: this\n\t\t} );\n\n\t\t[\n\t\t\tthis.borderStyleDropdown,\n\t\t\tthis.borderColorInput,\n\t\t\tthis.borderColorInput.fieldView.dropdownView.buttonView,\n\t\t\tthis.borderWidthInput,\n\t\t\tthis.backgroundInput,\n\t\t\tthis.backgroundInput.fieldView.dropdownView.buttonView,\n\t\t\tthis.widthInput,\n\t\t\tthis.heightInput,\n\t\t\tthis.paddingInput,\n\t\t\tthis.horizontalAlignmentToolbar,\n\t\t\tthis.verticalAlignmentToolbar,\n\t\t\tthis.saveButtonView,\n\t\t\tthis.cancelButtonView\n\t\t].forEach( view => {\n\t\t\t// Register the view as focusable.\n\t\t\tthis._focusables.add( view );\n\n\t\t\t// Register the view in the focus tracker.\n\t\t\tthis.focusTracker.add( view.element );\n\t\t} );\n\n\t\t// Mainly for closing using \"Esc\" and navigation using \"Tab\".\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Focuses the fist focusable field in the form.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Creates the following form fields:\n\t *\n\t * * {@link #borderStyleDropdown},\n\t * * {@link #borderWidthInput},\n\t * * {@link #borderColorInput}.\n\t *\n\t * @private\n\t * @returns {Object.<String,module:ui/view~View>}\n\t */\n\t_createBorderFields() {\n\t\tconst defaultTableCellProperties = this.options.defaultTableCellProperties;\n\t\tconst defaultBorder = {\n\t\t\tstyle: defaultTableCellProperties.borderStyle,\n\t\t\twidth: defaultTableCellProperties.borderWidth,\n\t\t\tcolor: defaultTableCellProperties.borderColor\n\t\t};\n\n\t\tconst colorInputCreator = getLabeledColorInputCreator( {\n\t\t\tcolorConfig: this.options.borderColors,\n\t\t\tcolumns: 5,\n\t\t\tdefaultColorValue: defaultBorder.color\n\t\t} );\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\n\t\t// -- Group label ---------------------------------------------\n\n\t\tconst borderRowLabel = new LabelView( locale );\n\t\tborderRowLabel.text = t( 'Border' );\n\n\t\t// -- Style ---------------------------------------------------\n\n\t\tconst styleLabels = getBorderStyleLabels( t );\n\t\tconst borderStyleDropdown = new LabeledFieldView( locale, createLabeledDropdown );\n\t\tborderStyleDropdown.set( {\n\t\t\tlabel: t( 'Style' ),\n\t\t\tclass: 'ck-table-form__border-style'\n\t\t} );\n\n\t\tborderStyleDropdown.fieldView.buttonView.set( {\n\t\t\tisOn: false,\n\t\t\twithText: true,\n\t\t\ttooltip: t( 'Style' )\n\t\t} );\n\n\t\tborderStyleDropdown.fieldView.buttonView.bind( 'label' ).to( this, 'borderStyle', value => {\n\t\t\treturn styleLabels[ value ? value : 'none' ];\n\t\t} );\n\n\t\tborderStyleDropdown.fieldView.on( 'execute', evt => {\n\t\t\tthis.borderStyle = evt.source._borderStyleValue;\n\t\t} );\n\n\t\tborderStyleDropdown.bind( 'isEmpty' ).to( this, 'borderStyle', value => !value );\n\n\t\taddListToDropdown( borderStyleDropdown.fieldView, getBorderStyleDefinitions( this, defaultBorder.style ) );\n\n\t\t// -- Width ---------------------------------------------------\n\n\t\tconst borderWidthInput = new LabeledFieldView( locale, createLabeledInputText );\n\n\t\tborderWidthInput.set( {\n\t\t\tlabel: t( 'Width' ),\n\t\t\tclass: 'ck-table-form__border-width'\n\t\t} );\n\n\t\tborderWidthInput.fieldView.bind( 'value' ).to( this, 'borderWidth' );\n\t\tborderWidthInput.bind( 'isEnabled' ).to( this, 'borderStyle', isBorderStyleSet );\n\t\tborderWidthInput.fieldView.on( 'input', () => {\n\t\t\tthis.borderWidth = borderWidthInput.fieldView.element.value;\n\t\t} );\n\n\t\t// -- Color ---------------------------------------------------\n\n\t\tconst borderColorInput = new LabeledFieldView( locale, colorInputCreator );\n\n\t\tborderColorInput.set( {\n\t\t\tlabel: t( 'Color' ),\n\t\t\tclass: 'ck-table-form__border-color'\n\t\t} );\n\n\t\tborderColorInput.fieldView.bind( 'value' ).to( this, 'borderColor' );\n\t\tborderColorInput.bind( 'isEnabled' ).to( this, 'borderStyle', isBorderStyleSet );\n\n\t\tborderColorInput.fieldView.on( 'input', () => {\n\t\t\tthis.borderColor = borderColorInput.fieldView.value;\n\t\t} );\n\n\t\t// Reset the border color and width fields depending on the `border-style` value.\n\t\tthis.on( 'change:borderStyle', ( evt, name, newValue, oldValue ) => {\n\t\t\t// When removing the border (`border-style:none`), clear the remaining `border-*` properties.\n\t\t\t// See: https://github.com/ckeditor/ckeditor5/issues/6227.\n\t\t\tif ( !isBorderStyleSet( newValue ) ) {\n\t\t\t\tthis.borderColor = '';\n\t\t\t\tthis.borderWidth = '';\n\t\t\t}\n\n\t\t\t// When setting the `border-style` from `none`, set the default `border-color` and `border-width` properties.\n\t\t\tif ( !isBorderStyleSet( oldValue ) ) {\n\t\t\t\tthis.borderColor = defaultBorder.color;\n\t\t\t\tthis.borderWidth = defaultBorder.width;\n\t\t\t}\n\t\t} );\n\n\t\treturn {\n\t\t\tborderRowLabel,\n\t\t\tborderStyleDropdown,\n\t\t\tborderColorInput,\n\t\t\tborderWidthInput\n\t\t};\n\t}\n\n\t/**\n\t * Creates the following form fields:\n\t *\n\t * * {@link #backgroundInput}.\n\t *\n\t * @private\n\t * @returns {Object.<String,module:ui/view~View>}\n\t */\n\t_createBackgroundFields() {\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\n\t\t// -- Group label ---------------------------------------------\n\n\t\tconst backgroundRowLabel = new LabelView( locale );\n\t\tbackgroundRowLabel.text = t( 'Background' );\n\n\t\t// -- Background color input -----------------------------------\n\n\t\tconst colorInputCreator = getLabeledColorInputCreator( {\n\t\t\tcolorConfig: this.options.backgroundColors,\n\t\t\tcolumns: 5,\n\t\t\tdefaultColorValue: this.options.defaultTableCellProperties.backgroundColor\n\t\t} );\n\n\t\tconst backgroundInput = new LabeledFieldView( locale, colorInputCreator );\n\n\t\tbackgroundInput.set( {\n\t\t\tlabel: t( 'Color' ),\n\t\t\tclass: 'ck-table-cell-properties-form__background'\n\t\t} );\n\n\t\tbackgroundInput.fieldView.bind( 'value' ).to( this, 'backgroundColor' );\n\t\tbackgroundInput.fieldView.on( 'input', () => {\n\t\t\tthis.backgroundColor = backgroundInput.fieldView.value;\n\t\t} );\n\n\t\treturn {\n\t\t\tbackgroundRowLabel,\n\t\t\tbackgroundInput\n\t\t};\n\t}\n\n\t/**\n\t * Creates the following form fields:\n\t *\n\t * * {@link #widthInput}.\n\t * * {@link #heightInput}.\n\t *\n\t * @private\n\t * @returns {module:ui/labeledfield/labeledfieldview~LabeledFieldView}\n\t */\n\t_createDimensionFields() {\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\n\t\t// -- Label ---------------------------------------------------\n\n\t\tconst dimensionsLabel = new LabelView( locale );\n\t\tdimensionsLabel.text = t( 'Dimensions' );\n\n\t\t// -- Width ---------------------------------------------------\n\n\t\tconst widthInput = new LabeledFieldView( locale, createLabeledInputText );\n\n\t\twidthInput.set( {\n\t\t\tlabel: t( 'Width' ),\n\t\t\tclass: 'ck-table-form__dimensions-row__width'\n\t\t} );\n\n\t\twidthInput.fieldView.bind( 'value' ).to( this, 'width' );\n\t\twidthInput.fieldView.on( 'input', () => {\n\t\t\tthis.width = widthInput.fieldView.element.value;\n\t\t} );\n\n\t\t// -- Operator ---------------------------------------------------\n\n\t\tconst operatorLabel = new View( locale );\n\t\toperatorLabel.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-table-form__dimension-operator'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{ text: '×' }\n\t\t\t]\n\t\t} );\n\n\t\t// -- Height ---------------------------------------------------\n\n\t\tconst heightInput = new LabeledFieldView( locale, createLabeledInputText );\n\n\t\theightInput.set( {\n\t\t\tlabel: t( 'Height' ),\n\t\t\tclass: 'ck-table-form__dimensions-row__height'\n\t\t} );\n\n\t\theightInput.fieldView.bind( 'value' ).to( this, 'height' );\n\t\theightInput.fieldView.on( 'input', () => {\n\t\t\tthis.height = heightInput.fieldView.element.value;\n\t\t} );\n\n\t\treturn {\n\t\t\tdimensionsLabel,\n\t\t\twidthInput,\n\t\t\toperatorLabel,\n\t\t\theightInput\n\t\t};\n\t}\n\n\t/**\n\t * Creates the following form fields:\n\t *\n\t * * {@link #paddingInput}.\n\t *\n\t * @private\n\t * @returns {module:ui/labeledfield/labeledfieldview~LabeledFieldView}\n\t */\n\t_createPaddingField() {\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\n\t\tconst paddingInput = new LabeledFieldView( locale, createLabeledInputText );\n\n\t\tpaddingInput.set( {\n\t\t\tlabel: t( 'Padding' ),\n\t\t\tclass: 'ck-table-cell-properties-form__padding'\n\t\t} );\n\n\t\tpaddingInput.fieldView.bind( 'value' ).to( this, 'padding' );\n\t\tpaddingInput.fieldView.on( 'input', () => {\n\t\t\tthis.padding = paddingInput.fieldView.element.value;\n\t\t} );\n\n\t\treturn paddingInput;\n\t}\n\n\t/**\n\t * Creates the following form fields:\n\t *\n\t * * {@link #horizontalAlignmentToolbar},\n\t * * {@link #verticalAlignmentToolbar}.\n\t *\n\t * @private\n\t * @returns {Object.<String,module:ui/view~View>}\n\t */\n\t_createAlignmentFields() {\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\n\t\tconst alignmentLabel = new LabelView( locale );\n\n\t\talignmentLabel.text = t( 'Table cell text alignment' );\n\n\t\t// -- Horizontal ---------------------------------------------------\n\n\t\tconst horizontalAlignmentToolbar = new ToolbarView( locale );\n\t\tconst isContentRTL = this.locale.contentLanguageDirection === 'rtl';\n\n\t\thorizontalAlignmentToolbar.set( {\n\t\t\tisCompact: true,\n\t\t\tariaLabel: t( 'Horizontal text alignment toolbar' )\n\t\t} );\n\n\t\tfillToolbar( {\n\t\t\tview: this,\n\t\t\ticons: ALIGNMENT_ICONS,\n\t\t\ttoolbar: horizontalAlignmentToolbar,\n\t\t\tlabels: this._horizontalAlignmentLabels,\n\t\t\tpropertyName: 'horizontalAlignment',\n\t\t\tnameToValue: name => {\n\t\t\t\t// For the RTL content, we want to swap the buttons \"align to the left\" and \"align to the right\".\n\t\t\t\tif ( isContentRTL ) {\n\t\t\t\t\tif ( name === 'left' ) {\n\t\t\t\t\t\treturn 'right';\n\t\t\t\t\t} else if ( name === 'right' ) {\n\t\t\t\t\t\treturn 'left';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn name;\n\t\t\t},\n\t\t\tdefaultValue: this.options.defaultTableCellProperties.horizontalAlignment\n\t\t} );\n\n\t\t// -- Vertical -----------------------------------------------------\n\n\t\tconst verticalAlignmentToolbar = new ToolbarView( locale );\n\n\t\tverticalAlignmentToolbar.set( {\n\t\t\tisCompact: true,\n\t\t\tariaLabel: t( 'Vertical text alignment toolbar' )\n\t\t} );\n\n\t\tfillToolbar( {\n\t\t\tview: this,\n\t\t\ticons: ALIGNMENT_ICONS,\n\t\t\ttoolbar: verticalAlignmentToolbar,\n\t\t\tlabels: this._verticalAlignmentLabels,\n\t\t\tpropertyName: 'verticalAlignment',\n\t\t\tdefaultValue: this.options.defaultTableCellProperties.verticalAlignment\n\t\t} );\n\n\t\treturn {\n\t\t\thorizontalAlignmentToolbar,\n\t\t\tverticalAlignmentToolbar,\n\t\t\talignmentLabel\n\t\t};\n\t}\n\n\t/**\n\t * Creates the following form controls:\n\t *\n\t * * {@link #saveButtonView},\n\t * * {@link #cancelButtonView}.\n\t *\n\t * @private\n\t * @returns {Object.<String,module:ui/view~View>}\n\t */\n\t_createActionButtons() {\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\t\tconst saveButtonView = new ButtonView( locale );\n\t\tconst cancelButtonView = new ButtonView( locale );\n\t\tconst fieldsThatShouldValidateToSave = [\n\t\t\tthis.borderWidthInput,\n\t\t\tthis.borderColorInput,\n\t\t\tthis.backgroundInput,\n\t\t\tthis.paddingInput\n\t\t];\n\n\t\tsaveButtonView.set( {\n\t\t\tlabel: t( 'Save' ),\n\t\t\ticon: icons.check,\n\t\t\tclass: 'ck-button-save',\n\t\t\ttype: 'submit',\n\t\t\twithText: true\n\t\t} );\n\n\t\tsaveButtonView.bind( 'isEnabled' ).toMany( fieldsThatShouldValidateToSave, 'errorText', ( ...errorTexts ) => {\n\t\t\treturn errorTexts.every( errorText => !errorText );\n\t\t} );\n\n\t\tcancelButtonView.set( {\n\t\t\tlabel: t( 'Cancel' ),\n\t\t\ticon: icons.cancel,\n\t\t\tclass: 'ck-button-cancel',\n\t\t\twithText: true\n\t\t} );\n\n\t\tcancelButtonView.delegate( 'execute' ).to( this, 'cancel' );\n\n\t\treturn {\n\t\t\tsaveButtonView, cancelButtonView\n\t\t};\n\t}\n\n\t/**\n\t * Provides localized labels for {@link #horizontalAlignmentToolbar} buttons.\n\t *\n\t * @private\n\t * @type {Object.<String,String>}\n\t */\n\tget _horizontalAlignmentLabels() {\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\n\t\tconst left = t( 'Align cell text to the left' );\n\t\tconst center = t( 'Align cell text to the center' );\n\t\tconst right = t( 'Align cell text to the right' );\n\t\tconst justify = t( 'Justify cell text' );\n\n\t\t// Returns object with a proper order of labels.\n\t\tif ( locale.uiLanguageDirection === 'rtl' ) {\n\t\t\treturn { right, center, left, justify };\n\t\t} else {\n\t\t\treturn { left, center, right, justify };\n\t\t}\n\t}\n\n\t/**\n\t * Provides localized labels for {@link #verticalAlignmentToolbar} buttons.\n\t *\n\t * @private\n\t * @type {Object.<String,String>}\n\t */\n\tget _verticalAlignmentLabels() {\n\t\tconst t = this.t;\n\n\t\treturn {\n\t\t\ttop: t( 'Align cell text to the top' ),\n\t\t\tmiddle: t( 'Align cell text to the middle' ),\n\t\t\tbottom: t( 'Align cell text to the bottom' )\n\t\t};\n\t}\n}\n\nfunction isBorderStyleSet( value ) {\n\treturn value !== 'none';\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellproperties/commands/tablecellwidthcommand\n */\nimport TableCellPropertyCommand from '../../tablecellproperties/commands/tablecellpropertycommand';\nimport { addDefaultUnitToNumericValue } from '../../utils/table-properties';\n\n/**\n * The table cell width command.\n *\n * The command is registered by the {@link module:table/tablecellwidth/tablecellwidthediting~TableCellWidthEditing} as\n * the `'tableCellWidth'` editor command.\n *\n * To change the width of selected cells, execute the command:\n *\n *\t\teditor.execute( 'tableCellWidth', {\n *\t\t\tvalue: '50px'\n *\t\t} );\n *\n * **Note**: This command adds a default `'px'` unit to numeric values. Executing:\n *\n *\t\teditor.execute( 'tableCellWidth', {\n *\t\t\tvalue: '50'\n *\t\t} );\n *\n * will set the `width` attribute to `'50px'` in the model.\n *\n * @extends module:table/tablecellproperties/commands/tablecellpropertycommand~TableCellPropertyCommand\n */\nexport default class TableCellWidthCommand extends TableCellPropertyCommand {\n\t/**\n\t * Creates a new `TableCellWidthCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableCellWidth', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getValueToSet( value ) {\n\t\tvalue = addDefaultUnitToNumericValue( value, 'px' );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecellwidth/tablecellwidthediting\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\n\nimport TableEditing from './../tableediting';\nimport TableCellWidthCommand from './commands/tablecellwidthcommand';\nimport { getNormalizedDefaultProperties } from '../utils/table-properties';\nimport { enableProperty } from '../utils/common';\n\n/**\n * The table cell width editing feature.\n *\n * Introduces `tableCellWidth` table cell model attribute alongside with its converters\n * and a command.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableCellWidthEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableCellWidthEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableEditing ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\tconst defaultTableCellProperties = getNormalizedDefaultProperties(\n\t\t\teditor.config.get( 'table.tableCellProperties.defaultProperties' )\n\t\t);\n\n\t\tenableProperty( editor.model.schema, editor.conversion, {\n\t\t\tmodelAttribute: 'tableCellWidth',\n\t\t\tstyleName: 'width',\n\t\t\tdefaultValue: defaultTableCellProperties.width\n\t\t} );\n\n\t\teditor.commands.add( 'tableCellWidth', new TableCellWidthCommand( editor, defaultTableCellProperties.width ) );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableclipboard\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\n\nimport TableSelection from './tableselection';\nimport TableWalker from './tablewalker';\nimport TableUtils from './tableutils';\nimport {\n\tcropTableToDimensions,\n\tgetHorizontallyOverlappingCells,\n\tgetVerticallyOverlappingCells,\n\tremoveEmptyRowsColumns,\n\tsplitHorizontally,\n\tsplitVertically,\n\ttrimTableCellIfNeeded,\n\tadjustLastRowIndex,\n\tadjustLastColumnIndex\n} from './utils/structure';\n\n/**\n * This plugin adds support for copying/cutting/pasting fragments of tables.\n * It is loaded automatically by the {@link module:table/table~Table} plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableClipboard extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableClipboard';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableSelection, TableUtils ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst viewDocument = editor.editing.view.document;\n\n\t\tthis.listenTo( viewDocument, 'copy', ( evt, data ) => this._onCopyCut( evt, data ) );\n\t\tthis.listenTo( viewDocument, 'cut', ( evt, data ) => this._onCopyCut( evt, data ) );\n\t\tthis.listenTo( editor.model, 'insertContent', ( evt, args ) => this._onInsertContent( evt, ...args ), { priority: 'high' } );\n\n\t\tthis.decorate( '_replaceTableSlotCell' );\n\t}\n\n\t/**\n\t * Copies table content to a clipboard on \"copy\" & \"cut\" events.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} evt An object containing information about the handled event.\n\t * @param {Object} data Clipboard event data.\n\t */\n\t_onCopyCut( evt, data ) {\n\t\tconst tableSelection = this.editor.plugins.get( TableSelection );\n\n\t\tif ( !tableSelection.getSelectedTableCells() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( evt.name == 'cut' && this.editor.isReadOnly ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdata.preventDefault();\n\t\tevt.stop();\n\n\t\tconst dataController = this.editor.data;\n\t\tconst viewDocument = this.editor.editing.view.document;\n\n\t\tconst content = dataController.toView( tableSelection.getSelectionAsFragment() );\n\n\t\tviewDocument.fire( 'clipboardOutput', {\n\t\t\tdataTransfer: data.dataTransfer,\n\t\t\tcontent,\n\t\t\tmethod: evt.name\n\t\t} );\n\t}\n\n\t/**\n\t * Overrides default {@link module:engine/model/model~Model#insertContent `model.insertContent()`} method to handle pasting table inside\n\t * selected table fragment.\n\t *\n\t * Depending on selected table fragment:\n\t * - If a selected table fragment is smaller than paste table it will crop pasted table to match dimensions.\n\t * - If dimensions are equal it will replace selected table fragment with a pasted table contents.\n\t *\n\t * @private\n\t * @param evt\n\t * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n\t * @param {module:engine/model/selection~Selectable} [selectable=model.document.selection]\n\t * The selection into which the content should be inserted. If not provided the current model document selection will be used.\n\t */\n\t_onInsertContent( evt, content, selectable ) {\n\t\tif ( selectable && !selectable.is( 'documentSelection' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.model;\n\t\tconst tableUtils = this.editor.plugins.get( TableUtils );\n\n\t\t// We might need to crop table before inserting so reference might change.\n\t\tlet pastedTable = getTableIfOnlyTableInContent( content, model );\n\n\t\tif ( !pastedTable ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectedTableCells = tableUtils.getSelectionAffectedTableCells( model.document.selection );\n\n\t\tif ( !selectedTableCells.length ) {\n\t\t\tremoveEmptyRowsColumns( pastedTable, tableUtils );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Override default model.insertContent() handling at this point.\n\t\tevt.stop();\n\n\t\tmodel.change( writer => {\n\t\t\tconst pastedDimensions = {\n\t\t\t\twidth: tableUtils.getColumns( pastedTable ),\n\t\t\t\theight: tableUtils.getRows( pastedTable )\n\t\t\t};\n\n\t\t\t// Prepare the table for pasting.\n\t\t\tconst selection = prepareTableForPasting( selectedTableCells, pastedDimensions, writer, tableUtils );\n\n\t\t\t// Beyond this point we operate on a fixed content table with rectangular selection and proper last row/column values.\n\n\t\t\tconst selectionHeight = selection.lastRow - selection.firstRow + 1;\n\t\t\tconst selectionWidth = selection.lastColumn - selection.firstColumn + 1;\n\n\t\t\t// Crop pasted table if:\n\t\t\t// - Pasted table dimensions exceeds selection area.\n\t\t\t// - Pasted table has broken layout (ie some cells sticks out by the table dimensions established by the first and last row).\n\t\t\t//\n\t\t\t// Note: The table dimensions are established by the width of the first row and the total number of rows.\n\t\t\t// It is possible to programmatically create a table that has rows which would have cells anchored beyond first row width but\n\t\t\t// such table will not be created by other editing solutions.\n\t\t\tconst cropDimensions = {\n\t\t\t\tstartRow: 0,\n\t\t\t\tstartColumn: 0,\n\t\t\t\tendRow: Math.min( selectionHeight, pastedDimensions.height ) - 1,\n\t\t\t\tendColumn: Math.min( selectionWidth, pastedDimensions.width ) - 1\n\t\t\t};\n\n\t\t\tpastedTable = cropTableToDimensions( pastedTable, cropDimensions, writer );\n\n\t\t\t// Content table to which we insert a pasted table.\n\t\t\tconst selectedTable = selectedTableCells[ 0 ].findAncestor( 'table' );\n\n\t\t\tconst cellsToSelect = this._replaceSelectedCellsWithPasted( pastedTable, pastedDimensions, selectedTable, selection, writer );\n\n\t\t\tif ( this.editor.plugins.get( 'TableSelection' ).isEnabled ) {\n\t\t\t\t// Selection ranges must be sorted because the first and last selection ranges are considered\n\t\t\t\t// as anchor/focus cell ranges for multi-cell selection.\n\t\t\t\tconst selectionRanges = tableUtils.sortRanges( cellsToSelect.map( cell => writer.createRangeOn( cell ) ) );\n\n\t\t\t\twriter.setSelection( selectionRanges );\n\t\t\t} else {\n\t\t\t\t// Set selection inside first cell if multi-cell selection is disabled.\n\t\t\t\twriter.setSelection( cellsToSelect[ 0 ], 0 );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Replaces the part of selectedTable with pastedTable.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} pastedTable\n\t * @param {Object} pastedDimensions\n\t * @param {Number} pastedDimensions.height\n\t * @param {Number} pastedDimensions.width\n\t * @param {module:engine/model/element~Element} selectedTable\n\t * @param {Object} selection\n\t * @param {Number} selection.firstColumn\n\t * @param {Number} selection.firstRow\n\t * @param {Number} selection.lastColumn\n\t * @param {Number} selection.lastRow\n\t * @param {module:engine/model/writer~Writer} writer\n\t * @returns {Array.<module:engine/model/element~Element>}\n\t */\n\t_replaceSelectedCellsWithPasted( pastedTable, pastedDimensions, selectedTable, selection, writer ) {\n\t\tconst { width: pastedWidth, height: pastedHeight } = pastedDimensions;\n\n\t\t// Holds two-dimensional array that is addressed by [ row ][ column ] that stores cells anchored at given location.\n\t\tconst pastedTableLocationMap = createLocationMap( pastedTable, pastedWidth, pastedHeight );\n\n\t\tconst selectedTableMap = [ ...new TableWalker( selectedTable, {\n\t\t\tstartRow: selection.firstRow,\n\t\t\tendRow: selection.lastRow,\n\t\t\tstartColumn: selection.firstColumn,\n\t\t\tendColumn: selection.lastColumn,\n\t\t\tincludeAllSlots: true\n\t\t} ) ];\n\n\t\t// Selection must be set to pasted cells (some might be removed or new created).\n\t\tconst cellsToSelect = [];\n\n\t\t// Store next cell insert position.\n\t\tlet insertPosition;\n\n\t\t// Content table replace cells algorithm iterates over a selected table fragment and:\n\t\t//\n\t\t// - Removes existing table cells at current slot (location).\n\t\t// - Inserts cell from a pasted table for a matched slots.\n\t\t//\n\t\t// This ensures proper table geometry after the paste\n\t\tfor ( const tableSlot of selectedTableMap ) {\n\t\t\tconst { row, column } = tableSlot;\n\n\t\t\t// Save the insert position for current row start.\n\t\t\tif ( column === selection.firstColumn ) {\n\t\t\t\tinsertPosition = tableSlot.getPositionBefore();\n\t\t\t}\n\n\t\t\t// Map current table slot location to an pasted table slot location.\n\t\t\tconst pastedRow = row - selection.firstRow;\n\t\t\tconst pastedColumn = column - selection.firstColumn;\n\t\t\tconst pastedCell = pastedTableLocationMap[ pastedRow % pastedHeight ][ pastedColumn % pastedWidth ];\n\n\t\t\t// Clone cell to insert (to duplicate its attributes and children).\n\t\t\t// Cloning is required to support repeating pasted table content when inserting to a bigger selection.\n\t\t\tconst cellToInsert = pastedCell ? writer.cloneElement( pastedCell ) : null;\n\n\t\t\t// Replace the cell from the current slot with new table cell.\n\t\t\tconst newTableCell = this._replaceTableSlotCell( tableSlot, cellToInsert, insertPosition, writer );\n\n\t\t\t// The cell was only removed.\n\t\t\tif ( !newTableCell ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Trim the cell if it's row/col-spans would exceed selection area.\n\t\t\ttrimTableCellIfNeeded( newTableCell, row, column, selection.lastRow, selection.lastColumn, writer );\n\n\t\t\tcellsToSelect.push( newTableCell );\n\n\t\t\tinsertPosition = writer.createPositionAfter( newTableCell );\n\t\t}\n\n\t\t// If there are any headings, all the cells that overlap from heading must be splitted.\n\t\tconst headingRows = parseInt( selectedTable.getAttribute( 'headingRows' ) || 0 );\n\t\tconst headingColumns = parseInt( selectedTable.getAttribute( 'headingColumns' ) || 0 );\n\n\t\tconst areHeadingRowsIntersectingSelection = selection.firstRow < headingRows && headingRows <= selection.lastRow;\n\t\tconst areHeadingColumnsIntersectingSelection = selection.firstColumn < headingColumns && headingColumns <= selection.lastColumn;\n\n\t\tif ( areHeadingRowsIntersectingSelection ) {\n\t\t\tconst columnsLimit = { first: selection.firstColumn, last: selection.lastColumn };\n\t\t\tconst newCells = doHorizontalSplit( selectedTable, headingRows, columnsLimit, writer, selection.firstRow );\n\n\t\t\tcellsToSelect.push( ...newCells );\n\t\t}\n\n\t\tif ( areHeadingColumnsIntersectingSelection ) {\n\t\t\tconst rowsLimit = { first: selection.firstRow, last: selection.lastRow };\n\t\t\tconst newCells = doVerticalSplit( selectedTable, headingColumns, rowsLimit, writer );\n\n\t\t\tcellsToSelect.push( ...newCells );\n\t\t}\n\n\t\treturn cellsToSelect;\n\t}\n\n\t/**\n\t * Replaces a single table slot.\n\t *\n\t * @private\n\t * @param {module:table/tablewalker~TableSlot} tableSlot\n\t * @param {module:engine/model/element~Element} cellToInsert\n\t * @param {module:engine/model/position~Position} insertPosition\n\t * @param {module:engine/model/writer~Writer} writer\n\t * @returns {module:engine/model/element~Element|null} Inserted table cell or null if slot should remain empty.\n\t */\n\t_replaceTableSlotCell( tableSlot, cellToInsert, insertPosition, writer ) {\n\t\tconst { cell, isAnchor } = tableSlot;\n\n\t\t// If the slot is occupied by a cell in a selected table - remove it.\n\t\t// The slot of this cell will be either:\n\t\t// - Replaced by a pasted table cell.\n\t\t// - Spanned by a previously pasted table cell.\n\t\tif ( isAnchor ) {\n\t\t\twriter.remove( cell );\n\t\t}\n\n\t\t// There is no cell to insert (might be spanned by other cell in a pasted table) - advance to the next content table slot.\n\t\tif ( !cellToInsert ) {\n\t\t\treturn null;\n\t\t}\n\n\t\twriter.insert( cellToInsert, insertPosition );\n\n\t\treturn cellToInsert;\n\t}\n\n\t/**\n\t * Extracts the table for pasting into a table.\n\t *\n\t * @protected\n\t * @param {module:engine/model/documentfragment~DocumentFragment|module:engine/model/item~Item} content The content to insert.\n\t * @param {module:engine/model/model~Model} model The editor model.\n\t * @returns {module:engine/model/element~Element|null}\n\t */\n\tgetTableIfOnlyTableInContent( content, model ) {\n\t\treturn getTableIfOnlyTableInContent( content, model );\n\t}\n}\n\nfunction getTableIfOnlyTableInContent( content, model ) {\n\tif ( !content.is( 'documentFragment' ) && !content.is( 'element' ) ) {\n\t\treturn null;\n\t}\n\n\t// Table passed directly.\n\tif ( content.is( 'element', 'table' ) ) {\n\t\treturn content;\n\t}\n\n\t// We do not support mixed content when pasting table into table.\n\t// See: https://github.com/ckeditor/ckeditor5/issues/6817.\n\tif ( content.childCount == 1 && content.getChild( 0 ).is( 'element', 'table' ) ) {\n\t\treturn content.getChild( 0 );\n\t}\n\n\t// If there are only whitespaces around a table then use that table for pasting.\n\n\tconst contentRange = model.createRangeIn( content );\n\n\tfor ( const element of contentRange.getItems() ) {\n\t\tif ( element.is( 'element', 'table' ) ) {\n\t\t\t// Stop checking if there is some content before table.\n\t\t\tconst rangeBefore = model.createRange( contentRange.start, model.createPositionBefore( element ) );\n\n\t\t\tif ( model.hasContent( rangeBefore, { ignoreWhitespaces: true } ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Stop checking if there is some content after table.\n\t\t\tconst rangeAfter = model.createRange( model.createPositionAfter( element ), contentRange.end );\n\n\t\t\tif ( model.hasContent( rangeAfter, { ignoreWhitespaces: true } ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// There wasn't any content neither before nor after.\n\t\t\treturn element;\n\t\t}\n\t}\n\n\treturn null;\n}\n\n// Prepares a table for pasting and returns adjusted selection dimensions.\n//\n// @param {Array.<module:engine/model/element~Element>} selectedTableCells\n// @param {Object} pastedDimensions\n// @param {Number} pastedDimensions.height\n// @param {Number} pastedDimensions.width\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:table/tableutils~TableUtils} tableUtils\n// @returns {Object} selection\n// @returns {Number} selection.firstColumn\n// @returns {Number} selection.firstRow\n// @returns {Number} selection.lastColumn\n// @returns {Number} selection.lastRow\nfunction prepareTableForPasting( selectedTableCells, pastedDimensions, writer, tableUtils ) {\n\tconst selectedTable = selectedTableCells[ 0 ].findAncestor( 'table' );\n\n\tconst columnIndexes = tableUtils.getColumnIndexes( selectedTableCells );\n\tconst rowIndexes = tableUtils.getRowIndexes( selectedTableCells );\n\n\tconst selection = {\n\t\tfirstColumn: columnIndexes.first,\n\t\tlastColumn: columnIndexes.last,\n\t\tfirstRow: rowIndexes.first,\n\t\tlastRow: rowIndexes.last\n\t};\n\n\t// Single cell selected - expand selection to pasted table dimensions.\n\tconst shouldExpandSelection = selectedTableCells.length === 1;\n\n\tif ( shouldExpandSelection ) {\n\t\tselection.lastRow += pastedDimensions.height - 1;\n\t\tselection.lastColumn += pastedDimensions.width - 1;\n\n\t\texpandTableSize( selectedTable, selection.lastRow + 1, selection.lastColumn + 1, tableUtils );\n\t}\n\n\t// In case of expanding selection we do not reset the selection so in this case we will always try to fix selection\n\t// like in the case of a non-rectangular area. This might be fixed by re-setting selected cells array but this shortcut is safe.\n\tif ( shouldExpandSelection || !tableUtils.isSelectionRectangular( selectedTableCells ) ) {\n\t\t// For a non-rectangular selection (ie in which some cells sticks out from a virtual selection rectangle) we need to create\n\t\t// a table layout that has a rectangular selection. This will split cells so the selection become rectangular.\n\t\t// Beyond this point we will operate on fixed content table.\n\t\tsplitCellsToRectangularSelection( selectedTable, selection, writer );\n\t}\n\t// However a selected table fragment might be invalid if examined alone. Ie such table fragment:\n\t//\n\t//    +---+---+---+---+\n\t//  0 | a | b | c | d |\n\t//    +   +   +---+---+\n\t//  1 |   | e | f | g |\n\t//    +   +---+   +---+\n\t//  2 |   | h |   | i | <- last row, each cell has rowspan = 2,\n\t//    +   +   +   +   +    so we need to return 3, not 2\n\t//  3 |   |   |   |   |\n\t//    +---+---+---+---+\n\t//\n\t// is invalid as the cells \"h\" and \"i\" have rowspans.\n\t// This case needs only adjusting the selection dimension as the rest of the algorithm operates on empty slots also.\n\telse {\n\t\tselection.lastRow = adjustLastRowIndex( selectedTable, selection );\n\t\tselection.lastColumn = adjustLastColumnIndex( selectedTable, selection );\n\t}\n\n\treturn selection;\n}\n\n// Expand table (in place) to expected size.\nfunction expandTableSize( table, expectedHeight, expectedWidth, tableUtils ) {\n\tconst tableWidth = tableUtils.getColumns( table );\n\tconst tableHeight = tableUtils.getRows( table );\n\n\tif ( expectedWidth > tableWidth ) {\n\t\ttableUtils.insertColumns( table, {\n\t\t\tat: tableWidth,\n\t\t\tcolumns: expectedWidth - tableWidth\n\t\t} );\n\t}\n\n\tif ( expectedHeight > tableHeight ) {\n\t\ttableUtils.insertRows( table, {\n\t\t\tat: tableHeight,\n\t\t\trows: expectedHeight - tableHeight\n\t\t} );\n\t}\n}\n\n// Returns two-dimensional array that is addressed by [ row ][ column ] that stores cells anchored at given location.\n//\n// At given row & column location it might be one of:\n//\n// * cell - cell from pasted table anchored at this location.\n// * null - if no cell is anchored at this location.\n//\n// For instance, from a table below:\n//\n//\t\t+----+----+----+----+\n//\t\t| 00 | 01 | 02 | 03 |\n//\t\t+    +----+----+----+\n//\t\t|    | 11      | 13 |\n//\t\t+----+         +----+\n//\t\t| 20 |         | 23 |\n//\t\t+----+----+----+----+\n//\n// The method will return an array (numbers represents cell element):\n//\n//\tconst map = [\n//\t\t[ '00', '01', '02', '03' ],\n//\t\t[ null, '11', null, '13' ],\n//\t\t[ '20', null, null, '23' ]\n//\t]\n//\n// This allows for a quick access to table at give row & column. For instance to access table cell \"13\" from pasted table call:\n//\n//\t\tconst cell = map[ 1 ][ 3 ]\n//\nfunction createLocationMap( table, width, height ) {\n\t// Create height x width (row x column) two-dimensional table to store cells.\n\tconst map = new Array( height ).fill( null )\n\t\t.map( () => new Array( width ).fill( null ) );\n\n\tfor ( const { column, row, cell } of new TableWalker( table ) ) {\n\t\tmap[ row ][ column ] = cell;\n\t}\n\n\treturn map;\n}\n\n// Make selected cells rectangular by splitting the cells that stand out from a rectangular selection.\n//\n// In the table below a selection is shown with \"::\" and slots with anchor cells are named.\n//\n// +----+----+----+----+----+                    +----+----+----+----+----+\n// | 00 | 01 | 02 | 03      |                    | 00 | 01 | 02 | 03      |\n// +    +----+    +----+----+                    |    ::::::::::::::::----+\n// |    | 11 |    | 13 | 14 |                    |    ::11 |    | 13:: 14 |    <- first row\n// +----+----+    +    +----+                    +----::---|    |   ::----+\n// | 20 | 21 |    |    | 24 |   select cells:    | 20 ::21 |    |   :: 24 |\n// +----+----+    +----+----+     11 -> 33       +----::---|    |---::----+\n// | 30      |    | 33 | 34 |                    | 30 ::   |    | 33:: 34 |    <- last row\n// +         +    +----+    +                    |    ::::::::::::::::    +\n// |         |    | 43 |    |                    |         |    | 43 |    |\n// +----+----+----+----+----+                    +----+----+----+----+----+\n//                                                      ^          ^\n//                                                     first & last columns\n//\n// Will update table to:\n//\n//                       +----+----+----+----+----+\n//                       | 00 | 01 | 02 | 03      |\n//                       +    +----+----+----+----+\n//                       |    | 11 |    | 13 | 14 |\n//                       +----+----+    +    +----+\n//                       | 20 | 21 |    |    | 24 |\n//                       +----+----+    +----+----+\n//                       | 30 |    |    | 33 | 34 |\n//                       +    +----+----+----+    +\n//                       |    |    |    | 43 |    |\n//                       +----+----+----+----+----+\n//\n// In th example above:\n// - Cell \"02\" which have `rowspan = 4` must be trimmed at first and at after last row.\n// - Cell \"03\" which have `rowspan = 2` and `colspan = 2` must be trimmed at first column and after last row.\n// - Cells \"00\", \"03\" & \"30\" which cannot be cut by this algorithm as they are outside the trimmed area.\n// - Cell \"13\" cannot be cut as it is inside the trimmed area.\nfunction splitCellsToRectangularSelection( table, dimensions, writer ) {\n\tconst { firstRow, lastRow, firstColumn, lastColumn } = dimensions;\n\n\tconst rowIndexes = { first: firstRow, last: lastRow };\n\tconst columnIndexes = { first: firstColumn, last: lastColumn };\n\n\t// 1. Split cells vertically in two steps as first step might create cells that needs to split again.\n\tdoVerticalSplit( table, firstColumn, rowIndexes, writer );\n\tdoVerticalSplit( table, lastColumn + 1, rowIndexes, writer );\n\n\t// 2. Split cells horizontally in two steps as first step might create cells that needs to split again.\n\tdoHorizontalSplit( table, firstRow, columnIndexes, writer );\n\tdoHorizontalSplit( table, lastRow + 1, columnIndexes, writer, firstRow );\n}\n\nfunction doHorizontalSplit( table, splitRow, limitColumns, writer, startRow = 0 ) {\n\t// If selection starts at first row then no split is needed.\n\tif ( splitRow < 1 ) {\n\t\treturn;\n\t}\n\n\tconst overlappingCells = getVerticallyOverlappingCells( table, splitRow, startRow );\n\n\t// Filter out cells that are not touching insides of the rectangular selection.\n\tconst cellsToSplit = overlappingCells.filter( ( { column, cellWidth } ) => isAffectedBySelection( column, cellWidth, limitColumns ) );\n\n\treturn cellsToSplit.map( ( { cell } ) => splitHorizontally( cell, splitRow, writer ) );\n}\n\nfunction doVerticalSplit( table, splitColumn, limitRows, writer ) {\n\t// If selection starts at first column then no split is needed.\n\tif ( splitColumn < 1 ) {\n\t\treturn;\n\t}\n\n\tconst overlappingCells = getHorizontallyOverlappingCells( table, splitColumn );\n\n\t// Filter out cells that are not touching insides of the rectangular selection.\n\tconst cellsToSplit = overlappingCells.filter( ( { row, cellHeight } ) => isAffectedBySelection( row, cellHeight, limitRows ) );\n\n\treturn cellsToSplit.map( ( { cell, column } ) => splitVertically( cell, column, splitColumn, writer ) );\n}\n\n// Checks if cell at given row (column) is affected by a rectangular selection defined by first/last column (row).\n//\n// The same check is used for row as for column.\nfunction isAffectedBySelection( index, span, limit ) {\n\tconst endIndex = index + span - 1;\n\tconst { first, last } = limit;\n\n\tconst isInsideSelection = index >= first && index <= last;\n\tconst overlapsSelectionFromOutside = index < first && endIndex >= first;\n\n\treturn isInsideSelection || overlapsSelectionFromOutside;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecolumnresize\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport TableColumnResizeEditing from './tablecolumnresize/tablecolumnresizeediting';\nimport TableCellWidthEditing from './tablecellwidth/tablecellwidthediting';\n\nimport '../theme/tablecolumnresize.css';\n\n/**\n * The table column resize feature.\n *\n * It provides the possibility to set the width of each column in a table using a resize handler.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableColumnResize extends Plugin {\n\t/**\n\t * @inheritDoc\n \t */\n\tstatic get requires() {\n\t\treturn [ TableColumnResizeEditing, TableCellWidthEditing ];\n\t}\n\n\t/**\n\t * @inheritDoc\n \t */\n\tstatic get pluginName() {\n\t\treturn 'TableColumnResize';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecolumnresize/constants\n */\n\n/**\n * The minimum column width given as a percentage value. Used in situations when the table is not yet rendered, so it is impossible to\n * calculate how many percentage of the table width would be {@link ~COLUMN_MIN_WIDTH_IN_PIXELS minimum column width in pixels}.\n *\n * @const {Number}\n */\nexport const COLUMN_MIN_WIDTH_AS_PERCENTAGE = 5;\n\n/**\n * The minimum column width in pixels when the maximum table width is known.\n *\n * @const {Number}\n */\nexport const COLUMN_MIN_WIDTH_IN_PIXELS = 40;\n\n/**\n * Determines how many digits after the decimal point are used to store the column width as a percentage value.\n *\n * @const {Number}\n */\nexport const COLUMN_WIDTH_PRECISION = 2;\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecolumnresize/converters\n */\n\nimport { normalizeColumnWidths } from './utils';\n\n/**\n * Returns a helper for converting a view `<colgroup>` and `<col>` elements to the model table `columnWidths` attribute.\n *\n * Only the inline width, provided as a percentage value, in the `<col>` element is taken into account. If there are not enough `<col>`\n * elements matching this condition, the special value `auto` is returned. It indicates that the width of a column will be automatically\n * calculated in the\n * {@link module:table/tablecolumnresize/tablecolumnresizeediting~TableColumnResizeEditing#_registerPostFixer post-fixer}, depending\n * on the available table space.\n *\n * @param {module:core/plugin~Plugin} tableUtilsPlugin The {@link module:table/tableutils~TableUtils} plugin instance.\n * @returns {Function} Conversion helper.\n */\nexport function upcastColgroupElement( tableUtilsPlugin ) {\n\treturn dispatcher => dispatcher.on( 'element:colgroup', ( evt, data, conversionApi ) => {\n\t\tconst viewColgroupElement = data.viewItem;\n\n\t\tif ( !conversionApi.consumable.test( viewColgroupElement, { name: true } ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconversionApi.consumable.consume( viewColgroupElement, { name: true } );\n\n\t\tconst modelTable = data.modelCursor.findAncestor( 'table' );\n\t\tconst numberOfColumns = tableUtilsPlugin.getColumns( modelTable );\n\n\t\tlet columnWidths = [ ...Array( numberOfColumns ).keys() ]\n\t\t\t.map( columnIndex => {\n\t\t\t\tconst viewChild = viewColgroupElement.getChild( columnIndex );\n\n\t\t\t\tif ( !viewChild || !viewChild.is( 'element', 'col' ) ) {\n\t\t\t\t\treturn 'auto';\n\t\t\t\t}\n\n\t\t\t\tconst viewColWidth = viewChild.getStyle( 'width' );\n\n\t\t\t\tif ( !viewColWidth || !viewColWidth.endsWith( '%' ) ) {\n\t\t\t\t\treturn 'auto';\n\t\t\t\t}\n\n\t\t\t\treturn viewColWidth;\n\t\t\t} );\n\n\t\tif ( columnWidths.includes( 'auto' ) ) {\n\t\t\tcolumnWidths = normalizeColumnWidths( columnWidths ).map( width => width + '%' );\n\t\t}\n\n\t\tconversionApi.writer.setAttribute( 'columnWidths', columnWidths.join( ',' ), modelTable );\n\t} );\n}\n\n/**\n * Returns a helper for converting a model table `columnWidths` attribute to view `<colgroup>` and `<col>` elements.\n *\n * @returns {Function} Conversion helper.\n */\nexport function downcastTableColumnWidthsAttribute() {\n\treturn dispatcher => dispatcher.on( 'attribute:columnWidths:table', ( evt, data, conversionApi ) => {\n\t\tconst viewWriter = conversionApi.writer;\n\t\tconst modelTable = data.item;\n\n\t\tconst viewTable = [ ...conversionApi.mapper.toViewElement( modelTable ).getChildren() ]\n\t\t\t.find( viewChild => viewChild.is( 'element', 'table' ) );\n\n\t\tif ( data.attributeNewValue ) {\n\t\t\t// If new value is the same as the old, the operation is not applied (see the `writer.setAttributeOnItem()`).\n\t\t\t// OTOH the model element has the attribute already applied, so we can't compare the values.\n\t\t\t// Hence we need to just recreate the <colgroup> element every time.\n\t\t\tinsertColgroupElement( viewWriter, viewTable, data.attributeNewValue );\n\t\t\tviewWriter.addClass( 'ck-table-resized', viewTable );\n\t\t} else {\n\t\t\tremoveColgroupElement( viewWriter, viewTable );\n\t\t\tviewWriter.removeClass( 'ck-table-resized', viewTable );\n\t\t}\n\t} );\n}\n\n// Inserts the `<colgroup>` with `<col>` elements as the first child in the view table. Each `<col>` element represents a single column\n// and it has the inline width style set, taken from the appropriate slot from the `columnWidths` table attribute.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter View writer instance.\n// @param {module:engine/view/element~Element} viewTable View table.\n// @param {String} columnWidthsAttribute Column widths attribute from model table.\nfunction insertColgroupElement( viewWriter, viewTable, columnWidthsAttribute ) {\n\tconst columnWidths = columnWidthsAttribute.split( ',' );\n\n\tlet viewColgroupElement = [ ...viewTable.getChildren() ].find( viewElement => viewElement.is( 'element', 'colgroup' ) );\n\n\tif ( !viewColgroupElement ) {\n\t\tviewColgroupElement = viewWriter.createContainerElement( 'colgroup' );\n\t} else {\n\t\tfor ( const viewChild of [ ...viewColgroupElement.getChildren() ] ) {\n\t\t\tviewWriter.remove( viewChild );\n\t\t}\n\t}\n\n\tfor ( const columnIndex of Array( columnWidths.length ).keys() ) {\n\t\tconst viewColElement = viewWriter.createEmptyElement( 'col' );\n\n\t\tviewWriter.setStyle( 'width', columnWidths[ columnIndex ], viewColElement );\n\t\tviewWriter.insert( viewWriter.createPositionAt( viewColgroupElement, 'end' ), viewColElement );\n\t}\n\n\tviewWriter.insert( viewWriter.createPositionAt( viewTable, 'start' ), viewColgroupElement );\n}\n\n// Removes the `<colgroup>` with `<col>` elements from the view table.\n//\n// @private\n// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter View writer instance.\n// @param {module:engine/view/element~Element} viewTable View table.\nfunction removeColgroupElement( viewWriter, viewTable ) {\n\tconst viewColgroupElement = [ ...viewTable.getChildren() ].find( viewElement => viewElement.is( 'element', 'colgroup' ) );\n\n\tviewWriter.remove( viewColgroupElement );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecolumnresize/tablecolumnresizeediting\n */\n\nimport { throttle } from 'lodash-es';\nimport { global, DomEmitterMixin } from 'ckeditor5/src/utils';\nimport { Plugin } from 'ckeditor5/src/core';\n\nimport MouseEventsObserver from '../../src/tablemouse/mouseeventsobserver';\nimport TableEditing from '../tableediting';\nimport TableUtils from '../tableutils';\nimport TableWalker from '../tablewalker';\n\nimport TableWidthResizeCommand from './tablewidthresizecommand';\nimport TableColumnWidthsCommand from './tablecolumnwidthscommand';\n\nimport {\n\tupcastColgroupElement,\n\tdowncastTableColumnWidthsAttribute\n} from './converters';\n\nimport {\n\tclamp,\n\tcreateFilledArray,\n\tsumArray,\n\tgetColumnEdgesIndexes,\n\tgetChangedResizedTables,\n\tgetColumnMinWidthAsPercentage,\n\tgetElementWidthInPixels,\n\tgetTableWidthInPixels,\n\tnormalizeColumnWidths,\n\ttoPrecision,\n\tensureColumnResizerElement,\n\tgetDomCellOuterWidth\n} from './utils';\n\nimport { COLUMN_MIN_WIDTH_IN_PIXELS } from './constants';\n\n/**\n * The table column resize editing plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableColumnResizeEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableEditing, TableUtils ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableColumnResizeEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * A flag indicating if the column resizing is in progress.\n\t\t *\n\t\t * @private\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._isResizingActive = false;\n\n\t\t/**\n\t\t * A flag indicating if the column resizing is allowed. It is not allowed if the editor is in read-only\n\t\t * or comments-only mode or the `TableColumnResize` plugin is disabled.\n\t\t *\n\t\t * @private\n\t\t * @observable\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis.set( '_isResizingAllowed', true );\n\n\t\t/**\n\t\t * A temporary storage for the required data needed to correctly calculate the widths of the resized columns. This storage is\n\t\t * initialized when column resizing begins, and is purged upon completion.\n\t\t *\n\t\t * @private\n\t\t * @member {Object|null}\n\t\t */\n\t\tthis._resizingData = null;\n\n\t\t/**\n\t\t * DOM emitter.\n\t\t *\n\t\t * @private\n\t\t * @member {DomEmitterMixin}\n\t\t */\n\t\tthis._domEmitter = Object.create( DomEmitterMixin );\n\n\t\t/**\n\t\t * A local reference to the {@link module:table/tableutils~TableUtils} plugin.\n\t\t *\n\t\t * @private\n\t\t * @member {module:table/tableutils~TableUtils}\n\t\t */\n\t\tthis._tableUtilsPlugin = editor.plugins.get( 'TableUtils' );\n\n\t\tthis.on( 'change:_isResizingAllowed', ( evt, name, value ) => {\n\t\t\t// Toggling the `ck-column-resize_disabled` class shows and hides the resizers through CSS.\n\t\t\teditor.editing.view.change( writer => {\n\t\t\t\twriter[ value ? 'removeClass' : 'addClass' ]( 'ck-column-resize_disabled', editor.editing.view.document.getRoot() );\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tthis._extendSchema();\n\t\tthis._registerPostFixer();\n\t\tthis._registerConverters();\n\t\tthis._registerResizingListeners();\n\t\tthis._registerColgroupFixer();\n\t\tthis._registerResizerInserter();\n\n\t\tconst editor = this.editor;\n\t\tconst columnResizePlugin = editor.plugins.get( 'TableColumnResize' );\n\n\t\teditor.commands.add( 'resizeTableWidth', new TableWidthResizeCommand( editor ) );\n\t\teditor.commands.add( 'resizeColumnWidths', new TableColumnWidthsCommand( editor ) );\n\n\t\tconst resizeTableWidthCommand = editor.commands.get( 'resizeTableWidth' );\n\t\tconst resizeColumnWidthsCommand = editor.commands.get( 'resizeColumnWidths' );\n\n\t\t// Currently the states of column resize and table resize (which is actually the last column resize) features\n\t\t// are bound together. They can be separated in the future by adding distinct listeners and applying\n\t\t// different CSS classes (e.g. `ck-column-resize_disabled` and `ck-table-resize_disabled`) to the editor root.\n\t\t// See #12148 for the details.\n\t\tthis.bind( '_isResizingAllowed' ).to(\n\t\t\teditor, 'isReadOnly',\n\t\t\tcolumnResizePlugin, 'isEnabled',\n\t\t\tresizeTableWidthCommand, 'isEnabled',\n\t\t\tresizeColumnWidthsCommand, 'isEnabled',\n\t\t\t( isEditorReadOnly, isPluginEnabled, isResizeTableWidthCommandEnabled, isResizeColumnWidthsCommandEnabled ) =>\n\t\t\t\t!isEditorReadOnly && isPluginEnabled && isResizeTableWidthCommandEnabled && isResizeColumnWidthsCommandEnabled\n\t\t);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tthis._domEmitter.stopListening();\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Registers new attributes for a table model element.\n\t *\n\t * @private\n\t */\n\t_extendSchema() {\n\t\tthis.editor.model.schema.extend( 'table', {\n\t\t\tallowAttributes: [ 'tableWidth', 'columnWidths' ]\n\t\t} );\n\t}\n\n\t/**\n\t * Registers table column resize post-fixer.\n\t *\n\t * It checks if the change from the differ concerns a table-related element or attribute. For detected changes it:\n\t *  * Adjusts the `columnWidths` attribute to guarantee that the sum of the widths from all columns is 100%.\n\t *  * Checks if the `columnWidths` attribute gets updated accordingly after columns have been added or removed.\n\t *\n\t * @private\n\t */\n\t_registerPostFixer() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\tmodel.document.registerPostFixer( writer => {\n\t\t\tlet changed = false;\n\n\t\t\tfor ( const table of getChangedResizedTables( model ) ) {\n\t\t\t\t// (1) Adjust the `columnWidths` attribute to guarantee that the sum of the widths from all columns is 100%.\n\t\t\t\tconst columnWidths = normalizeColumnWidths( table.getAttribute( 'columnWidths' ).split( ',' ) );\n\n\t\t\t\t// (2) If the number of columns has changed, then we need to adjust the widths of the affected columns.\n\t\t\t\tadjustColumnWidths( columnWidths, table, this );\n\n\t\t\t\tconst columnWidthsAttribute = columnWidths.map( width => `${ width }%` ).join( ',' );\n\n\t\t\t\tif ( table.getAttribute( 'columnWidths' ) === columnWidthsAttribute ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\twriter.setAttribute( 'columnWidths', columnWidthsAttribute, table );\n\n\t\t\t\tchanged = true;\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t} );\n\n\t\t// Adjusts if necessary the `columnWidths` in case if the number of column has changed.\n\t\t//\n\t\t// @private\n\t\t// @param {Array.<Number>} columnWidths Note: this array **may be modified** by the function.\n\t\t// @param {module:engine/model/element~Element} table Table to be checked.\n\t\t// @param {module:table/tablecolumnresize/tablecolumnresizeediting~TableColumnResizeEditing} plugin\n\t\tfunction adjustColumnWidths( columnWidths, table, plugin ) {\n\t\t\tconst newTableColumnsCount = plugin._tableUtilsPlugin.getColumns( table );\n\t\t\tconst columnsCountDelta = newTableColumnsCount - columnWidths.length;\n\n\t\t\tif ( columnsCountDelta === 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Collect all cells that are affected by the change.\n\t\t\tconst cellSet = getAffectedCells( plugin.editor.model.document.differ, table );\n\n\t\t\tfor ( const cell of cellSet ) {\n\t\t\t\tconst currentColumnsDelta = newTableColumnsCount - columnWidths.length;\n\n\t\t\t\tif ( currentColumnsDelta === 0 ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// If the column count in the table changed, adjust the widths of the affected columns.\n\t\t\t\tconst hasMoreColumns = currentColumnsDelta > 0;\n\t\t\t\tconst currentColumnIndex = plugin._tableUtilsPlugin.getCellLocation( cell ).column;\n\n\t\t\t\tif ( hasMoreColumns ) {\n\t\t\t\t\tconst columnMinWidthAsPercentage = getColumnMinWidthAsPercentage( table, plugin.editor );\n\t\t\t\t\tconst columnWidthsToInsert = createFilledArray( currentColumnsDelta, columnMinWidthAsPercentage );\n\n\t\t\t\t\tcolumnWidths.splice( currentColumnIndex, 0, ...columnWidthsToInsert );\n\t\t\t\t} else {\n\t\t\t\t\t// Moves the widths of the removed columns to the preceding one.\n\t\t\t\t\t// Other editors either reduce the width of the whole table or adjust the widths\n\t\t\t\t\t// proportionally, so change of this behavior can be considered in the future.\n\t\t\t\t\tconst removedColumnWidths = columnWidths.splice( currentColumnIndex, Math.abs( currentColumnsDelta ) );\n\n\t\t\t\t\tcolumnWidths[ currentColumnIndex ] += sumArray( removedColumnWidths );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Returns a set of cells that have been changed in a given table.\n\t\t//\n\t\t// @private\n\t\t// @param {module:engine/model/differ~Differ} differ\n\t\t// @param {module:engine/model/element~Element} table\n\t\t// @returns {Set.<module:engine/model/element~Element>}\n\t\tfunction getAffectedCells( differ, table ) {\n\t\t\tconst cellSet = new Set();\n\n\t\t\tfor ( const change of differ.getChanges() ) {\n\t\t\t\tif (\n\t\t\t\t\tchange.type == 'insert' &&\n\t\t\t\t\tchange.position.nodeAfter &&\n\t\t\t\t\tchange.position.nodeAfter.name == 'tableCell' &&\n\t\t\t\t\tchange.position.nodeAfter.getAncestors().includes( table )\n\t\t\t\t) {\n\t\t\t\t\tcellSet.add( change.position.nodeAfter );\n\t\t\t\t} else if ( change.type == 'remove' ) {\n\t\t\t\t\t// If the first cell was removed, use the node after the change position instead.\n\t\t\t\t\tconst referenceNode = change.position.nodeBefore || change.position.nodeAfter;\n\n\t\t\t\t\tif ( referenceNode.name == 'tableCell' && referenceNode.getAncestors().includes( table ) ) {\n\t\t\t\t\t\tcellSet.add( referenceNode );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn cellSet;\n\t\t}\n\t}\n\n\t/**\n\t * Registers table column resize converters.\n\t *\n\t * @private\n\t */\n\t_registerConverters() {\n\t\tconst editor = this.editor;\n\t\tconst conversion = editor.conversion;\n\t\tconst widthStyleToTableWidthDefinition = {\n\t\t\tview: {\n\t\t\t\tname: 'figure',\n\t\t\t\tkey: 'style',\n\t\t\t\tvalue: {\n\t\t\t\t\twidth: /[\\s\\S]+/\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tname: 'table',\n\t\t\t\tkey: 'tableWidth',\n\t\t\t\tvalue: viewElement => viewElement.getStyle( 'width' )\n\t\t\t}\n\t\t};\n\t\tconst tableWidthToWidthStyleDefinition = {\n\t\t\tmodel: {\n\t\t\t\tname: 'table',\n\t\t\t\tkey: 'tableWidth'\n\t\t\t},\n\t\t\tview: width => ( {\n\t\t\t\tname: 'figure',\n\t\t\t\tkey: 'style',\n\t\t\t\tvalue: {\n\t\t\t\t\twidth\n\t\t\t\t}\n\t\t\t} )\n\t\t};\n\n\t\tconversion.for( 'upcast' ).attributeToAttribute( widthStyleToTableWidthDefinition );\n\t\tconversion.for( 'upcast' ).add( upcastColgroupElement( this._tableUtilsPlugin ) );\n\n\t\tconversion.for( 'downcast' ).attributeToAttribute( tableWidthToWidthStyleDefinition );\n\t\tconversion.for( 'downcast' ).add( downcastTableColumnWidthsAttribute() );\n\t}\n\n\t/**\n\t * Registers listeners to handle resizing process.\n\t *\n\t * @private\n\t */\n\t_registerResizingListeners() {\n\t\tconst editingView = this.editor.editing.view;\n\n\t\teditingView.addObserver( MouseEventsObserver );\n\t\teditingView.document.on( 'mousedown', this._onMouseDownHandler.bind( this ), { priority: 'high' } );\n\n\t\tthis._domEmitter.listenTo( global.window.document, 'mousemove', throttle( this._onMouseMoveHandler.bind( this ), 50 ) );\n\t\tthis._domEmitter.listenTo( global.window.document, 'mouseup', this._onMouseUpHandler.bind( this ) );\n\t}\n\n\t/**\n\t * Handles the `mousedown` event on column resizer element:\n\t *  * calculates the initial column pixel widths,\n\t *  * inserts the `<colgroup>` element if it is not present in the `<table>`,\n\t *  * puts the necessary data in the temporary storage,\n\t *  * applies the attributes to the `<table>` view element.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} eventInfo An object containing information about the fired event.\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData The data related to the DOM event.\n\t */\n\t_onMouseDownHandler( eventInfo, domEventData ) {\n\t\tconst target = domEventData.target;\n\n\t\tif ( !target.hasClass( 'ck-table-column-resizer' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !this._isResizingAllowed ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdomEventData.preventDefault();\n\t\teventInfo.stop();\n\n\t\tconst editor = this.editor;\n\t\tconst modelTable = editor.editing.mapper.toModelElement( target.findAncestor( 'figure' ) );\n\n\t\t// The column widths are calculated upon mousedown to allow lazy applying the `columnWidths` attribute on the table.\n\t\tconst columnWidthsInPx = _calculateDomColumnWidths( modelTable, this._tableUtilsPlugin, editor );\n\t\tconst viewTable = target.findAncestor( 'table' );\n\t\tconst editingView = editor.editing.view;\n\n\t\t// Insert colgroup for the table that is resized for the first time.\n\t\tif ( ![ ...viewTable.getChildren() ].find( viewCol => viewCol.is( 'element', 'colgroup' ) ) ) {\n\t\t\teditingView.change( viewWriter => {\n\t\t\t\t_insertColgroupElement( viewWriter, columnWidthsInPx, viewTable );\n\t\t\t} );\n\t\t}\n\n\t\tthis._isResizingActive = true;\n\t\tthis._resizingData = this._getResizingData( domEventData, columnWidthsInPx );\n\n\t\t// At this point we change only the editor view - we don't want other users to see our changes yet,\n\t\t// so we can't apply them in the model.\n\t\teditingView.change( writer => _applyResizingAttributesToTable( writer, viewTable, this._resizingData ) );\n\n\t\t// Calculates the DOM columns' widths. It is done by taking the width of the widest cell\n\t\t// from each table column (we rely on the  {@link module:table/tablewalker~TableWalker}\n\t\t// to determine which column the cell belongs to).\n\t\t//\n\t\t// @private\n\t\t// @param {module:engine/model/element~Element} modelTable A table which columns should be measured.\n\t\t// @param {module:table/tableutils~TableUtils} tableUtils The Table Utils plugin instance.\n\t\t// @param {module:core/editor/editor~Editor} editor The editor instance.\n\t\t// @returns {Array.<Number>} Columns' widths expressed in pixels (without unit).\n\t\tfunction _calculateDomColumnWidths( modelTable, tableUtilsPlugin, editor ) {\n\t\t\tconst columnWidthsInPx = Array( tableUtilsPlugin.getColumns( modelTable ) );\n\t\t\tconst tableWalker = new TableWalker( modelTable );\n\n\t\t\tfor ( const cellSlot of tableWalker ) {\n\t\t\t\tconst viewCell = editor.editing.mapper.toViewElement( cellSlot.cell );\n\t\t\t\tconst domCell = editor.editing.view.domConverter.mapViewToDom( viewCell );\n\t\t\t\tconst domCellWidth = getDomCellOuterWidth( domCell );\n\n\t\t\t\tif ( !columnWidthsInPx[ cellSlot.column ] || domCellWidth < columnWidthsInPx[ cellSlot.column ] ) {\n\t\t\t\t\tcolumnWidthsInPx[ cellSlot.column ] = toPrecision( domCellWidth );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn columnWidthsInPx;\n\t\t}\n\n\t\t// Creates a `<colgroup>` element with `<col>`s and inserts it into a given view table.\n\t\t//\n\t\t// @private\n\t\t// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter A writer instance.\n\t\t// @param {Array.<Number>} columnWidthsInPx Column widths.\n\t\t// @param {module:engine/view/element~Element} viewTable A table view element.\n\t\tfunction _insertColgroupElement( viewWriter, columnWidthsInPx, viewTable ) {\n\t\t\tconst colgroup = viewWriter.createContainerElement( 'colgroup' );\n\n\t\t\tfor ( let i = 0; i < columnWidthsInPx.length; i++ ) {\n\t\t\t\tconst viewColElement = viewWriter.createEmptyElement( 'col' );\n\t\t\t\tconst columnWidthInPc = `${ toPrecision( columnWidthsInPx[ i ] / sumArray( columnWidthsInPx ) * 100 ) }%`;\n\n\t\t\t\tviewWriter.setStyle( 'width', columnWidthInPc, viewColElement );\n\t\t\t\tviewWriter.insert( viewWriter.createPositionAt( colgroup, 'end' ), viewColElement );\n\t\t\t}\n\n\t\t\tviewWriter.insert( viewWriter.createPositionAt( viewTable, 'start' ), colgroup );\n\t\t}\n\n\t\t// Applies the style and classes to the view table as the resizing begun.\n\t\t//\n\t\t// @private\n\t\t// @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter A writer instance.\n\t\t// @param {module:engine/view/element~Element} viewTable A table containing the clicked resizer.\n\t\t// @param {Object} resizingData Data related to the resizing.\n\t\tfunction _applyResizingAttributesToTable( viewWriter, viewTable, resizingData ) {\n\t\t\tconst figureInitialPcWidth = resizingData.widths.viewFigureWidth / resizingData.widths.viewFigureParentWidth;\n\n\t\t\tviewWriter.addClass( 'ck-table-resized', viewTable );\n\t\t\tviewWriter.addClass( 'ck-table-column-resizer__active', resizingData.elements.viewResizer );\n\t\t\tviewWriter.setStyle( 'width', `${ toPrecision( figureInitialPcWidth * 100 ) }%`, viewTable.findAncestor( 'figure' ) );\n\t\t}\n\t}\n\n\t/**\n\t * Handles the `mousemove` event.\n\t *  * If resizing process is not in progress, it does nothing.\n\t *  * If resizing is active but not allowed, it stops the resizing process instantly calling the `mousedown` event handler.\n\t *  * Otherwise it dynamically updates the widths of the resized columns.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} eventInfo An object containing information about the fired event.\n\t * @param {Event} mouseEventData The native DOM event.\n\t */\n\t_onMouseMoveHandler( eventInfo, mouseEventData ) {\n\t\tif ( !this._isResizingActive ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !this._isResizingAllowed ) {\n\t\t\tthis._onMouseUpHandler();\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tcolumnPosition,\n\t\t\tflags: {\n\t\t\t\tisRightEdge,\n\t\t\t\tisTableCentered,\n\t\t\t\tisLtrContent\n\t\t\t},\n\t\t\telements: {\n\t\t\t\tviewFigure,\n\t\t\t\tviewLeftColumn,\n\t\t\t\tviewRightColumn\n\t\t\t},\n\t\t\twidths: {\n\t\t\t\tviewFigureParentWidth,\n\t\t\t\ttableWidth,\n\t\t\t\tleftColumnWidth,\n\t\t\t\trightColumnWidth\n\t\t\t}\n\t\t} = this._resizingData;\n\n\t\tconst dxLowerBound = -leftColumnWidth + COLUMN_MIN_WIDTH_IN_PIXELS;\n\n\t\tconst dxUpperBound = isRightEdge ?\n\t\t\tviewFigureParentWidth - tableWidth :\n\t\t\trightColumnWidth - COLUMN_MIN_WIDTH_IN_PIXELS;\n\n\t\t// The multiplier is needed for calculating the proper movement offset:\n\t\t// - it should negate the sign if content language direction is right-to-left,\n\t\t// - it should double the offset if the table edge is resized and table is centered.\n\t\tconst multiplier = ( isLtrContent ? 1 : -1 ) * ( isRightEdge && isTableCentered ? 2 : 1 );\n\n\t\tconst dx = clamp(\n\t\t\t( mouseEventData.clientX - columnPosition ) * multiplier,\n\t\t\tMath.min( dxLowerBound, 0 ),\n\t\t\tMath.max( dxUpperBound, 0 )\n\t\t);\n\n\t\tif ( dx === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.editor.editing.view.change( writer => {\n\t\t\tconst leftColumnWidthAsPercentage = toPrecision( ( leftColumnWidth + dx ) * 100 / tableWidth );\n\n\t\t\twriter.setStyle( 'width', `${ leftColumnWidthAsPercentage }%`, viewLeftColumn );\n\n\t\t\tif ( isRightEdge ) {\n\t\t\t\tconst tableWidthAsPercentage = toPrecision( ( tableWidth + dx ) * 100 / viewFigureParentWidth );\n\n\t\t\t\twriter.setStyle( 'width', `${ tableWidthAsPercentage }%`, viewFigure );\n\t\t\t} else {\n\t\t\t\tconst rightColumnWidthAsPercentage = toPrecision( ( rightColumnWidth - dx ) * 100 / tableWidth );\n\n\t\t\t\twriter.setStyle( 'width', `${ rightColumnWidthAsPercentage }%`, viewRightColumn );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Handles the `mouseup` event.\n\t *  * If resizing process is not in progress, it does nothing.\n\t *  * If resizing is active but not allowed, it cancels the resizing process restoring the original widths.\n\t *  * Otherwise it propagates the changes from view to the model by executing the adequate commands.\n\t *\n\t * @private\n\t */\n\t_onMouseUpHandler() {\n\t\tif ( !this._isResizingActive ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tviewResizer,\n\t\t\tmodelTable,\n\t\t\tviewFigure,\n\t\t\tviewColgroup\n\t\t} = this._resizingData.elements;\n\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\n\t\tconst columnWidthsAttributeOld = modelTable.getAttribute( 'columnWidths' );\n\t\tconst columnWidthsAttributeNew = [ ...viewColgroup.getChildren() ]\n\t\t\t.map( viewCol => viewCol.getStyle( 'width' ) )\n\t\t\t.join( ',' );\n\n\t\tconst isColumnWidthsAttributeChanged = columnWidthsAttributeOld !== columnWidthsAttributeNew;\n\n\t\tconst tableWidthAttributeOld = modelTable.getAttribute( 'tableWidth' );\n\t\tconst tableWidthAttributeNew = viewFigure.getStyle( 'width' );\n\n\t\tconst isTableWidthAttributeChanged = tableWidthAttributeOld !== tableWidthAttributeNew;\n\n\t\tif ( isColumnWidthsAttributeChanged || isTableWidthAttributeChanged ) {\n\t\t\tif ( this._isResizingAllowed ) {\n\t\t\t\t// Commit all changes to the model.\n\t\t\t\tif ( isTableWidthAttributeChanged ) {\n\t\t\t\t\teditor.execute(\n\t\t\t\t\t\t'resizeTableWidth',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttable: modelTable,\n\t\t\t\t\t\t\ttableWidth: `${ toPrecision( tableWidthAttributeNew ) }%`,\n\t\t\t\t\t\t\tcolumnWidths: columnWidthsAttributeNew\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\teditor.execute( 'resizeColumnWidths', { columnWidths: columnWidthsAttributeNew, table: modelTable } );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// In read-only mode revert all changes in the editing view. The model is not touched so it does not need to be restored.\n\t\t\t\t// This case can occur if the read-only mode kicks in during the resizing process.\n\t\t\t\teditingView.change( writer => {\n\t\t\t\t\t// If table had resized columns before, restore the previous column widths.\n\t\t\t\t\t// Otherwise clean up the view from the temporary column resizing markup.\n\t\t\t\t\tif ( columnWidthsAttributeOld ) {\n\t\t\t\t\t\tconst columnWidths = columnWidthsAttributeOld.split( ',' );\n\n\t\t\t\t\t\tfor ( const viewCol of viewColgroup.getChildren() ) {\n\t\t\t\t\t\t\twriter.setStyle( 'width', columnWidths.shift(), viewCol );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriter.remove( viewColgroup );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isTableWidthAttributeChanged ) {\n\t\t\t\t\t\t// If the whole table was already resized before, restore the previous table width.\n\t\t\t\t\t\t// Otherwise clean up the view from the temporary table resizing markup.\n\t\t\t\t\t\tif ( tableWidthAttributeOld ) {\n\t\t\t\t\t\t\twriter.setStyle( 'width', tableWidthAttributeOld, viewFigure );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twriter.removeStyle( 'width', viewFigure );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// If a table and its columns weren't resized before,\n\t\t\t\t\t// prune the remaining common resizing markup.\n\t\t\t\t\tif ( !columnWidthsAttributeOld && !tableWidthAttributeOld ) {\n\t\t\t\t\t\twriter.removeClass(\n\t\t\t\t\t\t\t'ck-table-resized',\n\t\t\t\t\t\t\t[ ...viewFigure.getChildren() ].find( element => element.name === 'table' )\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\teditingView.change( writer => {\n\t\t\twriter.removeClass( 'ck-table-column-resizer__active', viewResizer );\n\t\t} );\n\n\t\tthis._isResizingActive = false;\n\t\tthis._resizingData = null;\n\t}\n\n\t/**\n\t * Retrieves and returns required data needed for the resizing process.\n\t *\n\t * @private\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData The data of the `mousedown` event.\n\t * @param {Array.<Number>} columnWidths The current widths of the columns.\n\t * @returns {Object} The data needed for the resizing process.\n\t */\n\t_getResizingData( domEventData, columnWidths ) {\n\t\tconst editor = this.editor;\n\n\t\tconst columnPosition = domEventData.domEvent.clientX;\n\n\t\tconst viewResizer = domEventData.target;\n\t\tconst viewLeftCell = viewResizer.findAncestor( 'td' ) || viewResizer.findAncestor( 'th' );\n\t\tconst modelLeftCell = editor.editing.mapper.toModelElement( viewLeftCell );\n\t\tconst modelTable = modelLeftCell.findAncestor( 'table' );\n\n\t\tconst leftColumnIndex = getColumnEdgesIndexes( modelLeftCell, this._tableUtilsPlugin ).rightEdge;\n\t\tconst lastColumnIndex = this._tableUtilsPlugin.getColumns( modelTable ) - 1;\n\n\t\tconst isRightEdge = leftColumnIndex === lastColumnIndex;\n\t\tconst isTableCentered = !modelTable.hasAttribute( 'tableAlignment' );\n\t\tconst isLtrContent = editor.locale.contentLanguageDirection !== 'rtl';\n\n\t\tconst viewTable = viewLeftCell.findAncestor( 'table' );\n\t\tconst viewFigure = viewTable.findAncestor( 'figure' );\n\t\tconst viewColgroup = [ ...viewTable.getChildren() ].find( viewCol => viewCol.is( 'element', 'colgroup' ) );\n\t\tconst viewLeftColumn = viewColgroup.getChild( leftColumnIndex );\n\t\tconst viewRightColumn = isRightEdge ? undefined : viewColgroup.getChild( leftColumnIndex + 1 );\n\n\t\tconst viewFigureParentWidth = getElementWidthInPixels( editor.editing.view.domConverter.mapViewToDom( viewFigure.parent ) );\n\t\tconst viewFigureWidth = getElementWidthInPixels( editor.editing.view.domConverter.mapViewToDom( viewFigure ) );\n\t\tconst tableWidth = getTableWidthInPixels( modelTable, editor );\n\t\tconst leftColumnWidth = columnWidths[ leftColumnIndex ];\n\t\tconst rightColumnWidth = isRightEdge ? undefined : columnWidths[ leftColumnIndex + 1 ];\n\n\t\treturn {\n\t\t\tcolumnPosition,\n\t\t\tflags: {\n\t\t\t\tisRightEdge,\n\t\t\t\tisTableCentered,\n\t\t\t\tisLtrContent\n\t\t\t},\n\t\t\telements: {\n\t\t\t\tviewResizer,\n\t\t\t\tmodelTable,\n\t\t\t\tviewFigure,\n\t\t\t\tviewColgroup,\n\t\t\t\tviewLeftColumn,\n\t\t\t\tviewRightColumn\n\t\t\t},\n\t\t\twidths: {\n\t\t\t\tviewFigureParentWidth,\n\t\t\t\tviewFigureWidth,\n\t\t\t\ttableWidth,\n\t\t\t\tleftColumnWidth,\n\t\t\t\trightColumnWidth\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Inserts the `<colgroup>` element if it is missing in the view table (e.g. after table insertion into table).\n\t *\n\t * @private\n\t */\n\t_registerColgroupFixer() {\n\t\tconst editor = this.editor;\n\n\t\tthis.listenTo( editor.editing.view.document, 'layoutChanged', () => {\n\t\t\tconst viewTable = editor.editing.view.document.selection.getFirstPosition().getAncestors().reverse().find(\n\t\t\t\tviewElement => viewElement.name === 'table'\n\t\t\t);\n\t\t\tconst viewTableContainsColgroup = viewTable && [ ...viewTable.getChildren() ].find(\n\t\t\t\tviewElement => viewElement.is( 'element', 'colgroup' )\n\t\t\t);\n\t\t\tconst modelTable = editor.model.document.selection.getFirstPosition().findAncestor( 'table' );\n\n\t\t\tif ( modelTable && modelTable.hasAttribute( 'columnWidths' ) && viewTable && !viewTableContainsColgroup ) {\n\t\t\t\teditor.editing.reconvertItem( modelTable );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * Registers a listener ensuring that each resizable cell have a resizer handle.\n\t *\n\t * @private\n\t */\n\t_registerResizerInserter() {\n\t\tconst view = this.editor.editing.view;\n\n\t\tview.on( 'render', () => {\n\t\t\tfor ( const item of view.createRangeIn( view.document.getRoot() ) ) {\n\t\t\t\tif ( ![ 'td', 'th' ].includes( item.item.name ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tview.change( viewWriter => {\n\t\t\t\t\tensureColumnResizerElement( viewWriter, item.item );\n\t\t\t\t} );\n\t\t\t}\n\t\t}, { priority: 'lowest' } );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecolumnresize/tablecolumnwidthscommand\n */\n\nimport TablePropertyCommand from '../tableproperties/commands/tablepropertycommand';\n\n/**\n * @extends module:table/tableproperties/commands/tablepropertycommand~TablePropertyCommand\n */\nexport default class TableColumnWidthsCommand extends TablePropertyCommand {\n\t/**\n\t * Creates a new `TableColumnWidthsCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'columnWidths', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\t// The command is always enabled as it doesn't care about the actual selection - table can be resized\n\t\t// even if the selection is elsewhere.\n\t\tthis.isEnabled = true;\n\t}\n\n\t/**\n\t * Changes the `columnWidths` attribute value for the given or currently selected table.\n\t *\n\t * @param {Object} options\n\t * @param {String} [options.columnWidths] New value of the `columnWidths` attribute.\n\t * @param {module:engine/model/element~Element} [options.table] The table that is having the columns resized.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst table = options.table || model.document.selection.getSelectedElement();\n\t\tconst { columnWidths } = options;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( columnWidths ) {\n\t\t\t\twriter.setAttribute( this.attributeName, columnWidths, table );\n\t\t\t} else {\n\t\t\t\twriter.removeAttribute( this.attributeName, table );\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecolumnresize/tablewidthresizecommand\n */\n\nimport TablePropertyCommand from '../tableproperties/commands/tablepropertycommand';\n\n/**\n * @extends module:table/tableproperties/commands/tablepropertycommand~TablePropertyCommand\n */\nexport default class TableWidthResizeCommand extends TablePropertyCommand {\n\t/**\n\t * Creates a new `TableWidthResizeCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\t// We create a custom command instead of using the existing `TableWidthCommand`\n\t\t// as we also need to change the `columnWidths` property and running both commands\n\t\t// separately would make the integration with Track Changes feature more troublesome.\n\t\tsuper( editor, 'tableWidth', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\t// The command is always enabled as it doesn't care about the actual selection - table can be resized\n\t\t// even if the selection is elsewhere.\n\t\tthis.isEnabled = true;\n\t}\n\n\t/**\n\t * Changes the `tableWidth` and `columnWidths` attribute values for the given or currently selected table.\n\t *\n\t * @param {Object} options\n\t * @param {String} [options.tableWidth] The new table width.\n\t * @param {String} [options.columnWidths] The new table column widths.\n\t * @param {module:engine/model/element~Element} [options.table] The table that is affected by the resize.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst table = options.table || model.document.selection.getSelectedElement();\n\t\tconst { tableWidth, columnWidths } = options;\n\n\t\tmodel.change( writer => {\n\t\t\tif ( tableWidth ) {\n\t\t\t\twriter.setAttribute( this.attributeName, tableWidth, table );\n\t\t\t\twriter.setAttribute( 'columnWidths', columnWidths, table );\n\t\t\t} else {\n\t\t\t\twriter.removeAttribute( this.attributeName, table );\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablecolumnresize/utils\n */\n\nimport { global } from 'ckeditor5/src/utils';\nimport {\n\tCOLUMN_WIDTH_PRECISION,\n\tCOLUMN_MIN_WIDTH_AS_PERCENTAGE,\n\tCOLUMN_MIN_WIDTH_IN_PIXELS\n} from './constants';\n\n/**\n * Returns all the inserted or changed table model elements in a given change set. Only the tables\n * with 'columnsWidth' attribute are taken into account. The returned set may be empty.\n *\n * Most notably if an entire table is removed it will not be included in returned set.\n *\n * @param {module:engine/model/model~Model} model The model to collect the affected elements from.\n * @returns {Set.<module:engine/model/element~Element>} A set of table model elements.\n */\nexport function getChangedResizedTables( model ) {\n\tconst affectedTables = new Set();\n\n\tfor ( const change of model.document.differ.getChanges() ) {\n\t\tlet referencePosition = null;\n\n\t\t// Checks if the particular change from the differ is:\n\t\t// - an insertion or removal of a table, a row or a cell,\n\t\t// - an attribute change on a table, a row or a cell.\n\t\tswitch ( change.type ) {\n\t\t\tcase 'insert':\n\t\t\t\treferencePosition = [ 'table', 'tableRow', 'tableCell' ].includes( change.name ) ?\n\t\t\t\t\tchange.position :\n\t\t\t\t\tnull;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'remove':\n\t\t\t\t// If the whole table is removed, there's no need to update its column widths (#12201).\n\t\t\t\treferencePosition = [ 'tableRow', 'tableCell' ].includes( change.name ) ?\n\t\t\t\t\tchange.position :\n\t\t\t\t\tnull;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'attribute':\n\t\t\t\tif ( change.range.start.nodeAfter ) {\n\t\t\t\t\treferencePosition = [ 'table', 'tableRow', 'tableCell' ].includes( change.range.start.nodeAfter.name ) ?\n\t\t\t\t\t\tchange.range.start :\n\t\t\t\t\t\tnull;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif ( !referencePosition ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst tableNode = ( referencePosition.nodeAfter && referencePosition.nodeAfter.name === 'table' ) ?\n\t\t\treferencePosition.nodeAfter : referencePosition.findAncestor( 'table' );\n\n\t\t// We iterate over the whole table looking for the nested tables that are also affected.\n\t\tfor ( const node of model.createRangeOn( tableNode ).getItems() ) {\n\t\t\tif ( node.is( 'element' ) && node.name === 'table' && node.hasAttribute( 'columnWidths' ) ) {\n\t\t\t\taffectedTables.add( node );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn affectedTables;\n}\n\n/**\n * Calculates the percentage of the minimum column width given in pixels for a given table.\n *\n * @param {module:engine/model/element~Element} modelTable A table model element.\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {Number} The minimal column width in percentage.\n */\nexport function getColumnMinWidthAsPercentage( modelTable, editor ) {\n\treturn COLUMN_MIN_WIDTH_IN_PIXELS * 100 / getTableWidthInPixels( modelTable, editor );\n}\n\n/**\n * Calculates the table width in pixels.\n *\n * @param {module:engine/model/element~Element} modelTable A table model element.\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {Number} The width of the table in pixels.\n */\nexport function getTableWidthInPixels( modelTable, editor ) {\n\t// It is possible for a table to not have a <tbody> element - see #11878.\n\tconst referenceElement = getChildrenViewElement( modelTable, 'tbody', editor ) || getChildrenViewElement( modelTable, 'thead', editor );\n\tconst domReferenceElement = editor.editing.view.domConverter.mapViewToDom( referenceElement );\n\n\treturn getElementWidthInPixels( domReferenceElement );\n}\n\n// Returns the a view element with a given name that is nested directly in a `<table>` element\n// related to a given `modelTable`.\n//\n// @private\n// @param {module:engine/model/element~Element} table\n// @param {module:core/editor/editor~Editor} editor\n// @param {String} elementName Name of a view to be looked for, e.g. `'colgroup`', `'thead`'.\n// @returns {module:engine/view/element~Element|undefined} Matched view or `undefined` otherwise.\nfunction getChildrenViewElement( modelTable, elementName, editor ) {\n\tconst viewFigure = editor.editing.mapper.toViewElement( modelTable );\n\tconst viewTable = [ ...viewFigure.getChildren() ].find( viewChild => viewChild.is( 'element', 'table' ) );\n\n\treturn [ ...viewTable.getChildren() ].find( viewChild => viewChild.is( 'element', elementName ) );\n}\n\n/**\n * Returns the computed width (in pixels) of the DOM element without padding and borders.\n *\n * @param {HTMLElement} domElement A DOM element.\n * @returns {Number} The width of the DOM element in pixels.\n */\nexport function getElementWidthInPixels( domElement ) {\n\tconst styles = global.window.getComputedStyle( domElement );\n\n\t// In the 'border-box' box sizing algorithm, the element's width\n\t// already includes the padding and border width (#12335).\n\tif ( styles.boxSizing === 'border-box' ) {\n\t\treturn parseFloat( styles.width ) -\n\t\t\tparseFloat( styles.paddingLeft ) -\n\t\t\tparseFloat( styles.paddingRight ) -\n\t\t\tparseFloat( styles.borderLeftWidth ) -\n\t\t\tparseFloat( styles.borderRightWidth );\n\t} else {\n\t\treturn parseFloat( styles.width );\n\t}\n}\n\n/**\n * Returns the column indexes on the left and right edges of a cell. They differ if the cell spans\n * across multiple columns.\n *\n * @param {module:engine/model/element~Element} cell A table cell model element.\n * @param {module:table/tableutils~TableUtils} tableUtils The Table Utils plugin instance.\n * @returns {Object} An object containing the indexes of the left and right edges of the cell.\n * @returns {Number} return.leftEdge The index of the left edge of the cell.\n * @returns {Number} return.rightEdge The index of the right edge of the cell.\n */\nexport function getColumnEdgesIndexes( cell, tableUtils ) {\n\tconst cellColumnIndex = tableUtils.getCellLocation( cell ).column;\n\tconst cellWidth = cell.getAttribute( 'colspan' ) || 1;\n\n\treturn {\n\t\tleftEdge: cellColumnIndex,\n\t\trightEdge: cellColumnIndex + cellWidth - 1\n\t};\n}\n\n/**\n * Rounds the provided value to a fixed-point number with defined number of digits after the decimal point.\n *\n * @param {Number|String} value A number to be rounded.\n * @returns {Number} The rounded number.\n */\nexport function toPrecision( value ) {\n\tconst multiplier = Math.pow( 10, COLUMN_WIDTH_PRECISION );\n\tconst number = parseFloat( value );\n\n\treturn Math.round( number * multiplier ) / multiplier;\n}\n\n/**\n * Clamps the number within the inclusive lower (min) and upper (max) bounds. Returned number is rounded using the\n * {@link ~toPrecision `toPrecision()`} function.\n *\n * @param {Number} number A number to be clamped.\n * @param {Number} min A lower bound.\n * @param {Number} max An upper bound.\n * @returns {Number} The clamped number.\n */\nexport function clamp( number, min, max ) {\n\tif ( number <= min ) {\n\t\treturn toPrecision( min );\n\t}\n\n\tif ( number >= max ) {\n\t\treturn toPrecision( max );\n\t}\n\n\treturn toPrecision( number );\n}\n\n/**\n * Creates an array with defined length and fills all elements with defined value.\n *\n * @param {Number} length The length of the array.\n * @param {*} value The value to fill the array with.\n * @returns {Array.<*>} An array with defined length and filled with defined value.\n */\nexport function createFilledArray( length, value ) {\n\treturn Array( length ).fill( value );\n}\n\n/**\n * Sums all array values that can be parsed to a float.\n *\n * @param {Array.<Number>} array An array of numbers.\n * @returns {Number} The sum of all array values.\n */\nexport function sumArray( array ) {\n\treturn array\n\t\t.map( value => parseFloat( value ) )\n\t\t.filter( value => !Number.isNaN( value ) )\n\t\t.reduce( ( result, item ) => result + item, 0 );\n}\n\n/**\n * Makes sure that the sum of the widths from all columns is 100%. If the sum of all the widths is not equal 100%, all the widths are\n * changed proportionally so that they all sum back to 100%. If there are columns without specified width, the amount remaining\n * after assigning the known widths will be distributed equally between them.\n *\n * Currently, only widths provided as percentage values are supported.\n *\n * @param {Array.<Number>} columnWidths An array of column widths.\n * @returns {Array.<Number>} An array of column widths guaranteed to sum up to 100%.\n */\nexport function normalizeColumnWidths( columnWidths ) {\n\tcolumnWidths = calculateMissingColumnWidths( columnWidths );\n\tconst totalWidth = sumArray( columnWidths );\n\n\tif ( totalWidth === 100 ) {\n\t\treturn columnWidths;\n\t}\n\n\treturn columnWidths\n\t\t// Adjust all the columns proportionally.\n\t\t.map( columnWidth => toPrecision( columnWidth * 100 / totalWidth ) )\n\t\t// Due to rounding of numbers it may happen that the sum of the widths of all columns will not be exactly 100%. Therefore, the width\n\t\t// of the last column is explicitly adjusted (narrowed or expanded), since all the columns have been proportionally changed already.\n\t\t.map( ( columnWidth, columnIndex, columnWidths ) => {\n\t\t\tconst isLastColumn = columnIndex === columnWidths.length - 1;\n\n\t\t\tif ( !isLastColumn ) {\n\t\t\t\treturn columnWidth;\n\t\t\t}\n\n\t\t\tconst totalWidth = sumArray( columnWidths );\n\n\t\t\treturn toPrecision( columnWidth + 100 - totalWidth );\n\t\t} );\n}\n\n// Initializes the column widths by parsing the attribute value and calculating the uninitialized column widths. The special value 'auto'\n// indicates that width for the column must be calculated. The width of such uninitialized column is calculated as follows:\n// - If there is enough free space in the table for all uninitialized columns to have at least the minimum allowed width for all of them,\n//   then set this width equally for all uninitialized columns.\n// - Otherwise, just set the minimum allowed width for all uninitialized columns. The sum of all column widths will be greater than 100%,\n//   but then it will be adjusted proportionally to 100% in {@link #normalizeColumnWidths `normalizeColumnWidths()`}.\n//\n// @private\n// @param {Array.<Number>} columnWidths An array of column widths.\n// @returns {Array.<Number>} An array with 'auto' values replaced with calculated widths.\nfunction calculateMissingColumnWidths( columnWidths ) {\n\tconst numberOfUninitializedColumns = columnWidths.filter( columnWidth => columnWidth === 'auto' ).length;\n\n\tif ( numberOfUninitializedColumns === 0 ) {\n\t\treturn columnWidths.map( columnWidth => toPrecision( columnWidth ) );\n\t}\n\n\tconst totalWidthOfInitializedColumns = sumArray( columnWidths );\n\n\tconst widthForUninitializedColumn = Math.max(\n\t\t( 100 - totalWidthOfInitializedColumns ) / numberOfUninitializedColumns,\n\t\tCOLUMN_MIN_WIDTH_AS_PERCENTAGE\n\t);\n\n\treturn columnWidths\n\t\t.map( columnWidth => columnWidth === 'auto' ? widthForUninitializedColumn : columnWidth )\n\t\t.map( columnWidth => toPrecision( columnWidth ) );\n}\n\n/**\n * Inserts column resizer element into a view cell if it is missing.\n *\n * @param {module:engine/view/downcastwriter~DowncastWriter} viewWriter View writer instance.\n * @param {module:engine/view/element~Element} viewCell View cell where resizer should be put.\n */\nexport function ensureColumnResizerElement( viewWriter, viewCell ) {\n\tlet viewTableColumnResizerElement = [ ...viewCell.getChildren() ]\n\t\t.find( viewElement => viewElement.hasClass( 'ck-table-column-resizer' ) );\n\n\tif ( viewTableColumnResizerElement ) {\n\t\treturn;\n\t}\n\n\tviewTableColumnResizerElement = viewWriter.createUIElement( 'div', {\n\t\tclass: 'ck-table-column-resizer'\n\t} );\n\n\tviewWriter.insert(\n\t\tviewWriter.createPositionAt( viewCell, 'end' ),\n\t\tviewTableColumnResizerElement\n\t);\n}\n\n/**\n * Calculates the total horizontal space taken by the cell. That includes:\n *  * width,\n *  * left and red padding,\n *  * border width.\n *\n * @param {HTMLElement}  domCell A DOM cell element.\n * @returns {Number} Width in pixels without `px` at the end.\n */\nexport function getDomCellOuterWidth( domCell ) {\n\tconst styles = global.window.getComputedStyle( domCell );\n\n\t// In the 'border-box' box sizing algorithm, the element's width\n\t// already includes the padding and border width (#12335).\n\tif ( styles.boxSizing === 'border-box' ) {\n\t\treturn parseInt( styles.width );\n\t} else {\n\t\treturn parseFloat( styles.width ) +\n\t\t\tparseFloat( styles.paddingLeft ) +\n\t\t\tparseFloat( styles.paddingRight ) +\n\t\t\tparseFloat( styles.borderWidth );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableediting\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\n\nimport upcastTable, { ensureParagraphInTableCell, skipEmptyTableRow, upcastTableFigure } from './converters/upcasttable';\nimport { convertParagraphInTableCell, downcastCell, downcastRow, downcastTable } from './converters/downcast';\n\nimport InsertTableCommand from './commands/inserttablecommand';\nimport InsertRowCommand from './commands/insertrowcommand';\nimport InsertColumnCommand from './commands/insertcolumncommand';\nimport SplitCellCommand from './commands/splitcellcommand';\nimport MergeCellCommand from './commands/mergecellcommand';\nimport RemoveRowCommand from './commands/removerowcommand';\nimport RemoveColumnCommand from './commands/removecolumncommand';\nimport SetHeaderRowCommand from './commands/setheaderrowcommand';\nimport SetHeaderColumnCommand from './commands/setheadercolumncommand';\nimport MergeCellsCommand from './commands/mergecellscommand';\nimport SelectRowCommand from './commands/selectrowcommand';\nimport SelectColumnCommand from './commands/selectcolumncommand';\nimport TableUtils from '../src/tableutils';\n\nimport injectTableLayoutPostFixer from './converters/table-layout-post-fixer';\nimport injectTableCellParagraphPostFixer from './converters/table-cell-paragraph-post-fixer';\n\nimport tableHeadingsRefreshHandler from './converters/table-headings-refresh-handler';\nimport tableCellRefreshHandler from './converters/table-cell-refresh-handler';\n\nimport '../theme/tableediting.css';\n\n/**\n * The table editing feature.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableUtils ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst schema = model.schema;\n\t\tconst conversion = editor.conversion;\n\t\tconst tableUtils = editor.plugins.get( TableUtils );\n\n\t\tschema.register( 'table', {\n\t\t\tinheritAllFrom: '$blockObject',\n\t\t\tallowAttributes: [ 'headingRows', 'headingColumns' ]\n\t\t} );\n\n\t\tschema.register( 'tableRow', {\n\t\t\tallowIn: 'table',\n\t\t\tisLimit: true\n\t\t} );\n\n\t\tschema.register( 'tableCell', {\n\t\t\tallowContentOf: '$container',\n\t\t\tallowIn: 'tableRow',\n\t\t\tallowAttributes: [ 'colspan', 'rowspan' ],\n\t\t\tisLimit: true,\n\t\t\tisSelectable: true\n\t\t} );\n\n\t\t// Figure conversion.\n\t\tconversion.for( 'upcast' ).add( upcastTableFigure() );\n\n\t\t// Table conversion.\n\t\tconversion.for( 'upcast' ).add( upcastTable() );\n\n\t\tconversion.for( 'editingDowncast' ).elementToStructure( {\n\t\t\tmodel: {\n\t\t\t\tname: 'table',\n\t\t\t\tattributes: [ 'headingRows' ]\n\t\t\t},\n\t\t\tview: downcastTable( tableUtils, { asWidget: true } )\n\t\t} );\n\t\tconversion.for( 'dataDowncast' ).elementToStructure( {\n\t\t\tmodel: {\n\t\t\t\tname: 'table',\n\t\t\t\tattributes: [ 'headingRows' ]\n\t\t\t},\n\t\t\tview: downcastTable( tableUtils )\n\t\t} );\n\n\t\t// Table row conversion.\n\t\tconversion.for( 'upcast' ).elementToElement( { model: 'tableRow', view: 'tr' } );\n\t\tconversion.for( 'upcast' ).add( skipEmptyTableRow() );\n\n\t\tconversion.for( 'downcast' ).elementToElement( {\n\t\t\tmodel: 'tableRow',\n\t\t\tview: downcastRow()\n\t\t} );\n\n\t\t// Table cell conversion.\n\t\tconversion.for( 'upcast' ).elementToElement( { model: 'tableCell', view: 'td' } );\n\t\tconversion.for( 'upcast' ).elementToElement( { model: 'tableCell', view: 'th' } );\n\t\tconversion.for( 'upcast' ).add( ensureParagraphInTableCell( 'td' ) );\n\t\tconversion.for( 'upcast' ).add( ensureParagraphInTableCell( 'th' ) );\n\n\t\tconversion.for( 'editingDowncast' ).elementToElement( {\n\t\t\tmodel: 'tableCell',\n\t\t\tview: downcastCell( { asWidget: true } )\n\t\t} );\n\t\tconversion.for( 'dataDowncast' ).elementToElement( {\n\t\t\tmodel: 'tableCell',\n\t\t\tview: downcastCell()\n\t\t} );\n\n\t\t// Duplicates code - needed to properly refresh paragraph inside a table cell.\n\t\tconversion.for( 'editingDowncast' ).elementToElement( {\n\t\t\tmodel: 'paragraph',\n\t\t\tview: convertParagraphInTableCell( { asWidget: true } ),\n\t\t\tconverterPriority: 'high'\n\t\t} );\n\t\tconversion.for( 'dataDowncast' ).elementToElement( {\n\t\t\tmodel: 'paragraph',\n\t\t\tview: convertParagraphInTableCell(),\n\t\t\tconverterPriority: 'high'\n\t\t} );\n\n\t\t// Table attributes conversion.\n\t\tconversion.for( 'downcast' ).attributeToAttribute( { model: 'colspan', view: 'colspan' } );\n\t\tconversion.for( 'upcast' ).attributeToAttribute( {\n\t\t\tmodel: { key: 'colspan', value: upcastCellSpan( 'colspan' ) },\n\t\t\tview: 'colspan'\n\t\t} );\n\n\t\tconversion.for( 'downcast' ).attributeToAttribute( { model: 'rowspan', view: 'rowspan' } );\n\t\tconversion.for( 'upcast' ).attributeToAttribute( {\n\t\t\tmodel: { key: 'rowspan', value: upcastCellSpan( 'rowspan' ) },\n\t\t\tview: 'rowspan'\n\t\t} );\n\n\t\t// Manually adjust model position mappings in a special case, when a table cell contains a paragraph, which is bound\n\t\t// to its parent (to the table cell). This custom model-to-view position mapping is necessary in data pipeline only,\n\t\t// because only during this conversion a paragraph can be bound to its parent.\n\t\teditor.data.mapper.on( 'modelToViewPosition', mapTableCellModelPositionToView() );\n\n\t\t// Define the config.\n\t\teditor.config.define( 'table.defaultHeadings.rows', 0 );\n\t\teditor.config.define( 'table.defaultHeadings.columns', 0 );\n\n\t\t// Define all the commands.\n\t\teditor.commands.add( 'insertTable', new InsertTableCommand( editor ) );\n\t\teditor.commands.add( 'insertTableRowAbove', new InsertRowCommand( editor, { order: 'above' } ) );\n\t\teditor.commands.add( 'insertTableRowBelow', new InsertRowCommand( editor, { order: 'below' } ) );\n\t\teditor.commands.add( 'insertTableColumnLeft', new InsertColumnCommand( editor, { order: 'left' } ) );\n\t\teditor.commands.add( 'insertTableColumnRight', new InsertColumnCommand( editor, { order: 'right' } ) );\n\n\t\teditor.commands.add( 'removeTableRow', new RemoveRowCommand( editor ) );\n\t\teditor.commands.add( 'removeTableColumn', new RemoveColumnCommand( editor ) );\n\n\t\teditor.commands.add( 'splitTableCellVertically', new SplitCellCommand( editor, { direction: 'vertically' } ) );\n\t\teditor.commands.add( 'splitTableCellHorizontally', new SplitCellCommand( editor, { direction: 'horizontally' } ) );\n\n\t\teditor.commands.add( 'mergeTableCells', new MergeCellsCommand( editor ) );\n\n\t\teditor.commands.add( 'mergeTableCellRight', new MergeCellCommand( editor, { direction: 'right' } ) );\n\t\teditor.commands.add( 'mergeTableCellLeft', new MergeCellCommand( editor, { direction: 'left' } ) );\n\t\teditor.commands.add( 'mergeTableCellDown', new MergeCellCommand( editor, { direction: 'down' } ) );\n\t\teditor.commands.add( 'mergeTableCellUp', new MergeCellCommand( editor, { direction: 'up' } ) );\n\n\t\teditor.commands.add( 'setTableColumnHeader', new SetHeaderColumnCommand( editor ) );\n\t\teditor.commands.add( 'setTableRowHeader', new SetHeaderRowCommand( editor ) );\n\n\t\teditor.commands.add( 'selectTableRow', new SelectRowCommand( editor ) );\n\t\teditor.commands.add( 'selectTableColumn', new SelectColumnCommand( editor ) );\n\n\t\tinjectTableLayoutPostFixer( model );\n\t\tinjectTableCellParagraphPostFixer( model );\n\n\t\tthis.listenTo( model.document, 'change:data', () => {\n\t\t\ttableHeadingsRefreshHandler( model, editor.editing );\n\t\t\ttableCellRefreshHandler( model, editor.editing );\n\t\t} );\n\t}\n}\n\n// Creates a mapper callback to adjust model position mappings in a table cell containing a paragraph, which is bound to its parent\n// (to the table cell). Only positions after this paragraph have to be adjusted, because after binding this paragraph to the table cell,\n// elements located after this paragraph would point either to a non-existent offset inside `tableCell` (if paragraph is empty), or after\n// the first character of the paragraph's text. See https://github.com/ckeditor/ckeditor5/issues/10116.\n//\n// <tableCell><paragraph></paragraph>^</tableCell> -> <td>^&nbsp;</td>\n//\n// <tableCell><paragraph>foobar</paragraph>^</tableCell> -> <td>foobar^</td>\n//\n// @returns {Function}\nfunction mapTableCellModelPositionToView() {\n\treturn ( evt, data ) => {\n\t\tconst modelParent = data.modelPosition.parent;\n\t\tconst modelNodeBefore = data.modelPosition.nodeBefore;\n\n\t\tif ( !modelParent.is( 'element', 'tableCell' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !modelNodeBefore || !modelNodeBefore.is( 'element', 'paragraph' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewNodeBefore = data.mapper.toViewElement( modelNodeBefore );\n\t\tconst viewParent = data.mapper.toViewElement( modelParent );\n\n\t\tif ( viewNodeBefore === viewParent ) {\n\t\t\t// Since the paragraph has already been bound to its parent, update the current position in the model with paragraph's\n\t\t\t// max offset, so it points to the place which should normally (in all other cases) be the end position of this paragraph.\n\t\t\tdata.viewPosition = data.mapper.findPositionIn( viewParent, modelNodeBefore.maxOffset );\n\t\t}\n\t};\n}\n\n// Returns fixed colspan and rowspan attrbutes values.\n//\n// @private\n// @param {String} type colspan or rowspan.\n// @returns {Function} conversion value function.\nfunction upcastCellSpan( type ) {\n\treturn cell => {\n\t\tconst span = parseInt( cell.getAttribute( type ) );\n\n\t\tif ( Number.isNaN( span ) || span <= 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn span;\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablekeyboard\n */\n\nimport TableSelection from './tableselection';\nimport TableWalker from './tablewalker';\nimport TableUtils from './tableutils';\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { getLocalizedArrowKeyCodeDirection } from 'ckeditor5/src/utils';\n\n/**\n * This plugin enables keyboard navigation for tables.\n * It is loaded automatically by the {@link module:table/table~Table} plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableKeyboard extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableKeyboard';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableSelection, TableUtils ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst view = this.editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\tthis.listenTo( viewDocument, 'arrowKey', ( ...args ) => this._onArrowKey( ...args ), { context: 'table' } );\n\t\tthis.listenTo( viewDocument, 'tab', ( ...args ) => this._handleTabOnSelectedTable( ...args ), { context: 'figure' } );\n\t\tthis.listenTo( viewDocument, 'tab', ( ...args ) => this._handleTab( ...args ), { context: [ 'th', 'td' ] } );\n\t}\n\n\t/**\n\t * Handles {@link module:engine/view/document~Document#event:tab tab} events for the <kbd>Tab</kbd> key executed\n\t * when the table widget is selected.\n\t *\n\t * @private\n\t * @param {module:engine/view/observer/bubblingeventinfo~BubblingEventInfo} bubblingEventInfo\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t */\n\t_handleTabOnSelectedTable( bubblingEventInfo, domEventData ) {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\tif ( !selectedElement || !selectedElement.is( 'element', 'table' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdomEventData.preventDefault();\n\t\tdomEventData.stopPropagation();\n\t\tbubblingEventInfo.stop();\n\n\t\teditor.model.change( writer => {\n\t\t\twriter.setSelection( writer.createRangeIn( selectedElement.getChild( 0 ).getChild( 0 ) ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Handles {@link module:engine/view/document~Document#event:tab tab} events for the <kbd>Tab</kbd> key executed\n\t * inside table cells.\n\t *\n\t * @private\n\t * @param {module:engine/view/observer/bubblingeventinfo~BubblingEventInfo} bubblingEventInfo\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t */\n\t_handleTab( bubblingEventInfo, domEventData ) {\n\t\tconst editor = this.editor;\n\t\tconst tableUtils = this.editor.plugins.get( TableUtils );\n\n\t\tconst selection = editor.model.document.selection;\n\t\tconst isForward = !domEventData.shiftKey;\n\n\t\tlet tableCell = tableUtils.getTableCellsContainingSelection( selection )[ 0 ];\n\n\t\tif ( !tableCell ) {\n\t\t\ttableCell = this.editor.plugins.get( 'TableSelection' ).getFocusCell();\n\t\t}\n\n\t\tif ( !tableCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdomEventData.preventDefault();\n\t\tdomEventData.stopPropagation();\n\t\tbubblingEventInfo.stop();\n\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\n\t\tconst currentRowIndex = table.getChildIndex( tableRow );\n\t\tconst currentCellIndex = tableRow.getChildIndex( tableCell );\n\n\t\tconst isFirstCellInRow = currentCellIndex === 0;\n\n\t\tif ( !isForward && isFirstCellInRow && currentRowIndex === 0 ) {\n\t\t\t// Set the selection over the whole table if the selection was in the first table cell.\n\t\t\teditor.model.change( writer => {\n\t\t\t\twriter.setSelection( writer.createRangeOn( table ) );\n\t\t\t} );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst isLastCellInRow = currentCellIndex === tableRow.childCount - 1;\n\t\tconst isLastRow = currentRowIndex === tableUtils.getRows( table ) - 1;\n\n\t\tif ( isForward && isLastRow && isLastCellInRow ) {\n\t\t\teditor.execute( 'insertTableRowBelow' );\n\n\t\t\t// Check if the command actually added a row. If `insertTableRowBelow` execution didn't add a row (because it was disabled\n\t\t\t// or it got overwritten) set the selection over the whole table to mirror the first cell case.\n\t\t\tif ( currentRowIndex === tableUtils.getRows( table ) - 1 ) {\n\t\t\t\teditor.model.change( writer => {\n\t\t\t\t\twriter.setSelection( writer.createRangeOn( table ) );\n\t\t\t\t} );\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet cellToFocus;\n\n\t\t// Move to the first cell in the next row.\n\t\tif ( isForward && isLastCellInRow ) {\n\t\t\tconst nextRow = table.getChild( currentRowIndex + 1 );\n\n\t\t\tcellToFocus = nextRow.getChild( 0 );\n\t\t}\n\t\t// Move to the last cell in the previous row.\n\t\telse if ( !isForward && isFirstCellInRow ) {\n\t\t\tconst previousRow = table.getChild( currentRowIndex - 1 );\n\n\t\t\tcellToFocus = previousRow.getChild( previousRow.childCount - 1 );\n\t\t}\n\t\t// Move to the next/previous cell.\n\t\telse {\n\t\t\tcellToFocus = tableRow.getChild( currentCellIndex + ( isForward ? 1 : -1 ) );\n\t\t}\n\n\t\teditor.model.change( writer => {\n\t\t\twriter.setSelection( writer.createRangeIn( cellToFocus ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Handles {@link module:engine/view/document~Document#event:keydown keydown} events.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} eventInfo\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t */\n\t_onArrowKey( eventInfo, domEventData ) {\n\t\tconst editor = this.editor;\n\t\tconst keyCode = domEventData.keyCode;\n\n\t\tconst direction = getLocalizedArrowKeyCodeDirection( keyCode, editor.locale.contentLanguageDirection );\n\t\tconst wasHandled = this._handleArrowKeys( direction, domEventData.shiftKey );\n\n\t\tif ( wasHandled ) {\n\t\t\tdomEventData.preventDefault();\n\t\t\tdomEventData.stopPropagation();\n\t\t\teventInfo.stop();\n\t\t}\n\t}\n\n\t/**\n\t * Handles arrow keys to move the selection around the table.\n\t *\n\t * @private\n\t * @param {'left'|'up'|'right'|'down'} direction The direction of the arrow key.\n\t * @param {Boolean} expandSelection If the current selection should be expanded.\n\t * @returns {Boolean} Returns `true` if key was handled.\n\t */\n\t_handleArrowKeys( direction, expandSelection ) {\n\t\tconst tableUtils = this.editor.plugins.get( TableUtils );\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst isForward = [ 'right', 'down' ].includes( direction );\n\n\t\t// In case one or more table cells are selected (from outside),\n\t\t// move the selection to a cell adjacent to the selected table fragment.\n\t\tconst selectedCells = tableUtils.getSelectedTableCells( selection );\n\n\t\tif ( selectedCells.length ) {\n\t\t\tlet focusCell;\n\n\t\t\tif ( expandSelection ) {\n\t\t\t\tfocusCell = this.editor.plugins.get( 'TableSelection' ).getFocusCell();\n\t\t\t} else {\n\t\t\t\tfocusCell = isForward ? selectedCells[ selectedCells.length - 1 ] : selectedCells[ 0 ];\n\t\t\t}\n\n\t\t\tthis._navigateFromCellInDirection( focusCell, direction, expandSelection );\n\n\t\t\treturn true;\n\t\t}\n\n\t\t// Abort if we're not in a table cell.\n\t\tconst tableCell = selection.focus.findAncestor( 'tableCell' );\n\n\t\t/* istanbul ignore if: paranoid check */\n\t\tif ( !tableCell ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// When the selection is not collapsed.\n\t\tif ( !selection.isCollapsed ) {\n\t\t\tif ( expandSelection ) {\n\t\t\t\t// Navigation is in the opposite direction than the selection direction so this is shrinking of the selection.\n\t\t\t\t// Selection for sure will not approach cell edge.\n\t\t\t\t//\n\t\t\t\t// With a special case when all cell content is selected - then selection should expand to the other cell.\n\t\t\t\t// Note: When the entire cell gets selected using CTRL+A, the selection is always forward.\n\t\t\t\tif ( selection.isBackward == isForward && !selection.containsEntireContent( tableCell ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst selectedElement = selection.getSelectedElement();\n\n\t\t\t\t// It will collapse for non-object selected so it's not going to move to other cell.\n\t\t\t\tif ( !selectedElement || !model.schema.isObject( selectedElement ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Let's check if the selection is at the beginning/end of the cell.\n\t\tif ( this._isSelectionAtCellEdge( selection, tableCell, isForward ) ) {\n\t\t\tthis._navigateFromCellInDirection( tableCell, direction, expandSelection );\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns `true` if the selection is at the boundary of a table cell according to the navigation direction.\n\t *\n\t * @private\n\t * @param {module:engine/model/selection~Selection} selection The current selection.\n\t * @param {module:engine/model/element~Element} tableCell The current table cell element.\n\t * @param {Boolean} isForward The expected navigation direction.\n\t * @returns {Boolean}\n\t */\n\t_isSelectionAtCellEdge( selection, tableCell, isForward ) {\n\t\tconst model = this.editor.model;\n\t\tconst schema = this.editor.model.schema;\n\n\t\tconst focus = isForward ? selection.getLastPosition() : selection.getFirstPosition();\n\n\t\t// If the current limit element is not table cell we are for sure not at the cell edge.\n\t\t// Also `modifySelection` will not let us out of it.\n\t\tif ( !schema.getLimitElement( focus ).is( 'element', 'tableCell' ) ) {\n\t\t\tconst boundaryPosition = model.createPositionAt( tableCell, isForward ? 'end' : 0 );\n\n\t\t\treturn boundaryPosition.isTouching( focus );\n\t\t}\n\n\t\tconst probe = model.createSelection( focus );\n\n\t\tmodel.modifySelection( probe, { direction: isForward ? 'forward' : 'backward' } );\n\n\t\t// If there was no change in the focus position, then it's not possible to move the selection there.\n\t\treturn focus.isEqual( probe.focus );\n\t}\n\n\t/**\n\t * Moves the selection from the given table cell in the specified direction.\n\t *\n\t * @protected\n\t * @param {module:engine/model/element~Element} focusCell The table cell that is current multi-cell selection focus.\n\t * @param {'left'|'up'|'right'|'down'} direction Direction in which selection should move.\n\t * @param {Boolean} [expandSelection=false] If the current selection should be expanded.\n\t */\n\t_navigateFromCellInDirection( focusCell, direction, expandSelection = false ) {\n\t\tconst model = this.editor.model;\n\n\t\tconst table = focusCell.findAncestor( 'table' );\n\t\tconst tableMap = [ ...new TableWalker( table, { includeAllSlots: true } ) ];\n\t\tconst { row: lastRow, column: lastColumn } = tableMap[ tableMap.length - 1 ];\n\n\t\tconst currentCellInfo = tableMap.find( ( { cell } ) => cell == focusCell );\n\t\tlet { row, column } = currentCellInfo;\n\n\t\tswitch ( direction ) {\n\t\t\tcase 'left':\n\t\t\t\tcolumn--;\n\t\t\t\tbreak;\n\n\t\t\tcase 'up':\n\t\t\t\trow--;\n\t\t\t\tbreak;\n\n\t\t\tcase 'right':\n\t\t\t\tcolumn += currentCellInfo.cellWidth;\n\t\t\t\tbreak;\n\n\t\t\tcase 'down':\n\t\t\t\trow += currentCellInfo.cellHeight;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst isOutsideVertically = row < 0 || row > lastRow;\n\t\tconst isBeforeFirstCell = column < 0 && row <= 0;\n\t\tconst isAfterLastCell = column > lastColumn && row >= lastRow;\n\n\t\t// Note that if the table cell at the end of a row is row-spanned then isAfterLastCell will never be true.\n\t\t// However, we don't know if user was navigating on the last row or not, so let's stay in the table.\n\n\t\tif ( isOutsideVertically || isBeforeFirstCell || isAfterLastCell ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.setSelection( writer.createRangeOn( table ) );\n\t\t\t} );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( column < 0 ) {\n\t\t\tcolumn = expandSelection ? 0 : lastColumn;\n\t\t\trow--;\n\t\t} else if ( column > lastColumn ) {\n\t\t\tcolumn = expandSelection ? lastColumn : 0;\n\t\t\trow++;\n\t\t}\n\n\t\tconst cellToSelect = tableMap.find( cellInfo => cellInfo.row == row && cellInfo.column == column ).cell;\n\t\tconst isForward = [ 'right', 'down' ].includes( direction );\n\t\tconst tableSelection = this.editor.plugins.get( 'TableSelection' );\n\n\t\tif ( expandSelection && tableSelection.isEnabled ) {\n\t\t\tconst anchorCell = tableSelection.getAnchorCell() || focusCell;\n\n\t\t\ttableSelection.setCellSelection( anchorCell, cellToSelect );\n\t\t} else {\n\t\t\tconst positionToSelect = model.createPositionAt( cellToSelect, isForward ? 0 : 'end' );\n\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.setSelection( positionToSelect );\n\t\t\t} );\n\t\t}\n\t}\n}\n\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablemouse\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\n\nimport TableSelection from './tableselection';\nimport MouseEventsObserver from './tablemouse/mouseeventsobserver';\nimport TableUtils from './tableutils';\n\n/**\n * This plugin enables a table cells' selection with the mouse.\n * It is loaded automatically by the {@link module:table/table~Table} plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableMouse extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableMouse';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableSelection, TableUtils ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Currently the MouseObserver only handles `mousedown` and `mouseup` events.\n\t\t// TODO move to the engine?\n\t\teditor.editing.view.addObserver( MouseEventsObserver );\n\n\t\tthis._enableShiftClickSelection();\n\t\tthis._enableMouseDragSelection();\n\t}\n\n\t/**\n\t * Enables making cells selection by <kbd>Shift</kbd>+click. Creates a selection from the cell which previously held\n\t * the selection to the cell which was clicked. It can be the same cell, in which case it selects a single cell.\n\t *\n\t * @private\n\t */\n\t_enableShiftClickSelection() {\n\t\tconst editor = this.editor;\n\t\tconst tableUtils = editor.plugins.get( TableUtils );\n\t\tlet blockSelectionChange = false;\n\n\t\tconst tableSelection = editor.plugins.get( TableSelection );\n\n\t\tthis.listenTo( editor.editing.view.document, 'mousedown', ( evt, domEventData ) => {\n\t\t\tconst selection = editor.model.document.selection;\n\n\t\t\tif ( !this.isEnabled || !tableSelection.isEnabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( !domEventData.domEvent.shiftKey ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anchorCell = tableSelection.getAnchorCell() || tableUtils.getTableCellsContainingSelection( selection )[ 0 ];\n\n\t\t\tif ( !anchorCell ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst targetCell = this._getModelTableCellFromDomEvent( domEventData );\n\n\t\t\tif ( targetCell && haveSameTableParent( anchorCell, targetCell ) ) {\n\t\t\t\tblockSelectionChange = true;\n\t\t\t\ttableSelection.setCellSelection( anchorCell, targetCell );\n\n\t\t\t\tdomEventData.preventDefault();\n\t\t\t}\n\t\t} );\n\n\t\tthis.listenTo( editor.editing.view.document, 'mouseup', () => {\n\t\t\tblockSelectionChange = false;\n\t\t} );\n\n\t\t// We need to ignore a `selectionChange` event that is fired after we render our new table cells selection.\n\t\t// When downcasting table cells selection to the view, we put the view selection in the last selected cell\n\t\t// in a place that may not be natively a \"correct\" location. This is – we put it directly in the `<td>` element.\n\t\t// All browsers fire the native `selectionchange` event.\n\t\t// However, all browsers except Safari return the selection in the exact place where we put it\n\t\t// (even though it's visually normalized). Safari returns `<td><p>^foo` that makes our selection observer\n\t\t// fire our `selectionChange` event (because the view selection that we set in the first step differs from the DOM selection).\n\t\t// Since `selectionChange` is fired, we automatically update the model selection that moves it that paragraph.\n\t\t// This breaks our dear cells selection.\n\t\t//\n\t\t// Theoretically this issue concerns only Safari that is the only browser that do normalize the selection.\n\t\t// However, to avoid code branching and to have a good coverage for this event blocker, I enabled it for all browsers.\n\t\t//\n\t\t// Note: I'm keeping the `blockSelectionChange` state separately for shift+click and mouse drag (exact same logic)\n\t\t// so I don't have to try to analyze whether they don't overlap in some weird cases. Probably they don't.\n\t\t// But I have other things to do, like writing this comment.\n\t\tthis.listenTo( editor.editing.view.document, 'selectionChange', evt => {\n\t\t\tif ( blockSelectionChange ) {\n\t\t\t\t// @if CK_DEBUG // console.log( 'Blocked selectionChange to avoid breaking table cells selection.' );\n\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'highest' } );\n\t}\n\n\t/**\n\t * Enables making cells selection by dragging.\n\t *\n\t * The selection is made only on mousemove. Mouse tracking is started on mousedown.\n\t * However, the cells selection is enabled only after the mouse cursor left the anchor cell.\n\t * Thanks to that normal text selection within one cell works just fine. However, you can still select\n\t * just one cell by leaving the anchor cell and moving back to it.\n\t *\n\t * @private\n\t */\n\t_enableMouseDragSelection() {\n\t\tconst editor = this.editor;\n\t\tlet anchorCell, targetCell;\n\t\tlet beganCellSelection = false;\n\t\tlet blockSelectionChange = false;\n\n\t\tconst tableSelection = editor.plugins.get( TableSelection );\n\n\t\tthis.listenTo( editor.editing.view.document, 'mousedown', ( evt, domEventData ) => {\n\t\t\tif ( !this.isEnabled || !tableSelection.isEnabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Make sure to not conflict with the shift+click listener and any other possible handler.\n\t\t\tif ( domEventData.domEvent.shiftKey || domEventData.domEvent.ctrlKey || domEventData.domEvent.altKey ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tanchorCell = this._getModelTableCellFromDomEvent( domEventData );\n\t\t} );\n\n\t\tthis.listenTo( editor.editing.view.document, 'mousemove', ( evt, domEventData ) => {\n\t\t\tif ( !domEventData.domEvent.buttons ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( !anchorCell ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newTargetCell = this._getModelTableCellFromDomEvent( domEventData );\n\n\t\t\tif ( newTargetCell && haveSameTableParent( anchorCell, newTargetCell ) ) {\n\t\t\t\ttargetCell = newTargetCell;\n\n\t\t\t\t// Switch to the cell selection mode after the mouse cursor left the anchor cell.\n\t\t\t\t// Switch off only on mouseup (makes selecting a single cell possible).\n\t\t\t\tif ( !beganCellSelection && targetCell != anchorCell ) {\n\t\t\t\t\tbeganCellSelection = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Yep, not making a cell selection yet. See method docs.\n\t\t\tif ( !beganCellSelection ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tblockSelectionChange = true;\n\t\t\ttableSelection.setCellSelection( anchorCell, targetCell );\n\n\t\t\tdomEventData.preventDefault();\n\t\t} );\n\n\t\tthis.listenTo( editor.editing.view.document, 'mouseup', () => {\n\t\t\tbeganCellSelection = false;\n\t\t\tblockSelectionChange = false;\n\t\t\tanchorCell = null;\n\t\t\ttargetCell = null;\n\t\t} );\n\n\t\t// See the explanation in `_enableShiftClickSelection()`.\n\t\tthis.listenTo( editor.editing.view.document, 'selectionChange', evt => {\n\t\t\tif ( blockSelectionChange ) {\n\t\t\t\t// @if CK_DEBUG // console.log( 'Blocked selectionChange to avoid breaking table cells selection.' );\n\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'highest' } );\n\t}\n\n\t/**\n\t * Returns the model table cell element based on the target element of the passed DOM event.\n\t *\n\t * @private\n\t * @param {module:engine/view/observer/domeventdata~DomEventData} domEventData\n\t * @returns {module:engine/model/element~Element|undefined} Returns the table cell or `undefined`.\n\t */\n\t_getModelTableCellFromDomEvent( domEventData ) {\n\t\t// Note: Work with positions (not element mapping) because the target element can be an attribute or other non-mapped element.\n\t\tconst viewTargetElement = domEventData.target;\n\t\tconst viewPosition = this.editor.editing.view.createPositionAt( viewTargetElement, 0 );\n\t\tconst modelPosition = this.editor.editing.mapper.toModelPosition( viewPosition );\n\t\tconst modelElement = modelPosition.parent;\n\n\t\treturn modelElement.findAncestor( 'tableCell', { includeSelf: true } );\n\t}\n}\n\nfunction haveSameTableParent( cellA, cellB ) {\n\treturn cellA.parent.parent == cellB.parent.parent;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableselection/mouseeventsobserver\n */\n\nimport { DomEventObserver } from 'ckeditor5/src/engine';\n\n/**\n * The mouse selection event observer.\n *\n * It registers listeners for the following DOM events:\n *\n * - `'mousemove'`\n * - `'mouseup'`\n * - `'mouseleave'`\n *\n * Note that this observer is disabled by default. To enable this observer, it needs to be added to\n * {@link module:engine/view/view~View} using the {@link module:engine/view/view~View#addObserver} method.\n *\n * The observer is registered by the {@link module:table/tableselection~TableSelection} plugin.\n *\n * @extends module:engine/view/observer/domeventobserver~DomEventObserver\n */\nexport default class MouseEventsObserver extends DomEventObserver {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( view ) {\n\t\tsuper( view );\n\n\t\tthis.domEventType = [ 'mousemove', 'mouseleave' ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tonDomEvent( domEvent ) {\n\t\tthis.fire( domEvent.type, domEvent );\n\t}\n}\n\n/**\n * Fired when the mouse is moved over one of the editables.\n *\n * Introduced by {@link module:table/tableselection/mouseeventsobserver~MouseEventsObserver}.\n *\n * Note that this event is not available by default. To make it available,\n * {@link module:table/tableselection/mouseeventsobserver~MouseEventsObserver} needs to be added\n * to {@link module:engine/view/view~View} using the {@link module:engine/view/view~View#addObserver} method.\n *\n * @see module:table/tableselection/mouseeventsobserver~MouseEventsObserver\n * @event module:engine/view/document~Document#event:mousemove\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n\n/**\n * Fired when the mouse is moved out of one of the editables.\n *\n * Introduced by {@link module:table/tableselection/mouseeventsobserver~MouseEventsObserver}.\n *\n * Note that this event is not available by default. To make it available,\n * {@link module:table/tableselection/mouseeventsobserver~MouseEventsObserver} needs to be added\n * to {@link module:engine/view/view~View} using the {@link module:engine/view/view~View#addObserver} method.\n *\n * @see module:table/tableselection/mouseeventsobserver~MouseEventsObserver\n * @event module:engine/view/document~Document#event:mouseleave\n * @param {module:engine/view/observer/domeventdata~DomEventData} data Event data.\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableproperties\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\n\nimport TablePropertiesEditing from './tableproperties/tablepropertiesediting';\nimport TablePropertiesUI from './tableproperties/tablepropertiesui';\n\n/**\n * The table properties feature. Enables support for setting properties of tables (size, border, background, etc.).\n *\n * Read more in the {@glink features/table#table-and-cell-styling-tools Table and cell styling tools} section.\n * See also the {@link module:table/tablecellproperties~TableCellProperties} plugin.\n *\n * This is a \"glue\" plugin that loads the\n * {@link module:table/tableproperties/tablepropertiesediting~TablePropertiesEditing table properties editing feature} and\n * the {@link module:table/tableproperties/tablepropertiesui~TablePropertiesUI table properties UI feature}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableProperties extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableProperties';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TablePropertiesEditing, TablePropertiesUI ];\n\t}\n}\n\n/**\n * The configuration of the table properties user interface (balloon). It allows to define:\n *\n * * The color palette for the table border color style field (`tableProperties.borderColors`),\n * * The color palette for the table background style field (`tableProperties.backgroundColors`).\n *\n *\t\tconst tableConfig = {\n *\t\t\ttableProperties: {\n *\t\t\t\tborderColors: [\n *\t\t\t\t\t{\n *\t\t\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n *\t\t\t\t\t\tlabel: 'Light grey'\n *\t\t\t\t\t},\n *\t\t\t\t\t// ...\n *\t\t\t\t],\n *\t\t\t\tbackgroundColors: [\n *\t\t\t\t\t{\n *\t\t\t\t\t\tcolor: 'hsl(120, 75%, 60%)',\n *\t\t\t\t\t\tlabel: 'Green'\n *\t\t\t\t\t},\n *\t\t\t\t\t// ...\n *\t\t\t\t]\n *\t\t\t}\n *\t\t};\n *\n * * The default styles for tables (`tableProperties.defaultProperties`):\n *\n *\t\tconst tableConfig = {\n *\t\t\ttableProperties: {\n *\t\t\t\tdefaultProperties: {\n *\t\t\t\t\tborderStyle: 'dashed',\n *\t\t\t\t\tborderColor: 'hsl(0, 0%, 90%)',\n *\t\t\t\t\tborderWidth: '3px',\n *\t\t\t\t\talignment: 'left'\n *\t\t\t\t}\n *\t\t\t}\n *\t\t}\n *\n * \t {@link module:table/tableproperties~TablePropertiesOptions Read more about the supported properties.}\n *\n * **Note**: The `borderColors` and `backgroundColors` options do not impact the data loaded into the editor,\n * i.e. they do not limit or filter the colors in the data. They are used only in the user interface\n * allowing users to pick colors in a more convenient way. The `defaultProperties` option does impact the data.\n * Default values will not be kept in the editor model.\n *\n * The default color palettes for the table background and the table border are the same\n * ({@link module:table/utils/ui/table-properties~defaultColors check out their content}).\n *\n * Both color palette configurations must follow the\n * {@link module:table/table~TableColorConfig table color configuration format}.\n *\n * Read more about configuring the table feature in {@link module:table/table~TableConfig}.\n *\n * @member {Object} module:table/table~TableConfig#tableProperties\n */\n\n/**\n * The configuration of the table default properties feature.\n *\n * @typedef {Object} module:table/tableproperties~TablePropertiesOptions\n *\n * @property {String} width The default `width` of the table.\n *\n * @property {String} height The default `height` of the table.\n *\n * @property {String} backgroundColor The default `background-color` of the table.\n *\n * @property {String} borderColor The default `border-color` of the table.\n *\n * @property {String} borderWidth The default `border-width` of the table.\n *\n * @property {String} [borderStyle='none'] The default `border-style` of the table.\n *\n * @property {String} [alignment='center'] The default `alignment` of the table.\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableproperties/commands/tablealignmentcommand\n */\n\nimport TablePropertyCommand from './tablepropertycommand';\n\n/**\n * The table alignment command.\n *\n * The command is registered by the {@link module:table/tableproperties/tablepropertiesediting~TablePropertiesEditing} as\n * the `'tableAlignment'` editor command.\n *\n * To change the alignment of the selected table, execute the command:\n *\n *\t\teditor.execute( 'tableAlignment', {\n *\t\t\tvalue: 'right'\n *\t\t} );\n *\n * @extends module:table/tableproperties/commands/tablepropertycommand~TablePropertyCommand\n */\nexport default class TableAlignmentCommand extends TablePropertyCommand {\n\t/**\n\t * Creates a new `TableAlignmentCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value for the \"alignment\" attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableAlignment', defaultValue );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableproperties/commands/tablebackgroundcolorcommand\n */\n\nimport TablePropertyCommand from './tablepropertycommand';\n\n/**\n * The table background color command.\n *\n * The command is registered by the {@link module:table/tableproperties/tablepropertiesediting~TablePropertiesEditing} as\n * the `'tableBackgroundColor'` editor command.\n *\n * To change the background color of the selected table, execute the command:\n *\n *\t\teditor.execute( 'tableBackgroundColor', {\n *\t\t\tvalue: '#f00'\n *\t\t} );\n *\n * @extends module:table/tableproperties/commands/tablepropertycommand~TablePropertyCommand\n */\nexport default class TableBackgroundColorCommand extends TablePropertyCommand {\n\t/**\n\t * Creates a new `TableBackgroundColorCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableBackgroundColor', defaultValue );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableproperties/commands/tablebordercolorcommand\n */\n\nimport TablePropertyCommand from './tablepropertycommand';\nimport { getSingleValue } from '../../utils/table-properties';\n\n/**\n * The table border color command.\n *\n * The command is registered by the {@link module:table/tableproperties/tablepropertiesediting~TablePropertiesEditing} as\n * the `'tableBorderColor'` editor command.\n *\n * To change the border color of the selected table, execute the command:\n *\n *\t\teditor.execute( 'tableBorderColor', {\n *\t\t\tvalue: '#f00'\n *\t\t} );\n *\n * @extends module:table/tableproperties/commands/tablepropertycommand~TablePropertyCommand\n */\nexport default class TableBorderColorCommand extends TablePropertyCommand {\n\t/**\n\t * Creates a new `TableBorderColorCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableBorderColor', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getValue( table ) {\n\t\tif ( !table ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = getSingleValue( table.getAttribute( this.attributeName ) );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableproperties/commands/tableborderstylecommand\n */\n\nimport TablePropertyCommand from './tablepropertycommand';\nimport { getSingleValue } from '../../utils/table-properties';\n\n/**\n * The table style border command.\n *\n * The command is registered by the {@link module:table/tableproperties/tablepropertiesediting~TablePropertiesEditing} as\n * the `'tableBorderStyle'` editor command.\n *\n * To change the border style of the selected table, execute the command:\n *\n *\t\teditor.execute( 'tableBorderStyle', {\n *\t\t\tvalue: 'dashed'\n *\t\t} );\n *\n * @extends module:table/tableproperties/commands/tablepropertycommand~TablePropertyCommand\n */\nexport default class TableBorderStyleCommand extends TablePropertyCommand {\n\t/**\n\t * Creates a new `TableBorderStyleCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableBorderStyle', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getValue( table ) {\n\t\tif ( !table ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = getSingleValue( table.getAttribute( this.attributeName ) );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableproperties/commands/tableborderwidthcommand\n */\n\nimport TablePropertyCommand from './tablepropertycommand';\nimport { addDefaultUnitToNumericValue, getSingleValue } from '../../utils/table-properties';\n\n/**\n * The table width border command.\n *\n * The command is registered by the {@link module:table/tableproperties/tablepropertiesediting~TablePropertiesEditing} as\n * the `'tableBorderWidth'` editor command.\n *\n * To change the border width of the selected table, execute the command:\n *\n *\t\teditor.execute( 'tableBorderWidth', {\n *\t\t\tvalue: '5px'\n *\t\t} );\n *\n * **Note**: This command adds the default `'px'` unit to numeric values. Executing:\n *\n *\t\teditor.execute( 'tableBorderWidth', {\n *\t\t\tvalue: '5'\n *\t\t} );\n *\n * will set the `borderWidth` attribute to `'5px'` in the model.\n *\n * @extends module:table/tableproperties/commands/tablepropertycommand~TablePropertyCommand\n */\nexport default class TableBorderWidthCommand extends TablePropertyCommand {\n\t/**\n\t * Creates a new `TableBorderWidthCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableBorderWidth', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getValue( table ) {\n\t\tif ( !table ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = getSingleValue( table.getAttribute( this.attributeName ) );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getValueToSet( value ) {\n\t\tvalue = addDefaultUnitToNumericValue( value, 'px' );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableproperties/commands/tableheightcommand\n */\n\nimport TablePropertyCommand from './tablepropertycommand';\nimport { addDefaultUnitToNumericValue } from '../../utils/table-properties';\n\n/**\n * The table height command.\n *\n * The command is registered by the {@link module:table/tableproperties/tablepropertiesediting~TablePropertiesEditing} as\n * the `'tableHeight'` editor command.\n *\n * To change the height of the selected table, execute the command:\n *\n *\t\teditor.execute( 'tableHeight', {\n *\t\t\tvalue: '500px'\n *\t\t} );\n *\n * **Note**: This command adds the default `'px'` unit to numeric values. Executing:\n *\n *\t\teditor.execute( 'tableHeight', {\n *\t\t\tvalue: '50'\n *\t\t} );\n *\n * will set the `height` attribute to `'50px'` in the model.\n *\n * @extends module:table/tableproperties/commands/tablepropertycommand~TablePropertyCommand\n */\nexport default class TableHeightCommand extends TablePropertyCommand {\n\t/**\n\t * Creates a new `TableHeightCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableHeight', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getValueToSet( value ) {\n\t\tvalue = addDefaultUnitToNumericValue( value, 'px' );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableproperties/commands/tablepropertycommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\n/**\n * The table cell attribute command.\n *\n * This command is a base command for other table property commands.\n *\n * @extends module:core/command~Command\n */\nexport default class TablePropertyCommand extends Command {\n\t/**\n\t * Creates a new `TablePropertyCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} attributeName Table cell attribute name.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, attributeName, defaultValue ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The attribute that will be set by the command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String}\n\t\t */\n\t\tthis.attributeName = attributeName;\n\n\t\t/**\n\t\t * The default value for the attribute.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {String}\n\t\t */\n\t\tthis._defaultValue = defaultValue;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\n\t\tconst table = selection.getFirstPosition().findAncestor( 'table' );\n\n\t\tthis.isEnabled = !!table;\n\t\tthis.value = this._getValue( table );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * @fires execute\n\t * @param {Object} [options]\n\t * @param {*} [options.value] If set, the command will set the attribute on the selected table.\n\t * If not set, the command will remove the attribute from the selected table.\n\t * @param {module:engine/model/batch~Batch} [options.batch] Pass the model batch instance to the command to aggregate changes,\n\t * for example, to allow a single undo step for multiple executions.\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\tconst { value, batch } = options;\n\n\t\tconst table = selection.getFirstPosition().findAncestor( 'table' );\n\t\tconst valueToSet = this._getValueToSet( value );\n\n\t\tmodel.enqueueChange( batch, writer => {\n\t\t\tif ( valueToSet ) {\n\t\t\t\twriter.setAttribute( this.attributeName, valueToSet, table );\n\t\t\t} else {\n\t\t\t\twriter.removeAttribute( this.attributeName, table );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns the attribute value for a table.\n\t *\n\t * @param {module:engine/model/element~Element} table\n\t * @returns {String|undefined}\n\t * @private\n\t */\n\t_getValue( table ) {\n\t\tif ( !table ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = table.getAttribute( this.attributeName );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Returns the proper model value. It can be used to add a default unit to numeric values.\n\t *\n\t * @private\n\t * @param {*} value\n\t * @returns {*}\n\t */\n\t_getValueToSet( value ) {\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableproperties/commands/tablewidthcommand\n */\n\nimport TablePropertyCommand from './tablepropertycommand';\nimport { addDefaultUnitToNumericValue } from '../../utils/table-properties';\n\n/**\n * The table width command.\n *\n * The command is registered by the {@link module:table/tableproperties/tablepropertiesediting~TablePropertiesEditing} as\n * the `'tableWidth'` editor command.\n *\n * To change the width of the selected table, execute the command:\n *\n *\t\teditor.execute( 'tableWidth', {\n *\t\t\tvalue: '400px'\n *\t\t} );\n *\n * **Note**: This command adds the default `'px'` unit to numeric values. Executing:\n *\n *\t\teditor.execute( 'tableWidth', {\n *\t\t\tvalue: '50'\n *\t\t} );\n *\n * will set the `width` attribute to `'50px'` in the model.\n *\n * @extends module:table/tableproperties/commands/tablepropertycommand~TablePropertyCommand\n */\nexport default class TableWidthCommand extends TablePropertyCommand {\n\t/**\n\t * Creates a new `TableWidthCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor An editor in which this command will be used.\n\t * @param {String} defaultValue The default value of the attribute.\n\t */\n\tconstructor( editor, defaultValue ) {\n\t\tsuper( editor, 'tableWidth', defaultValue );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\t_getValueToSet( value ) {\n\t\tvalue = addDefaultUnitToNumericValue( value, 'px' );\n\n\t\tif ( value === this._defaultValue ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn value;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableproperties/tablepropertiesediting\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { addBackgroundRules, addBorderRules } from 'ckeditor5/src/engine';\n\nimport TableEditing from '../tableediting';\nimport {\n\tdowncastAttributeToStyle,\n\tdowncastTableAttribute,\n\tupcastBorderStyles,\n\tupcastStyleToAttribute\n} from '../converters/tableproperties';\nimport TableBackgroundColorCommand from './commands/tablebackgroundcolorcommand';\nimport TableBorderColorCommand from './commands/tablebordercolorcommand';\nimport TableBorderStyleCommand from './commands/tableborderstylecommand';\nimport TableBorderWidthCommand from './commands/tableborderwidthcommand';\nimport TableWidthCommand from './commands/tablewidthcommand';\nimport TableHeightCommand from './commands/tableheightcommand';\nimport TableAlignmentCommand from './commands/tablealignmentcommand';\nimport { getNormalizedDefaultProperties } from '../utils/table-properties';\n\nconst ALIGN_VALUES_REG_EXP = /^(left|center|right)$/;\nconst FLOAT_VALUES_REG_EXP = /^(left|none|right)$/;\n\n/**\n * The table properties editing feature.\n *\n * Introduces table's model attributes and their conversion:\n *\n * - border: `tableBorderStyle`, `tableBorderColor` and `tableBorderWidth`\n * - background color: `tableBackgroundColor`\n * - horizontal alignment: `tableAlignment`\n * - width & height: `tableWidth` & `tableHeight`\n *\n * It also registers commands used to manipulate the above attributes:\n *\n * - border: `'tableBorderStyle'`, `'tableBorderColor'` and `'tableBorderWidth'` commands\n * - background color: `'tableBackgroundColor'`\n * - horizontal alignment: `'tableAlignment'`\n * - width & height: `'tableWidth'` & `'tableHeight'`\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TablePropertiesEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TablePropertiesEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableEditing ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst conversion = editor.conversion;\n\n\t\teditor.config.define( 'table.tableProperties.defaultProperties', {} );\n\n\t\tconst defaultTableProperties = getNormalizedDefaultProperties( editor.config.get( 'table.tableProperties.defaultProperties' ), {\n\t\t\tincludeAlignmentProperty: true\n\t\t} );\n\n\t\teditor.data.addStyleProcessorRules( addBorderRules );\n\t\tenableBorderProperties( schema, conversion, {\n\t\t\tcolor: defaultTableProperties.borderColor,\n\t\t\tstyle: defaultTableProperties.borderStyle,\n\t\t\twidth: defaultTableProperties.borderWidth\n\t\t} );\n\t\teditor.commands.add( 'tableBorderColor', new TableBorderColorCommand( editor, defaultTableProperties.borderColor ) );\n\t\teditor.commands.add( 'tableBorderStyle', new TableBorderStyleCommand( editor, defaultTableProperties.borderStyle ) );\n\t\teditor.commands.add( 'tableBorderWidth', new TableBorderWidthCommand( editor, defaultTableProperties.borderWidth ) );\n\n\t\tenableAlignmentProperty( schema, conversion, defaultTableProperties.alignment );\n\t\teditor.commands.add( 'tableAlignment', new TableAlignmentCommand( editor, defaultTableProperties.alignment ) );\n\n\t\tenableTableToFigureProperty( schema, conversion, {\n\t\t\tmodelAttribute: 'tableWidth',\n\t\t\tstyleName: 'width',\n\t\t\tdefaultValue: defaultTableProperties.width\n\t\t} );\n\t\teditor.commands.add( 'tableWidth', new TableWidthCommand( editor, defaultTableProperties.width ) );\n\n\t\tenableTableToFigureProperty( schema, conversion, {\n\t\t\tmodelAttribute: 'tableHeight',\n\t\t\tstyleName: 'height',\n\t\t\tdefaultValue: defaultTableProperties.height\n\t\t} );\n\t\teditor.commands.add( 'tableHeight', new TableHeightCommand( editor, defaultTableProperties.height ) );\n\n\t\teditor.data.addStyleProcessorRules( addBackgroundRules );\n\t\tenableProperty( schema, conversion, {\n\t\t\tmodelAttribute: 'tableBackgroundColor',\n\t\t\tstyleName: 'background-color',\n\t\t\tdefaultValue: defaultTableProperties.backgroundColor\n\t\t} );\n\t\teditor.commands.add(\n\t\t\t'tableBackgroundColor',\n\t\t\tnew TableBackgroundColorCommand( editor, defaultTableProperties.backgroundColor )\n\t\t);\n\t}\n}\n\n// Enables `tableBorderStyle'`, `tableBorderColor'` and `tableBorderWidth'` attributes for table.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/conversion/conversion~Conversion} conversion\n// @param {Object} defaultBorder The default border values.\n// @param {String} defaultBorder.color The default `tableBorderColor` value.\n// @param {String} defaultBorder.style The default `tableBorderStyle` value.\n// @param {String} defaultBorder.width The default `tableBorderWidth` value.\nfunction enableBorderProperties( schema, conversion, defaultBorder ) {\n\tconst modelAttributes = {\n\t\twidth: 'tableBorderWidth',\n\t\tcolor: 'tableBorderColor',\n\t\tstyle: 'tableBorderStyle'\n\t};\n\n\tschema.extend( 'table', {\n\t\tallowAttributes: Object.values( modelAttributes )\n\t} );\n\n\tupcastBorderStyles( conversion, 'table', modelAttributes, defaultBorder );\n\n\tdowncastTableAttribute( conversion, { modelAttribute: modelAttributes.color, styleName: 'border-color' } );\n\tdowncastTableAttribute( conversion, { modelAttribute: modelAttributes.style, styleName: 'border-style' } );\n\tdowncastTableAttribute( conversion, { modelAttribute: modelAttributes.width, styleName: 'border-width' } );\n}\n\n// Enables the `'alignment'` attribute for table.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/conversion/conversion~Conversion} conversion\n// @param {String} defaultValue The default alignment value.\nfunction enableAlignmentProperty( schema, conversion, defaultValue ) {\n\tschema.extend( 'table', {\n\t\tallowAttributes: [ 'tableAlignment' ]\n\t} );\n\n\tconversion.for( 'downcast' )\n\t\t.attributeToAttribute( {\n\t\t\tmodel: {\n\t\t\t\tname: 'table',\n\t\t\t\tkey: 'tableAlignment'\n\t\t\t},\n\t\t\tview: alignment => ( {\n\t\t\t\tkey: 'style',\n\t\t\t\tvalue: {\n\t\t\t\t\t// Model: `alignment:center` => CSS: `float:none`.\n\t\t\t\t\tfloat: alignment === 'center' ? 'none' : alignment\n\t\t\t\t}\n\t\t\t} ),\n\t\t\tconverterPriority: 'high'\n\t\t} );\n\n\tconversion.for( 'upcast' )\n\t\t// Support for the `float:*;` CSS definition for the table alignment.\n\t\t.attributeToAttribute( {\n\t\t\tview: {\n\t\t\t\tname: /^(table|figure)$/,\n\t\t\t\tstyles: {\n\t\t\t\t\tfloat: FLOAT_VALUES_REG_EXP\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tkey: 'tableAlignment',\n\t\t\t\tvalue: viewElement => {\n\t\t\t\t\tlet align = viewElement.getStyle( 'float' );\n\n\t\t\t\t\t// CSS: `float:none` => Model: `alignment:center`.\n\t\t\t\t\tif ( align === 'none' ) {\n\t\t\t\t\t\talign = 'center';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn align === defaultValue ? null : align;\n\t\t\t\t}\n\t\t\t}\n\t\t} )\n\t\t// Support for the `align` attribute as the backward compatibility while pasting from other sources.\n\t\t.attributeToAttribute( {\n\t\t\tview: {\n\t\t\t\tattributes: {\n\t\t\t\t\talign: ALIGN_VALUES_REG_EXP\n\t\t\t\t}\n\t\t\t},\n\t\t\tmodel: {\n\t\t\t\tname: 'table',\n\t\t\t\tkey: 'tableAlignment',\n\t\t\t\tvalue: viewElement => {\n\t\t\t\t\tconst align = viewElement.getAttribute( 'align' );\n\n\t\t\t\t\treturn align === defaultValue ? null : align;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n}\n\n// Enables conversion for an attribute for simple view-model mappings.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/conversion/conversion~Conversion} conversion\n// @param {Object} options\n// @param {String} options.modelAttribute\n// @param {String} options.styleName\n// @param {String} options.defaultValue The default value for the specified `modelAttribute`.\nfunction enableProperty( schema, conversion, options ) {\n\tconst { modelAttribute } = options;\n\n\tschema.extend( 'table', {\n\t\tallowAttributes: [ modelAttribute ]\n\t} );\n\tupcastStyleToAttribute( conversion, { viewElement: 'table', ...options } );\n\tdowncastTableAttribute( conversion, options );\n}\n\n// Enables conversion for an attribute for simple view (figure) to model (table) mappings.\n//\n// @param {module:engine/model/schema~Schema} schema\n// @param {module:engine/conversion/conversion~Conversion} conversion\n// @param {Object} options\n// @param {String} options.modelAttribute\n// @param {String} options.styleName\nfunction enableTableToFigureProperty( schema, conversion, options ) {\n\tconst { modelAttribute } = options;\n\n\tschema.extend( 'table', {\n\t\tallowAttributes: [ modelAttribute ]\n\t} );\n\tupcastStyleToAttribute( conversion, { viewElement: /^(table|figure)$/, ...options } );\n\tdowncastAttributeToStyle( conversion, { modelElement: 'table', ...options } );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableproperties/tablepropertiesui\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { ButtonView, ContextualBalloon, clickOutsideHandler, getLocalizedColorOptions, normalizeColorOptions } from 'ckeditor5/src/ui';\n\nimport { debounce } from 'lodash-es';\n\nimport TablePropertiesView from './ui/tablepropertiesview';\nimport tableProperties from './../../theme/icons/table-properties.svg';\nimport {\n\tcolorFieldValidator,\n\tgetLocalizedColorErrorText,\n\tgetLocalizedLengthErrorText,\n\tlengthFieldValidator,\n\tlineWidthFieldValidator,\n\tdefaultColors\n} from '../utils/ui/table-properties';\nimport { getTableWidgetAncestor } from '../utils/ui/widget';\nimport { getBalloonTablePositionData, repositionContextualBalloon } from '../utils/ui/contextualballoon';\nimport { getNormalizedDefaultProperties } from '../utils/table-properties';\n\nconst ERROR_TEXT_TIMEOUT = 500;\n\n// Map of view properties and related commands.\nconst propertyToCommandMap = {\n\tborderStyle: 'tableBorderStyle',\n\tborderColor: 'tableBorderColor',\n\tborderWidth: 'tableBorderWidth',\n\tbackgroundColor: 'tableBackgroundColor',\n\twidth: 'tableWidth',\n\theight: 'tableHeight',\n\talignment: 'tableAlignment'\n};\n\n/**\n * The table properties UI plugin. It introduces the `'tableProperties'` button\n * that opens a form allowing to specify visual styling of an entire table.\n *\n * It uses the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TablePropertiesUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ContextualBalloon ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TablePropertiesUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'table.tableProperties', {\n\t\t\tborderColors: defaultColors,\n\t\t\tbackgroundColors: defaultColors\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\t/**\n\t\t * The default table properties.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:table/tableproperties~TablePropertiesOptions}\n\t\t */\n\t\tthis._defaultTableProperties = getNormalizedDefaultProperties( editor.config.get( 'table.tableProperties.defaultProperties' ), {\n\t\t\tincludeAlignmentProperty: true\n\t\t} );\n\n\t\t/**\n\t\t * The contextual balloon plugin instance.\n\t\t *\n\t\t * @private\n\t\t * @member {module:ui/panel/balloon/contextualballoon~ContextualBalloon}\n\t\t */\n\t\tthis._balloon = editor.plugins.get( ContextualBalloon );\n\n\t\t/**\n\t\t * The properties form view displayed inside the balloon.\n\t\t *\n\t\t * @member {module:table/tableproperties/ui/tablepropertiesview~TablePropertiesView}\n\t\t */\n\t\tthis.view = this._createPropertiesView();\n\n\t\t/**\n\t\t * The batch used to undo all changes made by the form (which are live, as the user types)\n\t\t * when \"Cancel\" was pressed. Each time the view is shown, a new batch is created.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:engine/model/batch~Batch}\n\t\t */\n\t\tthis._undoStepBatch = null;\n\n\t\teditor.ui.componentFactory.add( 'tableProperties', locale => {\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel: t( 'Table properties' ),\n\t\t\t\ticon: tableProperties,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tthis.listenTo( view, 'execute', () => this._showView() );\n\n\t\t\tconst commands = Object.values( propertyToCommandMap )\n\t\t\t\t.map( commandName => editor.commands.get( commandName ) );\n\n\t\t\tview.bind( 'isEnabled' ).toMany( commands, 'isEnabled', ( ...areEnabled ) => (\n\t\t\t\tareEnabled.some( isCommandEnabled => isCommandEnabled )\n\t\t\t) );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\t// Destroy created UI components as they are not automatically destroyed.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/1341.\n\t\tthis.view.destroy();\n\t}\n\n\t/**\n\t * Creates the {@link module:table/tableproperties/ui/tablepropertiesview~TablePropertiesView} instance.\n\t *\n\t * @private\n\t * @returns {module:table/tableproperties/ui/tablepropertiesview~TablePropertiesView} The table\n\t * properties form view instance.\n\t */\n\t_createPropertiesView() {\n\t\tconst editor = this.editor;\n\t\tconst config = editor.config.get( 'table.tableProperties' );\n\t\tconst borderColorsConfig = normalizeColorOptions( config.borderColors );\n\t\tconst localizedBorderColors = getLocalizedColorOptions( editor.locale, borderColorsConfig );\n\t\tconst backgroundColorsConfig = normalizeColorOptions( config.backgroundColors );\n\t\tconst localizedBackgroundColors = getLocalizedColorOptions( editor.locale, backgroundColorsConfig );\n\n\t\tconst view = new TablePropertiesView( editor.locale, {\n\t\t\tborderColors: localizedBorderColors,\n\t\t\tbackgroundColors: localizedBackgroundColors,\n\t\t\tdefaultTableProperties: this._defaultTableProperties\n\t\t} );\n\t\tconst t = editor.t;\n\n\t\t// Render the view so its #element is available for the clickOutsideHandler.\n\t\tview.render();\n\n\t\tthis.listenTo( view, 'submit', () => {\n\t\t\tthis._hideView();\n\t\t} );\n\n\t\tthis.listenTo( view, 'cancel', () => {\n\t\t\t// https://github.com/ckeditor/ckeditor5/issues/6180\n\t\t\tif ( this._undoStepBatch.operations.length ) {\n\t\t\t\teditor.execute( 'undo', this._undoStepBatch );\n\t\t\t}\n\n\t\t\tthis._hideView();\n\t\t} );\n\n\t\t// Close the balloon on Esc key press.\n\t\tview.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tthis._hideView();\n\t\t\tcancel();\n\t\t} );\n\n\t\t// Close on click outside of balloon panel element.\n\t\tclickOutsideHandler( {\n\t\t\temitter: view,\n\t\t\tactivator: () => this._isViewInBalloon,\n\t\t\tcontextElements: [ this._balloon.view.element ],\n\t\t\tcallback: () => this._hideView()\n\t\t} );\n\n\t\tconst colorErrorText = getLocalizedColorErrorText( t );\n\t\tconst lengthErrorText = getLocalizedLengthErrorText( t );\n\n\t\t// Create the \"UI -> editor data\" binding.\n\t\t// These listeners update the editor data (via table commands) when any observable\n\t\t// property of the view has changed. They also validate the value and display errors in the UI\n\t\t// when necessary. This makes the view live, which means the changes are\n\t\t// visible in the editing as soon as the user types or changes fields' values.\n\t\tview.on(\n\t\t\t'change:borderStyle',\n\t\t\tthis._getPropertyChangeCallback( 'tableBorderStyle', this._defaultTableProperties.borderStyle )\n\t\t);\n\n\t\tview.on( 'change:borderColor', this._getValidatedPropertyChangeCallback( {\n\t\t\tviewField: view.borderColorInput,\n\t\t\tcommandName: 'tableBorderColor',\n\t\t\terrorText: colorErrorText,\n\t\t\tvalidator: colorFieldValidator,\n\t\t\tdefaultValue: this._defaultTableProperties.borderColor\n\t\t} ) );\n\n\t\tview.on( 'change:borderWidth', this._getValidatedPropertyChangeCallback( {\n\t\t\tviewField: view.borderWidthInput,\n\t\t\tcommandName: 'tableBorderWidth',\n\t\t\terrorText: lengthErrorText,\n\t\t\tvalidator: lineWidthFieldValidator,\n\t\t\tdefaultValue: this._defaultTableProperties.borderWidth\n\t\t} ) );\n\n\t\tview.on( 'change:backgroundColor', this._getValidatedPropertyChangeCallback( {\n\t\t\tviewField: view.backgroundInput,\n\t\t\tcommandName: 'tableBackgroundColor',\n\t\t\terrorText: colorErrorText,\n\t\t\tvalidator: colorFieldValidator,\n\t\t\tdefaultValue: this._defaultTableProperties.backgroundColor\n\t\t} ) );\n\n\t\tview.on( 'change:width', this._getValidatedPropertyChangeCallback( {\n\t\t\tviewField: view.widthInput,\n\t\t\tcommandName: 'tableWidth',\n\t\t\terrorText: lengthErrorText,\n\t\t\tvalidator: lengthFieldValidator,\n\t\t\tdefaultValue: this._defaultTableProperties.width\n\t\t} ) );\n\n\t\tview.on( 'change:height', this._getValidatedPropertyChangeCallback( {\n\t\t\tviewField: view.heightInput,\n\t\t\tcommandName: 'tableHeight',\n\t\t\terrorText: lengthErrorText,\n\t\t\tvalidator: lengthFieldValidator,\n\t\t\tdefaultValue: this._defaultTableProperties.height\n\t\t} ) );\n\n\t\tview.on(\n\t\t\t'change:alignment',\n\t\t\tthis._getPropertyChangeCallback( 'tableAlignment', this._defaultTableProperties.alignment )\n\t\t);\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * In this method the \"editor data -> UI\" binding is happening.\n\t *\n\t * When executed, this method obtains selected table property values from various table commands\n\t * and passes them to the {@link #view}.\n\t *\n\t * This way, the UI stays up–to–date with the editor data.\n\t *\n\t * @private\n\t */\n\t_fillViewFormFromCommandValues() {\n\t\tconst commands = this.editor.commands;\n\t\tconst borderStyleCommand = commands.get( 'tableBorderStyle' );\n\n\t\tObject.entries( propertyToCommandMap )\n\t\t\t.map( ( [ property, commandName ] ) => {\n\t\t\t\tconst defaultValue = this._defaultTableProperties[ property ] || '';\n\n\t\t\t\treturn [ property, commands.get( commandName ).value || defaultValue ];\n\t\t\t} )\n\t\t\t.forEach( ( [ property, value ] ) => {\n\t\t\t\t// Do not set the `border-color` and `border-width` fields if `border-style:none`.\n\t\t\t\tif ( ( property === 'borderColor' || property === 'borderWidth' ) && borderStyleCommand.value === 'none' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.view.set( property, value );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Shows the {@link #view} in the {@link #_balloon}.\n\t *\n\t * **Note**: Each time a view is shown, the new {@link #_undoStepBatch} is created that contains\n\t * all changes made to the document when the view is visible, allowing a single undo step\n\t * for all of them.\n\t *\n\t * @protected\n\t */\n\t_showView() {\n\t\tconst editor = this.editor;\n\n\t\tthis.listenTo( editor.ui, 'update', () => {\n\t\t\tthis._updateView();\n\t\t} );\n\n\t\t// Update the view with the model values.\n\t\tthis._fillViewFormFromCommandValues();\n\n\t\tthis._balloon.add( {\n\t\t\tview: this.view,\n\t\t\tposition: getBalloonTablePositionData( editor )\n\t\t} );\n\n\t\t// Create a new batch. Clicking \"Cancel\" will undo this batch.\n\t\tthis._undoStepBatch = editor.model.createBatch();\n\n\t\t// Basic a11y.\n\t\tthis.view.focus();\n\t}\n\n\t/**\n\t * Removes the {@link #view} from the {@link #_balloon}.\n\t *\n\t * @protected\n\t */\n\t_hideView() {\n\t\tconst editor = this.editor;\n\n\t\tthis.stopListening( editor.ui, 'update' );\n\n\t\t// Blur any input element before removing it from DOM to prevent issues in some browsers.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/1501.\n\t\tthis.view.saveButtonView.focus();\n\n\t\tthis._balloon.remove( this.view );\n\n\t\t// Make sure the focus is not lost in the process by putting it directly\n\t\t// into the editing view.\n\t\tthis.editor.editing.view.focus();\n\t}\n\n\t/**\n\t * Repositions the {@link #_balloon} or hides the {@link #view} if a table is no longer selected.\n\t *\n\t * @protected\n\t */\n\t_updateView() {\n\t\tconst editor = this.editor;\n\t\tconst viewDocument = editor.editing.view.document;\n\n\t\tif ( !getTableWidgetAncestor( viewDocument.selection ) ) {\n\t\t\tthis._hideView();\n\t\t} else if ( this._isViewVisible ) {\n\t\t\trepositionContextualBalloon( editor, 'table' );\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` when the {@link #view} is the visible in the {@link #_balloon}.\n\t *\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _isViewVisible() {\n\t\treturn this._balloon.visibleView === this.view;\n\t}\n\n\t/**\n\t * Returns `true` when the {@link #view} is in the {@link #_balloon}.\n\t *\n\t * @private\n\t * @type {Boolean}\n\t */\n\tget _isViewInBalloon() {\n\t\treturn this._balloon.hasView( this.view );\n\t}\n\n\t/**\n\t * Creates a callback that when executed upon {@link #view view's} property change\n\t * executes a related editor command with the new property value.\n\t *\n\t * If new value will be set to the default value, the command will not be executed.\n\t *\n\t * @private\n\t * @param {String} commandName The command that will be executed.\n\t * @param {String} defaultValue The default value of the command.\n\t * @returns {Function}\n\t */\n\t_getPropertyChangeCallback( commandName, defaultValue ) {\n\t\treturn ( evt, propertyName, newValue, oldValue ) => {\n\t\t\t// If the \"oldValue\" is missing and \"newValue\" is set to the default value, do not execute the command.\n\t\t\t// It is an initial call (when opening the table properties view).\n\t\t\tif ( !oldValue && defaultValue === newValue ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.editor.execute( commandName, {\n\t\t\t\tvalue: newValue,\n\t\t\t\tbatch: this._undoStepBatch\n\t\t\t} );\n\t\t};\n\t}\n\n\t/**\n\t * Creates a callback that when executed upon {@link #view view's} property change:\n\t * * executes a related editor command with the new property value if the value is valid,\n\t * * or sets the error text next to the invalid field, if the value did not pass the validation.\n\t *\n\t * @private\n\t * @param {Object} options\n\t * @param {String} options.commandName\n\t * @param {module:ui/view~View} options.viewField\n\t * @param {Function} options.validator\n\t * @param {String} options.errorText\n\t * @param {String} options.defaultValue\n\t * @returns {Function}\n\t */\n\t_getValidatedPropertyChangeCallback( options ) {\n\t\tconst { commandName, viewField, validator, errorText, defaultValue } = options;\n\t\tconst setErrorTextDebounced = debounce( () => {\n\t\t\tviewField.errorText = errorText;\n\t\t}, ERROR_TEXT_TIMEOUT );\n\n\t\treturn ( evt, propertyName, newValue, oldValue ) => {\n\t\t\tsetErrorTextDebounced.cancel();\n\n\t\t\t// If the \"oldValue\" is missing and \"newValue\" is set to the default value, do not execute the command.\n\t\t\t// It is an initial call (when opening the table properties view).\n\t\t\tif ( !oldValue && defaultValue === newValue ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( validator( newValue ) ) {\n\t\t\t\tthis.editor.execute( commandName, {\n\t\t\t\t\tvalue: newValue,\n\t\t\t\t\tbatch: this._undoStepBatch\n\t\t\t\t} );\n\n\t\t\t\tviewField.errorText = null;\n\t\t\t} else {\n\t\t\t\tsetErrorTextDebounced();\n\t\t\t}\n\t\t};\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableproperties/ui/tablepropertiesview\n */\n\nimport {\n\tButtonView,\n\tFocusCycler,\n\tFormHeaderView,\n\tLabelView,\n\tLabeledFieldView,\n\tToolbarView,\n\tView,\n\tViewCollection,\n\taddListToDropdown,\n\tcreateLabeledDropdown,\n\tcreateLabeledInputText,\n\tsubmitHandler\n} from 'ckeditor5/src/ui';\nimport { FocusTracker, KeystrokeHandler } from 'ckeditor5/src/utils';\nimport { icons } from 'ckeditor5/src/core';\n\nimport {\n\tfillToolbar,\n\tgetBorderStyleDefinitions,\n\tgetBorderStyleLabels,\n\tgetLabeledColorInputCreator\n} from '../../utils/ui/table-properties';\nimport FormRowView from '../../ui/formrowview';\n\nimport '../../../theme/form.css';\nimport '../../../theme/tableform.css';\nimport '../../../theme/tableproperties.css';\n\nconst ALIGNMENT_ICONS = {\n\tleft: icons.objectLeft,\n\tcenter: icons.objectCenter,\n\tright: icons.objectRight\n};\n\n/**\n * The class representing a table properties form, allowing users to customize\n * certain style aspects of a table, for instance, border, background color, alignment, etc..\n *\n * @extends module:ui/view~View\n */\nexport default class TablePropertiesView extends View {\n\t/**\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param {Object} options Additional configuration of the view.\n\t * @param {module:table/table~TableColorConfig} options.borderColors A configuration of the border\n\t * color palette used by the\n\t * {@link module:table/tableproperties/ui/tablepropertiesview~TablePropertiesView#borderColorInput}.\n\t * @param {module:table/table~TableColorConfig} options.backgroundColors A configuration of the background\n\t * color palette used by the\n\t * {@link module:table/tableproperties/ui/tablepropertiesview~TablePropertiesView#backgroundInput}.\n\t * @param {module:table/tableproperties~TablePropertiesOptions} options.defaultTableProperties The default table properties.\n\t */\n\tconstructor( locale, options ) {\n\t\tsuper( locale );\n\n\t\tthis.set( {\n\t\t\t/**\n\t\t\t * The value of the border style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #borderStyle\n\t\t\t */\n\t\t\tborderStyle: '',\n\n\t\t\t/**\n\t\t\t * The value of the border width style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #borderWidth\n\t\t\t */\n\t\t\tborderWidth: '',\n\n\t\t\t/**\n\t\t\t * The value of the border color style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #borderColor\n\t\t\t */\n\t\t\tborderColor: '',\n\n\t\t\t/**\n\t\t\t * The value of the background color style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #backgroundColor\n\t\t\t */\n\t\t\tbackgroundColor: '',\n\n\t\t\t/**\n\t\t\t * The value of the table width style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #width\n\t\t\t */\n\t\t\twidth: '',\n\n\t\t\t/**\n\t\t\t * The value of the table height style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #height\n\t\t\t */\n\t\t\theight: '',\n\n\t\t\t/**\n\t\t\t * The value of the table alignment style.\n\t\t\t *\n\t\t\t * @observable\n\t\t\t * @default ''\n\t\t\t * @member #alignment\n\t\t\t */\n\t\t\talignment: ''\n\t\t} );\n\n\t\t/**\n\t\t * Options passed to the view. See {@link #constructor} to learn more.\n\t\t *\n\t\t * @protected\n\t\t * @member {Object}\n\t\t */\n\t\tthis.options = options;\n\n\t\tconst { borderStyleDropdown, borderWidthInput, borderColorInput, borderRowLabel } = this._createBorderFields();\n\t\tconst { backgroundRowLabel, backgroundInput } = this._createBackgroundFields();\n\t\tconst { widthInput, operatorLabel, heightInput, dimensionsLabel } = this._createDimensionFields();\n\t\tconst { alignmentToolbar, alignmentLabel } = this._createAlignmentFields();\n\n\t\t/**\n\t\t * Tracks information about the DOM focus in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * A collection of child views in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @type {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\t/**\n\t\t * A dropdown that allows selecting the style of the table border.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/dropdown/dropdownview~DropdownView}\n\t\t */\n\t\tthis.borderStyleDropdown = borderStyleDropdown;\n\n\t\t/**\n\t\t * An input that allows specifying the width of the table border.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/inputtext/inputtextview~InputTextView}\n\t\t */\n\t\tthis.borderWidthInput = borderWidthInput;\n\n\t\t/**\n\t\t * An input that allows specifying the color of the table border.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:table/ui/colorinputview~ColorInputView}\n\t\t */\n\t\tthis.borderColorInput = borderColorInput;\n\n\t\t/**\n\t\t * An input that allows specifying the table background color.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:table/ui/colorinputview~ColorInputView}\n\t\t */\n\t\tthis.backgroundInput = backgroundInput;\n\n\t\t/**\n\t\t * An input that allows specifying the table width.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/inputtext/inputtextview~InputTextView}\n\t\t */\n\t\tthis.widthInput = widthInput;\n\n\t\t/**\n\t\t * An input that allows specifying the table height.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/inputtext/inputtextview~InputTextView}\n\t\t */\n\t\tthis.heightInput = heightInput;\n\n\t\t/**\n\t\t * A toolbar with buttons that allow changing the alignment of an entire table.\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView}\n\t\t */\n\t\tthis.alignmentToolbar = alignmentToolbar;\n\n\t\t// Defer creating to make sure other fields are present and the Save button can\n\t\t// bind its #isEnabled to their error messages so there's no way to save unless all\n\t\t// fields are valid.\n\t\tconst { saveButtonView, cancelButtonView } = this._createActionButtons();\n\n\t\t/**\n\t\t * The \"Save\" button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.saveButtonView = saveButtonView;\n\n\t\t/**\n\t\t * The \"Cancel\" button view.\n\t\t *\n\t\t * @member {module:ui/button/buttonview~ButtonView}\n\t\t */\n\t\tthis.cancelButtonView = cancelButtonView;\n\n\t\t/**\n\t\t * A collection of views that can be focused in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._focusables = new ViewCollection();\n\n\t\t/**\n\t\t * Helps cycling over {@link #_focusables} in the form.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backwards using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\t// Form header.\n\t\tthis.children.add( new FormHeaderView( locale, {\n\t\t\tlabel: this.t( 'Table properties' )\n\t\t} ) );\n\n\t\t// Border row.\n\t\tthis.children.add( new FormRowView( locale, {\n\t\t\tlabelView: borderRowLabel,\n\t\t\tchildren: [\n\t\t\t\tborderRowLabel,\n\t\t\t\tborderStyleDropdown,\n\t\t\t\tborderColorInput,\n\t\t\t\tborderWidthInput\n\t\t\t],\n\t\t\tclass: 'ck-table-form__border-row'\n\t\t} ) );\n\n\t\t// Background row.\n\t\tthis.children.add( new FormRowView( locale, {\n\t\t\tlabelView: backgroundRowLabel,\n\t\t\tchildren: [\n\t\t\t\tbackgroundRowLabel,\n\t\t\t\tbackgroundInput\n\t\t\t],\n\t\t\tclass: 'ck-table-form__background-row'\n\t\t} ) );\n\n\t\tthis.children.add( new FormRowView( locale, {\n\t\t\tchildren: [\n\t\t\t\t// Dimensions row.\n\t\t\t\tnew FormRowView( locale, {\n\t\t\t\t\tlabelView: dimensionsLabel,\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tdimensionsLabel,\n\t\t\t\t\t\twidthInput,\n\t\t\t\t\t\toperatorLabel,\n\t\t\t\t\t\theightInput\n\t\t\t\t\t],\n\t\t\t\t\tclass: 'ck-table-form__dimensions-row'\n\t\t\t\t} ),\n\t\t\t\t// Alignment row.\n\t\t\t\tnew FormRowView( locale, {\n\t\t\t\t\tlabelView: alignmentLabel,\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\talignmentLabel,\n\t\t\t\t\t\talignmentToolbar\n\t\t\t\t\t],\n\t\t\t\t\tclass: 'ck-table-properties-form__alignment-row'\n\t\t\t\t} )\n\t\t\t]\n\t\t} ) );\n\n\t\t// Action row.\n\t\tthis.children.add( new FormRowView( locale, {\n\t\t\tchildren: [\n\t\t\t\tthis.saveButtonView,\n\t\t\t\tthis.cancelButtonView\n\t\t\t],\n\t\t\tclass: 'ck-table-form__action-row'\n\t\t} ) );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'form',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-form',\n\t\t\t\t\t'ck-table-form',\n\t\t\t\t\t'ck-table-properties-form'\n\t\t\t\t],\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-link/issues/90\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Enable the \"submit\" event for this view. It can be triggered by the #saveButtonView\n\t\t// which is of the \"submit\" DOM \"type\".\n\t\tsubmitHandler( {\n\t\t\tview: this\n\t\t} );\n\n\t\t[\n\t\t\tthis.borderStyleDropdown,\n\t\t\tthis.borderColorInput,\n\t\t\tthis.borderColorInput.fieldView.dropdownView.buttonView,\n\t\t\tthis.borderWidthInput,\n\t\t\tthis.backgroundInput,\n\t\t\tthis.backgroundInput.fieldView.dropdownView.buttonView,\n\t\t\tthis.widthInput,\n\t\t\tthis.heightInput,\n\t\t\tthis.alignmentToolbar,\n\t\t\tthis.saveButtonView,\n\t\t\tthis.cancelButtonView\n\t\t].forEach( view => {\n\t\t\t// Register the view as focusable.\n\t\t\tthis._focusables.add( view );\n\n\t\t\t// Register the view in the focus tracker.\n\t\t\tthis.focusTracker.add( view.element );\n\t\t} );\n\n\t\t// Mainly for closing using \"Esc\" and navigation using \"Tab\".\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Focuses the fist focusable field in the form.\n\t */\n\tfocus() {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Creates the following form fields:\n\t *\n\t * * {@link #borderStyleDropdown},\n\t * * {@link #borderWidthInput},\n\t * * {@link #borderColorInput}.\n\t *\n\t * @private\n\t * @returns {Object.<String,module:ui/view~View>}\n\t */\n\t_createBorderFields() {\n\t\tconst defaultTableProperties = this.options.defaultTableProperties;\n\t\tconst defaultBorder = {\n\t\t\tstyle: defaultTableProperties.borderStyle,\n\t\t\twidth: defaultTableProperties.borderWidth,\n\t\t\tcolor: defaultTableProperties.borderColor\n\t\t};\n\n\t\tconst colorInputCreator = getLabeledColorInputCreator( {\n\t\t\tcolorConfig: this.options.borderColors,\n\t\t\tcolumns: 5,\n\t\t\tdefaultColorValue: defaultBorder.color\n\t\t} );\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\n\t\t// -- Group label ---------------------------------------------\n\n\t\tconst borderRowLabel = new LabelView( locale );\n\t\tborderRowLabel.text = t( 'Border' );\n\n\t\t// -- Style ---------------------------------------------------\n\n\t\tconst styleLabels = getBorderStyleLabels( this.t );\n\t\tconst borderStyleDropdown = new LabeledFieldView( locale, createLabeledDropdown );\n\t\tborderStyleDropdown.set( {\n\t\t\tlabel: t( 'Style' ),\n\t\t\tclass: 'ck-table-form__border-style'\n\t\t} );\n\n\t\tborderStyleDropdown.fieldView.buttonView.set( {\n\t\t\tisOn: false,\n\t\t\twithText: true,\n\t\t\ttooltip: t( 'Style' )\n\t\t} );\n\n\t\tborderStyleDropdown.fieldView.buttonView.bind( 'label' ).to( this, 'borderStyle', value => {\n\t\t\treturn styleLabels[ value ? value : 'none' ];\n\t\t} );\n\n\t\tborderStyleDropdown.fieldView.on( 'execute', evt => {\n\t\t\tthis.borderStyle = evt.source._borderStyleValue;\n\t\t} );\n\n\t\tborderStyleDropdown.bind( 'isEmpty' ).to( this, 'borderStyle', value => !value );\n\n\t\taddListToDropdown( borderStyleDropdown.fieldView, getBorderStyleDefinitions( this, defaultBorder.style ) );\n\n\t\t// -- Width ---------------------------------------------------\n\n\t\tconst borderWidthInput = new LabeledFieldView( locale, createLabeledInputText );\n\n\t\tborderWidthInput.set( {\n\t\t\tlabel: t( 'Width' ),\n\t\t\tclass: 'ck-table-form__border-width'\n\t\t} );\n\n\t\tborderWidthInput.fieldView.bind( 'value' ).to( this, 'borderWidth' );\n\t\tborderWidthInput.bind( 'isEnabled' ).to( this, 'borderStyle', isBorderStyleSet );\n\t\tborderWidthInput.fieldView.on( 'input', () => {\n\t\t\tthis.borderWidth = borderWidthInput.fieldView.element.value;\n\t\t} );\n\n\t\t// -- Color ---------------------------------------------------\n\n\t\tconst borderColorInput = new LabeledFieldView( locale, colorInputCreator );\n\n\t\tborderColorInput.set( {\n\t\t\tlabel: t( 'Color' ),\n\t\t\tclass: 'ck-table-form__border-color'\n\t\t} );\n\n\t\tborderColorInput.fieldView.bind( 'value' ).to( this, 'borderColor' );\n\t\tborderColorInput.bind( 'isEnabled' ).to( this, 'borderStyle', isBorderStyleSet );\n\n\t\tborderColorInput.fieldView.on( 'input', () => {\n\t\t\tthis.borderColor = borderColorInput.fieldView.value;\n\t\t} );\n\n\t\t// Reset the border color and width fields depending on the `border-style` value.\n\t\tthis.on( 'change:borderStyle', ( evt, name, newValue, oldValue ) => {\n\t\t\t// When removing the border (`border-style:none`), clear the remaining `border-*` properties.\n\t\t\t// See: https://github.com/ckeditor/ckeditor5/issues/6227.\n\t\t\tif ( !isBorderStyleSet( newValue ) ) {\n\t\t\t\tthis.borderColor = '';\n\t\t\t\tthis.borderWidth = '';\n\t\t\t}\n\n\t\t\t// When setting the `border-style` from `none`, set the default `border-color` and `border-width` properties.\n\t\t\tif ( !isBorderStyleSet( oldValue ) ) {\n\t\t\t\tthis.borderColor = defaultBorder.color;\n\t\t\t\tthis.borderWidth = defaultBorder.width;\n\t\t\t}\n\t\t} );\n\n\t\treturn {\n\t\t\tborderRowLabel,\n\t\t\tborderStyleDropdown,\n\t\t\tborderColorInput,\n\t\t\tborderWidthInput\n\t\t};\n\t}\n\n\t/**\n\t * Creates the following form fields:\n\t *\n\t * * {@link #backgroundInput}.\n\t *\n\t * @private\n\t * @returns {Object.<String,module:ui/view~View>}\n\t */\n\t_createBackgroundFields() {\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\n\t\t// -- Group label ---------------------------------------------\n\n\t\tconst backgroundRowLabel = new LabelView( locale );\n\t\tbackgroundRowLabel.text = t( 'Background' );\n\n\t\t// -- Background color input -----------------------------------\n\n\t\tconst backgroundInputCreator = getLabeledColorInputCreator( {\n\t\t\tcolorConfig: this.options.backgroundColors,\n\t\t\tcolumns: 5,\n\t\t\tdefaultColorValue: this.options.defaultTableProperties.backgroundColor\n\t\t} );\n\n\t\tconst backgroundInput = new LabeledFieldView( locale, backgroundInputCreator );\n\n\t\tbackgroundInput.set( {\n\t\t\tlabel: t( 'Color' ),\n\t\t\tclass: 'ck-table-properties-form__background'\n\t\t} );\n\n\t\tbackgroundInput.fieldView.bind( 'value' ).to( this, 'backgroundColor' );\n\t\tbackgroundInput.fieldView.on( 'input', () => {\n\t\t\tthis.backgroundColor = backgroundInput.fieldView.value;\n\t\t} );\n\n\t\treturn {\n\t\t\tbackgroundRowLabel,\n\t\t\tbackgroundInput\n\t\t};\n\t}\n\n\t/**\n\t * Creates the following form fields:\n\t *\n\t * * {@link #widthInput}.\n\t * * {@link #heightInput}.\n\t *\n\t * @private\n\t * @returns {module:ui/labeledfield/labeledfieldview~LabeledFieldView}\n\t */\n\t_createDimensionFields() {\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\n\t\t// -- Label ---------------------------------------------------\n\n\t\tconst dimensionsLabel = new LabelView( locale );\n\t\tdimensionsLabel.text = t( 'Dimensions' );\n\n\t\t// -- Width ---------------------------------------------------\n\n\t\tconst widthInput = new LabeledFieldView( locale, createLabeledInputText );\n\n\t\twidthInput.set( {\n\t\t\tlabel: t( 'Width' ),\n\t\t\tclass: 'ck-table-form__dimensions-row__width'\n\t\t} );\n\n\t\twidthInput.fieldView.bind( 'value' ).to( this, 'width' );\n\t\twidthInput.fieldView.on( 'input', () => {\n\t\t\tthis.width = widthInput.fieldView.element.value;\n\t\t} );\n\n\t\t// -- Operator ---------------------------------------------------\n\n\t\tconst operatorLabel = new View( locale );\n\t\toperatorLabel.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-table-form__dimension-operator'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{ text: '×' }\n\t\t\t]\n\t\t} );\n\n\t\t// -- Height ---------------------------------------------------\n\n\t\tconst heightInput = new LabeledFieldView( locale, createLabeledInputText );\n\n\t\theightInput.set( {\n\t\t\tlabel: t( 'Height' ),\n\t\t\tclass: 'ck-table-form__dimensions-row__height'\n\t\t} );\n\n\t\theightInput.fieldView.bind( 'value' ).to( this, 'height' );\n\t\theightInput.fieldView.on( 'input', () => {\n\t\t\tthis.height = heightInput.fieldView.element.value;\n\t\t} );\n\n\t\treturn {\n\t\t\tdimensionsLabel,\n\t\t\twidthInput,\n\t\t\toperatorLabel,\n\t\t\theightInput\n\t\t};\n\t}\n\n\t/**\n\t * Creates the following form fields:\n\t *\n\t * * {@link #alignmentToolbar},\n\t *\n\t * @private\n\t * @returns {Object.<String,module:ui/view~View>}\n\t */\n\t_createAlignmentFields() {\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\n\t\t// -- Label ---------------------------------------------------\n\n\t\tconst alignmentLabel = new LabelView( locale );\n\t\talignmentLabel.text = t( 'Alignment' );\n\n\t\t// -- Toolbar ---------------------------------------------------\n\n\t\tconst alignmentToolbar = new ToolbarView( locale );\n\t\talignmentToolbar.set( {\n\t\t\tisCompact: true,\n\t\t\tariaLabel: t( 'Table alignment toolbar' )\n\t\t} );\n\n\t\tfillToolbar( {\n\t\t\tview: this,\n\t\t\ticons: ALIGNMENT_ICONS,\n\t\t\ttoolbar: alignmentToolbar,\n\t\t\tlabels: this._alignmentLabels,\n\t\t\tpropertyName: 'alignment',\n\t\t\tdefaultValue: this.options.defaultTableProperties.alignment\n\t\t} );\n\n\t\treturn {\n\t\t\talignmentLabel,\n\t\t\talignmentToolbar\n\t\t};\n\t}\n\n\t/**\n\t * Creates the following form controls:\n\t *\n\t * * {@link #saveButtonView},\n\t * * {@link #cancelButtonView}.\n\t *\n\t * @private\n\t * @returns {Object.<String,module:ui/view~View>}\n\t */\n\t_createActionButtons() {\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\n\t\tconst saveButtonView = new ButtonView( locale );\n\t\tconst cancelButtonView = new ButtonView( locale );\n\t\tconst fieldsThatShouldValidateToSave = [\n\t\t\tthis.borderWidthInput,\n\t\t\tthis.borderColorInput,\n\t\t\tthis.backgroundInput,\n\t\t\tthis.widthInput,\n\t\t\tthis.heightInput\n\t\t];\n\n\t\tsaveButtonView.set( {\n\t\t\tlabel: t( 'Save' ),\n\t\t\ticon: icons.check,\n\t\t\tclass: 'ck-button-save',\n\t\t\ttype: 'submit',\n\t\t\twithText: true\n\t\t} );\n\n\t\tsaveButtonView.bind( 'isEnabled' ).toMany( fieldsThatShouldValidateToSave, 'errorText', ( ...errorTexts ) => {\n\t\t\treturn errorTexts.every( errorText => !errorText );\n\t\t} );\n\n\t\tcancelButtonView.set( {\n\t\t\tlabel: t( 'Cancel' ),\n\t\t\ticon: icons.cancel,\n\t\t\tclass: 'ck-button-cancel',\n\t\t\twithText: true\n\t\t} );\n\n\t\tcancelButtonView.delegate( 'execute' ).to( this, 'cancel' );\n\n\t\treturn {\n\t\t\tsaveButtonView, cancelButtonView\n\t\t};\n\t}\n\n\t/**\n\t * Provides localized labels for {@link #alignmentToolbar} buttons.\n\t *\n\t * @private\n\t * @type {Object.<String,String>}\n\t */\n\tget _alignmentLabels() {\n\t\tconst locale = this.locale;\n\t\tconst t = this.t;\n\n\t\tconst left = t( 'Align table to the left' );\n\t\tconst center = t( 'Center table' );\n\t\tconst right = t( 'Align table to the right' );\n\n\t\t// Returns object with a proper order of labels.\n\t\tif ( locale.uiLanguageDirection === 'rtl' ) {\n\t\t\treturn { right, center, left };\n\t\t} else {\n\t\t\treturn { left, center, right };\n\t\t}\n\t}\n}\n\nfunction isBorderStyleSet( value ) {\n\treturn value !== 'none';\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableselection\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { first } from 'ckeditor5/src/utils';\n\nimport TableWalker from './tablewalker';\nimport TableUtils from './tableutils';\n\nimport { cropTableToDimensions, adjustLastRowIndex, adjustLastColumnIndex } from './utils/structure';\n\nimport '../theme/tableselection.css';\n\n/**\n * This plugin enables the advanced table cells, rows and columns selection.\n * It is loaded automatically by the {@link module:table/table~Table} plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableSelection extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableSelection';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ TableUtils, TableUtils ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\tthis.listenTo( model, 'deleteContent', ( evt, args ) => this._handleDeleteContent( evt, args ), { priority: 'high' } );\n\n\t\tthis._defineSelectionConverter();\n\t\tthis._enablePluginDisabling(); // sic!\n\t}\n\n\t/**\n\t * Returns the currently selected table cells or `null` if it is not a table cells selection.\n\t *\n\t * @returns {Array.<module:engine/model/element~Element>|null}\n\t */\n\tgetSelectedTableCells() {\n\t\tconst tableUtils = this.editor.plugins.get( TableUtils );\n\t\tconst selection = this.editor.model.document.selection;\n\n\t\tconst selectedCells = tableUtils.getSelectedTableCells( selection );\n\n\t\tif ( selectedCells.length == 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// This should never happen, but let's know if it ever happens.\n\t\t// @if CK_DEBUG //\t/* istanbul ignore next */\n\t\t// @if CK_DEBUG //\tif ( selectedCells.length != selection.rangeCount ) {\n\t\t// @if CK_DEBUG //\t\tconsole.warn( 'Mixed selection warning. The selection contains table cells and some other ranges.' );\n\t\t// @if CK_DEBUG //\t}\n\n\t\treturn selectedCells;\n\t}\n\n\t/**\n\t * Returns the selected table fragment as a document fragment.\n\t *\n\t * @returns {module:engine/model/documentfragment~DocumentFragment|null}\n\t */\n\tgetSelectionAsFragment() {\n\t\tconst tableUtils = this.editor.plugins.get( TableUtils );\n\t\tconst selectedCells = this.getSelectedTableCells();\n\n\t\tif ( !selectedCells ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.editor.model.change( writer => {\n\t\t\tconst documentFragment = writer.createDocumentFragment();\n\n\t\t\tconst { first: firstColumn, last: lastColumn } = tableUtils.getColumnIndexes( selectedCells );\n\t\t\tconst { first: firstRow, last: lastRow } = tableUtils.getRowIndexes( selectedCells );\n\n\t\t\tconst sourceTable = selectedCells[ 0 ].findAncestor( 'table' );\n\n\t\t\tlet adjustedLastRow = lastRow;\n\t\t\tlet adjustedLastColumn = lastColumn;\n\n\t\t\t// If the selection is rectangular there could be a case of all cells in the last row/column spanned over\n\t\t\t// next row/column so the real lastRow/lastColumn should be updated.\n\t\t\tif ( tableUtils.isSelectionRectangular( selectedCells ) ) {\n\t\t\t\tconst dimensions = {\n\t\t\t\t\tfirstColumn,\n\t\t\t\t\tlastColumn,\n\t\t\t\t\tfirstRow,\n\t\t\t\t\tlastRow\n\t\t\t\t};\n\n\t\t\t\tadjustedLastRow = adjustLastRowIndex( sourceTable, dimensions );\n\t\t\t\tadjustedLastColumn = adjustLastColumnIndex( sourceTable, dimensions );\n\t\t\t}\n\n\t\t\tconst cropDimensions = {\n\t\t\t\tstartRow: firstRow,\n\t\t\t\tstartColumn: firstColumn,\n\t\t\t\tendRow: adjustedLastRow,\n\t\t\t\tendColumn: adjustedLastColumn\n\t\t\t};\n\n\t\t\tconst table = cropTableToDimensions( sourceTable, cropDimensions, writer );\n\n\t\t\twriter.insert( table, documentFragment, 0 );\n\n\t\t\treturn documentFragment;\n\t\t} );\n\t}\n\n\t/**\n\t * Sets the model selection based on given anchor and target cells (can be the same cell).\n\t * Takes care of setting the backward flag.\n\t *\n\t *\t\tconst modelRoot = editor.model.document.getRoot();\n\t *\t\tconst firstCell = modelRoot.getNodeByPath( [ 0, 0, 0 ] );\n\t *\t\tconst lastCell = modelRoot.getNodeByPath( [ 0, 0, 1 ] );\n\t *\n\t *\t\tconst tableSelection = editor.plugins.get( 'TableSelection' );\n\t *\t\ttableSelection.setCellSelection( firstCell, lastCell );\n\t *\n\t * @param {module:engine/model/element~Element} anchorCell\n\t * @param {module:engine/model/element~Element} targetCell\n\t */\n\tsetCellSelection( anchorCell, targetCell ) {\n\t\tconst cellsToSelect = this._getCellsToSelect( anchorCell, targetCell );\n\n\t\tthis.editor.model.change( writer => {\n\t\t\twriter.setSelection(\n\t\t\t\tcellsToSelect.cells.map( cell => writer.createRangeOn( cell ) ),\n\t\t\t\t{ backward: cellsToSelect.backward }\n\t\t\t);\n\t\t} );\n\t}\n\n\t/**\n\t * Returns the focus cell from the current selection.\n\t *\n\t * @returns {module:engine/model/element~Element}\n\t */\n\tgetFocusCell() {\n\t\tconst selection = this.editor.model.document.selection;\n\t\tconst focusCellRange = [ ...selection.getRanges() ].pop();\n\t\tconst element = focusCellRange.getContainedElement();\n\n\t\tif ( element && element.is( 'element', 'tableCell' ) ) {\n\t\t\treturn element;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the anchor cell from the current selection.\n\t *\n\t * @returns {module:engine/model/element~Element} anchorCell\n\t */\n\tgetAnchorCell() {\n\t\tconst selection = this.editor.model.document.selection;\n\t\tconst anchorCellRange = first( selection.getRanges() );\n\t\tconst element = anchorCellRange.getContainedElement();\n\n\t\tif ( element && element.is( 'element', 'tableCell' ) ) {\n\t\t\treturn element;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Defines a selection converter which marks the selected cells with a specific class.\n\t *\n\t * The real DOM selection is put in the last cell. Since the order of ranges is dependent on whether the\n\t * selection is backward or not, the last cell will usually be close to the \"focus\" end of the selection\n\t * (a selection has anchor and focus).\n\t *\n\t * The real DOM selection is then hidden with CSS.\n\t *\n\t * @private\n\t */\n\t_defineSelectionConverter() {\n\t\tconst editor = this.editor;\n\t\tconst highlighted = new Set();\n\n\t\teditor.conversion.for( 'editingDowncast' ).add( dispatcher => dispatcher.on( 'selection', ( evt, data, conversionApi ) => {\n\t\t\tconst viewWriter = conversionApi.writer;\n\n\t\t\tclearHighlightedTableCells( viewWriter );\n\n\t\t\tconst selectedCells = this.getSelectedTableCells();\n\n\t\t\tif ( !selectedCells ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( const tableCell of selectedCells ) {\n\t\t\t\tconst viewElement = conversionApi.mapper.toViewElement( tableCell );\n\n\t\t\t\tviewWriter.addClass( 'ck-editor__editable_selected', viewElement );\n\t\t\t\thighlighted.add( viewElement );\n\t\t\t}\n\n\t\t\tconst lastViewCell = conversionApi.mapper.toViewElement( selectedCells[ selectedCells.length - 1 ] );\n\t\t\tviewWriter.setSelection( lastViewCell, 0 );\n\t\t}, { priority: 'lowest' } ) );\n\n\t\tfunction clearHighlightedTableCells( writer ) {\n\t\t\tfor ( const previouslyHighlighted of highlighted ) {\n\t\t\t\twriter.removeClass( 'ck-editor__editable_selected', previouslyHighlighted );\n\t\t\t}\n\n\t\t\thighlighted.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Creates a listener that reacts to changes in {@link #isEnabled} and, if the plugin was disabled,\n\t * it collapses the multi-cell selection to a regular selection placed inside a table cell.\n\t *\n\t * This listener helps features that disable the table selection plugin bring the selection\n\t * to a clear state they can work with (for instance, because they don't support multiple cell selection).\n\t */\n\t_enablePluginDisabling() {\n\t\tconst editor = this.editor;\n\n\t\tthis.on( 'change:isEnabled', () => {\n\t\t\tif ( !this.isEnabled ) {\n\t\t\t\tconst selectedCells = this.getSelectedTableCells();\n\n\t\t\t\tif ( !selectedCells ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\teditor.model.change( writer => {\n\t\t\t\t\tconst position = writer.createPositionAt( selectedCells[ 0 ], 0 );\n\t\t\t\t\tconst range = editor.model.schema.getNearestSelectionRange( position );\n\n\t\t\t\t\twriter.setSelection( range );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Overrides the default `model.deleteContent()` behavior over a selected table fragment.\n\t *\n\t * @private\n\t * @param {module:utils/eventinfo~EventInfo} event\n\t * @param {Array.<*>} args Delete content method arguments.\n\t */\n\t_handleDeleteContent( event, args ) {\n\t\tconst tableUtils = this.editor.plugins.get( TableUtils );\n\t\tconst [ selection, options ] = args;\n\t\tconst model = this.editor.model;\n\t\tconst isBackward = !options || options.direction == 'backward';\n\t\tconst selectedTableCells = tableUtils.getSelectedTableCells( selection );\n\n\t\tif ( !selectedTableCells.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.stop();\n\n\t\tmodel.change( writer => {\n\t\t\tconst tableCellToSelect = selectedTableCells[ isBackward ? selectedTableCells.length - 1 : 0 ];\n\n\t\t\tmodel.change( writer => {\n\t\t\t\tfor ( const tableCell of selectedTableCells ) {\n\t\t\t\t\tmodel.deleteContent( writer.createSelection( tableCell, 'in' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tconst rangeToSelect = model.schema.getNearestSelectionRange( writer.createPositionAt( tableCellToSelect, 0 ) );\n\n\t\t\t// Note: we ignore the case where rangeToSelect may be null because deleteContent() will always (unless someone broke it)\n\t\t\t// create an empty paragraph to accommodate the selection.\n\n\t\t\tif ( selection.is( 'documentSelection' ) ) {\n\t\t\t\twriter.setSelection( rangeToSelect );\n\t\t\t} else {\n\t\t\t\tselection.setTo( rangeToSelect );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns an array of table cells that should be selected based on the\n\t * given anchor cell and target (focus) cell.\n\t *\n\t * The cells are returned in a reverse direction if the selection is backward.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} anchorCell\n\t * @param {module:engine/model/element~Element} targetCell\n\t * @returns {Array.<module:engine/model/element~Element>}\n\t */\n\t_getCellsToSelect( anchorCell, targetCell ) {\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst startLocation = tableUtils.getCellLocation( anchorCell );\n\t\tconst endLocation = tableUtils.getCellLocation( targetCell );\n\n\t\tconst startRow = Math.min( startLocation.row, endLocation.row );\n\t\tconst endRow = Math.max( startLocation.row, endLocation.row );\n\n\t\tconst startColumn = Math.min( startLocation.column, endLocation.column );\n\t\tconst endColumn = Math.max( startLocation.column, endLocation.column );\n\n\t\t// 2-dimensional array of the selected cells to ease flipping the order of cells for backward selections.\n\t\tconst selectionMap = new Array( endRow - startRow + 1 ).fill( null ).map( () => [] );\n\n\t\tconst walkerOptions = {\n\t\t\tstartRow,\n\t\t\tendRow,\n\t\t\tstartColumn,\n\t\t\tendColumn\n\t\t};\n\n\t\tfor ( const { row, cell } of new TableWalker( anchorCell.findAncestor( 'table' ), walkerOptions ) ) {\n\t\t\tselectionMap[ row - startRow ].push( cell );\n\t\t}\n\n\t\tconst flipVertically = endLocation.row < startLocation.row;\n\t\tconst flipHorizontally = endLocation.column < startLocation.column;\n\n\t\tif ( flipVertically ) {\n\t\t\tselectionMap.reverse();\n\t\t}\n\n\t\tif ( flipHorizontally ) {\n\t\t\tselectionMap.forEach( row => row.reverse() );\n\t\t}\n\n\t\treturn {\n\t\t\tcells: selectionMap.flat(),\n\t\t\tbackward: flipVertically || flipHorizontally\n\t\t};\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tabletoolbar\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { WidgetToolbarRepository } from 'ckeditor5/src/widget';\nimport { getSelectedTableWidget, getTableWidgetAncestor } from './utils/ui/widget';\n\n/**\n * The table toolbar class. It creates toolbars for the table feature and its content (for now only for the table cell content).\n *\n * The table toolbar shows up when a table widget is selected. Its components (e.g. buttons) are created based on the\n * {@link module:table/table~TableConfig#tableToolbar `table.tableToolbar` configuration option}.\n *\n * Table content toolbar shows up when the selection is inside the content of a table. It creates its component based on the\n * {@link module:table/table~TableConfig#contentToolbar `table.contentToolbar` configuration option}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableToolbar extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ WidgetToolbarRepository ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableToolbar';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tafterInit() {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst widgetToolbarRepository = editor.plugins.get( WidgetToolbarRepository );\n\n\t\tconst tableContentToolbarItems = editor.config.get( 'table.contentToolbar' );\n\n\t\tconst tableToolbarItems = editor.config.get( 'table.tableToolbar' );\n\n\t\tif ( tableContentToolbarItems ) {\n\t\t\twidgetToolbarRepository.register( 'tableContent', {\n\t\t\t\tariaLabel: t( 'Table toolbar' ),\n\t\t\t\titems: tableContentToolbarItems,\n\t\t\t\tgetRelatedElement: getTableWidgetAncestor\n\t\t\t} );\n\t\t}\n\n\t\tif ( tableToolbarItems ) {\n\t\t\twidgetToolbarRepository.register( 'table', {\n\t\t\t\tariaLabel: t( 'Table toolbar' ),\n\t\t\t\titems: tableToolbarItems,\n\t\t\t\tgetRelatedElement: getSelectedTableWidget\n\t\t\t} );\n\t\t}\n\t}\n}\n\n/**\n * Items to be placed in the table content toolbar.\n * The {@link module:table/tabletoolbar~TableToolbar} plugin is required to make this toolbar work.\n *\n * Assuming that you use the {@link module:table/tableui~TableUI} feature, the following toolbar items will be available\n * in {@link module:ui/componentfactory~ComponentFactory}:\n *\n * * `'tableRow'`,\n * * `'tableColumn'`,\n * * `'mergeTableCells'`.\n *\n * You can thus configure the toolbar like this:\n *\n *\t\tconst tableConfig = {\n *\t\t\tcontentToolbar: [ 'tableRow', 'tableColumn', 'mergeTableCells' ]\n *\t\t};\n *\n * Of course, the same buttons can also be used in the\n * {@link module:core/editor/editorconfig~EditorConfig#toolbar main editor toolbar}.\n *\n * Read more about configuring the toolbar in {@link module:core/editor/editorconfig~EditorConfig#toolbar}.\n *\n * @member {Array.<String>} module:table/table~TableConfig#contentToolbar\n */\n\n/**\n * Items to be placed in the table toolbar.\n * The {@link module:table/tabletoolbar~TableToolbar} plugin is required to make this toolbar work.\n *\n * You can thus configure the toolbar like this:\n *\n *\t\tconst tableConfig = {\n *\t\t\ttableToolbar: [ 'blockQuote' ]\n *\t\t};\n *\n * Of course, the same buttons can also be used in the\n * {@link module:core/editor/editorconfig~EditorConfig#toolbar main editor toolbar}.\n *\n * Read more about configuring the toolbar in {@link module:core/editor/editorconfig~EditorConfig#toolbar}.\n *\n * @member {Array.<String>} module:table/table~TableConfig#tableToolbar\n */\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableui\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { addListToDropdown, createDropdown, Model, SplitButtonView, SwitchButtonView } from 'ckeditor5/src/ui';\nimport { Collection } from 'ckeditor5/src/utils';\n\nimport InsertTableView from './ui/inserttableview';\n\nimport tableIcon from './../theme/icons/table.svg';\nimport tableColumnIcon from './../theme/icons/table-column.svg';\nimport tableRowIcon from './../theme/icons/table-row.svg';\nimport tableMergeCellIcon from './../theme/icons/table-merge-cell.svg';\n\n/**\n * The table UI plugin. It introduces:\n *\n * * The `'insertTable'` dropdown,\n * * The `'tableColumn'` dropdown,\n * * The `'tableRow'` dropdown,\n * * The `'mergeTableCells'` split button.\n *\n * The `'tableColumn'`, `'tableRow'` and `'mergeTableCells'` dropdowns work best with {@link module:table/tabletoolbar~TableToolbar}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst t = this.editor.t;\n\t\tconst contentLanguageDirection = editor.locale.contentLanguageDirection;\n\t\tconst isContentLtr = contentLanguageDirection === 'ltr';\n\n\t\teditor.ui.componentFactory.add( 'insertTable', locale => {\n\t\t\tconst command = editor.commands.get( 'insertTable' );\n\t\t\tconst dropdownView = createDropdown( locale );\n\n\t\t\tdropdownView.bind( 'isEnabled' ).to( command );\n\n\t\t\t// Decorate dropdown's button.\n\t\t\tdropdownView.buttonView.set( {\n\t\t\t\ticon: tableIcon,\n\t\t\t\tlabel: t( 'Insert table' ),\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tlet insertTableView;\n\n\t\t\tdropdownView.on( 'change:isOpen', () => {\n\t\t\t\tif ( insertTableView ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prepare custom view for dropdown's panel.\n\t\t\t\tinsertTableView = new InsertTableView( locale );\n\t\t\t\tdropdownView.panelView.children.add( insertTableView );\n\n\t\t\t\tinsertTableView.delegate( 'execute' ).to( dropdownView );\n\n\t\t\t\tdropdownView.on( 'execute', () => {\n\t\t\t\t\teditor.execute( 'insertTable', { rows: insertTableView.rows, columns: insertTableView.columns } );\n\t\t\t\t\teditor.editing.view.focus();\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\treturn dropdownView;\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'tableColumn', locale => {\n\t\t\tconst options = [\n\t\t\t\t{\n\t\t\t\t\ttype: 'switchbutton',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: 'setTableColumnHeader',\n\t\t\t\t\t\tlabel: t( 'Header column' ),\n\t\t\t\t\t\tbindIsOn: true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ type: 'separator' },\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: isContentLtr ? 'insertTableColumnLeft' : 'insertTableColumnRight',\n\t\t\t\t\t\tlabel: t( 'Insert column left' )\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: isContentLtr ? 'insertTableColumnRight' : 'insertTableColumnLeft',\n\t\t\t\t\t\tlabel: t( 'Insert column right' )\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: 'removeTableColumn',\n\t\t\t\t\t\tlabel: t( 'Delete column' )\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: 'selectTableColumn',\n\t\t\t\t\t\tlabel: t( 'Select column' )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t];\n\n\t\t\treturn this._prepareDropdown( t( 'Column' ), tableColumnIcon, options, locale );\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'tableRow', locale => {\n\t\t\tconst options = [\n\t\t\t\t{\n\t\t\t\t\ttype: 'switchbutton',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: 'setTableRowHeader',\n\t\t\t\t\t\tlabel: t( 'Header row' ),\n\t\t\t\t\t\tbindIsOn: true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ type: 'separator' },\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: 'insertTableRowAbove',\n\t\t\t\t\t\tlabel: t( 'Insert row above' )\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: 'insertTableRowBelow',\n\t\t\t\t\t\tlabel: t( 'Insert row below' )\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: 'removeTableRow',\n\t\t\t\t\t\tlabel: t( 'Delete row' )\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: 'selectTableRow',\n\t\t\t\t\t\tlabel: t( 'Select row' )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t];\n\n\t\t\treturn this._prepareDropdown( t( 'Row' ), tableRowIcon, options, locale );\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'mergeTableCells', locale => {\n\t\t\tconst options = [\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: 'mergeTableCellUp',\n\t\t\t\t\t\tlabel: t( 'Merge cell up' )\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: isContentLtr ? 'mergeTableCellRight' : 'mergeTableCellLeft',\n\t\t\t\t\t\tlabel: t( 'Merge cell right' )\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: 'mergeTableCellDown',\n\t\t\t\t\t\tlabel: t( 'Merge cell down' )\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: isContentLtr ? 'mergeTableCellLeft' : 'mergeTableCellRight',\n\t\t\t\t\t\tlabel: t( 'Merge cell left' )\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{ type: 'separator' },\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: 'splitTableCellVertically',\n\t\t\t\t\t\tlabel: t( 'Split cell vertically' )\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'button',\n\t\t\t\t\tmodel: {\n\t\t\t\t\t\tcommandName: 'splitTableCellHorizontally',\n\t\t\t\t\t\tlabel: t( 'Split cell horizontally' )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t];\n\n\t\t\treturn this._prepareMergeSplitButtonDropdown( t( 'Merge cells' ), tableMergeCellIcon, options, locale );\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a dropdown view from a set of options.\n\t *\n\t * @private\n\t * @param {String} label The dropdown button label.\n\t * @param {String} icon An icon for the dropdown button.\n\t * @param {Array.<module:ui/dropdown/utils~ListDropdownItemDefinition>} options The list of options for the dropdown.\n\t * @param {module:utils/locale~Locale} locale\n\t * @returns {module:ui/dropdown/dropdownview~DropdownView}\n\t */\n\t_prepareDropdown( label, icon, options, locale ) {\n\t\tconst editor = this.editor;\n\t\tconst dropdownView = createDropdown( locale );\n\t\tconst commands = this._fillDropdownWithListOptions( dropdownView, options );\n\n\t\t// Decorate dropdown's button.\n\t\tdropdownView.buttonView.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\t// Make dropdown button disabled when all options are disabled.\n\t\tdropdownView.bind( 'isEnabled' ).toMany( commands, 'isEnabled', ( ...areEnabled ) => {\n\t\t\treturn areEnabled.some( isEnabled => isEnabled );\n\t\t} );\n\n\t\tthis.listenTo( dropdownView, 'execute', evt => {\n\t\t\teditor.execute( evt.source.commandName );\n\n\t\t\t// Toggling a switch button view should not move the focus to the editable.\n\t\t\tif ( !( evt.source instanceof SwitchButtonView ) ) {\n\t\t\t\teditor.editing.view.focus();\n\t\t\t}\n\t\t} );\n\n\t\treturn dropdownView;\n\t}\n\n\t/**\n\t * Creates a dropdown view with a {@link module:ui/dropdown/button/splitbuttonview~SplitButtonView} for\n\t * merge (and split)–related commands.\n\t *\n\t * @private\n\t * @param {String} label The dropdown button label.\n\t * @param {String} icon An icon for the dropdown button.\n\t * @param {Array.<module:ui/dropdown/utils~ListDropdownItemDefinition>} options The list of options for the dropdown.\n\t * @param {module:utils/locale~Locale} locale\n\t * @returns {module:ui/dropdown/dropdownview~DropdownView}\n\t */\n\t_prepareMergeSplitButtonDropdown( label, icon, options, locale ) {\n\t\tconst editor = this.editor;\n\t\tconst dropdownView = createDropdown( locale, SplitButtonView );\n\t\tconst mergeCommandName = 'mergeTableCells';\n\n\t\t// Main command.\n\t\tconst mergeCommand = editor.commands.get( mergeCommandName );\n\n\t\t// Subcommands in the dropdown.\n\t\tconst commands = this._fillDropdownWithListOptions( dropdownView, options );\n\n\t\tdropdownView.buttonView.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true,\n\t\t\tisEnabled: true\n\t\t} );\n\n\t\t// Make dropdown button disabled when all options are disabled together with the main command.\n\t\tdropdownView.bind( 'isEnabled' ).toMany( [ mergeCommand, ...commands ], 'isEnabled', ( ...areEnabled ) => {\n\t\t\treturn areEnabled.some( isEnabled => isEnabled );\n\t\t} );\n\n\t\t// Merge selected table cells when the main part of the split button is clicked.\n\t\tthis.listenTo( dropdownView.buttonView, 'execute', () => {\n\t\t\teditor.execute( mergeCommandName );\n\t\t\teditor.editing.view.focus();\n\t\t} );\n\n\t\t// Execute commands for events coming from the list in the dropdown panel.\n\t\tthis.listenTo( dropdownView, 'execute', evt => {\n\t\t\teditor.execute( evt.source.commandName );\n\t\t\teditor.editing.view.focus();\n\t\t} );\n\n\t\treturn dropdownView;\n\t}\n\n\t/**\n\t * Injects a {@link module:ui/list/listview~ListView} into the passed dropdown with buttons\n\t * which execute editor commands as configured in passed options.\n\t *\n\t * @private\n\t * @param {module:ui/dropdown/dropdownview~DropdownView} dropdownView\n\t * @param {Array.<module:ui/dropdown/utils~ListDropdownItemDefinition>} options The list of options for the dropdown.\n\t * @returns {Array.<module:core/command~Command>} Commands the list options are interacting with.\n\t */\n\t_fillDropdownWithListOptions( dropdownView, options ) {\n\t\tconst editor = this.editor;\n\t\tconst commands = [];\n\t\tconst itemDefinitions = new Collection();\n\n\t\tfor ( const option of options ) {\n\t\t\taddListOption( option, editor, commands, itemDefinitions );\n\t\t}\n\n\t\taddListToDropdown( dropdownView, itemDefinitions, editor.ui.componentFactory );\n\n\t\treturn commands;\n\t}\n}\n\n// Adds an option to a list view.\n//\n// @param {module:table/tableui~DropdownOption} option A configuration option.\n// @param {module:core/editor/editor~Editor} editor\n// @param {Array.<module:core/command~Command>} commands The list of commands to update.\n// @param {Iterable.<module:ui/dropdown/utils~ListDropdownItemDefinition>} itemDefinitions\n// A collection of dropdown items to update with the given option.\nfunction addListOption( option, editor, commands, itemDefinitions ) {\n\tconst model = option.model = new Model( option.model );\n\tconst { commandName, bindIsOn } = option.model;\n\n\tif ( option.type === 'button' || option.type === 'switchbutton' ) {\n\t\tconst command = editor.commands.get( commandName );\n\n\t\tcommands.push( command );\n\n\t\tmodel.set( { commandName } );\n\n\t\tmodel.bind( 'isEnabled' ).to( command );\n\n\t\tif ( bindIsOn ) {\n\t\t\tmodel.bind( 'isOn' ).to( command, 'value' );\n\t\t}\n\t}\n\n\tmodel.set( {\n\t\twithText: true\n\t} );\n\n\titemDefinitions.add( option );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tableutils\n */\n\nimport { CKEditorError } from 'ckeditor5/src/utils';\nimport { Plugin } from 'ckeditor5/src/core';\n\nimport TableWalker from './tablewalker';\nimport { createEmptyTableCell, updateNumericAttribute } from './utils/common';\nimport { removeEmptyColumns, removeEmptyRows } from './utils/structure';\n\n/**\n * The table utilities plugin.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class TableUtils extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'TableUtils';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tthis.decorate( 'insertColumns' );\n\t\tthis.decorate( 'insertRows' );\n\t}\n\n\t/**\n\t * Returns the table cell location as an object with table row and table column indexes.\n\t *\n\t * For instance, in the table below:\n\t *\n\t *\t\t    0   1   2   3\n\t *\t\t  +---+---+---+---+\n\t *\t\t0 | a     | b | c |\n\t *\t\t  +       +   +---+\n\t *\t\t1 |       |   | d |\n\t *\t\t  +---+---+   +---+\n\t *\t\t2 | e     |   | f |\n\t *\t\t  +---+---+---+---+\n\t *\n\t * the method will return:\n\t *\n\t *\t\tconst cellA = table.getNodeByPath( [ 0, 0 ] );\n\t *\t\teditor.plugins.get( 'TableUtils' ).getCellLocation( cellA );\n\t *\t\t// will return { row: 0, column: 0 }\n\t *\n\t *\t\tconst cellD = table.getNodeByPath( [ 1, 0 ] );\n\t *\t\teditor.plugins.get( 'TableUtils' ).getCellLocation( cellD );\n\t *\t\t// will return { row: 1, column: 3 }\n\t *\n\t * @param {module:engine/model/element~Element} tableCell\n\t * @returns {Object} Returns a `{row, column}` object.\n\t */\n\tgetCellLocation( tableCell ) {\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\n\t\tconst rowIndex = table.getChildIndex( tableRow );\n\n\t\tconst tableWalker = new TableWalker( table, { row: rowIndex } );\n\n\t\tfor ( const { cell, row, column } of tableWalker ) {\n\t\t\tif ( cell === tableCell ) {\n\t\t\t\treturn { row, column };\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates an empty table with a proper structure. The table needs to be inserted into the model,\n\t * for example, by using the {@link module:engine/model/model~Model#insertContent} function.\n\t *\n\t *\t\tmodel.change( ( writer ) => {\n\t *\t\t\t// Create a table of 2 rows and 7 columns:\n\t *\t\t\tconst table = tableUtils.createTable( writer, { rows: 2, columns: 7 } );\n\t *\n\t *\t\t\t// Insert a table to the model at the best position taking the current selection:\n\t *\t\t\tmodel.insertContent( table );\n\t *\t\t}\n\t *\n\t * @param {module:engine/model/writer~Writer} writer The model writer.\n\t * @param {Object} options\n\t * @param {Number} [options.rows=2] The number of rows to create.\n\t * @param {Number} [options.columns=2] The number of columns to create.\n\t * @param {Number} [options.headingRows=0] The number of heading rows.\n\t * @param {Number} [options.headingColumns=0] The number of heading columns.\n\t * @returns {module:engine/model/element~Element} The created table element.\n\t */\n\tcreateTable( writer, options ) {\n\t\tconst table = writer.createElement( 'table' );\n\n\t\tconst rows = parseInt( options.rows ) || 2;\n\t\tconst columns = parseInt( options.columns ) || 2;\n\n\t\tcreateEmptyRows( writer, table, 0, rows, columns );\n\n\t\tif ( options.headingRows ) {\n\t\t\tupdateNumericAttribute( 'headingRows', Math.min( options.headingRows, rows ), table, writer, 0 );\n\t\t}\n\n\t\tif ( options.headingColumns ) {\n\t\t\tupdateNumericAttribute( 'headingColumns', Math.min( options.headingColumns, columns ), table, writer, 0 );\n\t\t}\n\n\t\treturn table;\n\t}\n\n\t/**\n\t * Inserts rows into a table.\n\t *\n\t *\t\teditor.plugins.get( 'TableUtils' ).insertRows( table, { at: 1, rows: 2 } );\n\t *\n\t * Assuming the table on the left, the above code will transform it to the table on the right:\n\t *\n\t *\t\trow index\n\t *\t\t  0 +---+---+---+       `at` = 1,      +---+---+---+ 0\n\t *\t\t    | a | b | c |       `rows` = 2,    | a | b | c |\n\t *\t\t  1 +   +---+---+   <-- insert here    +   +---+---+ 1\n\t *\t\t    |   | d | e |                      |   |   |   |\n\t *\t\t  2 +   +---+---+       will give:     +   +---+---+ 2\n\t *\t\t    |   | f | g |                      |   |   |   |\n\t *\t\t  3 +---+---+---+                      +   +---+---+ 3\n\t *\t\t                                       |   | d | e |\n\t *\t\t                                       +   +---+---+ 4\n\t *\t\t                                       +   + f | g |\n\t *\t\t                                       +---+---+---+ 5\n\t *\n\t * @param {module:engine/model/element~Element} table The table model element where the rows will be inserted.\n\t * @param {Object} options\n\t * @param {Number} [options.at=0] The row index at which the rows will be inserted.\n\t * @param {Number} [options.rows=1] The number of rows to insert.\n\t * @param {Boolean|undefined} [options.copyStructureFromAbove] The flag for copying row structure. Note that\n\t * the row structure will not be copied if this option is not provided.\n\t */\n\tinsertRows( table, options = {} ) {\n\t\tconst model = this.editor.model;\n\n\t\tconst insertAt = options.at || 0;\n\t\tconst rowsToInsert = options.rows || 1;\n\t\tconst isCopyStructure = options.copyStructureFromAbove !== undefined;\n\t\tconst copyStructureFrom = options.copyStructureFromAbove ? insertAt - 1 : insertAt;\n\n\t\tconst rows = this.getRows( table );\n\t\tconst columns = this.getColumns( table );\n\n\t\tif ( insertAt > rows ) {\n\t\t\t/**\n\t\t\t * The `options.at` points at a row position that does not exist.\n\t\t\t *\n\t\t\t * @error tableutils-insertrows-insert-out-of-range\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'tableutils-insertrows-insert-out-of-range',\n\t\t\t\tthis,\n\t\t\t\t{ options }\n\t\t\t);\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\tconst headingRows = table.getAttribute( 'headingRows' ) || 0;\n\n\t\t\t// Inserting rows inside heading section requires to update `headingRows` attribute as the heading section will grow.\n\t\t\tif ( headingRows > insertAt ) {\n\t\t\t\tupdateNumericAttribute( 'headingRows', headingRows + rowsToInsert, table, writer, 0 );\n\t\t\t}\n\n\t\t\t// Inserting at the end or at the beginning of a table doesn't require to calculate anything special.\n\t\t\tif ( !isCopyStructure && ( insertAt === 0 || insertAt === rows ) ) {\n\t\t\t\tcreateEmptyRows( writer, table, insertAt, rowsToInsert, columns );\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Iterate over all the rows above the inserted rows in order to check for the row-spanned cells.\n\t\t\tconst walkerEndRow = isCopyStructure ? Math.max( insertAt, copyStructureFrom ) : insertAt;\n\t\t\tconst tableIterator = new TableWalker( table, { endRow: walkerEndRow } );\n\n\t\t\t// Store spans of the reference row to reproduce it's structure. This array is column number indexed.\n\t\t\tconst rowColSpansMap = new Array( columns ).fill( 1 );\n\n\t\t\tfor ( const { row, column, cellHeight, cellWidth, cell } of tableIterator ) {\n\t\t\t\tconst lastCellRow = row + cellHeight - 1;\n\n\t\t\t\tconst isOverlappingInsertedRow = row < insertAt && insertAt <= lastCellRow;\n\t\t\t\tconst isReferenceRow = row <= copyStructureFrom && copyStructureFrom <= lastCellRow;\n\n\t\t\t\t// If the cell is row-spanned and overlaps the inserted row, then reserve space for it in the row map.\n\t\t\t\tif ( isOverlappingInsertedRow ) {\n\t\t\t\t\t// This cell overlaps the inserted rows so we need to expand it further.\n\t\t\t\t\twriter.setAttribute( 'rowspan', cellHeight + rowsToInsert, cell );\n\n\t\t\t\t\t// Mark this cell with negative number to indicate how many cells should be skipped when adding the new cells.\n\t\t\t\t\trowColSpansMap[ column ] = -cellWidth;\n\t\t\t\t}\n\t\t\t\t// Store the colspan from reference row.\n\t\t\t\telse if ( isCopyStructure && isReferenceRow ) {\n\t\t\t\t\trowColSpansMap[ column ] = cellWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( let rowIndex = 0; rowIndex < rowsToInsert; rowIndex++ ) {\n\t\t\t\tconst tableRow = writer.createElement( 'tableRow' );\n\n\t\t\t\twriter.insert( tableRow, table, insertAt );\n\n\t\t\t\tfor ( let cellIndex = 0; cellIndex < rowColSpansMap.length; cellIndex++ ) {\n\t\t\t\t\tconst colspan = rowColSpansMap[ cellIndex ];\n\t\t\t\t\tconst insertPosition = writer.createPositionAt( tableRow, 'end' );\n\n\t\t\t\t\t// Insert the empty cell only if this slot is not row-spanned from any other cell.\n\t\t\t\t\tif ( colspan > 0 ) {\n\t\t\t\t\t\tcreateEmptyTableCell( writer, insertPosition, colspan > 1 ? { colspan } : null );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Skip the col-spanned slots, there won't be any cells.\n\t\t\t\t\tcellIndex += Math.abs( colspan ) - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Inserts columns into a table.\n\t *\n\t *\t\teditor.plugins.get( 'TableUtils' ).insertColumns( table, { at: 1, columns: 2 } );\n\t *\n\t * Assuming the table on the left, the above code will transform it to the table on the right:\n\t *\n\t *\t\t0   1   2   3                   0   1   2   3   4   5\n\t *\t\t+---+---+---+                   +---+---+---+---+---+\n\t *\t\t| a     | b |                   | a             | b |\n\t *\t\t+       +---+                   +               +---+\n\t *\t\t|       | c |                   |               | c |\n\t *\t\t+---+---+---+     will give:    +---+---+---+---+---+\n\t *\t\t| d | e | f |                   | d |   |   | e | f |\n\t *\t\t+---+   +---+                   +---+---+---+   +---+\n\t *\t\t| g |   | h |                   | g |   |   |   | h |\n\t *\t\t+---+---+---+                   +---+---+---+---+---+\n\t *\t\t| i         |                   | i                 |\n\t *\t\t+---+---+---+                   +---+---+---+---+---+\n\t *\t\t    ^---- insert here, `at` = 1, `columns` = 2\n\t *\n\t * @param {module:engine/model/element~Element} table The table model element where the columns will be inserted.\n\t * @param {Object} options\n\t * @param {Number} [options.at=0] The column index at which the columns will be inserted.\n\t * @param {Number} [options.columns=1] The number of columns to insert.\n\t */\n\tinsertColumns( table, options = {} ) {\n\t\tconst model = this.editor.model;\n\n\t\tconst insertAt = options.at || 0;\n\t\tconst columnsToInsert = options.columns || 1;\n\n\t\tmodel.change( writer => {\n\t\t\tconst headingColumns = table.getAttribute( 'headingColumns' );\n\n\t\t\t// Inserting columns inside heading section requires to update `headingColumns` attribute as the heading section will grow.\n\t\t\tif ( insertAt < headingColumns ) {\n\t\t\t\twriter.setAttribute( 'headingColumns', headingColumns + columnsToInsert, table );\n\t\t\t}\n\n\t\t\tconst tableColumns = this.getColumns( table );\n\n\t\t\t// Inserting at the end and at the beginning of a table doesn't require to calculate anything special.\n\t\t\tif ( insertAt === 0 || tableColumns === insertAt ) {\n\t\t\t\tfor ( const tableRow of table.getChildren() ) {\n\t\t\t\t\t// Ignore non-row elements inside the table (e.g. caption).\n\t\t\t\t\tif ( !tableRow.is( 'element', 'tableRow' ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tcreateCells( columnsToInsert, writer, writer.createPositionAt( tableRow, insertAt ? 'end' : 0 ) );\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst tableWalker = new TableWalker( table, { column: insertAt, includeAllSlots: true } );\n\n\t\t\tfor ( const tableSlot of tableWalker ) {\n\t\t\t\tconst { row, cell, cellAnchorColumn, cellAnchorRow, cellWidth, cellHeight } = tableSlot;\n\n\t\t\t\t// When iterating over column the table walker outputs either:\n\t\t\t\t// - cells at given column index (cell \"e\" from method docs),\n\t\t\t\t// - spanned columns (spanned cell from row between cells \"g\" and \"h\" - spanned by \"e\", only if `includeAllSlots: true`),\n\t\t\t\t// - or a cell from the same row which spans over this column (cell \"a\").\n\n\t\t\t\tif ( cellAnchorColumn < insertAt ) {\n\t\t\t\t\t// If cell is anchored in previous column, it is a cell that spans over an inserted column (cell \"a\" & \"i\").\n\t\t\t\t\t// For such cells expand them by a number of columns inserted.\n\t\t\t\t\twriter.setAttribute( 'colspan', cellWidth + columnsToInsert, cell );\n\n\t\t\t\t\t// This cell will overlap cells in rows below so skip them (because of `includeAllSlots` option) - (cell \"a\")\n\t\t\t\t\tconst lastCellRow = cellAnchorRow + cellHeight - 1;\n\n\t\t\t\t\tfor ( let i = row; i <= lastCellRow; i++ ) {\n\t\t\t\t\t\ttableWalker.skipRow( i );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// It's either cell at this column index or spanned cell by a row-spanned cell from row above.\n\t\t\t\t\t// In table above it's cell \"e\" and a spanned position from row below (empty cell between cells \"g\" and \"h\")\n\t\t\t\t\tcreateCells( columnsToInsert, writer, tableSlot.getPositionBefore() );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Removes rows from the given `table`.\n\t *\n\t * This method re-calculates the table geometry including `rowspan` attribute of table cells overlapping removed rows\n\t * and table headings values.\n\t *\n\t *\t\teditor.plugins.get( 'TableUtils' ).removeRows( table, { at: 1, rows: 2 } );\n\t *\n\t * Executing the above code in the context of the table on the left will transform its structure as presented on the right:\n\t *\n\t *\t\trow index\n\t *\t\t    ┌───┬───┬───┐        `at` = 1        ┌───┬───┬───┐\n\t *\t\t  0 │ a │ b │ c │        `rows` = 2      │ a │ b │ c │ 0\n\t *\t\t    │   ├───┼───┤                        │   ├───┼───┤\n\t *\t\t  1 │   │ d │ e │  <-- remove from here  │   │ d │ g │ 1\n\t *\t\t    │   │   ├───┤        will give:      ├───┼───┼───┤\n\t *\t\t  2 │   │   │ f │                        │ h │ i │ j │ 2\n\t *\t\t    │   │   ├───┤                        └───┴───┴───┘\n\t *\t\t  3 │   │   │ g │\n\t *\t\t    ├───┼───┼───┤\n\t *\t\t  4 │ h │ i │ j │\n\t *\t\t    └───┴───┴───┘\n\t *\n\t * @param {module:engine/model/element~Element} table\n\t * @param {Object} options\n\t * @param {Number} options.at The row index at which the removing rows will start.\n\t * @param {Number} [options.rows=1] The number of rows to remove.\n\t */\n\tremoveRows( table, options ) {\n\t\tconst model = this.editor.model;\n\n\t\tconst rowsToRemove = options.rows || 1;\n\t\tconst rowCount = this.getRows( table );\n\t\tconst first = options.at;\n\t\tconst last = first + rowsToRemove - 1;\n\n\t\tif ( last > rowCount - 1 ) {\n\t\t\t/**\n\t\t\t * The `options.at` param must point at existing row and `options.rows` must not exceed the rows in the table.\n\t\t\t *\n\t\t\t * @error tableutils-removerows-row-index-out-of-range\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'tableutils-removerows-row-index-out-of-range',\n\t\t\t\tthis,\n\t\t\t\t{ table, options }\n\t\t\t);\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\t// Removing rows from the table require that most calculations to be done prior to changing table structure.\n\t\t\t// Preparations must be done in the same enqueueChange callback to use the current table structure.\n\n\t\t\t// 1. Preparation - get row-spanned cells that have to be modified after removing rows.\n\t\t\tconst { cellsToMove, cellsToTrim } = getCellsToMoveAndTrimOnRemoveRow( table, first, last );\n\n\t\t\t// 2. Execution\n\n\t\t\t// 2a. Move cells from removed rows that extends over a removed section - must be done before removing rows.\n\t\t\t// This will fill any gaps in a rows below that previously were empty because of row-spanned cells.\n\t\t\tif ( cellsToMove.size ) {\n\t\t\t\tconst rowAfterRemovedSection = last + 1;\n\t\t\t\tmoveCellsToRow( table, rowAfterRemovedSection, cellsToMove, writer );\n\t\t\t}\n\n\t\t\t// 2b. Remove all required rows.\n\t\t\tfor ( let i = last; i >= first; i-- ) {\n\t\t\t\twriter.remove( table.getChild( i ) );\n\t\t\t}\n\n\t\t\t// 2c. Update cells from rows above that overlap removed section. Similar to step 2 but does not involve moving cells.\n\t\t\tfor ( const { rowspan, cell } of cellsToTrim ) {\n\t\t\t\tupdateNumericAttribute( 'rowspan', rowspan, cell, writer );\n\t\t\t}\n\n\t\t\t// 2d. Adjust heading rows if removed rows were in a heading section.\n\t\t\tupdateHeadingRows( table, first, last, writer );\n\n\t\t\t// 2e. Remove empty columns (without anchored cells) if there are any.\n\t\t\tif ( !removeEmptyColumns( table, this ) ) {\n\t\t\t\t// If there wasn't any empty columns then we still need to check if this wasn't called\n\t\t\t\t// because of cleaning empty rows and we only removed one of them.\n\t\t\t\tremoveEmptyRows( table, this );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Removes columns from the given `table`.\n\t *\n\t * This method re-calculates the table geometry including the `colspan` attribute of table cells overlapping removed columns\n\t * and table headings values.\n\t *\n\t *\t\teditor.plugins.get( 'TableUtils' ).removeColumns( table, { at: 1, columns: 2 } );\n\t *\n\t * Executing the above code in the context of the table on the left will transform its structure as presented on the right:\n\t *\n\t *\t\t  0   1   2   3   4                       0   1   2\n\t *\t\t┌───────────────┬───┐                   ┌───────┬───┐\n\t *\t\t│ a             │ b │                   │ a     │ b │\n\t *\t\t│               ├───┤                   │       ├───┤\n\t *\t\t│               │ c │                   │       │ c │\n\t *\t\t├───┬───┬───┬───┼───┤     will give:    ├───┬───┼───┤\n\t *\t\t│ d │ e │ f │ g │ h │                   │ d │ g │ h │\n\t *\t\t├───┼───┼───┤   ├───┤                   ├───┤   ├───┤\n\t *\t\t│ i │ j │ k │   │ l │                   │ i │   │ l │\n\t *\t\t├───┴───┴───┴───┴───┤                   ├───┴───┴───┤\n\t *\t\t│ m                 │                   │ m         │\n\t *\t\t└───────────────────┘                   └───────────┘\n\t *\t\t      ^---- remove from here, `at` = 1, `columns` = 2\n\t *\n\t * @param {module:engine/model/element~Element} table\n\t * @param {Object} options\n\t * @param {Number} options.at The row index at which the removing columns will start.\n\t * @param {Number} [options.columns=1] The number of columns to remove.\n\t */\n\tremoveColumns( table, options ) {\n\t\tconst model = this.editor.model;\n\t\tconst first = options.at;\n\t\tconst columnsToRemove = options.columns || 1;\n\t\tconst last = options.at + columnsToRemove - 1;\n\n\t\tmodel.change( writer => {\n\t\t\tadjustHeadingColumns( table, { first, last }, writer );\n\n\t\t\tfor ( let removedColumnIndex = last; removedColumnIndex >= first; removedColumnIndex-- ) {\n\t\t\t\tfor ( const { cell, column, cellWidth } of [ ...new TableWalker( table ) ] ) {\n\t\t\t\t\t// If colspaned cell overlaps removed column decrease its span.\n\t\t\t\t\tif ( column <= removedColumnIndex && cellWidth > 1 && column + cellWidth > removedColumnIndex ) {\n\t\t\t\t\t\tupdateNumericAttribute( 'colspan', cellWidth - 1, cell, writer );\n\t\t\t\t\t} else if ( column === removedColumnIndex ) {\n\t\t\t\t\t\t// The cell in removed column has colspan of 1.\n\t\t\t\t\t\twriter.remove( cell );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove empty rows that could appear after removing columns.\n\t\t\tif ( !removeEmptyRows( table, this ) ) {\n\t\t\t\t// If there wasn't any empty rows then we still need to check if this wasn't called\n\t\t\t\t// because of cleaning empty columns and we only removed one of them.\n\t\t\t\tremoveEmptyColumns( table, this );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Divides a table cell vertically into several ones.\n\t *\n\t * The cell will be visually split into more cells by updating colspans of other cells in a column\n\t * and inserting cells (columns) after that cell.\n\t *\n\t * In the table below, if cell \"a\" is split into 3 cells:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a | b | c |\n\t *\t\t+---+---+---+\n\t *\t\t| d | e | f |\n\t *\t\t+---+---+---+\n\t *\n\t * it will result in the table below:\n\t *\n\t *\t\t+---+---+---+---+---+\n\t *\t\t| a |   |   | b | c |\n\t *\t\t+---+---+---+---+---+\n\t *\t\t| d         | e | f |\n\t *\t\t+---+---+---+---+---+\n\t *\n\t * So cell \"d\" will get its `colspan` updated to `3` and 2 cells will be added (2 columns will be created).\n\t *\n\t * Splitting a cell that already has a `colspan` attribute set will distribute the cell `colspan` evenly and the remainder\n\t * will be left to the original cell:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a         |\n\t *\t\t+---+---+---+\n\t *\t\t| b | c | d |\n\t *\t\t+---+---+---+\n\t *\n\t * Splitting cell \"a\" with `colspan=3` into 2 cells will create 1 cell with a `colspan=a` and cell \"a\" that will have `colspan=2`:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a     |   |\n\t *\t\t+---+---+---+\n\t *\t\t| b | c | d |\n\t *\t\t+---+---+---+\n\t *\n\t * @param {module:engine/model/element~Element} tableCell\n\t * @param {Number} numberOfCells\n\t */\n\tsplitCellVertically( tableCell, numberOfCells = 2 ) {\n\t\tconst model = this.editor.model;\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\n\t\tconst rowspan = parseInt( tableCell.getAttribute( 'rowspan' ) || 1 );\n\t\tconst colspan = parseInt( tableCell.getAttribute( 'colspan' ) || 1 );\n\n\t\tmodel.change( writer => {\n\t\t\t// First check - the cell spans over multiple rows so before doing anything else just split this cell.\n\t\t\tif ( colspan > 1 ) {\n\t\t\t\t// Get spans of new (inserted) cells and span to update of split cell.\n\t\t\t\tconst { newCellsSpan, updatedSpan } = breakSpanEvenly( colspan, numberOfCells );\n\n\t\t\t\tupdateNumericAttribute( 'colspan', updatedSpan, tableCell, writer );\n\n\t\t\t\t// Each inserted cell will have the same attributes:\n\t\t\t\tconst newCellsAttributes = {};\n\n\t\t\t\t// Do not store default value in the model.\n\t\t\t\tif ( newCellsSpan > 1 ) {\n\t\t\t\t\tnewCellsAttributes.colspan = newCellsSpan;\n\t\t\t\t}\n\n\t\t\t\t// Copy rowspan of split cell.\n\t\t\t\tif ( rowspan > 1 ) {\n\t\t\t\t\tnewCellsAttributes.rowspan = rowspan;\n\t\t\t\t}\n\n\t\t\t\tconst cellsToInsert = colspan > numberOfCells ? numberOfCells - 1 : colspan - 1;\n\t\t\t\tcreateCells( cellsToInsert, writer, writer.createPositionAfter( tableCell ), newCellsAttributes );\n\t\t\t}\n\n\t\t\t// Second check - the cell has colspan of 1 or we need to create more cells then the currently one spans over.\n\t\t\tif ( colspan < numberOfCells ) {\n\t\t\t\tconst cellsToInsert = numberOfCells - colspan;\n\n\t\t\t\t// First step: expand cells on the same column as split cell.\n\t\t\t\tconst tableMap = [ ...new TableWalker( table ) ];\n\n\t\t\t\t// Get the column index of split cell.\n\t\t\t\tconst { column: splitCellColumn } = tableMap.find( ( { cell } ) => cell === tableCell );\n\n\t\t\t\t// Find cells which needs to be expanded vertically - those on the same column or those that spans over split cell's column.\n\t\t\t\tconst cellsToUpdate = tableMap.filter( ( { cell, cellWidth, column } ) => {\n\t\t\t\t\tconst isOnSameColumn = cell !== tableCell && column === splitCellColumn;\n\t\t\t\t\tconst spansOverColumn = ( column < splitCellColumn && column + cellWidth > splitCellColumn );\n\n\t\t\t\t\treturn isOnSameColumn || spansOverColumn;\n\t\t\t\t} );\n\n\t\t\t\t// Expand cells vertically.\n\t\t\t\tfor ( const { cell, cellWidth } of cellsToUpdate ) {\n\t\t\t\t\twriter.setAttribute( 'colspan', cellWidth + cellsToInsert, cell );\n\t\t\t\t}\n\n\t\t\t\t// Second step: create columns after split cell.\n\n\t\t\t\t// Each inserted cell will have the same attributes:\n\t\t\t\tconst newCellsAttributes = {};\n\n\t\t\t\t// Do not store default value in the model.\n\n\t\t\t\t// Copy rowspan of split cell.\n\t\t\t\tif ( rowspan > 1 ) {\n\t\t\t\t\tnewCellsAttributes.rowspan = rowspan;\n\t\t\t\t}\n\n\t\t\t\tcreateCells( cellsToInsert, writer, writer.createPositionAfter( tableCell ), newCellsAttributes );\n\n\t\t\t\tconst headingColumns = table.getAttribute( 'headingColumns' ) || 0;\n\n\t\t\t\t// Update heading section if split cell is in heading section.\n\t\t\t\tif ( headingColumns > splitCellColumn ) {\n\t\t\t\t\tupdateNumericAttribute( 'headingColumns', headingColumns + cellsToInsert, table, writer );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Divides a table cell horizontally into several ones.\n\t *\n\t * The cell will be visually split into more cells by updating rowspans of other cells in the row and inserting rows with a single cell\n\t * below.\n\t *\n\t * If in the table below cell \"b\" is split into 3 cells:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a | b | c |\n\t *\t\t+---+---+---+\n\t *\t\t| d | e | f |\n\t *\t\t+---+---+---+\n\t *\n\t * It will result in the table below:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a | b | c |\n\t *\t\t+   +---+   +\n\t *\t\t|   |   |   |\n\t *\t\t+   +---+   +\n\t *\t\t|   |   |   |\n\t *\t\t+---+---+---+\n\t *\t\t| d | e | f |\n\t *\t\t+---+---+---+\n\t *\n\t * So cells \"a\" and \"b\" will get their `rowspan` updated to `3` and 2 rows with a single cell will be added.\n\t *\n\t * Splitting a cell that already has a `rowspan` attribute set will distribute the cell `rowspan` evenly and the remainder\n\t * will be left to the original cell:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a | b | c |\n\t *\t\t+   +---+---+\n\t *\t\t|   | d | e |\n\t *\t\t+   +---+---+\n\t *\t\t|   | f | g |\n\t *\t\t+   +---+---+\n\t *\t\t|   | h | i |\n\t *\t\t+---+---+---+\n\t *\n\t * Splitting cell \"a\" with `rowspan=4` into 3 cells will create 2 cells with a `rowspan=1` and cell \"a\" will have `rowspan=2`:\n\t *\n\t *\t\t+---+---+---+\n\t *\t\t| a | b | c |\n\t *\t\t+   +---+---+\n\t *\t\t|   | d | e |\n\t *\t\t+---+---+---+\n\t *\t\t|   | f | g |\n\t *\t\t+---+---+---+\n\t *\t\t|   | h | i |\n\t *\t\t+---+---+---+\n\t *\n\t * @param {module:engine/model/element~Element} tableCell\n\t * @param {Number} numberOfCells\n\t */\n\tsplitCellHorizontally( tableCell, numberOfCells = 2 ) {\n\t\tconst model = this.editor.model;\n\n\t\tconst tableRow = tableCell.parent;\n\t\tconst table = tableRow.parent;\n\t\tconst splitCellRow = table.getChildIndex( tableRow );\n\n\t\tconst rowspan = parseInt( tableCell.getAttribute( 'rowspan' ) || 1 );\n\t\tconst colspan = parseInt( tableCell.getAttribute( 'colspan' ) || 1 );\n\n\t\tmodel.change( writer => {\n\t\t\t// First check - the cell spans over multiple rows so before doing anything else just split this cell.\n\t\t\tif ( rowspan > 1 ) {\n\t\t\t\t// Cache table map before updating table.\n\t\t\t\tconst tableMap = [ ...new TableWalker( table, {\n\t\t\t\t\tstartRow: splitCellRow,\n\t\t\t\t\tendRow: splitCellRow + rowspan - 1,\n\t\t\t\t\tincludeAllSlots: true\n\t\t\t\t} ) ];\n\n\t\t\t\t// Get spans of new (inserted) cells and span to update of split cell.\n\t\t\t\tconst { newCellsSpan, updatedSpan } = breakSpanEvenly( rowspan, numberOfCells );\n\n\t\t\t\tupdateNumericAttribute( 'rowspan', updatedSpan, tableCell, writer );\n\n\t\t\t\tconst { column: cellColumn } = tableMap.find( ( { cell } ) => cell === tableCell );\n\n\t\t\t\t// Each inserted cell will have the same attributes:\n\t\t\t\tconst newCellsAttributes = {};\n\n\t\t\t\t// Do not store default value in the model.\n\t\t\t\tif ( newCellsSpan > 1 ) {\n\t\t\t\t\tnewCellsAttributes.rowspan = newCellsSpan;\n\t\t\t\t}\n\n\t\t\t\t// Copy colspan of split cell.\n\t\t\t\tif ( colspan > 1 ) {\n\t\t\t\t\tnewCellsAttributes.colspan = colspan;\n\t\t\t\t}\n\n\t\t\t\tfor ( const tableSlot of tableMap ) {\n\t\t\t\t\tconst { column, row } = tableSlot;\n\n\t\t\t\t\t// As both newly created cells and the split cell might have rowspan,\n\t\t\t\t\t// the insertion of new cells must go to appropriate rows:\n\t\t\t\t\t//\n\t\t\t\t\t// 1. It's a row after split cell + it's height.\n\t\t\t\t\tconst isAfterSplitCell = row >= splitCellRow + updatedSpan;\n\t\t\t\t\t// 2. Is on the same column.\n\t\t\t\t\tconst isOnSameColumn = column === cellColumn;\n\t\t\t\t\t// 3. And it's row index is after previous cell height.\n\t\t\t\t\tconst isInEvenlySplitRow = ( row + splitCellRow + updatedSpan ) % newCellsSpan === 0;\n\n\t\t\t\t\tif ( isAfterSplitCell && isOnSameColumn && isInEvenlySplitRow ) {\n\t\t\t\t\t\tcreateCells( 1, writer, tableSlot.getPositionBefore(), newCellsAttributes );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Second check - the cell has rowspan of 1 or we need to create more cells than the current cell spans over.\n\t\t\tif ( rowspan < numberOfCells ) {\n\t\t\t\t// We already split the cell in check one so here we split to the remaining number of cells only.\n\t\t\t\tconst cellsToInsert = numberOfCells - rowspan;\n\n\t\t\t\t// This check is needed since we need to check if there are any cells from previous rows than spans over this cell's row.\n\t\t\t\tconst tableMap = [ ...new TableWalker( table, { startRow: 0, endRow: splitCellRow } ) ];\n\n\t\t\t\t// First step: expand cells.\n\t\t\t\tfor ( const { cell, cellHeight, row } of tableMap ) {\n\t\t\t\t\t// Expand rowspan of cells that are either:\n\t\t\t\t\t// - on the same row as current cell,\n\t\t\t\t\t// - or are below split cell row and overlaps that row.\n\t\t\t\t\tif ( cell !== tableCell && row + cellHeight > splitCellRow ) {\n\t\t\t\t\t\tconst rowspanToSet = cellHeight + cellsToInsert;\n\n\t\t\t\t\t\twriter.setAttribute( 'rowspan', rowspanToSet, cell );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Second step: create rows with single cell below split cell.\n\t\t\t\tconst newCellsAttributes = {};\n\n\t\t\t\t// Copy colspan of split cell.\n\t\t\t\tif ( colspan > 1 ) {\n\t\t\t\t\tnewCellsAttributes.colspan = colspan;\n\t\t\t\t}\n\n\t\t\t\tcreateEmptyRows( writer, table, splitCellRow + 1, cellsToInsert, 1, newCellsAttributes );\n\n\t\t\t\t// Update heading section if split cell is in heading section.\n\t\t\t\tconst headingRows = table.getAttribute( 'headingRows' ) || 0;\n\n\t\t\t\tif ( headingRows > splitCellRow ) {\n\t\t\t\t\tupdateNumericAttribute( 'headingRows', headingRows + cellsToInsert, table, writer );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns the number of columns for a given table.\n\t *\n\t *\t\teditor.plugins.get( 'TableUtils' ).getColumns( table );\n\t *\n\t * @param {module:engine/model/element~Element} table The table to analyze.\n\t * @returns {Number}\n\t */\n\tgetColumns( table ) {\n\t\t// Analyze first row only as all the rows should have the same width.\n\t\t// Using the first row without checking if it's a tableRow because we expect\n\t\t// that table will have only tableRow model elements at the beginning.\n\t\tconst row = table.getChild( 0 );\n\n\t\treturn [ ...row.getChildren() ].reduce( ( columns, row ) => {\n\t\t\tconst columnWidth = parseInt( row.getAttribute( 'colspan' ) || 1 );\n\n\t\t\treturn columns + columnWidth;\n\t\t}, 0 );\n\t}\n\n\t/**\n\t * Returns the number of rows for a given table. Any other element present in the table model is omitted.\n\t *\n\t *\t\teditor.plugins.get( 'TableUtils' ).getRows( table );\n\t *\n\t * @param {module:engine/model/element~Element} table The table to analyze.\n\t * @returns {Number}\n\t */\n\tgetRows( table ) {\n\t\t// Rowspan not included due to #6427.\n\t\treturn Array.from( table.getChildren() )\n\t\t\t.reduce( ( rowCount, child ) => child.is( 'element', 'tableRow' ) ? rowCount + 1 : rowCount, 0 );\n\t}\n\n\t/**\n\t * Creates an instance of the table walker.\n\t *\n\t * The table walker iterates internally by traversing the table from row index = 0 and column index = 0.\n\t * It walks row by row and column by column in order to output values defined in the options.\n\t * By default it will output only the locations that are occupied by a cell. To include also spanned rows and columns,\n\t * pass the `includeAllSlots` option.\n\t *\n\t * @protected\n\t * @param {module:engine/model/element~Element} table A table over which the walker iterates.\n\t * @param {Object} [options={}] An object with configuration.\n\t * @param {Number} [options.row] A row index for which this iterator will output cells.\n\t * Can't be used together with `startRow` and `endRow`.\n\t * @param {Number} [options.startRow=0] A row index from which this iterator should start. Can't be used together with `row`.\n\t * @param {Number} [options.endRow] A row index at which this iterator should end. Can't be used together with `row`.\n\t * @param {Number} [options.column] A column index for which this iterator will output cells.\n\t * Can't be used together with `startColumn` and `endColumn`.\n\t * @param {Number} [options.startColumn=0] A column index from which this iterator should start. Can't be used together with `column`.\n\t * @param {Number} [options.endColumn] A column index at which this iterator should end. Can't be used together with `column`.\n\t * @param {Boolean} [options.includeAllSlots=false] Also return values for spanned cells.\n\t */\n\tcreateTableWalker( table, options = {} ) {\n\t\treturn new TableWalker( table, options );\n\t}\n\n\t/**\n\t * Returns all model table cells that are fully selected (from the outside)\n\t * within the provided model selection's ranges.\n\t *\n\t * To obtain the cells selected from the inside, use\n\t * {@link #getTableCellsContainingSelection}.\n\t *\n\t * @param {module:engine/model/selection~Selection} selection\n\t * @returns {Array.<module:engine/model/element~Element>}\n\t */\n\tgetSelectedTableCells( selection ) {\n\t\tconst cells = [];\n\n\t\tfor ( const range of this.sortRanges( selection.getRanges() ) ) {\n\t\t\tconst element = range.getContainedElement();\n\n\t\t\tif ( element && element.is( 'element', 'tableCell' ) ) {\n\t\t\t\tcells.push( element );\n\t\t\t}\n\t\t}\n\n\t\treturn cells;\n\t}\n\n\t/**\n\t * Returns all model table cells that the provided model selection's ranges\n\t * {@link module:engine/model/range~Range#start} inside.\n\t *\n\t * To obtain the cells selected from the outside, use\n\t * {@link #getSelectedTableCells}.\n\t *\n\t * @param {module:engine/model/selection~Selection} selection\n\t * @returns {Array.<module:engine/model/element~Element>}\n\t */\n\tgetTableCellsContainingSelection( selection ) {\n\t\tconst cells = [];\n\n\t\tfor ( const range of selection.getRanges() ) {\n\t\t\tconst cellWithSelection = range.start.findAncestor( 'tableCell' );\n\n\t\t\tif ( cellWithSelection ) {\n\t\t\t\tcells.push( cellWithSelection );\n\t\t\t}\n\t\t}\n\n\t\treturn cells;\n\t}\n\n\t/**\n\t * Returns all model table cells that are either completely selected\n\t * by selection ranges or host selection range\n\t * {@link module:engine/model/range~Range#start start positions} inside them.\n\t *\n\t * Combines {@link #getTableCellsContainingSelection} and\n\t * {@link #getSelectedTableCells}.\n\t *\n\t * @param {module:engine/model/selection~Selection} selection\n\t * @returns {Array.<module:engine/model/element~Element>}\n\t */\n\tgetSelectionAffectedTableCells( selection ) {\n\t\tconst selectedCells = this.getSelectedTableCells( selection );\n\n\t\tif ( selectedCells.length ) {\n\t\t\treturn selectedCells;\n\t\t}\n\n\t\treturn this.getTableCellsContainingSelection( selection );\n\t}\n\n\t/**\n\t * Returns an object with the `first` and `last` row index contained in the given `tableCells`.\n\t *\n\t *\t\tconst selectedTableCells = getSelectedTableCells( editor.model.document.selection );\n\t*\n\t*\t\tconst { first, last } = getRowIndexes( selectedTableCells );\n\t*\n\t*\t\tconsole.log( `Selected rows: ${ first } to ${ last }` );\n\t*\n\t* @param {Array.<module:engine/model/element~Element>} tableCells\n\t* @returns {Object} Returns an object with the `first` and `last` table row indexes.\n\t*/\n\tgetRowIndexes( tableCells ) {\n\t\tconst indexes = tableCells.map( cell => cell.parent.index );\n\n\t\treturn this._getFirstLastIndexesObject( indexes );\n\t}\n\n\t/**\n\t * Returns an object with the `first` and `last` column index contained in the given `tableCells`.\n\t *\n\t *\t\tconst selectedTableCells = getSelectedTableCells( editor.model.document.selection );\n\t*\n\t*\t\tconst { first, last } = getColumnIndexes( selectedTableCells );\n\t*\n\t*\t\tconsole.log( `Selected columns: ${ first } to ${ last }` );\n\t*\n\t* @param {Array.<module:engine/model/element~Element>} tableCells\n\t* @returns {Object} Returns an object with the `first` and `last` table column indexes.\n\t*/\n\tgetColumnIndexes( tableCells ) {\n\t\tconst table = tableCells[ 0 ].findAncestor( 'table' );\n\t\tconst tableMap = [ ...new TableWalker( table ) ];\n\n\t\tconst indexes = tableMap\n\t\t\t.filter( entry => tableCells.includes( entry.cell ) )\n\t\t\t.map( entry => entry.column );\n\n\t\treturn this._getFirstLastIndexesObject( indexes );\n\t}\n\n\t/**\n\t * Checks if the selection contains cells that do not exceed rectangular selection.\n\t *\n\t * In a table below:\n\t *\n\t *\t\t┌───┬───┬───┬───┐\n\t*\t\t│ a │ b │ c │ d │\n\t*\t\t├───┴───┼───┤   │\n\t*\t\t│ e     │ f │   │\n\t*\t\t│       ├───┼───┤\n\t*\t\t│       │ g │ h │\n\t*\t\t└───────┴───┴───┘\n\t*\n\t* Valid selections are these which create a solid rectangle (without gaps), such as:\n\t*   - a, b (two horizontal cells)\n\t*   - c, f (two vertical cells)\n\t*   - a, b, e (cell \"e\" spans over four cells)\n\t*   - c, d, f (cell d spans over a cell in the row below)\n\t*\n\t* While an invalid selection would be:\n\t*   - a, c (the unselected cell \"b\" creates a gap)\n\t*   - f, g, h (cell \"d\" spans over a cell from the row of \"f\" cell - thus creates a gap)\n\t*\n\t* @param {Array.<module:engine/model/element~Element>} selectedTableCells\n\t* @returns {Boolean}\n\t*/\n\tisSelectionRectangular( selectedTableCells ) {\n\t\tif ( selectedTableCells.length < 2 || !this._areCellInTheSameTableSection( selectedTableCells ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// A valid selection is a fully occupied rectangle composed of table cells.\n\t\t// Below we will calculate the area of a selected table cells and the area of valid selection.\n\t\t// The area of a valid selection is defined by top-left and bottom-right cells.\n\t\tconst rows = new Set();\n\t\tconst columns = new Set();\n\n\t\tlet areaOfSelectedCells = 0;\n\n\t\tfor ( const tableCell of selectedTableCells ) {\n\t\t\tconst { row, column } = this.getCellLocation( tableCell );\n\t\t\tconst rowspan = parseInt( tableCell.getAttribute( 'rowspan' ) || 1 );\n\t\t\tconst colspan = parseInt( tableCell.getAttribute( 'colspan' ) || 1 );\n\n\t\t\t// Record row & column indexes of current cell.\n\t\t\trows.add( row );\n\t\t\tcolumns.add( column );\n\n\t\t\t// For cells that spans over multiple rows add also the last row that this cell spans over.\n\t\t\tif ( rowspan > 1 ) {\n\t\t\t\trows.add( row + rowspan - 1 );\n\t\t\t}\n\n\t\t\t// For cells that spans over multiple columns add also the last column that this cell spans over.\n\t\t\tif ( colspan > 1 ) {\n\t\t\t\tcolumns.add( column + colspan - 1 );\n\t\t\t}\n\n\t\t\tareaOfSelectedCells += ( rowspan * colspan );\n\t\t}\n\n\t\t// We can only merge table cells that are in adjacent rows...\n\t\tconst areaOfValidSelection = getBiggestRectangleArea( rows, columns );\n\n\t\treturn areaOfValidSelection == areaOfSelectedCells;\n\t}\n\n\t/**\n\t * Returns array of sorted ranges.\n\t *\n\t * @param {Iterable.<module:engine/model/range~Range>} ranges\n\t * @return {Array.<module:engine/model/range~Range>}\n\t */\n\tsortRanges( ranges ) {\n\t\treturn Array.from( ranges ).sort( compareRangeOrder );\n\t}\n\n\t/**\n\t * Helper method to get an object with `first` and `last` indexes from an unsorted array of indexes.\n\t *\n\t * @private\n\t * @param {Number[]} indexes\n\t * @returns {Object}\n\t */\n\t_getFirstLastIndexesObject( indexes ) {\n\t\tconst allIndexesSorted = indexes.sort( ( indexA, indexB ) => indexA - indexB );\n\n\t\tconst first = allIndexesSorted[ 0 ];\n\t\tconst last = allIndexesSorted[ allIndexesSorted.length - 1 ];\n\n\t\treturn { first, last };\n\t}\n\n\t/**\n\t * Checks if the selection does not mix a header (column or row) with other cells.\n\t *\n\t * For instance, in the table below valid selections consist of cells with the same letter only.\n\t * So, a-a (same heading row and column) or d-d (body cells) are valid while c-d or a-b are not.\n\t *\n\t * header columns\n\t *\t\t  ↓   ↓\n\t *\t\t┌───┬───┬───┬───┐\n\t *\t\t│ a │ a │ b │ b │  ← header row\n\t *\t\t├───┼───┼───┼───┤\n\t *\t\t│ c │ c │ d │ d │\n\t *\t\t├───┼───┼───┼───┤\n\t *\t\t│ c │ c │ d │ d │\n\t *\t\t└───┴───┴───┴───┘\n\t *\n\t * @private\n\t * @param {Array.<module:engine/model/element~Element>} tableCells\n\t * @returns {Boolean}\n\t */\n\t_areCellInTheSameTableSection( tableCells ) {\n\t\tconst table = tableCells[ 0 ].findAncestor( 'table' );\n\n\t\tconst rowIndexes = this.getRowIndexes( tableCells );\n\t\tconst headingRows = parseInt( table.getAttribute( 'headingRows' ) || 0 );\n\n\t\t// Calculating row indexes is a bit cheaper so if this check fails we can't merge.\n\t\tif ( !this._areIndexesInSameSection( rowIndexes, headingRows ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst headingColumns = parseInt( table.getAttribute( 'headingColumns' ) || 0 );\n\t\tconst columnIndexes = this.getColumnIndexes( tableCells );\n\n\t\t// Similarly cells must be in same column section.\n\t\treturn this._areIndexesInSameSection( columnIndexes, headingColumns );\n\t}\n\n\t/**\n\t * Unified check if table rows/columns indexes are in the same heading/body section.\n\t *\n\t * @private\n\t * @param {Object} params\n\t * @param {Number} params.first\n\t * @param {Number} params.last\n\t * @param {Number} headingSectionSize\n\t */\n\t_areIndexesInSameSection( { first, last }, headingSectionSize ) {\n\t\tconst firstCellIsInHeading = first < headingSectionSize;\n\t\tconst lastCellIsInHeading = last < headingSectionSize;\n\n\t\treturn firstCellIsInHeading === lastCellIsInHeading;\n\t}\n}\n\n// Creates empty rows at the given index in an existing table.\n//\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/element~Element} table\n// @param {Number} insertAt The row index of row insertion.\n// @param {Number} rows The number of rows to create.\n// @param {Number} tableCellToInsert The number of cells to insert in each row.\nfunction createEmptyRows( writer, table, insertAt, rows, tableCellToInsert, attributes = {} ) {\n\tfor ( let i = 0; i < rows; i++ ) {\n\t\tconst tableRow = writer.createElement( 'tableRow' );\n\n\t\twriter.insert( tableRow, table, insertAt );\n\n\t\tcreateCells( tableCellToInsert, writer, writer.createPositionAt( tableRow, 'end' ), attributes );\n\t}\n}\n\n// Creates cells at a given position.\n//\n// @param {Number} columns The number of columns to create\n// @param {module:engine/model/writer~Writer} writer\n// @param {module:engine/model/position~Position} insertPosition\nfunction createCells( cells, writer, insertPosition, attributes = {} ) {\n\tfor ( let i = 0; i < cells; i++ ) {\n\t\tcreateEmptyTableCell( writer, insertPosition, attributes );\n\t}\n}\n\n// Evenly distributes the span of a cell to a number of provided cells.\n// The resulting spans will always be integer values.\n//\n// For instance breaking a span of 7 into 3 cells will return:\n//\n//\t\t{ newCellsSpan: 2, updatedSpan: 3 }\n//\n// as two cells will have a span of 2 and the remainder will go the first cell so its span will change to 3.\n//\n// @param {Number} span The span value do break.\n// @param {Number} numberOfCells The number of resulting spans.\n// @returns {{newCellsSpan: Number, updatedSpan: Number}}\nfunction breakSpanEvenly( span, numberOfCells ) {\n\tif ( span < numberOfCells ) {\n\t\treturn { newCellsSpan: 1, updatedSpan: 1 };\n\t}\n\n\tconst newCellsSpan = Math.floor( span / numberOfCells );\n\tconst updatedSpan = ( span - newCellsSpan * numberOfCells ) + newCellsSpan;\n\n\treturn { newCellsSpan, updatedSpan };\n}\n\n// Updates heading columns attribute if removing a row from head section.\nfunction adjustHeadingColumns( table, removedColumnIndexes, writer ) {\n\tconst headingColumns = table.getAttribute( 'headingColumns' ) || 0;\n\n\tif ( headingColumns && removedColumnIndexes.first < headingColumns ) {\n\t\tconst headingsRemoved = Math.min( headingColumns - 1 /* Other numbers are 0-based */, removedColumnIndexes.last ) -\n\t\t\tremovedColumnIndexes.first + 1;\n\n\t\twriter.setAttribute( 'headingColumns', headingColumns - headingsRemoved, table );\n\t}\n}\n\n// Calculates a new heading rows value for removing rows from heading section.\nfunction updateHeadingRows( table, first, last, writer ) {\n\tconst headingRows = table.getAttribute( 'headingRows' ) || 0;\n\n\tif ( first < headingRows ) {\n\t\tconst newRows = last < headingRows ? headingRows - ( last - first + 1 ) : first;\n\n\t\tupdateNumericAttribute( 'headingRows', newRows, table, writer, 0 );\n\t}\n}\n\n// Finds cells that will be:\n// - trimmed - Cells that are \"above\" removed rows sections and overlap the removed section - their rowspan must be trimmed.\n// - moved - Cells from removed rows section might stick out of. These cells are moved to the next row after a removed section.\n//\n// Sample table with overlapping & sticking out cells:\n//\n//      +----+----+----+----+----+\n//      | 00 | 01 | 02 | 03 | 04 |\n//      +----+    +    +    +    +\n//      | 10 |    |    |    |    |\n//      +----+----+    +    +    +\n//      | 20 | 21 |    |    |    | <-- removed row\n//      +    +    +----+    +    +\n//      |    |    | 32 |    |    | <-- removed row\n//      +----+    +    +----+    +\n//      | 40 |    |    | 43 |    |\n//      +----+----+----+----+----+\n//\n// In a table above:\n// - cells to trim: '02', '03' & '04'.\n// - cells to move: '21' & '32'.\nfunction getCellsToMoveAndTrimOnRemoveRow( table, first, last ) {\n\tconst cellsToMove = new Map();\n\tconst cellsToTrim = [];\n\n\tfor ( const { row, column, cellHeight, cell } of new TableWalker( table, { endRow: last } ) ) {\n\t\tconst lastRowOfCell = row + cellHeight - 1;\n\n\t\tconst isCellStickingOutFromRemovedRows = row >= first && row <= last && lastRowOfCell > last;\n\n\t\tif ( isCellStickingOutFromRemovedRows ) {\n\t\t\tconst rowspanInRemovedSection = last - row + 1;\n\t\t\tconst rowSpanToSet = cellHeight - rowspanInRemovedSection;\n\n\t\t\tcellsToMove.set( column, {\n\t\t\t\tcell,\n\t\t\t\trowspan: rowSpanToSet\n\t\t\t} );\n\t\t}\n\n\t\tconst isCellOverlappingRemovedRows = row < first && lastRowOfCell >= first;\n\n\t\tif ( isCellOverlappingRemovedRows ) {\n\t\t\tlet rowspanAdjustment;\n\n\t\t\t// Cell fully covers removed section - trim it by removed rows count.\n\t\t\tif ( lastRowOfCell >= last ) {\n\t\t\t\trowspanAdjustment = last - first + 1;\n\t\t\t}\n\t\t\t// Cell partially overlaps removed section - calculate cell's span that is in removed section.\n\t\t\telse {\n\t\t\t\trowspanAdjustment = lastRowOfCell - first + 1;\n\t\t\t}\n\n\t\t\tcellsToTrim.push( {\n\t\t\t\tcell,\n\t\t\t\trowspan: cellHeight - rowspanAdjustment\n\t\t\t} );\n\t\t}\n\t}\n\treturn { cellsToMove, cellsToTrim };\n}\n\nfunction moveCellsToRow( table, targetRowIndex, cellsToMove, writer ) {\n\tconst tableWalker = new TableWalker( table, {\n\t\tincludeAllSlots: true,\n\t\trow: targetRowIndex\n\t} );\n\n\tconst tableRowMap = [ ...tableWalker ];\n\tconst row = table.getChild( targetRowIndex );\n\n\tlet previousCell;\n\n\tfor ( const { column, cell, isAnchor } of tableRowMap ) {\n\t\tif ( cellsToMove.has( column ) ) {\n\t\t\tconst { cell: cellToMove, rowspan } = cellsToMove.get( column );\n\n\t\t\tconst targetPosition = previousCell ?\n\t\t\t\twriter.createPositionAfter( previousCell ) :\n\t\t\t\twriter.createPositionAt( row, 0 );\n\n\t\t\twriter.move( writer.createRangeOn( cellToMove ), targetPosition );\n\t\t\tupdateNumericAttribute( 'rowspan', rowspan, cellToMove, writer );\n\n\t\t\tpreviousCell = cellToMove;\n\t\t} else if ( isAnchor ) {\n\t\t\t// If cell is spanned then `cell` holds reference to overlapping cell. See ckeditor/ckeditor5#6502.\n\t\t\tpreviousCell = cell;\n\t\t}\n\t}\n}\n\nfunction compareRangeOrder( rangeA, rangeB ) {\n\t// Since table cell ranges are disjoint, it's enough to check their start positions.\n\tconst posA = rangeA.start;\n\tconst posB = rangeB.start;\n\n\t// Checking for equal position (returning 0) is not needed because this would be either:\n\t// a. Intersecting range (not allowed by model)\n\t// b. Collapsed range on the same position (allowed by model but should not happen).\n\treturn posA.isBefore( posB ) ? -1 : 1;\n}\n\n// Calculates the area of a maximum rectangle that can span over the provided row & column indexes.\n//\n// @param {Array.<Number>} rows\n// @param {Array.<Number>} columns\n// @returns {Number}\nfunction getBiggestRectangleArea( rows, columns ) {\n\tconst rowsIndexes = Array.from( rows.values() );\n\tconst columnIndexes = Array.from( columns.values() );\n\n\tconst lastRow = Math.max( ...rowsIndexes );\n\tconst firstRow = Math.min( ...rowsIndexes );\n\tconst lastColumn = Math.max( ...columnIndexes );\n\tconst firstColumn = Math.min( ...columnIndexes );\n\n\treturn ( lastRow - firstRow + 1 ) * ( lastColumn - firstColumn + 1 );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/tablewalker\n */\n\n// @if CK_DEBUG // import { CKEditorError } from 'ckeditor5/src/utils';\nimport { setData } from '@ckeditor/ckeditor5-engine/src/dev-utils/view';\n\n/**\n * The table iterator class. It allows to iterate over table cells. For each cell the iterator yields\n * {@link module:table/tablewalker~TableSlot} with proper table cell attributes.\n */\nexport default class TableWalker {\n\t/**\n\t * Creates an instance of the table walker.\n\t *\n\t * The table walker iterates internally by traversing the table from row index = 0 and column index = 0.\n\t * It walks row by row and column by column in order to output values defined in the constructor.\n\t * By default it will output only the locations that are occupied by a cell. To include also spanned rows and columns,\n\t * pass the `includeAllSlots` option to the constructor.\n\t *\n\t * The most important values of the iterator are column and row indexes of a cell.\n\t *\n\t * See {@link module:table/tablewalker~TableSlot} what values are returned by the table walker.\n\t *\n\t * To iterate over a given row:\n\t *\n\t *\t\tconst tableWalker = new TableWalker( table, { startRow: 1, endRow: 2 } );\n\t *\n\t *\t\tfor ( const tableSlot of tableWalker ) {\n\t *\t\t\tconsole.log( 'A cell at row', tableSlot.row, 'and column', tableSlot.column );\n\t *\t\t}\n\t *\n\t * For instance the code above for the following table:\n\t *\n\t *\t\t+----+----+----+----+----+----+\n\t *\t\t| 00      | 02 | 03 | 04 | 05 |\n\t *\t\t|         +----+----+----+----+\n\t *\t\t|         | 12      | 14 | 15 |\n\t *\t\t|         +----+----+----+    +\n\t *\t\t|         | 22           |    |\n\t *\t\t|----+----+----+----+----+    +\n\t *\t\t| 30 | 31 | 32 | 33 | 34 |    |\n\t *\t\t+----+----+----+----+----+----+\n\t *\n\t * will log in the console:\n\t *\n\t *\t\t'A cell at row 1 and column 2'\n\t *\t\t'A cell at row 1 and column 4'\n\t *\t\t'A cell at row 1 and column 5'\n\t *\t\t'A cell at row 2 and column 2'\n\t *\n\t * To also iterate over spanned cells:\n\t *\n\t *\t\tconst tableWalker = new TableWalker( table, { row: 1, includeAllSlots: true } );\n\t *\n\t *\t\tfor ( const tableSlot of tableWalker ) {\n\t *\t\t\tconsole.log( 'Slot at', tableSlot.row, 'x', tableSlot.column, ':', tableSlot.isAnchor ? 'is anchored' : 'is spanned' );\n\t *\t\t}\n\t *\n\t * will log in the console for the table from the previous example:\n\t *\n\t *\t\t'Cell at 1 x 0 : is spanned'\n\t *\t\t'Cell at 1 x 1 : is spanned'\n\t *\t\t'Cell at 1 x 2 : is anchored'\n\t *\t\t'Cell at 1 x 3 : is spanned'\n\t *\t\t'Cell at 1 x 4 : is anchored'\n\t *\t\t'Cell at 1 x 5 : is anchored'\n\t *\n\t * **Note**: Option `row` is a shortcut that sets both `startRow` and `endRow` to the same row.\n\t * (Use either `row` or `startRow` and `endRow` but never together). Similarly the `column` option sets both `startColumn`\n\t * and `endColumn` to the same column (Use either `column` or `startColumn` and `endColumn` but never together).\n\t *\n\t * @constructor\n\t * @param {module:engine/model/element~Element} table A table over which the walker iterates.\n\t * @param {Object} [options={}] An object with configuration.\n\t * @param {Number} [options.row] A row index for which this iterator will output cells.\n\t * Can't be used together with `startRow` and `endRow`.\n\t * @param {Number} [options.startRow=0] A row index from which this iterator should start. Can't be used together with `row`.\n\t * @param {Number} [options.endRow] A row index at which this iterator should end. Can't be used together with `row`.\n\t * @param {Number} [options.column] A column index for which this iterator will output cells.\n\t * Can't be used together with `startColumn` and `endColumn`.\n\t * @param {Number} [options.startColumn=0] A column index from which this iterator should start. Can't be used together with `column`.\n\t * @param {Number} [options.endColumn] A column index at which this iterator should end. Can't be used together with `column`.\n\t * @param {Boolean} [options.includeAllSlots=false] Also return values for spanned cells.\n\t */\n\tconstructor( table, options = {} ) {\n\t\t/**\n\t\t * The walker's table element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/element~Element}\n\t\t * @protected\n\t\t */\n\t\tthis._table = table;\n\n\t\t/**\n\t\t * A row index from which this iterator will start.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t * @private\n\t\t */\n\t\tthis._startRow = options.row !== undefined ? options.row : options.startRow || 0;\n\n\t\t/**\n\t\t * A row index at which this iterator will end.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t * @private\n\t\t */\n\t\tthis._endRow = options.row !== undefined ? options.row : options.endRow;\n\n\t\t/**\n\t\t * If set, the table walker will only output cells from a given column and following ones or cells that overlap them.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t * @private\n\t\t */\n\t\tthis._startColumn = options.column !== undefined ? options.column : options.startColumn || 0;\n\n\t\t/**\n\t\t * If set, the table walker will only output cells up to a given column.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t * @private\n\t\t */\n\t\tthis._endColumn = options.column !== undefined ? options.column : options.endColumn;\n\n\t\t/**\n\t\t * Enables output of spanned cells that are normally not yielded.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Boolean}\n\t\t * @private\n\t\t */\n\t\tthis._includeAllSlots = !!options.includeAllSlots;\n\n\t\t/**\n\t\t * Row indexes to skip from the iteration.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Set<Number>}\n\t\t * @private\n\t\t */\n\t\tthis._skipRows = new Set();\n\n\t\t/**\n\t\t * The current row index.\n\t\t *\n\t\t * @member {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._row = 0;\n\n\t\t/**\n\t\t * The index of the current row element in the table.\n\t\t *\n\t\t * @type {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._rowIndex = 0;\n\n\t\t/**\n\t\t * The current column index.\n\t\t *\n\t\t * @member {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._column = 0;\n\n\t\t/**\n\t\t * The cell index in a parent row. For spanned cells when {@link #_includeAllSlots} is set to `true`,\n\t\t * this represents the index of the next table cell.\n\t\t *\n\t\t * @member {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._cellIndex = 0;\n\n\t\t/**\n\t\t * Holds a map of spanned cells in a table.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Map.<Number, Map.<Number, Object>>}\n\t\t * @private\n\t\t */\n\t\tthis._spannedCells = new Map();\n\n\t\t/**\n\t\t * Index of the next column where a cell is anchored.\n\t\t *\n\t\t * @member {Number}\n\t\t * @private\n\t\t */\n\t\tthis._nextCellAtColumn = -1;\n\t}\n\n\t/**\n\t * Iterable interface.\n\t *\n\t * @returns {Iterable.<module:table/tablewalker~TableSlot>}\n\t */\n\t[ Symbol.iterator ]() {\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the next table walker's value.\n\t *\n\t * @returns {module:table/tablewalker~TableSlot} The next table walker's value.\n\t */\n\tnext() {\n\t\tconst row = this._table.getChild( this._rowIndex );\n\n\t\t// Iterator is done when there's no row (table ended) or the row is after `endRow` limit.\n\t\tif ( !row || this._isOverEndRow() ) {\n\t\t\treturn { done: true };\n\t\t}\n\n\t\t// We step over current element when it is not a tableRow instance.\n\t\tif ( !row.is( 'element', 'tableRow' ) ) {\n\t\t\tthis._rowIndex++;\n\n\t\t\treturn this.next();\n\t\t}\n\n\t\tif ( this._isOverEndColumn() ) {\n\t\t\treturn this._advanceToNextRow();\n\t\t}\n\n\t\tlet outValue = null;\n\n\t\tconst spanData = this._getSpanned();\n\n\t\tif ( spanData ) {\n\t\t\tif ( this._includeAllSlots && !this._shouldSkipSlot() ) {\n\t\t\t\toutValue = this._formatOutValue( spanData.cell, spanData.row, spanData.column );\n\t\t\t}\n\t\t} else {\n\t\t\tconst cell = row.getChild( this._cellIndex );\n\n\t\t\tif ( !cell ) {\n\t\t\t\t// If there are no more cells left in row advance to the next row.\n\t\t\t\treturn this._advanceToNextRow();\n\t\t\t}\n\n\t\t\tconst colspan = parseInt( cell.getAttribute( 'colspan' ) || 1 );\n\t\t\tconst rowspan = parseInt( cell.getAttribute( 'rowspan' ) || 1 );\n\n\t\t\t// Record this cell spans if it's not 1x1 cell.\n\t\t\tif ( colspan > 1 || rowspan > 1 ) {\n\t\t\t\tthis._recordSpans( cell, rowspan, colspan );\n\t\t\t}\n\n\t\t\tif ( !this._shouldSkipSlot() ) {\n\t\t\t\toutValue = this._formatOutValue( cell );\n\t\t\t}\n\n\t\t\tthis._nextCellAtColumn = this._column + colspan;\n\t\t}\n\n\t\t// Advance to the next column before returning value.\n\t\tthis._column++;\n\n\t\tif ( this._column == this._nextCellAtColumn ) {\n\t\t\tthis._cellIndex++;\n\t\t}\n\n\t\t// The current value will be returned only if current row and column are not skipped.\n\t\treturn outValue || this.next();\n\t}\n\n\t/**\n\t * Marks a row to skip in the next iteration. It will also skip cells from the current row if there are any cells from the current row\n\t * to output.\n\t *\n\t * @param {Number} row The row index to skip.\n\t */\n\tskipRow( row ) {\n\t\tthis._skipRows.add( row );\n\t}\n\n\t/**\n\t * Advances internal cursor to the next row.\n\t *\n\t * @private\n\t * @returns {module:table/tablewalker~TableSlot}\n\t */\n\t_advanceToNextRow() {\n\t\tthis._row++;\n\t\tthis._rowIndex++;\n\t\tthis._column = 0;\n\t\tthis._cellIndex = 0;\n\t\tthis._nextCellAtColumn = -1;\n\n\t\treturn this.next();\n\t}\n\n\t/**\n\t * Checks if the current row is over {@link #_endRow}.\n\t *\n\t * @private\n\t * @returns {Boolean}\n\t */\n\t_isOverEndRow() {\n\t\t// If #_endRow is defined skip all rows after it.\n\t\treturn this._endRow !== undefined && this._row > this._endRow;\n\t}\n\n\t/**\n\t * Checks if the current cell is over {@link #_endColumn}\n\t *\n\t * @private\n\t * @returns {Boolean}\n\t */\n\t_isOverEndColumn() {\n\t\t// If #_endColumn is defined skip all cells after it.\n\t\treturn this._endColumn !== undefined && this._column > this._endColumn;\n\t}\n\n\t/**\n\t * A common method for formatting the iterator's output value.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} cell The table cell to output.\n\t * @param {Number} [anchorRow] The row index of a cell anchor slot.\n\t * @param {Number} [anchorColumn] The column index of a cell anchor slot.\n\t * @returns {{done: Boolean, value: {cell: *, row: Number, column: *, rowspan: *, colspan: *, cellIndex: Number}}}\n\t */\n\t_formatOutValue( cell, anchorRow = this._row, anchorColumn = this._column ) {\n\t\treturn {\n\t\t\tdone: false,\n\t\t\tvalue: new TableSlot( this, cell, anchorRow, anchorColumn )\n\t\t};\n\t}\n\n\t/**\n\t * Checks if the current slot should be skipped.\n\t *\n\t * @private\n\t * @returns {Boolean}\n\t */\n\t_shouldSkipSlot() {\n\t\tconst rowIsMarkedAsSkipped = this._skipRows.has( this._row );\n\t\tconst rowIsBeforeStartRow = this._row < this._startRow;\n\n\t\tconst columnIsBeforeStartColumn = this._column < this._startColumn;\n\t\tconst columnIsAfterEndColumn = this._endColumn !== undefined && this._column > this._endColumn;\n\n\t\treturn rowIsMarkedAsSkipped || rowIsBeforeStartRow || columnIsBeforeStartColumn || columnIsAfterEndColumn;\n\t}\n\n\t/**\n\t * Returns the cell element that is spanned over the current cell location.\n\t *\n\t * @private\n\t * @returns {module:engine/model/element~Element}\n\t */\n\t_getSpanned() {\n\t\tconst rowMap = this._spannedCells.get( this._row );\n\n\t\t// No spans for given row.\n\t\tif ( !rowMap ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// If spans for given rows has entry for column it means that this location if spanned by other cell.\n\t\treturn rowMap.get( this._column ) || null;\n\t}\n\n\t/**\n\t * Updates spanned cells map relative to the current cell location and its span dimensions.\n\t *\n\t * @private\n\t * @param {module:engine/model/element~Element} cell A cell that is spanned.\n\t * @param {Number} rowspan Cell height.\n\t * @param {Number} colspan Cell width.\n\t */\n\t_recordSpans( cell, rowspan, colspan ) {\n\t\tconst data = {\n\t\t\tcell,\n\t\t\trow: this._row,\n\t\t\tcolumn: this._column\n\t\t};\n\n\t\tfor ( let rowToUpdate = this._row; rowToUpdate < this._row + rowspan; rowToUpdate++ ) {\n\t\t\tfor ( let columnToUpdate = this._column; columnToUpdate < this._column + colspan; columnToUpdate++ ) {\n\t\t\t\tif ( rowToUpdate != this._row || columnToUpdate != this._column ) {\n\t\t\t\t\tthis._markSpannedCell( rowToUpdate, columnToUpdate, data );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Marks the cell location as spanned by another cell.\n\t *\n\t * @private\n\t * @param {Number} row The row index of the cell location.\n\t * @param {Number} column The column index of the cell location.\n\t * @param {Object} data A spanned cell details (cell element, anchor row and column).\n\t */\n\t_markSpannedCell( row, column, data ) {\n\t\tif ( !this._spannedCells.has( row ) ) {\n\t\t\tthis._spannedCells.set( row, new Map() );\n\t\t}\n\n\t\tconst rowSpans = this._spannedCells.get( row );\n\n\t\trowSpans.set( column, data );\n\t}\n}\n\n/**\n * An object returned by {@link module:table/tablewalker~TableWalker} when traversing table cells.\n */\nclass TableSlot {\n\t/**\n\t * Creates an instance of the table walker value.\n\t *\n\t * @protected\n\t * @param {module:table/tablewalker~TableWalker} tableWalker The table walker instance.\n\t * @param {module:engine/model/element~Element} cell The current table cell.\n\t * @param {Number} anchorRow The row index of a cell anchor slot.\n\t * @param {Number} anchorColumn The column index of a cell anchor slot.\n\t */\n\tconstructor( tableWalker, cell, anchorRow, anchorColumn ) {\n\t\t/**\n\t\t * The current table cell.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/element~Element}\n\t\t */\n\t\tthis.cell = cell;\n\n\t\t/**\n\t\t * The row index of a table slot.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.row = tableWalker._row;\n\n\t\t/**\n\t\t * The column index of a table slot.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.column = tableWalker._column;\n\n\t\t/**\n\t\t * The row index of a cell anchor slot.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.cellAnchorRow = anchorRow;\n\n\t\t/**\n\t\t * The column index of a cell anchor slot.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t */\n\t\tthis.cellAnchorColumn = anchorColumn;\n\n\t\t/**\n\t\t * The index of the current cell in the parent row.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t * @private\n\t\t */\n\t\tthis._cellIndex = tableWalker._cellIndex;\n\n\t\t/**\n\t\t * The index of the current row element in the table.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Number}\n\t\t * @private\n\t\t */\n\t\tthis._rowIndex = tableWalker._rowIndex;\n\n\t\t/**\n\t\t * The table element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:engine/model/element~Element}\n\t\t * @private\n\t\t */\n\t\tthis._table = tableWalker._table;\n\t}\n\n\t/**\n\t * Whether the cell is anchored in the current slot.\n\t *\n\t * @readonly\n\t * @returns {Boolean}\n\t */\n\tget isAnchor() {\n\t\treturn this.row === this.cellAnchorRow && this.column === this.cellAnchorColumn;\n\t}\n\n\t/**\n\t * The width of a cell defined by a `colspan` attribute. If the model attribute is not present, it is set to `1`.\n\t *\n\t * @readonly\n\t * @returns {Number}\n\t */\n\tget cellWidth() {\n\t\treturn parseInt( this.cell.getAttribute( 'colspan' ) || 1 );\n\t}\n\n\t/**\n\t * The height of a cell defined by a `rowspan` attribute. If the model attribute is not present, it is set to `1`.\n\t *\n\t * @readonly\n\t * @returns {Number}\n\t */\n\tget cellHeight() {\n\t\treturn parseInt( this.cell.getAttribute( 'rowspan' ) || 1 );\n\t}\n\n\t/**\n\t * The index of the current row element in the table.\n\t *\n\t * @readonly\n\t * @returns {Number}\n\t */\n\tget rowIndex() {\n\t\treturn this._rowIndex;\n\t}\n\n\t/**\n\t * Returns the {@link module:engine/model/position~Position} before the table slot.\n\t *\n\t * @returns {module:engine/model/position~Position}\n\t */\n\tgetPositionBefore() {\n\t\tconst model = this._table.root.document.model;\n\n\t\treturn model.createPositionAt( this._table.getChild( this.row ), this._cellIndex );\n\t}\n\n\t// @if CK_DEBUG // get isSpanned() { throwMissingGetterError( 'isSpanned' ); }\n\t// @if CK_DEBUG // get colspan() { throwMissingGetterError( 'colspan' ); }\n\t// @if CK_DEBUG // get rowspan() { throwMissingGetterError( 'rowspan' ); }\n\t// @if CK_DEBUG // get cellIndex() { throwMissingGetterError( 'cellIndex' ); }\n}\n\n/**\n * This `TableSlot`'s getter (property) was removed in CKEditor 5 v20.0.0.\n *\n * Check out the new `TableWalker`'s API in the documentation.\n *\n * @error tableslot-getter-removed\n * @param {String} getterName\n */\n\n// @if CK_DEBUG // function throwMissingGetterError( getterName ) {\n// @if CK_DEBUG //\t\tthrow new CKEditorError( 'tableslot-getter-removed', this, {\n// @if CK_DEBUG //\t\t\tgetterName\n// @if CK_DEBUG //\t\t} );\n// @if CK_DEBUG // }\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/ui/colorinputview\n */\n\nimport { View, InputTextView, ButtonView, createDropdown, ColorGridView, FocusCycler, ViewCollection } from 'ckeditor5/src/ui';\nimport { icons } from 'ckeditor5/src/core';\nimport { FocusTracker, KeystrokeHandler } from 'ckeditor5/src/utils';\n\nimport '../../theme/colorinput.css';\n\n/**\n * The color input view class. It allows the user to type in a color (hex, rgb, etc.)\n * or choose it from the configurable color palette with a preview.\n *\n * @private\n * @extends module:ui/view~View\n */\nexport default class ColorInputView extends View {\n\t/**\n\t * Creates an instance of the color input view.\n\t *\n\t * @param {module:utils/locale~Locale} locale The locale instance.\n\t * @param {Object} options The input options.\n\t * @param {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>} options.colorDefinitions The colors to be displayed\n\t * in the palette inside the input's dropdown.\n\t * @param {Number} options.columns The number of columns in which the colors will be displayed.\n\t * @param {String} [options.defaultColorValue] If specified, the color input view will replace the \"Remove color\" button with\n\t * the \"Restore default\" button. Instead of clearing the input field, the default color value will be set.\n\t */\n\tconstructor( locale, options ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The value of the input.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #value\n\t\t * @default ''\n\t\t */\n\t\tthis.set( 'value', '' );\n\n\t\t/**\n\t\t * Controls whether the input view is in read-only mode.\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isReadOnly\n\t\t * @default false\n\t\t */\n\t\tthis.set( 'isReadOnly', false );\n\n\t\t/**\n\t\t * An observable flag set to `true` when the input is focused by the user.\n\t\t * `false` otherwise.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isFocused\n\t\t * @default false\n\t\t */\n\t\tthis.set( 'isFocused', false );\n\n\t\t/**\n\t\t * An observable flag set to `true` when the input contains no text.\n\t\t *\n\t\t * @readonly\n\t\t * @observable\n\t\t * @member {Boolean} #isEmpty\n\t\t * @default true\n\t\t */\n\t\tthis.set( 'isEmpty', true );\n\n\t\t/**\n\t\t * A cached reference to the options passed to the constructor.\n\t\t *\n\t\t * @member {Object}\n\t\t */\n\t\tthis.options = options;\n\n\t\t/**\n\t\t * Tracks information about the DOM focus in the view.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * A collection of views that can be focused in the view.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis._focusables = new ViewCollection();\n\n\t\t/**\n\t\t * An instance of the dropdown allowing to select a color from a grid.\n\t\t *\n\t\t * @member {module:ui/dropdown/dropdown~DropdownView}\n\t\t */\n\t\tthis.dropdownView = this._createDropdownView();\n\n\t\t/**\n\t\t * An instance of the input allowing the user to type a color value.\n\t\t *\n\t\t * @member {module:ui/inputtext/inputtextview~InputTextView}\n\t\t */\n\t\tthis.inputView = this._createInputTextView();\n\n\t\t/**\n\t\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokehandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * The flag that indicates whether the user is still typing.\n\t\t * If set to true, it means that the text input field ({@link #inputView}) still has the focus.\n\t\t * So, we should interrupt the user by replacing the input's value.\n\t\t *\n\t\t * @protected\n\t\t * @member {Boolean}\n\t\t */\n\t\tthis._stillTyping = false;\n\n\t\t/**\n\t\t * Helps cycling over focusable items in the view.\n\t\t *\n\t\t * @readonly\n\t\t * @protected\n\t\t * @member {module:ui/focuscycler~FocusCycler}\n\t\t */\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate items backwards using the <kbd>Shift</kbd> + <kbd>Tab</kbd> keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate items forwards using the <kbd>Tab</kbd> key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-input-color'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis.dropdownView,\n\t\t\t\tthis.inputView\n\t\t\t]\n\t\t} );\n\n\t\tthis.on( 'change:value', ( evt, name, inputValue ) => this._setInputValue( inputValue ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\t// Start listening for the keystrokes coming from the dropdown panel view.\n\t\tthis.keystrokes.listenTo( this.dropdownView.panelView.element );\n\t}\n\n\t/**\n\t * Focuses the input.\n\t */\n\tfocus() {\n\t\tthis.inputView.focus();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdestroy() {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Creates and configures the {@link #dropdownView}.\n\t *\n\t * @private\n\t */\n\t_createDropdownView() {\n\t\tconst locale = this.locale;\n\t\tconst t = locale.t;\n\t\tconst bind = this.bindTemplate;\n\t\tconst colorGrid = this._createColorGrid( locale );\n\t\tconst dropdown = createDropdown( locale );\n\t\tconst colorPreview = new View();\n\t\tconst removeColorButton = this._createRemoveColorButton();\n\n\t\tcolorPreview.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-input-color__button__preview'\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\tbackgroundColor: bind.to( 'value' )\n\t\t\t\t}\n\t\t\t},\n\t\t\tchildren: [ {\n\t\t\t\ttag: 'span',\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t'ck-input-color__button__preview__no-color-indicator',\n\t\t\t\t\t\tbind.if( 'value', 'ck-hidden', value => value != '' )\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} ]\n\t\t} );\n\n\t\tdropdown.buttonView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-input-color__button'\n\t\t\t}\n\t\t} );\n\n\t\tdropdown.buttonView.children.add( colorPreview );\n\t\tdropdown.buttonView.label = t( 'Color picker' );\n\t\tdropdown.buttonView.tooltip = true;\n\n\t\tdropdown.panelPosition = locale.uiLanguageDirection === 'rtl' ? 'se' : 'sw';\n\t\tdropdown.panelView.children.add( removeColorButton );\n\t\tdropdown.panelView.children.add( colorGrid );\n\t\tdropdown.bind( 'isEnabled' ).to( this, 'isReadOnly', value => !value );\n\n\t\tthis._focusables.add( removeColorButton );\n\t\tthis._focusables.add( colorGrid );\n\n\t\tthis.focusTracker.add( removeColorButton.element );\n\t\tthis.focusTracker.add( colorGrid.element );\n\n\t\treturn dropdown;\n\t}\n\n\t/**\n\t * Creates and configures an instance of {@link module:ui/inputtext/inputtextview~InputTextView}.\n\t *\n\t * @private\n\t * @returns {module:ui/inputtext/inputtextview~InputTextView} A configured instance to be set as {@link #inputView}.\n\t */\n\t_createInputTextView() {\n\t\tconst locale = this.locale;\n\t\tconst inputView = new InputTextView( locale );\n\n\t\tinputView.extendTemplate( {\n\t\t\ton: {\n\t\t\t\tblur: inputView.bindTemplate.to( 'blur' )\n\t\t\t}\n\t\t} );\n\n\t\tinputView.value = this.value;\n\t\tinputView.bind( 'isReadOnly', 'hasError' ).to( this );\n\t\tthis.bind( 'isFocused', 'isEmpty' ).to( inputView );\n\n\t\tinputView.on( 'input', () => {\n\t\t\tconst inputValue = inputView.element.value;\n\t\t\t// Check if the value matches one of our defined colors' label.\n\t\t\tconst mappedColor = this.options.colorDefinitions.find( def => inputValue === def.label );\n\n\t\t\tthis._stillTyping = true;\n\t\t\tthis.value = mappedColor && mappedColor.color || inputValue;\n\t\t} );\n\n\t\tinputView.on( 'blur', () => {\n\t\t\tthis._stillTyping = false;\n\t\t\tthis._setInputValue( inputView.element.value );\n\t\t} );\n\n\t\tinputView.delegate( 'input' ).to( this );\n\n\t\treturn inputView;\n\t}\n\n\t/**\n\t * Creates and configures the button that clears the color.\n\t *\n\t * @private\n\t */\n\t_createRemoveColorButton() {\n\t\tconst locale = this.locale;\n\t\tconst t = locale.t;\n\t\tconst removeColorButton = new ButtonView( locale );\n\t\tconst defaultColor = this.options.defaultColorValue || '';\n\t\tconst removeColorButtonLabel = defaultColor ? t( 'Restore default' ) : t( 'Remove color' );\n\n\t\tremoveColorButton.class = 'ck-input-color__remove-color';\n\t\tremoveColorButton.withText = true;\n\t\tremoveColorButton.icon = icons.eraser;\n\t\tremoveColorButton.label = removeColorButtonLabel;\n\t\tremoveColorButton.on( 'execute', () => {\n\t\t\tthis.value = defaultColor;\n\t\t\tthis.dropdownView.isOpen = false;\n\t\t\tthis.fire( 'input' );\n\t\t} );\n\n\t\treturn removeColorButton;\n\t}\n\n\t/**\n\t * Creates and configures the color grid inside the {@link #dropdownView}.\n\t *\n\t * @private\n\t */\n\t_createColorGrid( locale ) {\n\t\tconst colorGrid = new ColorGridView( locale, {\n\t\t\tcolorDefinitions: this.options.colorDefinitions,\n\t\t\tcolumns: this.options.columns\n\t\t} );\n\n\t\tcolorGrid.on( 'execute', ( evtData, data ) => {\n\t\t\tthis.value = data.value;\n\t\t\tthis.dropdownView.isOpen = false;\n\t\t\tthis.fire( 'input' );\n\t\t} );\n\t\tcolorGrid.bind( 'selectedColor' ).to( this, 'value' );\n\n\t\treturn colorGrid;\n\t}\n\n\t/**\n\t * Sets {@link #inputView}'s value property to the color value or color label,\n\t * if there is one and the user is not typing.\n\t *\n\t * Handles cases like:\n\t *\n\t * * Someone picks the color in the grid.\n\t * * The color is set from the plugin level.\n\t *\n\t * @private\n\t * @param {String} inputValue Color value to be set.\n\t */\n\t_setInputValue( inputValue ) {\n\t\tif ( !this._stillTyping ) {\n\t\t\tconst normalizedInputValue = normalizeColor( inputValue );\n\t\t\t// Check if the value matches one of our defined colors.\n\t\t\tconst mappedColor = this.options.colorDefinitions.find( def => normalizedInputValue === normalizeColor( def.color ) );\n\n\t\t\tif ( mappedColor ) {\n\t\t\t\tthis.inputView.value = mappedColor.label;\n\t\t\t} else {\n\t\t\t\tthis.inputView.value = inputValue || '';\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Normalizes color value, by stripping extensive whitespace.\n// For example., transforms:\n// * `   rgb(  25 50    0 )` to `rgb(25 50 0)`,\n// * \"\\t  rgb(  25 ,  50,0 )\t\t\" to `rgb(25 50 0)`.\n//\n// @param {String} colorString The value to be normalized.\n// @returns {String}\nfunction normalizeColor( colorString ) {\n\treturn colorString\n\t\t// Remove any whitespace right after `(` or `,`.\n\t\t.replace( /([(,])\\s+/g, '$1' )\n\t\t// Remove any whitespace at the beginning or right before the end, `)`, `,`, or another whitespace.\n\t\t.replace( /^\\s+|\\s+(?=[),\\s]|$)/g, '' )\n\t\t// Then, replace `,` or whitespace with a single space.\n\t\t.replace( /,|\\s/g, ' ' );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/ui/formrowview\n */\n\nimport { View } from 'ckeditor5/src/ui';\n\nimport '../../theme/formrow.css';\n\n/**\n * The class representing a single row in a complex form,\n * used by {@link module:table/tablecellproperties/ui/tablecellpropertiesview~TableCellPropertiesView}.\n *\n * **Note**: For now this class is private. When more use cases arrive (beyond ckeditor5-table),\n * it will become a component in ckeditor5-ui.\n *\n * @private\n * @extends module:ui/view~View\n */\nexport default class FormRowView extends View {\n\t/**\n\t * Creates an instance of the form row class.\n\t *\n\t * @param {module:utils/locale~Locale} locale The locale instance.\n\t * @param {Object} options\n\t * @param {Array.<module:ui/view~View>} options.children\n\t * @param {String} [options.class]\n\t * @param {module:ui/view~View} [options.labelView] When passed, the row gets the `group` and `aria-labelledby`\n\t * DOM attributes and gets described by the label.\n\t */\n\tconstructor( locale, options = {} ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * An additional CSS class added to the {@link #element}.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #class\n\t\t */\n\t\tthis.set( 'class', options.class || null );\n\n\t\t/**\n\t\t * A collection of row items (buttons, dropdowns, etc.).\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.children = this.createCollection();\n\n\t\tif ( options.children ) {\n\t\t\toptions.children.forEach( child => this.children.add( child ) );\n\t\t}\n\n\t\t/**\n\t\t * The role property reflected by the `role` DOM attribute of the {@link #element}.\n\t\t *\n\t\t * **Note**: Used only when a `labelView` is passed to constructor `options`.\n\t\t *\n\t\t * @private\n\t\t * @observable\n\t\t * @member {String} #role\n\t\t */\n\t\tthis.set( '_role', null );\n\n\t\t/**\n\t\t * The ARIA property reflected by the `aria-labelledby` DOM attribute of the {@link #element}.\n\t\t *\n\t\t * **Note**: Used only when a `labelView` is passed to constructor `options`.\n\t\t *\n\t\t * @private\n\t\t * @observable\n\t\t * @member {String} #ariaLabelledBy\n\t\t */\n\t\tthis.set( '_ariaLabelledBy', null );\n\n\t\tif ( options.labelView ) {\n\t\t\tthis.set( {\n\t\t\t\t_role: 'group',\n\t\t\t\t_ariaLabelledBy: options.labelView.id\n\t\t\t} );\n\t\t}\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-form__row',\n\t\t\t\t\tbind.to( 'class' )\n\t\t\t\t],\n\t\t\t\trole: bind.to( '_role' ),\n\t\t\t\t'aria-labelledby': bind.to( '_ariaLabelledBy' )\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/ui/inserttableview\n */\n\nimport { View, ButtonView, addKeyboardHandlingForGrid } from 'ckeditor5/src/ui';\n\nimport { KeystrokeHandler, FocusTracker } from 'ckeditor5/src/utils';\n\nimport './../../theme/inserttable.css';\n\n/**\n * The table size view.\n *\n * It renders a 10x10 grid to choose the inserted table size.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\nexport default class InsertTableView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * A collection of table size box items.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this._createGridCollection();\n\n\t\t/**\n\t\t * Listen to `keydown` events fired in this view's main element.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/keystrokeHandler~KeystrokeHandler}\n\t\t */\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\t/**\n\t\t * Tracks information about the DOM focus in the grid.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:utils/focustracker~FocusTracker}\n\t\t */\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t/**\n\t\t * The currently selected number of rows of the new table.\n\t\t *\n\t\t * @observable\n\t\t * @member {Number} #rows\n\t\t */\n\t\tthis.set( 'rows', 0 );\n\n\t\t/**\n\t\t * The currently selected number of columns of the new table.\n\t\t *\n\t\t * @observable\n\t\t * @member {Number} #columns\n\t\t */\n\t\tthis.set( 'columns', 0 );\n\n\t\t/**\n\t\t * The label text displayed under the boxes.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #label\n\t\t */\n\t\tthis.bind( 'label' )\n\t\t\t.to( this, 'columns', this, 'rows', ( columns, rows ) => `${ rows } × ${ columns }` );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck' ]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck-insert-table-dropdown__grid' ]\n\t\t\t\t\t},\n\t\t\t\t\ton: {\n\t\t\t\t\t\t'mouseover@.ck-insert-table-dropdown-grid-box': bind.to( 'boxover' )\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.items\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-insert-table-dropdown__label'\n\t\t\t\t\t\t],\n\t\t\t\t\t\t'aria-hidden': true\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: bind.to( 'label' )\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\n\t\t\ton: {\n\t\t\t\tmousedown: bind.to( evt => {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t} ),\n\n\t\t\t\tclick: bind.to( () => {\n\t\t\t\t\tthis.fire( 'execute' );\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\n\t\t// #rows and #columns are set via changes to #focusTracker on mouse over.\n\t\tthis.on( 'boxover', ( evt, domEvt ) => {\n\t\t\tconst { row, column } = domEvt.target.dataset;\n\t\t\tthis.items.get( ( parseInt( row, 10 ) - 1 ) * 10 + ( parseInt( column, 10 ) - 1 ) ).focus();\n\t\t} );\n\n\t\t// This allows the #rows and #columns to be updated when:\n\t\t// * the user navigates the grid using the keyboard,\n\t\t// * the user moves the mouse over grid items.\n\t\tthis.focusTracker.on( 'change:focusedElement', ( evt, name, focusedElement ) => {\n\t\t\tif ( !focusedElement ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { row, column } = focusedElement.dataset;\n\n\t\t\t// As row & column indexes are zero-based transform it to number of selected rows & columns.\n\t\t\tthis.set( {\n\t\t\t\trows: parseInt( row ),\n\t\t\t\tcolumns: parseInt( column )\n\t\t\t} );\n\t\t} );\n\n\t\tthis.on( 'change:columns', () => this._highlightGridBoxes() );\n\t\tthis.on( 'change:rows', () => this._highlightGridBoxes() );\n\t}\n\n\trender() {\n\t\tsuper.render();\n\n\t\taddKeyboardHandlingForGrid( {\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tgridItems: this.items,\n\t\t\tnumberOfColumns: 10\n\t\t} );\n\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element );\n\t\t}\n\n\t\tthis.keystrokes.listenTo( this.element );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tfocus() {\n\t\tthis.items.get( 0 ).focus();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tfocusLast() {\n\t\tthis.items.get( 0 ).focus();\n\t}\n\n\t/**\n\t * Highlights grid boxes depending on rows and columns selected.\n\t *\n\t * @private\n\t */\n\t_highlightGridBoxes() {\n\t\tconst rows = this.rows;\n\t\tconst columns = this.columns;\n\n\t\tthis.items.map( ( boxView, index ) => {\n\t\t\t// Translate box index to the row & column index.\n\t\t\tconst itemRow = Math.floor( index / 10 );\n\t\t\tconst itemColumn = index % 10;\n\n\t\t\t// Grid box is highlighted when its row & column index belongs to selected number of rows & columns.\n\t\t\tconst isOn = itemRow < rows && itemColumn < columns;\n\n\t\t\tboxView.set( 'isOn', isOn );\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a new Button for the grid.\n\t *\n\t * @private\n\t * @param {module:utils/locale~Locale} locale The locale instance.\n\t * @param {Number} row Row number.\n\t * @param {Number} column Column number.\n\t * @param {String} label The grid button label.\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\t_createGridButton( locale, row, column, label ) {\n\t\tconst button = new ButtonView( locale );\n\n\t\tbutton.set( {\n\t\t\tlabel,\n\t\t\tclass: 'ck-insert-table-dropdown-grid-box'\n\t\t} );\n\n\t\tbutton.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\t'data-row': row,\n\t\t\t\t'data-column': column\n\t\t\t}\n\t\t} );\n\n\t\treturn button;\n\t}\n\n\t/**\n\t * @private\n\t * @returns {module:ui/viewcollection~ViewCollection} A view collection containing boxes to be placed in a table grid.\n\t */\n\t_createGridCollection() {\n\t\tconst boxes = [];\n\n\t\t// Add grid boxes to table selection view.\n\t\tfor ( let index = 0; index < 100; index++ ) {\n\t\t\tconst row = Math.floor( index / 10 );\n\t\t\tconst column = index % 10;\n\t\t\tconst label = `${ row + 1 } × ${ column + 1 }`;\n\n\t\t\tboxes.push( this._createGridButton( this.locale, row + 1, column + 1, label ) );\n\t\t}\n\n\t\treturn this.createCollection( boxes );\n\t}\n\n\t/**\n\t * Fired when the mouse hover over one of the {@link #items child grid boxes}.\n\t *\n\t * @event boxover\n\t */\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/utils/common\n */\n\nimport { downcastAttributeToStyle, upcastStyleToAttribute } from './../converters/tableproperties';\n\n/**\n * A common method to update the numeric value. If a value is the default one, it will be unset.\n *\n * @param {String} key An attribute key.\n * @param {*} value The new attribute value.\n * @param {module:engine/model/item~Item} item A model item on which the attribute will be set.\n * @param {module:engine/model/writer~Writer} writer\n * @param {*} defaultValue The default attribute value. If a value is lower or equal, it will be unset.\n */\nexport function updateNumericAttribute( key, value, item, writer, defaultValue = 1 ) {\n\tif ( value > defaultValue ) {\n\t\twriter.setAttribute( key, value, item );\n\t} else {\n\t\twriter.removeAttribute( key, item );\n\t}\n}\n\n/**\n * A common method to create an empty table cell. It creates a proper model structure as a table cell must have at least one block inside.\n *\n * @param {module:engine/model/writer~Writer} writer The model writer.\n * @param {module:engine/model/position~Position} insertPosition The position at which the table cell should be inserted.\n * @param {Object} attributes The element attributes.\n * @returns {module:engine/model/element~Element} Created table cell.\n */\nexport function createEmptyTableCell( writer, insertPosition, attributes = {} ) {\n\tconst tableCell = writer.createElement( 'tableCell', attributes );\n\n\twriter.insertElement( 'paragraph', tableCell );\n\twriter.insert( tableCell, insertPosition );\n\n\treturn tableCell;\n}\n\n/**\n * Checks if a table cell belongs to the heading column section.\n *\n * @param {module:table/tableutils~TableUtils} tableUtils\n * @param {module:engine/model/element~Element} tableCell\n * @returns {Boolean}\n */\nexport function isHeadingColumnCell( tableUtils, tableCell ) {\n\tconst table = tableCell.parent.parent;\n\tconst headingColumns = parseInt( table.getAttribute( 'headingColumns' ) || 0 );\n\tconst { column } = tableUtils.getCellLocation( tableCell );\n\n\treturn !!headingColumns && column < headingColumns;\n}\n\n/**\n * Enables conversion for an attribute for simple view-model mappings.\n *\n * @param {module:engine/model/schema~Schema} schema\n * @param {module:engine/conversion/conversion~Conversion} conversion\n * @param {Object} options\n * @param {String} options.modelAttribute\n * @param {String} options.styleName\n * @param {String} options.defaultValue The default value for the specified `modelAttribute`.\n * @param {Boolean} [options.reduceBoxSides=false]\n */\nexport function enableProperty( schema, conversion, options ) {\n\tconst { modelAttribute } = options;\n\n\tschema.extend( 'tableCell', {\n\t\tallowAttributes: [ modelAttribute ]\n\t} );\n\n\tupcastStyleToAttribute( conversion, { viewElement: /^(td|th)$/, ...options } );\n\tdowncastAttributeToStyle( conversion, { modelElement: 'tableCell', ...options } );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/utils/structure\n */\n\nimport TableWalker from '../tablewalker';\nimport { createEmptyTableCell, updateNumericAttribute } from './common';\n\n/**\n * Returns a cropped table according to given dimensions.\n\n * To return a cropped table that starts at first row and first column and end in third row and column:\n *\n *\t\tconst croppedTable = cropTableToDimensions( table, {\n *\t\t\tstartRow: 1,\n *\t\t\tendRow: 3,\n *\t\t\tstartColumn: 1,\n *\t\t\tendColumn: 3\n *\t\t}, writer );\n *\n * Calling the code above for the table below:\n *\n *\t\t      0   1   2   3   4                      0   1   2\n *\t\t    ┌───┬───┬───┬───┬───┐\n *\t\t 0  │ a │ b │ c │ d │ e │\n *\t\t    ├───┴───┤   ├───┴───┤                  ┌───┬───┬───┐\n *\t\t 1  │ f     │   │ g     │                  │   │   │ g │  0\n *\t\t    ├───┬───┴───┼───┬───┤   will return:   ├───┴───┼───┤\n *\t\t 2  │ h │ i     │ j │ k │                  │ i     │ j │  1\n *\t\t    ├───┤       ├───┤   │                  │       ├───┤\n *\t\t 3  │ l │       │ m │   │                  │       │ m │  2\n *\t\t    ├───┼───┬───┤   ├───┤                  └───────┴───┘\n *\t\t 4  │ n │ o │ p │   │ q │\n *\t\t    └───┴───┴───┴───┴───┘\n *\n * @param {module:engine/model/element~Element} sourceTable\n * @param {Object} cropDimensions\n * @param {Number} cropDimensions.startRow\n * @param {Number} cropDimensions.startColumn\n * @param {Number} cropDimensions.endRow\n * @param {Number} cropDimensions.endColumn\n * @param {module:engine/model/writer~Writer} writer\n * @returns {module:engine/model/element~Element}\n */\nexport function cropTableToDimensions( sourceTable, cropDimensions, writer ) {\n\tconst { startRow, startColumn, endRow, endColumn } = cropDimensions;\n\n\t// Create empty table with empty rows equal to crop height.\n\tconst croppedTable = writer.createElement( 'table' );\n\tconst cropHeight = endRow - startRow + 1;\n\n\tfor ( let i = 0; i < cropHeight; i++ ) {\n\t\twriter.insertElement( 'tableRow', croppedTable, 'end' );\n\t}\n\n\tconst tableMap = [ ...new TableWalker( sourceTable, { startRow, endRow, startColumn, endColumn, includeAllSlots: true } ) ];\n\n\t// Iterate over source table slots (including empty - spanned - ones).\n\tfor ( const { row: sourceRow, column: sourceColumn, cell: tableCell, isAnchor, cellAnchorRow, cellAnchorColumn } of tableMap ) {\n\t\t// Row index in cropped table.\n\t\tconst rowInCroppedTable = sourceRow - startRow;\n\t\tconst row = croppedTable.getChild( rowInCroppedTable );\n\n\t\t// For empty slots: fill the gap with empty table cell.\n\t\tif ( !isAnchor ) {\n\t\t\t// But fill the gap only if the spanning cell is anchored outside cropped area.\n\t\t\t// In the table from method jsdoc those cells are: \"c\" & \"f\".\n\t\t\tif ( cellAnchorRow < startRow || cellAnchorColumn < startColumn ) {\n\t\t\t\tcreateEmptyTableCell( writer, writer.createPositionAt( row, 'end' ) );\n\t\t\t}\n\t\t}\n\t\t// Otherwise clone the cell with all children and trim if it exceeds cropped area.\n\t\telse {\n\t\t\tconst tableCellCopy = writer.cloneElement( tableCell );\n\n\t\t\twriter.append( tableCellCopy, row );\n\n\t\t\t// Trim table if it exceeds cropped area.\n\t\t\t// In the table from method jsdoc those cells are: \"g\" & \"m\".\n\t\t\ttrimTableCellIfNeeded( tableCellCopy, sourceRow, sourceColumn, endRow, endColumn, writer );\n\t\t}\n\t}\n\n\t// Adjust heading rows & columns in cropped table if crop selection includes headings parts.\n\taddHeadingsToCroppedTable( croppedTable, sourceTable, startRow, startColumn, writer );\n\n\treturn croppedTable;\n}\n\n/**\n * Returns slot info of cells that starts above and overlaps a given row.\n *\n * In a table below, passing `overlapRow = 3`\n *\n *\t\t   ┌───┬───┬───┬───┬───┐\n *\t\t0  │ a │ b │ c │ d │ e │\n *\t\t   │   ├───┼───┼───┼───┤\n *\t\t1  │   │ f │ g │ h │ i │\n *\t\t   ├───┤   ├───┼───┤   │\n *\t\t2  │ j │   │ k │ l │   │\n *\t\t   │   │   │   ├───┼───┤\n *\t\t3  │   │   │   │ m │ n │  <- overlap row to check\n *\t\t   ├───┼───┤   │   ├───│\n *\t\t4  │ o │ p │   │   │ q │\n *\t\t   └───┴───┴───┴───┴───┘\n *\n * will return slot info for cells: \"j\", \"f\", \"k\".\n *\n * @param {module:engine/model/element~Element} table The table to check.\n * @param {Number} overlapRow The index of the row to check.\n * @param {Number} [startRow=0] A row to start analysis. Use it when it is known that the cells above that row will not overlap.\n * @returns {Array.<module:table/tablewalker~TableSlot>}\n */\nexport function getVerticallyOverlappingCells( table, overlapRow, startRow = 0 ) {\n\tconst cells = [];\n\n\tconst tableWalker = new TableWalker( table, { startRow, endRow: overlapRow - 1 } );\n\n\tfor ( const slotInfo of tableWalker ) {\n\t\tconst { row, cellHeight } = slotInfo;\n\t\tconst cellEndRow = row + cellHeight - 1;\n\n\t\tif ( row < overlapRow && overlapRow <= cellEndRow ) {\n\t\t\tcells.push( slotInfo );\n\t\t}\n\t}\n\n\treturn cells;\n}\n\n/**\n * Splits the table cell horizontally.\n *\n * @param {module:engine/model/element~Element} tableCell\n * @param {Number} splitRow\n * @param {module:engine/model/writer~Writer} writer\n * @returns {module:engine/model/element~Element} Created table cell.\n */\nexport function splitHorizontally( tableCell, splitRow, writer ) {\n\tconst tableRow = tableCell.parent;\n\tconst table = tableRow.parent;\n\tconst rowIndex = tableRow.index;\n\n\tconst rowspan = parseInt( tableCell.getAttribute( 'rowspan' ) );\n\tconst newRowspan = splitRow - rowIndex;\n\n\tconst newCellAttributes = {};\n\tconst newCellRowSpan = rowspan - newRowspan;\n\n\tif ( newCellRowSpan > 1 ) {\n\t\tnewCellAttributes.rowspan = newCellRowSpan;\n\t}\n\n\tconst colspan = parseInt( tableCell.getAttribute( 'colspan' ) || 1 );\n\n\tif ( colspan > 1 ) {\n\t\tnewCellAttributes.colspan = colspan;\n\t}\n\n\tconst startRow = rowIndex;\n\tconst endRow = startRow + newRowspan;\n\tconst tableMap = [ ...new TableWalker( table, { startRow, endRow, includeAllSlots: true } ) ];\n\n\tlet newCell = null;\n\tlet columnIndex;\n\n\tfor ( const tableSlot of tableMap ) {\n\t\tconst { row, column, cell } = tableSlot;\n\n\t\tif ( cell === tableCell && columnIndex === undefined ) {\n\t\t\tcolumnIndex = column;\n\t\t}\n\n\t\tif ( columnIndex !== undefined && columnIndex === column && row === endRow ) {\n\t\t\tnewCell = createEmptyTableCell( writer, tableSlot.getPositionBefore(), newCellAttributes );\n\t\t}\n\t}\n\n\t// Update the rowspan attribute after updating table.\n\tupdateNumericAttribute( 'rowspan', newRowspan, tableCell, writer );\n\n\treturn newCell;\n}\n\n/**\n * Returns slot info of cells that starts before and overlaps a given column.\n *\n * In a table below, passing `overlapColumn = 3`\n *\n *\t\t  0   1   2   3   4\n *\t\t┌───────┬───────┬───┐\n *\t\t│ a     │ b     │ c │\n *\t\t│───┬───┴───────┼───┤\n *\t\t│ d │ e         │ f │\n *\t\t├───┼───┬───────┴───┤\n *\t\t│ g │ h │ i         │\n *\t\t├───┼───┼───┬───────┤\n *\t\t│ j │ k │ l │ m     │\n *\t\t├───┼───┴───┼───┬───┤\n *\t\t│ n │ o     │ p │ q │\n *\t\t└───┴───────┴───┴───┘\n *\t\t              ^\n *\t\t              Overlap column to check\n *\n * will return slot info for cells: \"b\", \"e\", \"i\".\n *\n * @param {module:engine/model/element~Element} table The table to check.\n * @param {Number} overlapColumn The index of the column to check.\n * @returns {Array.<module:table/tablewalker~TableSlot>}\n */\nexport function getHorizontallyOverlappingCells( table, overlapColumn ) {\n\tconst cellsToSplit = [];\n\n\tconst tableWalker = new TableWalker( table );\n\n\tfor ( const slotInfo of tableWalker ) {\n\t\tconst { column, cellWidth } = slotInfo;\n\t\tconst cellEndColumn = column + cellWidth - 1;\n\n\t\tif ( column < overlapColumn && overlapColumn <= cellEndColumn ) {\n\t\t\tcellsToSplit.push( slotInfo );\n\t\t}\n\t}\n\n\treturn cellsToSplit;\n}\n\n/**\n * Splits the table cell vertically.\n *\n * @param {module:engine/model/element~Element} tableCell\n * @param {Number} columnIndex The table cell column index.\n * @param {Number} splitColumn The index of column to split cell on.\n * @param {module:engine/model/writer~Writer} writer\n * @returns {module:engine/model/element~Element} Created table cell.\n */\nexport function splitVertically( tableCell, columnIndex, splitColumn, writer ) {\n\tconst colspan = parseInt( tableCell.getAttribute( 'colspan' ) );\n\tconst newColspan = splitColumn - columnIndex;\n\n\tconst newCellAttributes = {};\n\tconst newCellColSpan = colspan - newColspan;\n\n\tif ( newCellColSpan > 1 ) {\n\t\tnewCellAttributes.colspan = newCellColSpan;\n\t}\n\n\tconst rowspan = parseInt( tableCell.getAttribute( 'rowspan' ) || 1 );\n\n\tif ( rowspan > 1 ) {\n\t\tnewCellAttributes.rowspan = rowspan;\n\t}\n\n\tconst newCell = createEmptyTableCell( writer, writer.createPositionAfter( tableCell ), newCellAttributes );\n\n\t// Update the colspan attribute after updating table.\n\tupdateNumericAttribute( 'colspan', newColspan, tableCell, writer );\n\n\treturn newCell;\n}\n\n/**\n * Adjusts table cell dimensions to not exceed limit row and column.\n *\n * If table cell width (or height) covers a column (or row) that is after a limit column (or row)\n * this method will trim \"colspan\" (or \"rowspan\") attribute so the table cell will fit in a defined limits.\n *\n * @param {module:engine/model/element~Element} tableCell\n * @param {Number} cellRow\n * @param {Number} cellColumn\n * @param {Number} limitRow\n * @param {Number} limitColumn\n * @param {module:engine/model/writer~Writer} writer\n */\nexport function trimTableCellIfNeeded( tableCell, cellRow, cellColumn, limitRow, limitColumn, writer ) {\n\tconst colspan = parseInt( tableCell.getAttribute( 'colspan' ) || 1 );\n\tconst rowspan = parseInt( tableCell.getAttribute( 'rowspan' ) || 1 );\n\n\tconst endColumn = cellColumn + colspan - 1;\n\n\tif ( endColumn > limitColumn ) {\n\t\tconst trimmedSpan = limitColumn - cellColumn + 1;\n\n\t\tupdateNumericAttribute( 'colspan', trimmedSpan, tableCell, writer, 1 );\n\t}\n\n\tconst endRow = cellRow + rowspan - 1;\n\n\tif ( endRow > limitRow ) {\n\t\tconst trimmedSpan = limitRow - cellRow + 1;\n\n\t\tupdateNumericAttribute( 'rowspan', trimmedSpan, tableCell, writer, 1 );\n\t}\n}\n\n// Sets proper heading attributes to a cropped table.\nfunction addHeadingsToCroppedTable( croppedTable, sourceTable, startRow, startColumn, writer ) {\n\tconst headingRows = parseInt( sourceTable.getAttribute( 'headingRows' ) || 0 );\n\n\tif ( headingRows > 0 ) {\n\t\tconst headingRowsInCrop = headingRows - startRow;\n\t\tupdateNumericAttribute( 'headingRows', headingRowsInCrop, croppedTable, writer, 0 );\n\t}\n\n\tconst headingColumns = parseInt( sourceTable.getAttribute( 'headingColumns' ) || 0 );\n\n\tif ( headingColumns > 0 ) {\n\t\tconst headingColumnsInCrop = headingColumns - startColumn;\n\t\tupdateNumericAttribute( 'headingColumns', headingColumnsInCrop, croppedTable, writer, 0 );\n\t}\n}\n\n/**\n * Removes columns that have no cells anchored.\n *\n * In table below:\n *\n *     +----+----+----+----+----+----+----+\n *     | 00 | 01      | 03 | 04      | 06 |\n *     +----+----+----+----+         +----+\n *     | 10 | 11      | 13 |         | 16 |\n *     +----+----+----+----+----+----+----+\n *     | 20 | 21      | 23 | 24      | 26 |\n *     +----+----+----+----+----+----+----+\n *                  ^--- empty ---^\n *\n * Will remove columns 2 and 5.\n *\n * **Note:** This is a low-level helper method for clearing invalid model state when doing table modifications.\n * To remove a column from a table use {@link module:table/tableutils~TableUtils#removeColumns `TableUtils.removeColumns()`}.\n *\n * @protected\n * @param {module:engine/model/element~Element} table\n * @param {module:table/tableutils~TableUtils} tableUtils\n * @returns {Boolean} True if removed some columns.\n */\nexport function removeEmptyColumns( table, tableUtils ) {\n\tconst width = tableUtils.getColumns( table );\n\tconst columnsMap = new Array( width ).fill( 0 );\n\n\tfor ( const { column } of new TableWalker( table ) ) {\n\t\tcolumnsMap[ column ]++;\n\t}\n\n\tconst emptyColumns = columnsMap.reduce( ( result, cellsCount, column ) => {\n\t\treturn cellsCount ? result : [ ...result, column ];\n\t}, [] );\n\n\tif ( emptyColumns.length > 0 ) {\n\t\t// Remove only last empty column because it will recurrently trigger removing empty rows.\n\t\tconst emptyColumn = emptyColumns[ emptyColumns.length - 1 ];\n\n\t\t// @if CK_DEBUG_TABLE // console.log( `Removing empty column: ${ emptyColumn }.` );\n\t\ttableUtils.removeColumns( table, { at: emptyColumn } );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Removes rows that have no cells anchored.\n *\n * In table below:\n *\n *     +----+----+----+\n *     | 00 | 01 | 02 |\n *     +----+----+----+\n *     | 10 | 11 | 12 |\n *     +    +    +    +\n *     |    |    |    | <-- empty\n *     +----+----+----+\n *     | 30 | 31 | 32 |\n *     +----+----+----+\n *     | 40      | 42 |\n *     +         +    +\n *     |         |    | <-- empty\n *     +----+----+----+\n *     | 60 | 61 | 62 |\n *     +----+----+----+\n *\n * Will remove rows 2 and 5.\n *\n * **Note:** This is a low-level helper method for clearing invalid model state when doing table modifications.\n * To remove a row from a table use {@link module:table/tableutils~TableUtils#removeRows `TableUtils.removeRows()`}.\n *\n * @protected\n * @param {module:engine/model/element~Element} table\n * @param {module:table/tableutils~TableUtils} tableUtils\n * @returns {Boolean} True if removed some rows.\n */\nexport function removeEmptyRows( table, tableUtils ) {\n\tconst emptyRows = [];\n\tconst tableRowCount = tableUtils.getRows( table );\n\n\tfor ( let rowIndex = 0; rowIndex < tableRowCount; rowIndex++ ) {\n\t\tconst tableRow = table.getChild( rowIndex );\n\n\t\tif ( tableRow.isEmpty ) {\n\t\t\temptyRows.push( rowIndex );\n\t\t}\n\t}\n\n\tif ( emptyRows.length > 0 ) {\n\t\t// Remove only last empty row because it will recurrently trigger removing empty columns.\n\t\tconst emptyRow = emptyRows[ emptyRows.length - 1 ];\n\n\t\t// @if CK_DEBUG_TABLE // console.log( `Removing empty row: ${ emptyRow }.` );\n\t\ttableUtils.removeRows( table, { at: emptyRow } );\n\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Removes rows and columns that have no cells anchored.\n *\n * In table below:\n *\n *     +----+----+----+----+\n *     | 00      | 02      |\n *     +----+----+         +\n *     | 10      |         |\n *     +----+----+----+----+\n *     | 20      | 22 | 23 |\n *     +         +    +    +\n *     |         |    |    | <-- empty row\n *     +----+----+----+----+\n *             ^--- empty column\n *\n * Will remove row 3 and column 1.\n *\n * **Note:** This is a low-level helper method for clearing invalid model state when doing table modifications.\n * To remove a rows from a table use {@link module:table/tableutils~TableUtils#removeRows `TableUtils.removeRows()`} and\n * {@link module:table/tableutils~TableUtils#removeColumns `TableUtils.removeColumns()`} to remove a column.\n *\n * @protected\n * @param {module:engine/model/element~Element} table\n * @param {module:table/tableutils~TableUtils} tableUtils\n */\nexport function removeEmptyRowsColumns( table, tableUtils ) {\n\tconst removedColumns = removeEmptyColumns( table, tableUtils );\n\n\t// If there was some columns removed then cleaning empty rows was already triggered.\n\tif ( !removedColumns ) {\n\t\tremoveEmptyRows( table, tableUtils );\n\t}\n}\n\n/**\n * Returns adjusted last row index if selection covers part of a row with empty slots (spanned by other cells).\n * The `dimensions.lastRow` is equal to last row index but selection might be bigger.\n *\n * This happens *only* on rectangular selection so we analyze a case like this:\n *\n *        +---+---+---+---+\n *      0 | a | b | c | d |\n *        +   +   +---+---+\n *      1 |   | e | f | g |\n *        +   +---+   +---+\n *      2 |   | h |   | i | <- last row, each cell has rowspan = 2,\n *        +   +   +   +   +    so we need to return 3, not 2\n *      3 |   |   |   |   |\n *        +---+---+---+---+\n *\n * @param {module:engine/model/element~Element} table\n * @param {Object} dimensions\n * @param {Number} dimensions.firstRow\n * @param {Number} dimensions.firstColumn\n * @param {Number} dimensions.lastRow\n * @param {Number} dimensions.lastColumn\n * @returns {Number} Adjusted last row index.\n */\nexport function adjustLastRowIndex( table, dimensions ) {\n\tconst lastRowMap = Array.from( new TableWalker( table, {\n\t\tstartColumn: dimensions.firstColumn,\n\t\tendColumn: dimensions.lastColumn,\n\t\trow: dimensions.lastRow\n\t} ) );\n\n\tconst everyCellHasSingleRowspan = lastRowMap.every( ( { cellHeight } ) => cellHeight === 1 );\n\n\t// It is a \"flat\" row, so the last row index is OK.\n\tif ( everyCellHasSingleRowspan ) {\n\t\treturn dimensions.lastRow;\n\t}\n\n\t// Otherwise get any cell's rowspan and adjust the last row index.\n\tconst rowspanAdjustment = lastRowMap[ 0 ].cellHeight - 1;\n\treturn dimensions.lastRow + rowspanAdjustment;\n}\n\n/**\n * Returns adjusted last column index if selection covers part of a column with empty slots (spanned by other cells).\n * The `dimensions.lastColumn` is equal to last column index but selection might be bigger.\n *\n * This happens *only* on rectangular selection so we analyze a case like this:\n *\n *       0   1   2   3\n *     +---+---+---+---+\n *     | a             |\n *     +---+---+---+---+\n *     | b | c | d     |\n *     +---+---+---+---+\n *     | e     | f     |\n *     +---+---+---+---+\n *     | g | h         |\n *     +---+---+---+---+\n *               ^\n *              last column, each cell has colspan = 2, so we need to return 3, not 2\n *\n * @param {module:engine/model/element~Element} table\n * @param {Object} dimensions\n * @param {Number} dimensions.firstRow\n * @param {Number} dimensions.firstColumn\n * @param {Number} dimensions.lastRow\n * @param {Number} dimensions.lastColumn\n * @returns {Number} Adjusted last column index.\n */\nexport function adjustLastColumnIndex( table, dimensions ) {\n\tconst lastColumnMap = Array.from( new TableWalker( table, {\n\t\tstartRow: dimensions.firstRow,\n\t\tendRow: dimensions.lastRow,\n\t\tcolumn: dimensions.lastColumn\n\t} ) );\n\n\tconst everyCellHasSingleColspan = lastColumnMap.every( ( { cellWidth } ) => cellWidth === 1 );\n\n\t// It is a \"flat\" column, so the last column index is OK.\n\tif ( everyCellHasSingleColspan ) {\n\t\treturn dimensions.lastColumn;\n\t}\n\n\t// Otherwise get any cell's colspan and adjust the last column index.\n\tconst colspanAdjustment = lastColumnMap[ 0 ].cellWidth - 1;\n\treturn dimensions.lastColumn + colspanAdjustment;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/utils/table-properties\n */\n\nimport { isObject } from 'lodash-es';\n\n/**\n * Returns a string if all four values of box sides are equal.\n *\n * If a string is passed, it is treated as a single value (pass-through).\n *\n *\t\t// Returns 'foo':\n *\t\tgetSingleValue( { top: 'foo', right: 'foo', bottom: 'foo', left: 'foo' } );\n *\t\tgetSingleValue( 'foo' );\n *\n *\t\t// Returns undefined:\n *\t\tgetSingleValue( { top: 'foo', right: 'foo', bottom: 'bar', left: 'foo' } );\n *\t\tgetSingleValue( { top: 'foo', right: 'foo' } );\n *\n * @param objectOrString\n * @returns {module:engine/view/stylesmap~BoxSides|String}\n */\nexport function getSingleValue( objectOrString ) {\n\tif ( !objectOrString || !isObject( objectOrString ) ) {\n\t\treturn objectOrString;\n\t}\n\n\tconst { top, right, bottom, left } = objectOrString;\n\n\tif ( top == right && right == bottom && bottom == left ) {\n\t\treturn top;\n\t}\n}\n\n/**\n * Adds a unit to a value if the value is a number or a string representing a number.\n *\n * **Note**: It does nothing to non-numeric values.\n *\n *\t\tgetSingleValue( 25, 'px' );\t\t// '25px'\n *\t\tgetSingleValue( 25, 'em' );\t\t// '25em'\n *\t\tgetSingleValue( '25em', 'px' );\t// '25em'\n *\t\tgetSingleValue( 'foo', 'px' );\t// 'foo'\n *\n * @param {*} value\n * @param {String} defaultUnit A default unit added to a numeric value.\n * @returns {String|*}\n */\nexport function addDefaultUnitToNumericValue( value, defaultUnit ) {\n\tconst numericValue = parseFloat( value );\n\n\tif ( Number.isNaN( numericValue ) ) {\n\t\treturn value;\n\t}\n\n\tif ( String( numericValue ) !== String( value ) ) {\n\t\treturn value;\n\t}\n\n\treturn `${ numericValue }${ defaultUnit }`;\n}\n\n/**\n * Returns the normalized configuration.\n *\n * @param {Object} config\n * @param {Object} [options={}]\n * @param {Boolean} [options.includeAlignmentProperty=false] Whether the \"alignment\" property should be added.\n * @param {Boolean} [options.includePaddingProperty=false] Whether the \"padding\" property should be added.\n * @param {Boolean} [options.includeVerticalAlignmentProperty=false] Whether the \"verticalAlignment\" property should be added.\n * @param {Boolean} [options.includeHorizontalAlignmentProperty=false] Whether the \"horizontalAlignment\" property should be added.\n * @param {Boolean} [options.isRightToLeftContent=false] Whether the content is right-to-left.\n * @returns {Object}\n */\nexport function getNormalizedDefaultProperties( config, options = {} ) {\n\tconst normalizedConfig = Object.assign( {\n\t\tborderStyle: 'none',\n\t\tborderWidth: '',\n\t\tborderColor: '',\n\t\tbackgroundColor: '',\n\t\twidth: '',\n\t\theight: ''\n\t}, config );\n\n\tif ( options.includeAlignmentProperty && !normalizedConfig.alignment ) {\n\t\tnormalizedConfig.alignment = 'center';\n\t}\n\n\tif ( options.includePaddingProperty && !normalizedConfig.padding ) {\n\t\tnormalizedConfig.padding = '';\n\t}\n\n\tif ( options.includeVerticalAlignmentProperty && !normalizedConfig.verticalAlignment ) {\n\t\tnormalizedConfig.verticalAlignment = 'middle';\n\t}\n\n\tif ( options.includeHorizontalAlignmentProperty && !normalizedConfig.horizontalAlignment ) {\n\t\tnormalizedConfig.horizontalAlignment = options.isRightToLeftContent ? 'right' : 'left';\n\t}\n\n\treturn normalizedConfig;\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/utils/ui/contextualballoon\n */\n\nimport { Rect } from 'ckeditor5/src/utils';\nimport { BalloonPanelView } from 'ckeditor5/src/ui';\n\nimport { getTableWidgetAncestor } from './widget';\n\nconst DEFAULT_BALLOON_POSITIONS = BalloonPanelView.defaultPositions;\n\nconst BALLOON_POSITIONS = [\n\tDEFAULT_BALLOON_POSITIONS.northArrowSouth,\n\tDEFAULT_BALLOON_POSITIONS.northArrowSouthWest,\n\tDEFAULT_BALLOON_POSITIONS.northArrowSouthEast,\n\tDEFAULT_BALLOON_POSITIONS.southArrowNorth,\n\tDEFAULT_BALLOON_POSITIONS.southArrowNorthWest,\n\tDEFAULT_BALLOON_POSITIONS.southArrowNorthEast,\n\tDEFAULT_BALLOON_POSITIONS.viewportStickyNorth\n];\n\n/**\n * A helper utility that positions the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} instance\n * with respect to the table in the editor content, if one is selected.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @param {String} target Either \"cell\" or \"table\". Determines the target the balloon will\n * be attached to.\n */\nexport function repositionContextualBalloon( editor, target ) {\n\tconst balloon = editor.plugins.get( 'ContextualBalloon' );\n\n\tif ( getTableWidgetAncestor( editor.editing.view.document.selection ) ) {\n\t\tlet position;\n\n\t\tif ( target === 'cell' ) {\n\t\t\tposition = getBalloonCellPositionData( editor );\n\t\t} else {\n\t\t\tposition = getBalloonTablePositionData( editor );\n\t\t}\n\n\t\tballoon.updatePosition( position );\n\t}\n}\n\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} with respect\n * to the selected table in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\nexport function getBalloonTablePositionData( editor ) {\n\tconst firstPosition = editor.model.document.selection.getFirstPosition();\n\tconst modelTable = firstPosition.findAncestor( 'table' );\n\tconst viewTable = editor.editing.mapper.toViewElement( modelTable );\n\n\treturn {\n\t\ttarget: editor.editing.view.domConverter.mapViewToDom( viewTable ),\n\t\tpositions: BALLOON_POSITIONS\n\t};\n}\n\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} with respect\n * to the selected table cell in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\nexport function getBalloonCellPositionData( editor ) {\n\tconst mapper = editor.editing.mapper;\n\tconst domConverter = editor.editing.view.domConverter;\n\tconst selection = editor.model.document.selection;\n\n\tif ( selection.rangeCount > 1 ) {\n\t\treturn {\n\t\t\ttarget: () => createBoundingRect( selection.getRanges(), editor ),\n\t\t\tpositions: BALLOON_POSITIONS\n\t\t};\n\t}\n\n\tconst modelTableCell = getTableCellAtPosition( selection.getFirstPosition() );\n\tconst viewTableCell = mapper.toViewElement( modelTableCell );\n\n\treturn {\n\t\ttarget: domConverter.mapViewToDom( viewTableCell ),\n\t\tpositions: BALLOON_POSITIONS\n\t};\n}\n\n// Returns the first selected table cell from a multi-cell or in-cell selection.\n//\n// @param {module:engine/model/position~Position} position Document position.\n// @returns {module:engine/model/element~Element}\nfunction getTableCellAtPosition( position ) {\n\tconst isTableCellSelected = position.nodeAfter && position.nodeAfter.is( 'element', 'tableCell' );\n\n\treturn isTableCellSelected ? position.nodeAfter : position.findAncestor( 'tableCell' );\n}\n\n// Returns bounding rectangle for given model ranges.\n//\n// @param {Iterable.<module:engine/model/range~Range>} ranges Model ranges that the bounding rect should be returned for.\n// @param {module:core/editor/editor~Editor} editor The editor instance.\n// @returns {module:utils/dom/rect~Rect}\nfunction createBoundingRect( ranges, editor ) {\n\tconst mapper = editor.editing.mapper;\n\tconst domConverter = editor.editing.view.domConverter;\n\tconst rects = Array.from( ranges ).map( range => {\n\t\tconst modelTableCell = getTableCellAtPosition( range.start );\n\t\tconst viewTableCell = mapper.toViewElement( modelTableCell );\n\t\treturn new Rect( domConverter.mapViewToDom( viewTableCell ) );\n\t} );\n\n\treturn Rect.getBoundingRect( rects );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/utils/ui/table-properties\n */\n\nimport { ButtonView, Model } from 'ckeditor5/src/ui';\nimport { Collection } from 'ckeditor5/src/utils';\nimport { isColor, isLength, isPercentage } from 'ckeditor5/src/engine';\n\nimport ColorInputView from '../../ui/colorinputview';\n\nconst isEmpty = val => val === '';\n\n/**\n * Returns an object containing pairs of CSS border style values and their localized UI\n * labels. Used by {@link module:table/tablecellproperties/ui/tablecellpropertiesview~TableCellPropertiesView}\n * and {@link module:table/tableproperties/ui/tablepropertiesview~TablePropertiesView}.\n *\n * @param {module:utils/locale~Locale#t} t The \"t\" function provided by the editor\n * that is used to localize strings.\n * @returns {Object.<String,String>}\n */\nexport function getBorderStyleLabels( t ) {\n\treturn {\n\t\tnone: t( 'None' ),\n\t\tsolid: t( 'Solid' ),\n\t\tdotted: t( 'Dotted' ),\n\t\tdashed: t( 'Dashed' ),\n\t\tdouble: t( 'Double' ),\n\t\tgroove: t( 'Groove' ),\n\t\tridge: t( 'Ridge' ),\n\t\tinset: t( 'Inset' ),\n\t\toutset: t( 'Outset' )\n\t};\n}\n\n/**\n * Returns a localized error string that can be displayed next to color (background, border)\n * fields that have an invalid value.\n *\n * @param {module:utils/locale~Locale#t} t The \"t\" function provided by the editor\n * that is used to localize strings.\n * @returns {String}\n */\nexport function getLocalizedColorErrorText( t ) {\n\treturn t( 'The color is invalid. Try \"#FF0000\" or \"rgb(255,0,0)\" or \"red\".' );\n}\n\n/**\n * Returns a localized error string that can be displayed next to length (padding, border width)\n * fields that have an invalid value.\n *\n * @param {module:utils/locale~Locale#t} t The \"t\" function provided by the editor\n * that is used to localize strings.\n * @returns {String}\n */\nexport function getLocalizedLengthErrorText( t ) {\n\treturn t( 'The value is invalid. Try \"10px\" or \"2em\" or simply \"2\".' );\n}\n\n/**\n * Returns `true` when the passed value is an empty string or a valid CSS color expression.\n * Otherwise, `false` is returned.\n *\n * See {@link module:engine/view/styles/utils~isColor}.\n *\n * @param {String} value\n * @returns {Boolean}\n */\nexport function colorFieldValidator( value ) {\n\tvalue = value.trim();\n\n\treturn isEmpty( value ) || isColor( value );\n}\n\n/**\n * Returns `true` when the passed value is an empty string, a number without a unit or a valid CSS length expression.\n * Otherwise, `false` is returned.\n *\n * See {@link module:engine/view/styles/utils~isLength}.\n * See {@link module:engine/view/styles/utils~isPercentage}.\n *\n * @param {String} value\n * @returns {Boolean}\n */\nexport function lengthFieldValidator( value ) {\n\tvalue = value.trim();\n\n\treturn isEmpty( value ) || isNumberString( value ) || isLength( value ) || isPercentage( value );\n}\n\n/**\n * Returns `true` when the passed value is an empty string, a number without a unit or a valid CSS length expression.\n * Otherwise, `false` is returned.\n *\n * See {@link module:engine/view/styles/utils~isLength}.\n *\n * @param {String} value\n * @returns {Boolean}\n */\nexport function lineWidthFieldValidator( value ) {\n\tvalue = value.trim();\n\n\treturn isEmpty( value ) || isNumberString( value ) || isLength( value );\n}\n\n/**\n * Generates item definitions for a UI dropdown that allows changing the border style of a table or a table cell.\n *\n * @param {module:table/tablecellproperties/ui/tablecellpropertiesview~TableCellPropertiesView|\n * module:table/tableproperties/ui/tablepropertiesview~TablePropertiesView} view\n * @param {String} defaultStyle The default border.\n * @returns {Iterable.<module:ui/dropdown/utils~ListDropdownItemDefinition>}\n */\nexport function getBorderStyleDefinitions( view, defaultStyle ) {\n\tconst itemDefinitions = new Collection();\n\tconst styleLabels = getBorderStyleLabels( view.t );\n\n\tfor ( const style in styleLabels ) {\n\t\tconst definition = {\n\t\t\ttype: 'button',\n\t\t\tmodel: new Model( {\n\t\t\t\t_borderStyleValue: style,\n\t\t\t\tlabel: styleLabels[ style ],\n\t\t\t\twithText: true\n\t\t\t} )\n\t\t};\n\n\t\tif ( style === 'none' ) {\n\t\t\tdefinition.model.bind( 'isOn' ).to( view, 'borderStyle', value => {\n\t\t\t\tif ( defaultStyle === 'none' ) {\n\t\t\t\t\treturn !value;\n\t\t\t\t}\n\n\t\t\t\treturn value === style;\n\t\t\t} );\n\t\t} else {\n\t\t\tdefinition.model.bind( 'isOn' ).to( view, 'borderStyle', value => {\n\t\t\t\treturn value === style;\n\t\t\t} );\n\t\t}\n\n\t\titemDefinitions.add( definition );\n\t}\n\n\treturn itemDefinitions;\n}\n\n/**\n * A helper that fills a toolbar with buttons that:\n *\n * * have some labels,\n * * have some icons,\n * * set a certain UI view property value upon execution.\n *\n * @param {Object} options\n * @param {module:table/tablecellproperties/ui/tablecellpropertiesview~TableCellPropertiesView|\n * module:table/tableproperties/ui/tablepropertiesview~TablePropertiesView} options.view\n * @param {Array.<String>} options.icons\n * @param {module:ui/toolbar/toolbarview~ToolbarView} options.toolbar\n * @param {Object.<String,String>} labels\n * @param {String} propertyName\n * @param {Function} nameToValue A function that maps a button name to a value. By default names are the same as values.\n */\nexport function fillToolbar( options ) {\n\tconst { view, icons, toolbar, labels, propertyName, nameToValue, defaultValue } = options;\n\tfor ( const name in labels ) {\n\t\tconst button = new ButtonView( view.locale );\n\n\t\tbutton.set( {\n\t\t\tlabel: labels[ name ],\n\t\t\ticon: icons[ name ],\n\t\t\ttooltip: labels[ name ]\n\t\t} );\n\n\t\t// If specified the `nameToValue()` callback, map the value based on the option's name.\n\t\tconst buttonValue = nameToValue ? nameToValue( name ) : name;\n\n\t\tbutton.bind( 'isOn' ).to( view, propertyName, value => {\n\t\t\t// `value` comes from `view[ propertyName ]`.\n\t\t\tlet valueToCompare = value;\n\n\t\t\t// If it's empty, and the `defaultValue` is specified, use it instead.\n\t\t\tif ( value === '' && defaultValue ) {\n\t\t\t\tvalueToCompare = defaultValue;\n\t\t\t}\n\n\t\t\treturn buttonValue === valueToCompare;\n\t\t} );\n\n\t\tbutton.on( 'execute', () => {\n\t\t\tview[ propertyName ] = buttonValue;\n\t\t} );\n\n\t\ttoolbar.items.add( button );\n\t}\n}\n\n/**\n * A default color palette used by various user interfaces related to tables, for instance,\n * by {@link module:table/tablecellproperties/tablecellpropertiesui~TableCellPropertiesUI} or\n * {@link module:table/tableproperties/tablepropertiesui~TablePropertiesUI}.\n *\n * The color palette follows the {@link module:table/table~TableColorConfig table color configuration format}\n * and contains the following color definitions:\n *\n *\t\tconst defaultColors = [\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(0, 0%, 0%)',\n *\t\t\t\tlabel: 'Black'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(0, 0%, 30%)',\n *\t\t\t\tlabel: 'Dim grey'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(0, 0%, 60%)',\n *\t\t\t\tlabel: 'Grey'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(0, 0%, 90%)',\n *\t\t\t\tlabel: 'Light grey'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(0, 0%, 100%)',\n *\t\t\t\tlabel: 'White',\n *\t\t\t\thasBorder: true\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(0, 75%, 60%)',\n *\t\t\t\tlabel: 'Red'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(30, 75%, 60%)',\n *\t\t\t\tlabel: 'Orange'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(60, 75%, 60%)',\n *\t\t\t\tlabel: 'Yellow'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(90, 75%, 60%)',\n *\t\t\t\tlabel: 'Light green'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(120, 75%, 60%)',\n *\t\t\t\tlabel: 'Green'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(150, 75%, 60%)',\n *\t\t\t\tlabel: 'Aquamarine'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(180, 75%, 60%)',\n *\t\t\t\tlabel: 'Turquoise'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(210, 75%, 60%)',\n *\t\t\t\tlabel: 'Light blue'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(240, 75%, 60%)',\n *\t\t\t\tlabel: 'Blue'\n *\t\t\t},\n *\t\t\t{\n *\t\t\t\tcolor: 'hsl(270, 75%, 60%)',\n *\t\t\t\tlabel: 'Purple'\n *\t\t\t}\n *\t\t];\n */\nexport const defaultColors = [\n\t{\n\t\tcolor: 'hsl(0, 0%, 0%)',\n\t\tlabel: 'Black'\n\t},\n\t{\n\t\tcolor: 'hsl(0, 0%, 30%)',\n\t\tlabel: 'Dim grey'\n\t},\n\t{\n\t\tcolor: 'hsl(0, 0%, 60%)',\n\t\tlabel: 'Grey'\n\t},\n\t{\n\t\tcolor: 'hsl(0, 0%, 90%)',\n\t\tlabel: 'Light grey'\n\t},\n\t{\n\t\tcolor: 'hsl(0, 0%, 100%)',\n\t\tlabel: 'White',\n\t\thasBorder: true\n\t},\n\t{\n\t\tcolor: 'hsl(0, 75%, 60%)',\n\t\tlabel: 'Red'\n\t},\n\t{\n\t\tcolor: 'hsl(30, 75%, 60%)',\n\t\tlabel: 'Orange'\n\t},\n\t{\n\t\tcolor: 'hsl(60, 75%, 60%)',\n\t\tlabel: 'Yellow'\n\t},\n\t{\n\t\tcolor: 'hsl(90, 75%, 60%)',\n\t\tlabel: 'Light green'\n\t},\n\t{\n\t\tcolor: 'hsl(120, 75%, 60%)',\n\t\tlabel: 'Green'\n\t},\n\t{\n\t\tcolor: 'hsl(150, 75%, 60%)',\n\t\tlabel: 'Aquamarine'\n\t},\n\t{\n\t\tcolor: 'hsl(180, 75%, 60%)',\n\t\tlabel: 'Turquoise'\n\t},\n\t{\n\t\tcolor: 'hsl(210, 75%, 60%)',\n\t\tlabel: 'Light blue'\n\t},\n\t{\n\t\tcolor: 'hsl(240, 75%, 60%)',\n\t\tlabel: 'Blue'\n\t},\n\t{\n\t\tcolor: 'hsl(270, 75%, 60%)',\n\t\tlabel: 'Purple'\n\t}\n];\n\n/**\n * Returns a creator for a color input with a label.\n *\n * For given options, it returns a function that creates an instance of a\n * {@link module:table/ui/colorinputview~ColorInputView color input} logically related to\n * a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled view} in the DOM.\n *\n * The helper does the following:\n *\n * * It sets the color input `id` and `ariaDescribedById` attributes.\n * * It binds the color input `isReadOnly` to the labeled view.\n * * It binds the color input `hasError` to the labeled view.\n * * It enables a logic that cleans up the error when the user starts typing in the color input.\n *\n * Usage:\n *\n *\t\tconst colorInputCreator = getLabeledColorInputCreator( {\n *\t\t\tcolorConfig: [ ... ],\n *\t\t\tcolumns: 3,\n *\t\t} );\n *\n *\t\tconst labeledInputView = new LabeledFieldView( locale, colorInputCreator );\n *\t\tconsole.log( labeledInputView.view ); // A color input instance.\n *\n * @private\n * @param options Color input options.\n * @param {module:table/table~TableColorConfig} options.colorConfig The configuration of the color palette\n * displayed in the input's dropdown.\n * @param {Number} options.columns The configuration of the number of columns the color palette consists of\n * in the input's dropdown.\n * @param {String} [options.defaultColorValue] If specified, the color input view will replace the \"Remove color\" button with\n * the \"Restore default\" button. Instead of clearing the input field, the default color value will be set.\n * @returns {Function}\n */\nexport function getLabeledColorInputCreator( options ) {\n\treturn ( labeledFieldView, viewUid, statusUid ) => {\n\t\tconst colorInputView = new ColorInputView( labeledFieldView.locale, {\n\t\t\tcolorDefinitions: colorConfigToColorGridDefinitions( options.colorConfig ),\n\t\t\tcolumns: options.columns,\n\t\t\tdefaultColorValue: options.defaultColorValue\n\t\t} );\n\n\t\tcolorInputView.inputView.set( {\n\t\t\tid: viewUid,\n\t\t\tariaDescribedById: statusUid\n\t\t} );\n\n\t\tcolorInputView.bind( 'isReadOnly' ).to( labeledFieldView, 'isEnabled', value => !value );\n\t\tcolorInputView.bind( 'hasError' ).to( labeledFieldView, 'errorText', value => !!value );\n\n\t\tcolorInputView.on( 'input', () => {\n\t\t\t// UX: Make the error text disappear and disable the error indicator as the user\n\t\t\t// starts fixing the errors.\n\t\t\tlabeledFieldView.errorText = null;\n\t\t} );\n\n\t\tlabeledFieldView.bind( 'isEmpty', 'isFocused' ).to( colorInputView );\n\n\t\treturn colorInputView;\n\t};\n}\n\n// A simple helper method to detect number strings.\n// I allows full number notation, so omitting 0 is not allowed:\nfunction isNumberString( value ) {\n\tconst parsedValue = parseFloat( value );\n\n\treturn !Number.isNaN( parsedValue ) && value === String( parsedValue );\n}\n\n// @param {Array.<Object>} colorConfig\n// @returns {Array.<module:ui/colorgrid/colorgrid~ColorDefinition>}\nfunction colorConfigToColorGridDefinitions( colorConfig ) {\n\treturn colorConfig.map( item => ( {\n\t\tcolor: item.model,\n\t\tlabel: item.label,\n\t\toptions: {\n\t\t\thasBorder: item.hasBorder\n\t\t}\n\t} ) );\n}\n","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/utils/ui/widget\n */\n\nimport { isWidget } from 'ckeditor5/src/widget';\n\n/**\n * Returns a table widget editing view element if one is selected.\n *\n * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} selection\n * @returns {module:engine/view/element~Element|null}\n */\nexport function getSelectedTableWidget( selection ) {\n\tconst viewElement = selection.getSelectedElement();\n\n\tif ( viewElement && isTableWidget( viewElement ) ) {\n\t\treturn viewElement;\n\t}\n\n\treturn null;\n}\n\n/**\n * Returns a table widget editing view element if one is among the selection's ancestors.\n *\n * @param {module:engine/view/selection~Selection|module:engine/view/documentselection~DocumentSelection} selection\n * @returns {module:engine/view/element~Element|null}\n */\nexport function getTableWidgetAncestor( selection ) {\n\tconst selectionPosition = selection.getFirstPosition();\n\n\tif ( !selectionPosition ) {\n\t\treturn null;\n\t}\n\n\tlet parent = selectionPosition.parent;\n\n\twhile ( parent ) {\n\t\tif ( parent.is( 'element' ) && isTableWidget( parent ) ) {\n\t\t\treturn parent;\n\t\t}\n\n\t\tparent = parent.parent;\n\t}\n\n\treturn null;\n}\n\n// Checks if a given view element is a table widget.\n//\n// @param {module:engine/view/element~Element} viewElement\n// @returns {Boolean}\nfunction isTableWidget( viewElement ) {\n\treturn !!viewElement.getCustomProperty( 'table' ) && isWidget( viewElement );\n}\n","module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ \"dll-reference CKEditor5.dll\"))(\"./src/core.js\");","module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ \"dll-reference CKEditor5.dll\"))(\"./src/engine.js\");","module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ \"dll-reference CKEditor5.dll\"))(\"./src/ui.js\");","module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ \"dll-reference CKEditor5.dll\"))(\"./src/utils.js\");","module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ \"dll-reference CKEditor5.dll\"))(\"./src/widget.js\");","module.exports = CKEditor5.dll;","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n","import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nexport default baseUnset;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","import baseGet from './_baseGet.js';\nimport baseSlice from './_baseSlice.js';\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nexport default parent;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nexport default assignIn;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n}\n\nexport default isEqualWith;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nexport default merge;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import baseSet from './_baseSet.js';\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nexport default set;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import baseUnset from './_baseUnset.js';\n\n/**\n * Removes the property at `path` of `object`.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n * _.unset(object, 'a[0].b.c');\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n *\n * _.unset(object, ['a', '0', 'b', 'c']);\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n */\nfunction unset(object, path) {\n  return object == null ? true : baseUnset(object, path);\n}\n\nexport default unset;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nc = undefined;","/**\n * @license Copyright (c) 2003-2022, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table\n */\n\nexport { default as PlainTableOutput } from './plaintableoutput';\nexport { default as Table } from './table';\nexport { default as TableEditing } from './tableediting';\nexport { default as TableUI } from './tableui';\nexport { default as TableToolbar } from './tabletoolbar';\nexport { default as TableCellProperties } from './tablecellproperties';\nexport { default as TableCellPropertiesEditing } from './tablecellproperties/tablecellpropertiesediting';\nexport { default as TableCellPropertiesUI } from './tablecellproperties/tablecellpropertiesui';\nexport { default as TableCellWidthEditing } from './tablecellwidth/tablecellwidthediting';\nexport { default as TableProperties } from './tableproperties';\nexport { default as TablePropertiesEditing } from './tableproperties/tablepropertiesediting';\nexport { default as TablePropertiesUI } from './tableproperties/tablepropertiesui';\nexport { default as TableCaption } from './tablecaption';\nexport { default as TableCaptionEditing } from './tablecaption/tablecaptionediting';\nexport { default as TableCaptionUI } from './tablecaption/tablecaptionui';\nexport { default as TableClipboard } from './tableclipboard';\nexport { default as TableMouse } from './tablemouse';\nexport { default as TableKeyboard } from './tablekeyboard';\nexport { default as TableSelection } from './tableselection';\nexport { default as TableUtils } from './tableutils';\nexport { default as TableColumnResize } from './tablecolumnresize';\nexport { default as TableColumnResizeEditing } from './tablecolumnresize/tablecolumnresizeediting';\n"],"sourceRoot":""}